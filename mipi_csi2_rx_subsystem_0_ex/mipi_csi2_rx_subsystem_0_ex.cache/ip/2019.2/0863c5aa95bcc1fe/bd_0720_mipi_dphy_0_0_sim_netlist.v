// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2019.2 (win64) Build 2708876 Wed Nov  6 21:40:23 MST 2019
// Date        : Sat Mar 28 13:17:18 2020
// Host        : DESKTOP-L3OMJC1 running 64-bit major release  (build 9200)
// Command     : write_verilog -force -mode funcsim -rename_top decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix -prefix
//               decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ bd_0720_mipi_dphy_0_0_sim_netlist.v
// Design      : bd_0720_mipi_dphy_0_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7s100fgga676-2
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* C_CAL_MODE = "FIXED" *) (* C_DIV4_CLK_PERIOD = "8.000000" *) (* C_DPHY_LANES = "4" *) 
(* C_DPHY_MODE = "MASTER" *) (* C_EN_DEBUG_REGS = "0" *) (* C_EN_REG_IF = "1" *) 
(* C_EN_TIMEOUT_REGS = "0" *) (* C_ESC_CLK_PERIOD = "50.000000" *) (* C_ESC_TIMEOUT = "25600" *) 
(* C_EXAMPLE_SIMULATION = "false" *) (* C_HS_LINE_RATE = "1000" *) (* C_HS_TIMEOUT = "65541" *) 
(* C_IDLY_TAP = "0" *) (* C_LPX_PERIOD = "50" *) (* C_RCVE_DESKEW_SEQ = "false" *) 
(* C_SKEWCAL_FIRST_TIME = "4096" *) (* C_SKEWCAL_PERIODIC_TIME = "128" *) (* C_STABLE_CLK_PERIOD = "5.000000" *) 
(* C_TXPLL_CLKIN_PERIOD = "8.000000" *) (* C_WAKEUP = "1000000" *) (* C_XMIT_FIRST_DESKEW_SEQ = "false" *) 
(* C_XMIT_PERIODIC_DESKEW_SEQ = "false" *) (* DPHY_PRESET = "None" *) (* DowngradeIPIdentifiedWarnings = "yes" *) 
(* MTBF_SYNC_STAGES = "3" *) (* SUPPORT_LEVEL = "1" *) 
(* NotValidForBitStream *)
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix
   (core_clk,
    core_rst,
    txclkesc_out,
    txbyteclkhs,
    oserdes_clkdiv_out,
    oserdes_clk_out,
    oserdes_clk90_out,
    mmcm_lock_out,
    system_rst_out,
    init_done,
    cl_txclkactivehs,
    cl_txrequesths,
    cl_stopstate,
    cl_enable,
    cl_txulpsclk,
    cl_txulpsexit,
    cl_ulpsactivenot,
    dl0_txdatahs,
    dl0_txrequesths,
    dl0_txreadyhs,
    dl0_forcetxstopmode,
    dl0_stopstate,
    dl0_enable,
    dl0_txrequestesc,
    dl0_txlpdtesc,
    dl0_txulpsexit,
    dl0_ulpsactivenot,
    dl0_txulpsesc,
    dl0_txtriggeresc,
    dl0_txdataesc,
    dl0_txvalidesc,
    dl0_txreadyesc,
    dl1_txdatahs,
    dl1_txrequesths,
    dl1_txreadyhs,
    dl1_forcetxstopmode,
    dl1_stopstate,
    dl1_enable,
    dl1_txrequestesc,
    dl1_txlpdtesc,
    dl1_txulpsexit,
    dl1_ulpsactivenot,
    dl1_txulpsesc,
    dl1_txtriggeresc,
    dl1_txdataesc,
    dl1_txvalidesc,
    dl1_txreadyesc,
    dl2_txdatahs,
    dl2_txrequesths,
    dl2_txreadyhs,
    dl2_forcetxstopmode,
    dl2_stopstate,
    dl2_enable,
    dl2_txrequestesc,
    dl2_txlpdtesc,
    dl2_txulpsexit,
    dl2_ulpsactivenot,
    dl2_txulpsesc,
    dl2_txtriggeresc,
    dl2_txdataesc,
    dl2_txvalidesc,
    dl2_txreadyesc,
    dl3_txdatahs,
    dl3_txrequesths,
    dl3_txreadyhs,
    dl3_forcetxstopmode,
    dl3_stopstate,
    dl3_enable,
    dl3_txrequestesc,
    dl3_txlpdtesc,
    dl3_txulpsexit,
    dl3_ulpsactivenot,
    dl3_txulpsesc,
    dl3_txtriggeresc,
    dl3_txdataesc,
    dl3_txvalidesc,
    dl3_txreadyesc,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awready,
    s_axi_awvalid,
    s_axi_araddr,
    s_axi_arready,
    s_axi_arvalid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wready,
    s_axi_wvalid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rready,
    s_axi_rvalid,
    s_axi_bresp,
    s_axi_bready,
    s_axi_bvalid,
    clk_hs_txp,
    clk_hs_txn,
    data_hs_txp,
    data_hs_txn,
    clk_lp_txp,
    clk_lp_txn,
    data_lp_txp,
    data_lp_txn);
  input core_clk;
  input core_rst;
  output txclkesc_out;
  output txbyteclkhs;
  output oserdes_clkdiv_out;
  output oserdes_clk_out;
  output oserdes_clk90_out;
  output mmcm_lock_out;
  output system_rst_out;
  output init_done;
  output cl_txclkactivehs;
  input cl_txrequesths;
  output cl_stopstate;
  input cl_enable;
  input cl_txulpsclk;
  input cl_txulpsexit;
  output cl_ulpsactivenot;
  input [7:0]dl0_txdatahs;
  input dl0_txrequesths;
  output dl0_txreadyhs;
  input dl0_forcetxstopmode;
  output dl0_stopstate;
  input dl0_enable;
  input dl0_txrequestesc;
  input dl0_txlpdtesc;
  input dl0_txulpsexit;
  output dl0_ulpsactivenot;
  input dl0_txulpsesc;
  input [3:0]dl0_txtriggeresc;
  input [7:0]dl0_txdataesc;
  input dl0_txvalidesc;
  output dl0_txreadyesc;
  input [7:0]dl1_txdatahs;
  input dl1_txrequesths;
  output dl1_txreadyhs;
  input dl1_forcetxstopmode;
  output dl1_stopstate;
  input dl1_enable;
  input dl1_txrequestesc;
  input dl1_txlpdtesc;
  input dl1_txulpsexit;
  output dl1_ulpsactivenot;
  input dl1_txulpsesc;
  input [3:0]dl1_txtriggeresc;
  input [7:0]dl1_txdataesc;
  input dl1_txvalidesc;
  output dl1_txreadyesc;
  input [7:0]dl2_txdatahs;
  input dl2_txrequesths;
  output dl2_txreadyhs;
  input dl2_forcetxstopmode;
  output dl2_stopstate;
  input dl2_enable;
  input dl2_txrequestesc;
  input dl2_txlpdtesc;
  input dl2_txulpsexit;
  output dl2_ulpsactivenot;
  input dl2_txulpsesc;
  input [3:0]dl2_txtriggeresc;
  input [7:0]dl2_txdataesc;
  input dl2_txvalidesc;
  output dl2_txreadyesc;
  input [7:0]dl3_txdatahs;
  input dl3_txrequesths;
  output dl3_txreadyhs;
  input dl3_forcetxstopmode;
  output dl3_stopstate;
  input dl3_enable;
  input dl3_txrequestesc;
  input dl3_txlpdtesc;
  input dl3_txulpsexit;
  output dl3_ulpsactivenot;
  input dl3_txulpsesc;
  input [3:0]dl3_txtriggeresc;
  input [7:0]dl3_txdataesc;
  input dl3_txvalidesc;
  output dl3_txreadyesc;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [6:0]s_axi_awaddr;
  output s_axi_awready;
  input s_axi_awvalid;
  input [6:0]s_axi_araddr;
  output s_axi_arready;
  input s_axi_arvalid;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  output s_axi_wready;
  input s_axi_wvalid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  input s_axi_rready;
  output s_axi_rvalid;
  output [1:0]s_axi_bresp;
  input s_axi_bready;
  output s_axi_bvalid;
  output clk_hs_txp;
  output clk_hs_txn;
  output [3:0]data_hs_txp;
  output [3:0]data_hs_txn;
  output clk_lp_txp;
  output clk_lp_txn;
  output [3:0]data_lp_txp;
  output [3:0]data_lp_txn;

  wire cl_enable;
  wire cl_stopstate;
  wire cl_txclkactivehs;
  wire cl_txrequesths;
  wire cl_txulpsclk;
  wire cl_txulpsexit;
  wire cl_ulpsactivenot;
  (* SLEW = "SLOW" *) wire clk_hs_txn;
  (* SLEW = "SLOW" *) wire clk_hs_txp;
  wire clk_lp_txn;
  wire clk_lp_txp;
  wire core_clk;
  wire core_rst;
  (* SLEW = "SLOW" *) wire [3:0]data_hs_txn;
  (* SLEW = "SLOW" *) wire [3:0]data_hs_txp;
  wire [3:0]data_lp_txn;
  wire [3:0]data_lp_txp;
  wire dl0_enable;
  wire dl0_forcetxstopmode;
  wire dl0_stopstate;
  wire [7:0]dl0_txdataesc;
  wire [7:0]dl0_txdatahs;
  wire dl0_txlpdtesc;
  wire dl0_txreadyesc;
  wire dl0_txreadyhs;
  wire dl0_txrequestesc;
  wire dl0_txrequesths;
  wire [3:0]dl0_txtriggeresc;
  wire dl0_txulpsesc;
  wire dl0_txulpsexit;
  wire dl0_txvalidesc;
  wire dl0_ulpsactivenot;
  wire dl1_enable;
  wire dl1_forcetxstopmode;
  wire dl1_stopstate;
  wire [7:0]dl1_txdataesc;
  wire [7:0]dl1_txdatahs;
  wire dl1_txlpdtesc;
  wire dl1_txreadyesc;
  wire dl1_txreadyhs;
  wire dl1_txrequestesc;
  wire dl1_txrequesths;
  wire [3:0]dl1_txtriggeresc;
  wire dl1_txulpsesc;
  wire dl1_txulpsexit;
  wire dl1_txvalidesc;
  wire dl1_ulpsactivenot;
  wire dl2_enable;
  wire dl2_forcetxstopmode;
  wire dl2_stopstate;
  wire [7:0]dl2_txdataesc;
  wire [7:0]dl2_txdatahs;
  wire dl2_txlpdtesc;
  wire dl2_txreadyesc;
  wire dl2_txreadyhs;
  wire dl2_txrequestesc;
  wire dl2_txrequesths;
  wire [3:0]dl2_txtriggeresc;
  wire dl2_txulpsesc;
  wire dl2_txulpsexit;
  wire dl2_txvalidesc;
  wire dl2_ulpsactivenot;
  wire dl3_enable;
  wire dl3_forcetxstopmode;
  wire dl3_stopstate;
  wire [7:0]dl3_txdataesc;
  wire [7:0]dl3_txdatahs;
  wire dl3_txlpdtesc;
  wire dl3_txreadyesc;
  wire dl3_txreadyhs;
  wire dl3_txrequestesc;
  wire dl3_txrequesths;
  wire [3:0]dl3_txtriggeresc;
  wire dl3_txulpsesc;
  wire dl3_txulpsexit;
  wire dl3_txvalidesc;
  wire dl3_ulpsactivenot;
  wire init_done;
  wire mmcm_lock_out;
  wire oserdes_clk90_out;
  wire oserdes_clk_out;
  wire oserdes_clkdiv_out;
  wire s_axi_aclk;
  wire [6:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [6:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire [3:0]s_axi_wstrb;
  wire s_axi_wvalid;
  wire system_rst_out;
  wire txbyteclkhs;
  wire txclkesc_out;

  (* C_CAL_MODE = "FIXED" *) 
  (* C_DIV4_CLK_PERIOD = "8.000000" *) 
  (* C_DPHY_LANES = "4" *) 
  (* C_DPHY_MODE = "MASTER" *) 
  (* C_EN_DEBUG_REGS = "0" *) 
  (* C_EN_REG_IF = "1" *) 
  (* C_EN_TIMEOUT_REGS = "0" *) 
  (* C_ESC_CLK_PERIOD = "50.000000" *) 
  (* C_ESC_TIMEOUT = "25600" *) 
  (* C_EXAMPLE_SIMULATION = "false" *) 
  (* C_HS_LINE_RATE = "1000" *) 
  (* C_HS_TIMEOUT = "65541" *) 
  (* C_IDLY_TAP = "0" *) 
  (* C_LPX_PERIOD = "50" *) 
  (* C_RCVE_DESKEW_SEQ = "false" *) 
  (* C_SKEWCAL_FIRST_TIME = "4096" *) 
  (* C_SKEWCAL_PERIODIC_TIME = "128" *) 
  (* C_STABLE_CLK_PERIOD = "5.000000" *) 
  (* C_TXPLL_CLKIN_PERIOD = "8.000000" *) 
  (* C_WAKEUP = "1000000" *) 
  (* C_XMIT_FIRST_DESKEW_SEQ = "false" *) 
  (* C_XMIT_PERIODIC_DESKEW_SEQ = "false" *) 
  (* DPHY_PRESET = "None" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* MTBF_SYNC_STAGES = "3" *) 
  (* SUPPORT_LEVEL = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_0720_mipi_dphy_0_0_core inst
       (.cl_enable(cl_enable),
        .cl_stopstate(cl_stopstate),
        .cl_txclkactivehs(cl_txclkactivehs),
        .cl_txrequesths(cl_txrequesths),
        .cl_txulpsclk(cl_txulpsclk),
        .cl_txulpsexit(cl_txulpsexit),
        .cl_ulpsactivenot(cl_ulpsactivenot),
        .clk_hs_txn(clk_hs_txn),
        .clk_hs_txp(clk_hs_txp),
        .clk_lp_txn(clk_lp_txn),
        .clk_lp_txp(clk_lp_txp),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .data_hs_txn(data_hs_txn),
        .data_hs_txp(data_hs_txp),
        .data_lp_txn(data_lp_txn),
        .data_lp_txp(data_lp_txp),
        .dl0_enable(dl0_enable),
        .dl0_forcetxstopmode(dl0_forcetxstopmode),
        .dl0_stopstate(dl0_stopstate),
        .dl0_txdataesc(dl0_txdataesc),
        .dl0_txdatahs(dl0_txdatahs),
        .dl0_txlpdtesc(dl0_txlpdtesc),
        .dl0_txreadyesc(dl0_txreadyesc),
        .dl0_txreadyhs(dl0_txreadyhs),
        .dl0_txrequestesc(dl0_txrequestesc),
        .dl0_txrequesths(dl0_txrequesths),
        .dl0_txtriggeresc(dl0_txtriggeresc),
        .dl0_txulpsesc(dl0_txulpsesc),
        .dl0_txulpsexit(dl0_txulpsexit),
        .dl0_txvalidesc(dl0_txvalidesc),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl1_enable(dl1_enable),
        .dl1_forcetxstopmode(dl1_forcetxstopmode),
        .dl1_stopstate(dl1_stopstate),
        .dl1_txdataesc(dl1_txdataesc),
        .dl1_txdatahs(dl1_txdatahs),
        .dl1_txlpdtesc(dl1_txlpdtesc),
        .dl1_txreadyesc(dl1_txreadyesc),
        .dl1_txreadyhs(dl1_txreadyhs),
        .dl1_txrequestesc(dl1_txrequestesc),
        .dl1_txrequesths(dl1_txrequesths),
        .dl1_txtriggeresc(dl1_txtriggeresc),
        .dl1_txulpsesc(dl1_txulpsesc),
        .dl1_txulpsexit(dl1_txulpsexit),
        .dl1_txvalidesc(dl1_txvalidesc),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dl2_enable(dl2_enable),
        .dl2_forcetxstopmode(dl2_forcetxstopmode),
        .dl2_stopstate(dl2_stopstate),
        .dl2_txdataesc(dl2_txdataesc),
        .dl2_txdatahs(dl2_txdatahs),
        .dl2_txlpdtesc(dl2_txlpdtesc),
        .dl2_txreadyesc(dl2_txreadyesc),
        .dl2_txreadyhs(dl2_txreadyhs),
        .dl2_txrequestesc(dl2_txrequestesc),
        .dl2_txrequesths(dl2_txrequesths),
        .dl2_txtriggeresc(dl2_txtriggeresc),
        .dl2_txulpsesc(dl2_txulpsesc),
        .dl2_txulpsexit(dl2_txulpsexit),
        .dl2_txvalidesc(dl2_txvalidesc),
        .dl2_ulpsactivenot(dl2_ulpsactivenot),
        .dl3_enable(dl3_enable),
        .dl3_forcetxstopmode(dl3_forcetxstopmode),
        .dl3_stopstate(dl3_stopstate),
        .dl3_txdataesc(dl3_txdataesc),
        .dl3_txdatahs(dl3_txdatahs),
        .dl3_txlpdtesc(dl3_txlpdtesc),
        .dl3_txreadyesc(dl3_txreadyesc),
        .dl3_txreadyhs(dl3_txreadyhs),
        .dl3_txrequestesc(dl3_txrequestesc),
        .dl3_txrequesths(dl3_txrequesths),
        .dl3_txtriggeresc(dl3_txtriggeresc),
        .dl3_txulpsesc(dl3_txulpsesc),
        .dl3_txulpsexit(dl3_txulpsexit),
        .dl3_txvalidesc(dl3_txvalidesc),
        .dl3_ulpsactivenot(dl3_ulpsactivenot),
        .init_done(init_done),
        .mmcm_lock_out(mmcm_lock_out),
        .oserdes_clk90_out(oserdes_clk90_out),
        .oserdes_clk_out(oserdes_clk_out),
        .oserdes_clkdiv_out(oserdes_clkdiv_out),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wvalid(s_axi_wvalid),
        .system_rst_out(system_rst_out),
        .txbyteclkhs(txbyteclkhs),
        .txclkesc_out(txclkesc_out));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_0720_mipi_dphy_0_0_c1
   (system_rst_out,
    mmcm_lock_out,
    init_done,
    cl_txclkactivehs,
    cl_stopstate,
    cl_ulpsactivenot,
    dl0_txreadyhs,
    dl0_stopstate,
    dl0_ulpsactivenot,
    dl0_txreadyesc,
    dl1_txreadyhs,
    dl1_stopstate,
    dl1_ulpsactivenot,
    dl1_txreadyesc,
    dl2_txreadyhs,
    dl2_stopstate,
    dl2_ulpsactivenot,
    dl2_txreadyesc,
    dl3_txreadyhs,
    dl3_stopstate,
    dl3_ulpsactivenot,
    dl3_txreadyesc,
    clk_lp_txp,
    clk_lp_txn,
    data_lp_txp,
    data_lp_txn,
    s_axi_awready,
    s_axi_arready,
    s_axi_wready,
    s_axi_rdata,
    s_axi_rvalid,
    s_axi_bvalid,
    txbyteclkhs,
    oserdes_clkdiv_out,
    txclkesc_out,
    data_hs_txp,
    data_hs_txn,
    clk_hs_txp,
    clk_hs_txn,
    oserdes_clk_out,
    oserdes_clk90_out,
    core_rst,
    core_clk,
    cl_txrequesths,
    cl_enable,
    cl_txulpsclk,
    cl_txulpsexit,
    dl0_txdatahs,
    dl0_txrequesths,
    dl0_forcetxstopmode,
    dl0_enable,
    dl0_txrequestesc,
    dl0_txlpdtesc,
    dl0_txulpsexit,
    dl0_txulpsesc,
    dl0_txtriggeresc,
    dl0_txdataesc,
    dl0_txvalidesc,
    dl1_txdatahs,
    dl1_txrequesths,
    dl1_forcetxstopmode,
    dl1_enable,
    dl1_txrequestesc,
    dl1_txlpdtesc,
    dl1_txulpsexit,
    dl1_txulpsesc,
    dl1_txtriggeresc,
    dl1_txdataesc,
    dl1_txvalidesc,
    dl2_txdatahs,
    dl2_txrequesths,
    dl2_forcetxstopmode,
    dl2_enable,
    dl2_txrequestesc,
    dl2_txlpdtesc,
    dl2_txulpsexit,
    dl2_txulpsesc,
    dl2_txtriggeresc,
    dl2_txdataesc,
    dl2_txvalidesc,
    dl3_txdatahs,
    dl3_txrequesths,
    dl3_forcetxstopmode,
    dl3_enable,
    dl3_txrequestesc,
    dl3_txlpdtesc,
    dl3_txulpsexit,
    dl3_txulpsesc,
    dl3_txtriggeresc,
    dl3_txdataesc,
    dl3_txvalidesc,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_wdata,
    s_axi_wvalid,
    s_axi_rready,
    s_axi_bready);
  output system_rst_out;
  output mmcm_lock_out;
  output init_done;
  output cl_txclkactivehs;
  output cl_stopstate;
  output cl_ulpsactivenot;
  output dl0_txreadyhs;
  output dl0_stopstate;
  output dl0_ulpsactivenot;
  output dl0_txreadyesc;
  output dl1_txreadyhs;
  output dl1_stopstate;
  output dl1_ulpsactivenot;
  output dl1_txreadyesc;
  output dl2_txreadyhs;
  output dl2_stopstate;
  output dl2_ulpsactivenot;
  output dl2_txreadyesc;
  output dl3_txreadyhs;
  output dl3_stopstate;
  output dl3_ulpsactivenot;
  output dl3_txreadyesc;
  output clk_lp_txp;
  output clk_lp_txn;
  output [3:0]data_lp_txp;
  output [3:0]data_lp_txn;
  output s_axi_awready;
  output s_axi_arready;
  output s_axi_wready;
  output [31:0]s_axi_rdata;
  output s_axi_rvalid;
  output s_axi_bvalid;
  output txbyteclkhs;
  output oserdes_clkdiv_out;
  output txclkesc_out;
  output [3:0]data_hs_txp;
  output [3:0]data_hs_txn;
  output clk_hs_txp;
  output clk_hs_txn;
  output oserdes_clk_out;
  output oserdes_clk90_out;
  input core_rst;
  input core_clk;
  input cl_txrequesths;
  input cl_enable;
  input cl_txulpsclk;
  input cl_txulpsexit;
  input [7:0]dl0_txdatahs;
  input dl0_txrequesths;
  input dl0_forcetxstopmode;
  input dl0_enable;
  input dl0_txrequestesc;
  input dl0_txlpdtesc;
  input dl0_txulpsexit;
  input dl0_txulpsesc;
  input [3:0]dl0_txtriggeresc;
  input [7:0]dl0_txdataesc;
  input dl0_txvalidesc;
  input [7:0]dl1_txdatahs;
  input dl1_txrequesths;
  input dl1_forcetxstopmode;
  input dl1_enable;
  input dl1_txrequestesc;
  input dl1_txlpdtesc;
  input dl1_txulpsexit;
  input dl1_txulpsesc;
  input [3:0]dl1_txtriggeresc;
  input [7:0]dl1_txdataesc;
  input dl1_txvalidesc;
  input [7:0]dl2_txdatahs;
  input dl2_txrequesths;
  input dl2_forcetxstopmode;
  input dl2_enable;
  input dl2_txrequestesc;
  input dl2_txlpdtesc;
  input dl2_txulpsexit;
  input dl2_txulpsesc;
  input [3:0]dl2_txtriggeresc;
  input [7:0]dl2_txdataesc;
  input dl2_txvalidesc;
  input [7:0]dl3_txdatahs;
  input dl3_txrequesths;
  input dl3_forcetxstopmode;
  input dl3_enable;
  input dl3_txrequestesc;
  input dl3_txlpdtesc;
  input dl3_txulpsexit;
  input dl3_txulpsesc;
  input [3:0]dl3_txtriggeresc;
  input [7:0]dl3_txdataesc;
  input dl3_txvalidesc;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [4:0]s_axi_awaddr;
  input s_axi_awvalid;
  input [4:0]s_axi_araddr;
  input s_axi_arvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wvalid;
  input s_axi_rready;
  input s_axi_bready;

  wire cl_enable;
  wire cl_stopstate;
  wire cl_txclkactivehs;
  wire cl_txrequesths;
  wire cl_txulpsclk;
  wire cl_txulpsexit;
  wire cl_ulpsactivenot;
  wire clk_hs_txn;
  wire clk_hs_txp;
  wire clk_lp_txn;
  wire clk_lp_txp;
  wire core_clk;
  wire core_rst;
  wire [3:0]data_hs_txn;
  wire [3:0]data_hs_txp;
  wire [3:0]data_lp_txn;
  wire [3:0]data_lp_txp;
  wire dl0_enable;
  wire dl0_forcetxstopmode;
  wire dl0_stopstate;
  wire [7:0]dl0_txdataesc;
  wire [7:0]dl0_txdatahs;
  wire dl0_txlpdtesc;
  wire dl0_txreadyesc;
  wire dl0_txreadyhs;
  wire dl0_txrequestesc;
  wire dl0_txrequesths;
  wire [3:0]dl0_txtriggeresc;
  wire dl0_txulpsesc;
  wire dl0_txulpsexit;
  wire dl0_txvalidesc;
  wire dl0_ulpsactivenot;
  wire dl1_enable;
  wire dl1_forcetxstopmode;
  wire dl1_stopstate;
  wire [7:0]dl1_txdataesc;
  wire [7:0]dl1_txdatahs;
  wire dl1_txlpdtesc;
  wire dl1_txreadyesc;
  wire dl1_txreadyhs;
  wire dl1_txrequestesc;
  wire dl1_txrequesths;
  wire [3:0]dl1_txtriggeresc;
  wire dl1_txulpsesc;
  wire dl1_txulpsexit;
  wire dl1_txvalidesc;
  wire dl1_ulpsactivenot;
  wire dl2_enable;
  wire dl2_forcetxstopmode;
  wire dl2_stopstate;
  wire [7:0]dl2_txdataesc;
  wire [7:0]dl2_txdatahs;
  wire dl2_txlpdtesc;
  wire dl2_txreadyesc;
  wire dl2_txreadyhs;
  wire dl2_txrequestesc;
  wire dl2_txrequesths;
  wire [3:0]dl2_txtriggeresc;
  wire dl2_txulpsesc;
  wire dl2_txulpsexit;
  wire dl2_txvalidesc;
  wire dl2_ulpsactivenot;
  wire dl3_enable;
  wire dl3_forcetxstopmode;
  wire dl3_stopstate;
  wire [7:0]dl3_txdataesc;
  wire [7:0]dl3_txdatahs;
  wire dl3_txlpdtesc;
  wire dl3_txreadyesc;
  wire dl3_txreadyhs;
  wire dl3_txrequestesc;
  wire dl3_txrequesths;
  wire [3:0]dl3_txtriggeresc;
  wire dl3_txulpsesc;
  wire dl3_txulpsexit;
  wire dl3_txvalidesc;
  wire dl3_ulpsactivenot;
  wire init_done;
  wire mmcm_lock_out;
  wire oserdes_clk90_out;
  wire oserdes_clk_out;
  wire oserdes_clkdiv_out;
  wire s_axi_aclk;
  wire [4:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [4:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire system_rst_out;
  wire txbyteclkhs;
  wire txclkesc_out;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_0720_mipi_dphy_0_0_support bd_0720_mipi_dphy_0_0_tx_support_i
       (.cl_enable(cl_enable),
        .cl_stopstate(cl_stopstate),
        .cl_txclkactivehs(cl_txclkactivehs),
        .cl_txrequesths(cl_txrequesths),
        .cl_txulpsclk(cl_txulpsclk),
        .cl_txulpsexit(cl_txulpsexit),
        .cl_ulpsactivenot(cl_ulpsactivenot),
        .clk_hs_txn(clk_hs_txn),
        .clk_hs_txp(clk_hs_txp),
        .clk_lp_txn(clk_lp_txn),
        .clk_lp_txp(clk_lp_txp),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .data_hs_txn(data_hs_txn),
        .data_hs_txp(data_hs_txp),
        .data_lp_txn(data_lp_txn),
        .data_lp_txp(data_lp_txp),
        .dl0_enable(dl0_enable),
        .dl0_forcetxstopmode(dl0_forcetxstopmode),
        .dl0_stopstate(dl0_stopstate),
        .dl0_txdataesc(dl0_txdataesc),
        .dl0_txdatahs(dl0_txdatahs),
        .dl0_txlpdtesc(dl0_txlpdtesc),
        .dl0_txreadyesc(dl0_txreadyesc),
        .dl0_txreadyhs(dl0_txreadyhs),
        .dl0_txrequestesc(dl0_txrequestesc),
        .dl0_txrequesths(dl0_txrequesths),
        .dl0_txtriggeresc(dl0_txtriggeresc),
        .dl0_txulpsesc(dl0_txulpsesc),
        .dl0_txulpsexit(dl0_txulpsexit),
        .dl0_txvalidesc(dl0_txvalidesc),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl1_enable(dl1_enable),
        .dl1_forcetxstopmode(dl1_forcetxstopmode),
        .dl1_stopstate(dl1_stopstate),
        .dl1_txdataesc(dl1_txdataesc),
        .dl1_txdatahs(dl1_txdatahs),
        .dl1_txlpdtesc(dl1_txlpdtesc),
        .dl1_txreadyesc(dl1_txreadyesc),
        .dl1_txreadyhs(dl1_txreadyhs),
        .dl1_txrequestesc(dl1_txrequestesc),
        .dl1_txrequesths(dl1_txrequesths),
        .dl1_txtriggeresc(dl1_txtriggeresc),
        .dl1_txulpsesc(dl1_txulpsesc),
        .dl1_txulpsexit(dl1_txulpsexit),
        .dl1_txvalidesc(dl1_txvalidesc),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dl2_enable(dl2_enable),
        .dl2_forcetxstopmode(dl2_forcetxstopmode),
        .dl2_stopstate(dl2_stopstate),
        .dl2_txdataesc(dl2_txdataesc),
        .dl2_txdatahs(dl2_txdatahs),
        .dl2_txlpdtesc(dl2_txlpdtesc),
        .dl2_txreadyesc(dl2_txreadyesc),
        .dl2_txreadyhs(dl2_txreadyhs),
        .dl2_txrequestesc(dl2_txrequestesc),
        .dl2_txrequesths(dl2_txrequesths),
        .dl2_txtriggeresc(dl2_txtriggeresc),
        .dl2_txulpsesc(dl2_txulpsesc),
        .dl2_txulpsexit(dl2_txulpsexit),
        .dl2_txvalidesc(dl2_txvalidesc),
        .dl2_ulpsactivenot(dl2_ulpsactivenot),
        .dl3_enable(dl3_enable),
        .dl3_forcetxstopmode(dl3_forcetxstopmode),
        .dl3_stopstate(dl3_stopstate),
        .dl3_txdataesc(dl3_txdataesc),
        .dl3_txdatahs(dl3_txdatahs),
        .dl3_txlpdtesc(dl3_txlpdtesc),
        .dl3_txreadyesc(dl3_txreadyesc),
        .dl3_txreadyhs(dl3_txreadyhs),
        .dl3_txrequestesc(dl3_txrequestesc),
        .dl3_txrequesths(dl3_txrequesths),
        .dl3_txtriggeresc(dl3_txtriggeresc),
        .dl3_txulpsesc(dl3_txulpsesc),
        .dl3_txulpsexit(dl3_txulpsexit),
        .dl3_txvalidesc(dl3_txvalidesc),
        .dl3_ulpsactivenot(dl3_ulpsactivenot),
        .init_done(init_done),
        .mmcm_lock_out(mmcm_lock_out),
        .oserdes_clk90_out(oserdes_clk90_out),
        .oserdes_clk_out(oserdes_clk_out),
        .oserdes_clkdiv_out(oserdes_clkdiv_out),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .system_rst_out(system_rst_out),
        .txbyteclkhs(txbyteclkhs),
        .txclkesc_out(txclkesc_out));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_0720_mipi_dphy_0_0_clock_module
   (txclkesc_out,
    mmcm_lock_out,
    oserdes_clk_out,
    oserdes_clk90_out,
    oserdes_clkdiv_out,
    txbyteclkhs,
    mmcm_reset,
    core_clk);
  output txclkesc_out;
  output mmcm_lock_out;
  output oserdes_clk_out;
  output oserdes_clk90_out;
  output oserdes_clkdiv_out;
  output txbyteclkhs;
  input mmcm_reset;
  input core_clk;

  wire clkfb_bufg_i;
  wire clkfb_i;
  wire core_clk;
  wire mmcm_lock_out;
  wire mmcm_reset;
  wire oserdes_clk90_out;
  wire oserdes_clk_out;
  wire oserdes_clkdiv_out;
  wire serial_clk;
  wire serial_clk90;
  wire txbyteclkhs;
  wire txclkesc_out;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_0720_mipi_dphy_0_0_clock_module_tx bd_0720_mipi_dphy_0_0_clock_module_tx_i
       (.clkfb_in(clkfb_bufg_i),
        .clkfb_out(clkfb_i),
        .mmcm_clk_in(core_clk),
        .mmcm_clk_out0(serial_clk),
        .mmcm_clk_out1(serial_clk90),
        .mmcm_clk_out2(txclkesc_out),
        .mmcm_locked(mmcm_lock_out),
        .mmcm_reset(mmcm_reset));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFIO clk_fwd_bufio_i
       (.I(serial_clk),
        .O(oserdes_clk_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG clkfb_bufg
       (.I(clkfb_i),
        .O(clkfb_bufg_i));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFIO data_fwd_bufio_i
       (.I(serial_clk90),
        .O(oserdes_clk90_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFR #(
    .BUFR_DIVIDE("4"),
    .SIM_DEVICE("7SERIES")) 
    div_clk90_gen
       (.CE(1'b1),
        .CLR(1'b0),
        .I(serial_clk90),
        .O(txbyteclkhs));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFR #(
    .BUFR_DIVIDE("4"),
    .SIM_DEVICE("7SERIES")) 
    div_clk_gen
       (.CE(1'b1),
        .CLR(1'b0),
        .I(serial_clk),
        .O(oserdes_clkdiv_out));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_0720_mipi_dphy_0_0_clock_module_tx
   (clkfb_in,
    mmcm_clk_out0,
    mmcm_clk_out1,
    mmcm_clk_out2,
    clkfb_out,
    mmcm_reset,
    mmcm_locked,
    mmcm_clk_in);
  input clkfb_in;
  output mmcm_clk_out0;
  output mmcm_clk_out1;
  output mmcm_clk_out2;
  output clkfb_out;
  input mmcm_reset;
  output mmcm_locked;
  input mmcm_clk_in;

  wire clkfb_in;
  wire clkfb_out;
  wire mmcm_clk_in;
  wire mmcm_clk_out0;
  wire mmcm_clk_out1;
  wire mmcm_clk_out2;
  wire mmcm_locked;
  wire mmcm_reset;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_0720_mipi_dphy_0_0_clock_module_tx_clk_wiz inst
       (.clkfb_in(clkfb_in),
        .clkfb_out(clkfb_out),
        .mmcm_clk_in(mmcm_clk_in),
        .mmcm_clk_out0(mmcm_clk_out0),
        .mmcm_clk_out1(mmcm_clk_out1),
        .mmcm_clk_out2(mmcm_clk_out2),
        .mmcm_locked(mmcm_locked),
        .mmcm_reset(mmcm_reset));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_0720_mipi_dphy_0_0_clock_module_tx_clk_wiz
   (clkfb_in,
    mmcm_clk_out0,
    mmcm_clk_out1,
    mmcm_clk_out2,
    clkfb_out,
    mmcm_reset,
    mmcm_locked,
    mmcm_clk_in);
  input clkfb_in;
  output mmcm_clk_out0;
  output mmcm_clk_out1;
  output mmcm_clk_out2;
  output clkfb_out;
  input mmcm_reset;
  output mmcm_locked;
  input mmcm_clk_in;

  wire clkfb_in;
  wire clkfb_out;
  wire mmcm_clk_in;
  wire mmcm_clk_in_bd_0720_mipi_dphy_0_0_clock_module_tx;
  wire mmcm_clk_out0;
  wire mmcm_clk_out1;
  wire mmcm_clk_out2;
  wire mmcm_clk_out2_bd_0720_mipi_dphy_0_0_clock_module_tx;
  wire mmcm_locked;
  wire mmcm_reset;
  wire NLW_mmcm_adv_inst_CLKFBOUTB_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT0B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT1B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT2B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT3_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT3B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT4_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT5_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT6_UNCONNECTED;
  wire NLW_mmcm_adv_inst_DRDY_UNCONNECTED;
  wire NLW_mmcm_adv_inst_PSDONE_UNCONNECTED;
  wire [15:0]NLW_mmcm_adv_inst_DO_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG clkin1_bufg
       (.I(mmcm_clk_in),
        .O(mmcm_clk_in_bd_0720_mipi_dphy_0_0_clock_module_tx));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG clkout3_buf
       (.I(mmcm_clk_out2_bd_0720_mipi_dphy_0_0_clock_module_tx),
        .O(mmcm_clk_out2));
  (* BOX_TYPE = "PRIMITIVE" *) 
  MMCME2_ADV #(
    .BANDWIDTH("OPTIMIZED"),
    .CLKFBOUT_MULT_F(5.000000),
    .CLKFBOUT_PHASE(0.000000),
    .CLKFBOUT_USE_FINE_PS("FALSE"),
    .CLKIN1_PERIOD(5.000000),
    .CLKIN2_PERIOD(0.000000),
    .CLKOUT0_DIVIDE_F(2.000000),
    .CLKOUT0_DUTY_CYCLE(0.500000),
    .CLKOUT0_PHASE(0.000000),
    .CLKOUT0_USE_FINE_PS("FALSE"),
    .CLKOUT1_DIVIDE(2),
    .CLKOUT1_DUTY_CYCLE(0.500000),
    .CLKOUT1_PHASE(90.000000),
    .CLKOUT1_USE_FINE_PS("FALSE"),
    .CLKOUT2_DIVIDE(50),
    .CLKOUT2_DUTY_CYCLE(0.500000),
    .CLKOUT2_PHASE(0.000000),
    .CLKOUT2_USE_FINE_PS("FALSE"),
    .CLKOUT3_DIVIDE(1),
    .CLKOUT3_DUTY_CYCLE(0.500000),
    .CLKOUT3_PHASE(0.000000),
    .CLKOUT3_USE_FINE_PS("FALSE"),
    .CLKOUT4_CASCADE("FALSE"),
    .CLKOUT4_DIVIDE(1),
    .CLKOUT4_DUTY_CYCLE(0.500000),
    .CLKOUT4_PHASE(0.000000),
    .CLKOUT4_USE_FINE_PS("FALSE"),
    .CLKOUT5_DIVIDE(1),
    .CLKOUT5_DUTY_CYCLE(0.500000),
    .CLKOUT5_PHASE(0.000000),
    .CLKOUT5_USE_FINE_PS("FALSE"),
    .CLKOUT6_DIVIDE(1),
    .CLKOUT6_DUTY_CYCLE(0.500000),
    .CLKOUT6_PHASE(0.000000),
    .CLKOUT6_USE_FINE_PS("FALSE"),
    .COMPENSATION("BUF_IN"),
    .DIVCLK_DIVIDE(1),
    .IS_CLKINSEL_INVERTED(1'b0),
    .IS_PSEN_INVERTED(1'b0),
    .IS_PSINCDEC_INVERTED(1'b0),
    .IS_PWRDWN_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .REF_JITTER1(0.010000),
    .REF_JITTER2(0.010000),
    .SS_EN("FALSE"),
    .SS_MODE("CENTER_HIGH"),
    .SS_MOD_PERIOD(10000),
    .STARTUP_WAIT("FALSE")) 
    mmcm_adv_inst
       (.CLKFBIN(clkfb_in),
        .CLKFBOUT(clkfb_out),
        .CLKFBOUTB(NLW_mmcm_adv_inst_CLKFBOUTB_UNCONNECTED),
        .CLKFBSTOPPED(NLW_mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED),
        .CLKIN1(mmcm_clk_in_bd_0720_mipi_dphy_0_0_clock_module_tx),
        .CLKIN2(1'b0),
        .CLKINSEL(1'b1),
        .CLKINSTOPPED(NLW_mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED),
        .CLKOUT0(mmcm_clk_out0),
        .CLKOUT0B(NLW_mmcm_adv_inst_CLKOUT0B_UNCONNECTED),
        .CLKOUT1(mmcm_clk_out1),
        .CLKOUT1B(NLW_mmcm_adv_inst_CLKOUT1B_UNCONNECTED),
        .CLKOUT2(mmcm_clk_out2_bd_0720_mipi_dphy_0_0_clock_module_tx),
        .CLKOUT2B(NLW_mmcm_adv_inst_CLKOUT2B_UNCONNECTED),
        .CLKOUT3(NLW_mmcm_adv_inst_CLKOUT3_UNCONNECTED),
        .CLKOUT3B(NLW_mmcm_adv_inst_CLKOUT3B_UNCONNECTED),
        .CLKOUT4(NLW_mmcm_adv_inst_CLKOUT4_UNCONNECTED),
        .CLKOUT5(NLW_mmcm_adv_inst_CLKOUT5_UNCONNECTED),
        .CLKOUT6(NLW_mmcm_adv_inst_CLKOUT6_UNCONNECTED),
        .DADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DCLK(1'b0),
        .DEN(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DO(NLW_mmcm_adv_inst_DO_UNCONNECTED[15:0]),
        .DRDY(NLW_mmcm_adv_inst_DRDY_UNCONNECTED),
        .DWE(1'b0),
        .LOCKED(mmcm_locked),
        .PSCLK(1'b0),
        .PSDONE(NLW_mmcm_adv_inst_PSDONE_UNCONNECTED),
        .PSEN(1'b0),
        .PSINCDEC(1'b0),
        .PWRDWN(1'b0),
        .RST(mmcm_reset));
endmodule

(* C_CAL_MODE = "FIXED" *) (* C_DIV4_CLK_PERIOD = "8.000000" *) (* C_DPHY_LANES = "4" *) 
(* C_DPHY_MODE = "MASTER" *) (* C_EN_DEBUG_REGS = "0" *) (* C_EN_REG_IF = "1" *) 
(* C_EN_TIMEOUT_REGS = "0" *) (* C_ESC_CLK_PERIOD = "50.000000" *) (* C_ESC_TIMEOUT = "25600" *) 
(* C_EXAMPLE_SIMULATION = "false" *) (* C_HS_LINE_RATE = "1000" *) (* C_HS_TIMEOUT = "65541" *) 
(* C_IDLY_TAP = "0" *) (* C_LPX_PERIOD = "50" *) (* C_RCVE_DESKEW_SEQ = "false" *) 
(* C_SKEWCAL_FIRST_TIME = "4096" *) (* C_SKEWCAL_PERIODIC_TIME = "128" *) (* C_STABLE_CLK_PERIOD = "5.000000" *) 
(* C_TXPLL_CLKIN_PERIOD = "8.000000" *) (* C_WAKEUP = "1000000" *) (* C_XMIT_FIRST_DESKEW_SEQ = "false" *) 
(* C_XMIT_PERIODIC_DESKEW_SEQ = "false" *) (* DPHY_PRESET = "None" *) (* DowngradeIPIdentifiedWarnings = "yes" *) 
(* MTBF_SYNC_STAGES = "3" *) (* SUPPORT_LEVEL = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_0720_mipi_dphy_0_0_core
   (core_clk,
    core_rst,
    txclkesc_out,
    txbyteclkhs,
    oserdes_clkdiv_out,
    oserdes_clk_out,
    oserdes_clk90_out,
    mmcm_lock_out,
    system_rst_out,
    init_done,
    cl_txclkactivehs,
    cl_txrequesths,
    cl_stopstate,
    cl_enable,
    cl_txulpsclk,
    cl_txulpsexit,
    cl_ulpsactivenot,
    dl0_txdatahs,
    dl0_txrequesths,
    dl0_txreadyhs,
    dl0_forcetxstopmode,
    dl0_stopstate,
    dl0_enable,
    dl0_txrequestesc,
    dl0_txlpdtesc,
    dl0_txulpsexit,
    dl0_ulpsactivenot,
    dl0_txulpsesc,
    dl0_txtriggeresc,
    dl0_txdataesc,
    dl0_txvalidesc,
    dl0_txreadyesc,
    dl1_txdatahs,
    dl1_txrequesths,
    dl1_txreadyhs,
    dl1_forcetxstopmode,
    dl1_stopstate,
    dl1_enable,
    dl1_txrequestesc,
    dl1_txlpdtesc,
    dl1_txulpsexit,
    dl1_ulpsactivenot,
    dl1_txulpsesc,
    dl1_txtriggeresc,
    dl1_txdataesc,
    dl1_txvalidesc,
    dl1_txreadyesc,
    dl2_txdatahs,
    dl2_txrequesths,
    dl2_txreadyhs,
    dl2_forcetxstopmode,
    dl2_stopstate,
    dl2_enable,
    dl2_txrequestesc,
    dl2_txlpdtesc,
    dl2_txulpsexit,
    dl2_ulpsactivenot,
    dl2_txulpsesc,
    dl2_txtriggeresc,
    dl2_txdataesc,
    dl2_txvalidesc,
    dl2_txreadyesc,
    dl3_txdatahs,
    dl3_txrequesths,
    dl3_txreadyhs,
    dl3_forcetxstopmode,
    dl3_stopstate,
    dl3_enable,
    dl3_txrequestesc,
    dl3_txlpdtesc,
    dl3_txulpsexit,
    dl3_ulpsactivenot,
    dl3_txulpsesc,
    dl3_txtriggeresc,
    dl3_txdataesc,
    dl3_txvalidesc,
    dl3_txreadyesc,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awready,
    s_axi_awvalid,
    s_axi_araddr,
    s_axi_arready,
    s_axi_arvalid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wready,
    s_axi_wvalid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rready,
    s_axi_rvalid,
    s_axi_bresp,
    s_axi_bready,
    s_axi_bvalid,
    clk_hs_txp,
    clk_hs_txn,
    data_hs_txp,
    data_hs_txn,
    clk_lp_txp,
    clk_lp_txn,
    data_lp_txp,
    data_lp_txn);
  input core_clk;
  input core_rst;
  output txclkesc_out;
  output txbyteclkhs;
  output oserdes_clkdiv_out;
  output oserdes_clk_out;
  output oserdes_clk90_out;
  output mmcm_lock_out;
  output system_rst_out;
  output init_done;
  output cl_txclkactivehs;
  input cl_txrequesths;
  output cl_stopstate;
  input cl_enable;
  input cl_txulpsclk;
  input cl_txulpsexit;
  output cl_ulpsactivenot;
  input [7:0]dl0_txdatahs;
  input dl0_txrequesths;
  output dl0_txreadyhs;
  input dl0_forcetxstopmode;
  output dl0_stopstate;
  input dl0_enable;
  input dl0_txrequestesc;
  input dl0_txlpdtesc;
  input dl0_txulpsexit;
  output dl0_ulpsactivenot;
  input dl0_txulpsesc;
  input [3:0]dl0_txtriggeresc;
  input [7:0]dl0_txdataesc;
  input dl0_txvalidesc;
  output dl0_txreadyesc;
  input [7:0]dl1_txdatahs;
  input dl1_txrequesths;
  output dl1_txreadyhs;
  input dl1_forcetxstopmode;
  output dl1_stopstate;
  input dl1_enable;
  input dl1_txrequestesc;
  input dl1_txlpdtesc;
  input dl1_txulpsexit;
  output dl1_ulpsactivenot;
  input dl1_txulpsesc;
  input [3:0]dl1_txtriggeresc;
  input [7:0]dl1_txdataesc;
  input dl1_txvalidesc;
  output dl1_txreadyesc;
  input [7:0]dl2_txdatahs;
  input dl2_txrequesths;
  output dl2_txreadyhs;
  input dl2_forcetxstopmode;
  output dl2_stopstate;
  input dl2_enable;
  input dl2_txrequestesc;
  input dl2_txlpdtesc;
  input dl2_txulpsexit;
  output dl2_ulpsactivenot;
  input dl2_txulpsesc;
  input [3:0]dl2_txtriggeresc;
  input [7:0]dl2_txdataesc;
  input dl2_txvalidesc;
  output dl2_txreadyesc;
  input [7:0]dl3_txdatahs;
  input dl3_txrequesths;
  output dl3_txreadyhs;
  input dl3_forcetxstopmode;
  output dl3_stopstate;
  input dl3_enable;
  input dl3_txrequestesc;
  input dl3_txlpdtesc;
  input dl3_txulpsexit;
  output dl3_ulpsactivenot;
  input dl3_txulpsesc;
  input [3:0]dl3_txtriggeresc;
  input [7:0]dl3_txdataesc;
  input dl3_txvalidesc;
  output dl3_txreadyesc;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [6:0]s_axi_awaddr;
  output s_axi_awready;
  input s_axi_awvalid;
  input [6:0]s_axi_araddr;
  output s_axi_arready;
  input s_axi_arvalid;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  output s_axi_wready;
  input s_axi_wvalid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  input s_axi_rready;
  output s_axi_rvalid;
  output [1:0]s_axi_bresp;
  input s_axi_bready;
  output s_axi_bvalid;
  output clk_hs_txp;
  output clk_hs_txn;
  output [3:0]data_hs_txp;
  output [3:0]data_hs_txn;
  output clk_lp_txp;
  output clk_lp_txn;
  output [3:0]data_lp_txp;
  output [3:0]data_lp_txn;

  wire \<const0> ;
  wire cl_enable;
  wire cl_stopstate;
  wire cl_txclkactivehs;
  wire cl_txrequesths;
  wire cl_txulpsclk;
  wire cl_txulpsexit;
  wire cl_ulpsactivenot;
  wire clk_hs_txn;
  wire clk_hs_txp;
  wire clk_lp_txn;
  wire clk_lp_txp;
  wire core_clk;
  wire core_rst;
  wire [3:0]data_hs_txn;
  wire [3:0]data_hs_txp;
  wire [3:0]data_lp_txn;
  wire [3:0]data_lp_txp;
  wire dl0_enable;
  wire dl0_forcetxstopmode;
  wire dl0_stopstate;
  wire [7:0]dl0_txdataesc;
  wire [7:0]dl0_txdatahs;
  wire dl0_txlpdtesc;
  wire dl0_txreadyesc;
  wire dl0_txreadyhs;
  wire dl0_txrequestesc;
  wire dl0_txrequesths;
  wire [3:0]dl0_txtriggeresc;
  wire dl0_txulpsesc;
  wire dl0_txulpsexit;
  wire dl0_txvalidesc;
  wire dl0_ulpsactivenot;
  wire dl1_enable;
  wire dl1_forcetxstopmode;
  wire dl1_stopstate;
  wire [7:0]dl1_txdataesc;
  wire [7:0]dl1_txdatahs;
  wire dl1_txlpdtesc;
  wire dl1_txreadyesc;
  wire dl1_txreadyhs;
  wire dl1_txrequestesc;
  wire dl1_txrequesths;
  wire [3:0]dl1_txtriggeresc;
  wire dl1_txulpsesc;
  wire dl1_txulpsexit;
  wire dl1_txvalidesc;
  wire dl1_ulpsactivenot;
  wire dl2_enable;
  wire dl2_forcetxstopmode;
  wire dl2_stopstate;
  wire [7:0]dl2_txdataesc;
  wire [7:0]dl2_txdatahs;
  wire dl2_txlpdtesc;
  wire dl2_txreadyesc;
  wire dl2_txreadyhs;
  wire dl2_txrequestesc;
  wire dl2_txrequesths;
  wire [3:0]dl2_txtriggeresc;
  wire dl2_txulpsesc;
  wire dl2_txulpsexit;
  wire dl2_txvalidesc;
  wire dl2_ulpsactivenot;
  wire dl3_enable;
  wire dl3_forcetxstopmode;
  wire dl3_stopstate;
  wire [7:0]dl3_txdataesc;
  wire [7:0]dl3_txdatahs;
  wire dl3_txlpdtesc;
  wire dl3_txreadyesc;
  wire dl3_txreadyhs;
  wire dl3_txrequestesc;
  wire dl3_txrequesths;
  wire [3:0]dl3_txtriggeresc;
  wire dl3_txulpsesc;
  wire dl3_txulpsexit;
  wire dl3_txvalidesc;
  wire dl3_ulpsactivenot;
  wire init_done;
  wire mmcm_lock_out;
  wire oserdes_clk90_out;
  wire oserdes_clk_out;
  wire oserdes_clkdiv_out;
  wire s_axi_aclk;
  wire [6:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [6:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire system_rst_out;
  wire txbyteclkhs;
  wire txclkesc_out;

  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_0720_mipi_dphy_0_0_c1 inst
       (.cl_enable(cl_enable),
        .cl_stopstate(cl_stopstate),
        .cl_txclkactivehs(cl_txclkactivehs),
        .cl_txrequesths(cl_txrequesths),
        .cl_txulpsclk(cl_txulpsclk),
        .cl_txulpsexit(cl_txulpsexit),
        .cl_ulpsactivenot(cl_ulpsactivenot),
        .clk_hs_txn(clk_hs_txn),
        .clk_hs_txp(clk_hs_txp),
        .clk_lp_txn(clk_lp_txn),
        .clk_lp_txp(clk_lp_txp),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .data_hs_txn(data_hs_txn),
        .data_hs_txp(data_hs_txp),
        .data_lp_txn(data_lp_txn),
        .data_lp_txp(data_lp_txp),
        .dl0_enable(dl0_enable),
        .dl0_forcetxstopmode(dl0_forcetxstopmode),
        .dl0_stopstate(dl0_stopstate),
        .dl0_txdataesc(dl0_txdataesc),
        .dl0_txdatahs(dl0_txdatahs),
        .dl0_txlpdtesc(dl0_txlpdtesc),
        .dl0_txreadyesc(dl0_txreadyesc),
        .dl0_txreadyhs(dl0_txreadyhs),
        .dl0_txrequestesc(dl0_txrequestesc),
        .dl0_txrequesths(dl0_txrequesths),
        .dl0_txtriggeresc(dl0_txtriggeresc),
        .dl0_txulpsesc(dl0_txulpsesc),
        .dl0_txulpsexit(dl0_txulpsexit),
        .dl0_txvalidesc(dl0_txvalidesc),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl1_enable(dl1_enable),
        .dl1_forcetxstopmode(dl1_forcetxstopmode),
        .dl1_stopstate(dl1_stopstate),
        .dl1_txdataesc(dl1_txdataesc),
        .dl1_txdatahs(dl1_txdatahs),
        .dl1_txlpdtesc(dl1_txlpdtesc),
        .dl1_txreadyesc(dl1_txreadyesc),
        .dl1_txreadyhs(dl1_txreadyhs),
        .dl1_txrequestesc(dl1_txrequestesc),
        .dl1_txrequesths(dl1_txrequesths),
        .dl1_txtriggeresc(dl1_txtriggeresc),
        .dl1_txulpsesc(dl1_txulpsesc),
        .dl1_txulpsexit(dl1_txulpsexit),
        .dl1_txvalidesc(dl1_txvalidesc),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dl2_enable(dl2_enable),
        .dl2_forcetxstopmode(dl2_forcetxstopmode),
        .dl2_stopstate(dl2_stopstate),
        .dl2_txdataesc(dl2_txdataesc),
        .dl2_txdatahs(dl2_txdatahs),
        .dl2_txlpdtesc(dl2_txlpdtesc),
        .dl2_txreadyesc(dl2_txreadyesc),
        .dl2_txreadyhs(dl2_txreadyhs),
        .dl2_txrequestesc(dl2_txrequestesc),
        .dl2_txrequesths(dl2_txrequesths),
        .dl2_txtriggeresc(dl2_txtriggeresc),
        .dl2_txulpsesc(dl2_txulpsesc),
        .dl2_txulpsexit(dl2_txulpsexit),
        .dl2_txvalidesc(dl2_txvalidesc),
        .dl2_ulpsactivenot(dl2_ulpsactivenot),
        .dl3_enable(dl3_enable),
        .dl3_forcetxstopmode(dl3_forcetxstopmode),
        .dl3_stopstate(dl3_stopstate),
        .dl3_txdataesc(dl3_txdataesc),
        .dl3_txdatahs(dl3_txdatahs),
        .dl3_txlpdtesc(dl3_txlpdtesc),
        .dl3_txreadyesc(dl3_txreadyesc),
        .dl3_txreadyhs(dl3_txreadyhs),
        .dl3_txrequestesc(dl3_txrequestesc),
        .dl3_txrequesths(dl3_txrequesths),
        .dl3_txtriggeresc(dl3_txtriggeresc),
        .dl3_txulpsesc(dl3_txulpsesc),
        .dl3_txulpsexit(dl3_txulpsexit),
        .dl3_txvalidesc(dl3_txvalidesc),
        .dl3_ulpsactivenot(dl3_ulpsactivenot),
        .init_done(init_done),
        .mmcm_lock_out(mmcm_lock_out),
        .oserdes_clk90_out(oserdes_clk90_out),
        .oserdes_clk_out(oserdes_clk_out),
        .oserdes_clkdiv_out(oserdes_clkdiv_out),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr[6:2]),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr[6:2]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .system_rst_out(system_rst_out),
        .txbyteclkhs(txbyteclkhs),
        .txclkesc_out(txclkesc_out));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_0720_mipi_dphy_0_0_support
   (system_rst_out,
    mmcm_lock_out,
    init_done,
    cl_txclkactivehs,
    cl_stopstate,
    cl_ulpsactivenot,
    dl0_txreadyhs,
    dl0_stopstate,
    dl0_ulpsactivenot,
    dl0_txreadyesc,
    dl1_txreadyhs,
    dl1_stopstate,
    dl1_ulpsactivenot,
    dl1_txreadyesc,
    dl2_txreadyhs,
    dl2_stopstate,
    dl2_ulpsactivenot,
    dl2_txreadyesc,
    dl3_txreadyhs,
    dl3_stopstate,
    dl3_ulpsactivenot,
    dl3_txreadyesc,
    clk_lp_txp,
    clk_lp_txn,
    data_lp_txp,
    data_lp_txn,
    s_axi_awready,
    s_axi_arready,
    s_axi_wready,
    s_axi_rdata,
    s_axi_rvalid,
    s_axi_bvalid,
    txbyteclkhs,
    oserdes_clkdiv_out,
    txclkesc_out,
    data_hs_txp,
    data_hs_txn,
    clk_hs_txp,
    clk_hs_txn,
    oserdes_clk_out,
    oserdes_clk90_out,
    core_rst,
    core_clk,
    cl_txrequesths,
    cl_enable,
    cl_txulpsclk,
    cl_txulpsexit,
    dl0_txdatahs,
    dl0_txrequesths,
    dl0_forcetxstopmode,
    dl0_enable,
    dl0_txrequestesc,
    dl0_txlpdtesc,
    dl0_txulpsexit,
    dl0_txulpsesc,
    dl0_txtriggeresc,
    dl0_txdataesc,
    dl0_txvalidesc,
    dl1_txdatahs,
    dl1_txrequesths,
    dl1_forcetxstopmode,
    dl1_enable,
    dl1_txrequestesc,
    dl1_txlpdtesc,
    dl1_txulpsexit,
    dl1_txulpsesc,
    dl1_txtriggeresc,
    dl1_txdataesc,
    dl1_txvalidesc,
    dl2_txdatahs,
    dl2_txrequesths,
    dl2_forcetxstopmode,
    dl2_enable,
    dl2_txrequestesc,
    dl2_txlpdtesc,
    dl2_txulpsexit,
    dl2_txulpsesc,
    dl2_txtriggeresc,
    dl2_txdataesc,
    dl2_txvalidesc,
    dl3_txdatahs,
    dl3_txrequesths,
    dl3_forcetxstopmode,
    dl3_enable,
    dl3_txrequestesc,
    dl3_txlpdtesc,
    dl3_txulpsexit,
    dl3_txulpsesc,
    dl3_txtriggeresc,
    dl3_txdataesc,
    dl3_txvalidesc,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_wdata,
    s_axi_wvalid,
    s_axi_rready,
    s_axi_bready);
  output system_rst_out;
  output mmcm_lock_out;
  output init_done;
  output cl_txclkactivehs;
  output cl_stopstate;
  output cl_ulpsactivenot;
  output dl0_txreadyhs;
  output dl0_stopstate;
  output dl0_ulpsactivenot;
  output dl0_txreadyesc;
  output dl1_txreadyhs;
  output dl1_stopstate;
  output dl1_ulpsactivenot;
  output dl1_txreadyesc;
  output dl2_txreadyhs;
  output dl2_stopstate;
  output dl2_ulpsactivenot;
  output dl2_txreadyesc;
  output dl3_txreadyhs;
  output dl3_stopstate;
  output dl3_ulpsactivenot;
  output dl3_txreadyesc;
  output clk_lp_txp;
  output clk_lp_txn;
  output [3:0]data_lp_txp;
  output [3:0]data_lp_txn;
  output s_axi_awready;
  output s_axi_arready;
  output s_axi_wready;
  output [31:0]s_axi_rdata;
  output s_axi_rvalid;
  output s_axi_bvalid;
  output txbyteclkhs;
  output oserdes_clkdiv_out;
  output txclkesc_out;
  output [3:0]data_hs_txp;
  output [3:0]data_hs_txn;
  output clk_hs_txp;
  output clk_hs_txn;
  output oserdes_clk_out;
  output oserdes_clk90_out;
  input core_rst;
  input core_clk;
  input cl_txrequesths;
  input cl_enable;
  input cl_txulpsclk;
  input cl_txulpsexit;
  input [7:0]dl0_txdatahs;
  input dl0_txrequesths;
  input dl0_forcetxstopmode;
  input dl0_enable;
  input dl0_txrequestesc;
  input dl0_txlpdtesc;
  input dl0_txulpsexit;
  input dl0_txulpsesc;
  input [3:0]dl0_txtriggeresc;
  input [7:0]dl0_txdataesc;
  input dl0_txvalidesc;
  input [7:0]dl1_txdatahs;
  input dl1_txrequesths;
  input dl1_forcetxstopmode;
  input dl1_enable;
  input dl1_txrequestesc;
  input dl1_txlpdtesc;
  input dl1_txulpsexit;
  input dl1_txulpsesc;
  input [3:0]dl1_txtriggeresc;
  input [7:0]dl1_txdataesc;
  input dl1_txvalidesc;
  input [7:0]dl2_txdatahs;
  input dl2_txrequesths;
  input dl2_forcetxstopmode;
  input dl2_enable;
  input dl2_txrequestesc;
  input dl2_txlpdtesc;
  input dl2_txulpsexit;
  input dl2_txulpsesc;
  input [3:0]dl2_txtriggeresc;
  input [7:0]dl2_txdataesc;
  input dl2_txvalidesc;
  input [7:0]dl3_txdatahs;
  input dl3_txrequesths;
  input dl3_forcetxstopmode;
  input dl3_enable;
  input dl3_txrequestesc;
  input dl3_txlpdtesc;
  input dl3_txulpsexit;
  input dl3_txulpsesc;
  input [3:0]dl3_txtriggeresc;
  input [7:0]dl3_txdataesc;
  input dl3_txvalidesc;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [4:0]s_axi_awaddr;
  input s_axi_awvalid;
  input [4:0]s_axi_araddr;
  input s_axi_arvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wvalid;
  input s_axi_rready;
  input s_axi_bready;

  wire cl_enable;
  wire cl_stopstate;
  wire cl_txclkactivehs;
  wire cl_txrequesths;
  wire cl_txulpsclk;
  wire cl_txulpsexit;
  wire cl_ulpsactivenot;
  wire clk_hs_txn;
  wire clk_hs_txp;
  wire clk_lp_txn;
  wire clk_lp_txp;
  wire core_clk;
  wire core_rst;
  wire core_rst_coreclk_sync;
  wire [3:0]data_hs_txn;
  wire [3:0]data_hs_txp;
  wire [31:0]data_in_to_device_w;
  wire [3:0]data_lp_txn;
  wire [3:0]data_lp_txp;
  wire dl0_enable;
  wire dl0_forcetxstopmode;
  wire dl0_stopstate;
  wire [7:0]dl0_txdataesc;
  wire [7:0]dl0_txdatahs;
  wire dl0_txlpdtesc;
  wire dl0_txreadyesc;
  wire dl0_txreadyhs;
  wire dl0_txrequestesc;
  wire dl0_txrequesths;
  wire [3:0]dl0_txtriggeresc;
  wire dl0_txulpsesc;
  wire dl0_txulpsexit;
  wire dl0_txvalidesc;
  wire dl0_ulpsactivenot;
  wire dl1_enable;
  wire dl1_forcetxstopmode;
  wire dl1_stopstate;
  wire [7:0]dl1_txdataesc;
  wire [7:0]dl1_txdatahs;
  wire dl1_txlpdtesc;
  wire dl1_txreadyesc;
  wire dl1_txreadyhs;
  wire dl1_txrequestesc;
  wire dl1_txrequesths;
  wire [3:0]dl1_txtriggeresc;
  wire dl1_txulpsesc;
  wire dl1_txulpsexit;
  wire dl1_txvalidesc;
  wire dl1_ulpsactivenot;
  wire dl2_enable;
  wire dl2_forcetxstopmode;
  wire dl2_stopstate;
  wire [7:0]dl2_txdataesc;
  wire [7:0]dl2_txdatahs;
  wire dl2_txlpdtesc;
  wire dl2_txreadyesc;
  wire dl2_txreadyhs;
  wire dl2_txrequestesc;
  wire dl2_txrequesths;
  wire [3:0]dl2_txtriggeresc;
  wire dl2_txulpsesc;
  wire dl2_txulpsexit;
  wire dl2_txvalidesc;
  wire dl2_ulpsactivenot;
  wire dl3_enable;
  wire dl3_forcetxstopmode;
  wire dl3_stopstate;
  wire [7:0]dl3_txdataesc;
  wire [7:0]dl3_txdatahs;
  wire dl3_txlpdtesc;
  wire dl3_txreadyesc;
  wire dl3_txreadyhs;
  wire dl3_txrequestesc;
  wire dl3_txrequesths;
  wire [3:0]dl3_txtriggeresc;
  wire dl3_txulpsesc;
  wire dl3_txulpsexit;
  wire dl3_txvalidesc;
  wire dl3_ulpsactivenot;
  wire dphy_en_w;
  wire dphy_srst_w;
  wire init_done;
  wire mmcm_lock_out;
  wire mmcm_reset_w;
  wire oserdes_clk90_out;
  wire oserdes_clk_out;
  wire oserdes_clkdiv_out;
  wire s_axi_aclk;
  wire [4:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [4:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire system_rst_byteclk_w;
  wire system_rst_escclk_w;
  wire system_rst_out;
  wire system_rst_phybyteclk_w;
  wire system_rst_w;
  wire [1:1]tx_hs_clk_p_w;
  wire txbyteclkhs;
  wire txclkesc_out;
  wire \NLW_master_tx.dphy_tx_fab_top_core_ref_clk_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl0_txbyteclkhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl1_txbyteclkhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl2_txbyteclkhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl3_txbyteclkhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl4_stopstate_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl4_txbyteclkhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl4_txreadyesc_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl4_txreadyhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl4_ulpsactivenot_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl5_stopstate_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl5_txbyteclkhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl5_txreadyesc_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl5_txreadyhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl5_ulpsactivenot_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl6_stopstate_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl6_txbyteclkhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl6_txreadyesc_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl6_txreadyhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl6_ulpsactivenot_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl7_stopstate_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl7_txbyteclkhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl7_txreadyesc_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl7_txreadyhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl7_ulpsactivenot_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_phy_rst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_cl_en_hs_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_cl_en_lp_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl0_en_hs_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl0_en_lp_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl1_en_hs_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl1_en_lp_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl2_en_hs_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl2_en_lp_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl3_en_hs_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl3_en_lp_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl4_en_hs_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl4_en_lp_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl4_lp_dn_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl4_lp_dp_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl5_en_hs_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl5_en_lp_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl5_lp_dn_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl5_lp_dp_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl6_en_hs_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl6_en_lp_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl6_lp_dn_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl6_lp_dp_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl7_en_hs_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl7_en_lp_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl7_lp_dn_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl7_lp_dp_UNCONNECTED ;
  wire [1:0]\NLW_master_tx.dphy_tx_fab_top_s_axi_bresp_UNCONNECTED ;
  wire [1:0]\NLW_master_tx.dphy_tx_fab_top_s_axi_rresp_UNCONNECTED ;
  wire [7:0]\NLW_master_tx.dphy_tx_fab_top_tx_dl4_hs_dp_UNCONNECTED ;
  wire [7:0]\NLW_master_tx.dphy_tx_fab_top_tx_dl5_hs_dp_UNCONNECTED ;
  wire [7:0]\NLW_master_tx.dphy_tx_fab_top_tx_dl6_hs_dp_UNCONNECTED ;
  wire [7:0]\NLW_master_tx.dphy_tx_fab_top_tx_dl7_hs_dp_UNCONNECTED ;
  wire [7:0]\NLW_master_tx.dphy_tx_fab_top_tx_hs_clk_p_UNCONNECTED ;
  wire \NLW_master_tx.u_tx_rst_logic_phy_rst_UNCONNECTED ;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_0720_mipi_dphy_0_0_clock_module \master_tx.bd_0720_mipi_dphy_0_0_tx_clock_module_support_i 
       (.core_clk(core_clk),
        .mmcm_lock_out(mmcm_lock_out),
        .mmcm_reset(mmcm_reset_w),
        .oserdes_clk90_out(oserdes_clk90_out),
        .oserdes_clk_out(oserdes_clk_out),
        .oserdes_clkdiv_out(oserdes_clkdiv_out),
        .txbyteclkhs(txbyteclkhs),
        .txclkesc_out(txclkesc_out));
  (* C_DPHY_LANES = "4" *) 
  (* C_EN_HS_OBUFTDS = "FALSE" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* MTBF_SYNC_STAGES = "3" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_ioi_7series \master_tx.bd_0720_mipi_dphy_0_0_tx_ioi_i 
       (.cl_tst_clk_in(1'b0),
        .clk90_div_in(txbyteclkhs),
        .clk_div_in(oserdes_clkdiv_out),
        .clk_hs_txn(clk_hs_txn),
        .clk_hs_txp(clk_hs_txp),
        .clk_in(oserdes_clk_out),
        .clk_in_phase_sft(oserdes_clk90_out),
        .clk_out_from_device({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,tx_hs_clk_p_w,1'b0}),
        .core_clk(1'b0),
        .data_hs_txn(data_hs_txn),
        .data_hs_txp(data_hs_txp),
        .data_out_from_device(data_in_to_device_w),
        .dl_tst_clk_in(1'b0),
        .en_hs_tst({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .io_reset(1'b0));
  (* BYTE_UI_LOCAL = "8" *) 
  (* C_CLK_POST_VAL = "112" *) 
  (* C_CLK_PREPARE_VAL = "95" *) 
  (* C_CLK_PRE_VAL = "8" *) 
  (* C_CLK_TRAIL_VAL = "60" *) 
  (* C_CLK_ZERO_VAL = "205" *) 
  (* C_DPHY_LANES = "4" *) 
  (* C_DPHY_MODE = "MASTER" *) 
  (* C_EN_DEBUG_REGS = "0" *) 
  (* C_EN_HS_OBUFTDS = "FALSE" *) 
  (* C_EN_REGISTER = "1" *) 
  (* C_EN_TIMEOUT_REGS = "0" *) 
  (* C_ESC_CLK_PERIOD = "50.000000" *) 
  (* C_ESC_TIMEOUT = "25600" *) 
  (* C_HS_EXIT_VAL = "100" *) 
  (* C_HS_LINE_RATE = "1000" *) 
  (* C_HS_PREPARE_VAL = "91" *) 
  (* C_HS_TRAIL_VAL = "64" *) 
  (* C_HS_TX_TIMEOUT = "65541" *) 
  (* C_HS_ZERO_VAL = "111" *) 
  (* C_INIT = "1000000" *) 
  (* C_IS_7SERIES = "TRUE" *) 
  (* C_LPX_PERIOD = "50" *) 
  (* C_STABLE_CLK_PERIOD = "5.000000" *) 
  (* C_USE_LANE0_TXREADYHS = "TRUE" *) 
  (* C_WAKEUP = "1000000" *) 
  (* C_XMIT_ALT_DESKEW_SEQ = "false" *) 
  (* C_XMIT_FIRST_DESKEW_SEQ = "false" *) 
  (* C_XMIT_PERIODIC_DESKEW_SEQ = "false" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* IS_VERSAL = "0" *) 
  (* LINE_RATE_SPEC_SWITCH = "1500" *) 
  (* LP_STATE_CNT = "9" *) 
  (* MTBF_SYNC_STAGES = "3" *) 
  (* SKEW_CAL_FIRST_TIME = "4096" *) 
  (* SKEW_CAL_PERIODIC_TIME = "128" *) 
  (* SUPPORT_LEVEL = "1" *) 
  (* UI = "1000" *) 
  (* UI4 = "4" *) 
  (* UI52 = "52" *) 
  (* UI6 = "6" *) 
  (* UI8 = "8" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_fab_top \master_tx.dphy_tx_fab_top 
       (.active_lanes_in({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .cl_enable(cl_enable),
        .cl_stopstate(cl_stopstate),
        .cl_tst_clk_in(1'b0),
        .cl_txclkactivehs(cl_txclkactivehs),
        .cl_txrequesths(cl_txrequesths),
        .cl_txulpsclk(cl_txulpsclk),
        .cl_txulpsexit(cl_txulpsexit),
        .cl_ulpsactivenot(cl_ulpsactivenot),
        .config_div4_clk(1'b0),
        .core_clk(core_clk),
        .core_ref_clk(\NLW_master_tx.dphy_tx_fab_top_core_ref_clk_UNCONNECTED ),
        .core_rst(core_rst_coreclk_sync),
        .dl0_enable(dl0_enable),
        .dl0_forcetxstopmode(dl0_forcetxstopmode),
        .dl0_stopstate(dl0_stopstate),
        .dl0_txbyteclkhs(\NLW_master_tx.dphy_tx_fab_top_dl0_txbyteclkhs_UNCONNECTED ),
        .dl0_txclkesc(txclkesc_out),
        .dl0_txdataesc(dl0_txdataesc),
        .dl0_txdatahs(dl0_txdatahs),
        .dl0_txlpdtesc(dl0_txlpdtesc),
        .dl0_txreadyesc(dl0_txreadyesc),
        .dl0_txreadyhs(dl0_txreadyhs),
        .dl0_txrequestesc(dl0_txrequestesc),
        .dl0_txrequesths(dl0_txrequesths),
        .dl0_txskewcalhs(1'b0),
        .dl0_txtriggeresc(dl0_txtriggeresc),
        .dl0_txulpsesc(dl0_txulpsesc),
        .dl0_txulpsexit(dl0_txulpsexit),
        .dl0_txvalidesc(dl0_txvalidesc),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl1_enable(dl1_enable),
        .dl1_forcetxstopmode(dl1_forcetxstopmode),
        .dl1_stopstate(dl1_stopstate),
        .dl1_txbyteclkhs(\NLW_master_tx.dphy_tx_fab_top_dl1_txbyteclkhs_UNCONNECTED ),
        .dl1_txclkesc(1'b0),
        .dl1_txdataesc(dl1_txdataesc),
        .dl1_txdatahs(dl1_txdatahs),
        .dl1_txlpdtesc(dl1_txlpdtesc),
        .dl1_txreadyesc(dl1_txreadyesc),
        .dl1_txreadyhs(dl1_txreadyhs),
        .dl1_txrequestesc(dl1_txrequestesc),
        .dl1_txrequesths(dl1_txrequesths),
        .dl1_txskewcalhs(1'b0),
        .dl1_txtriggeresc(dl1_txtriggeresc),
        .dl1_txulpsesc(dl1_txulpsesc),
        .dl1_txulpsexit(dl1_txulpsexit),
        .dl1_txvalidesc(dl1_txvalidesc),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dl2_enable(dl2_enable),
        .dl2_forcetxstopmode(dl2_forcetxstopmode),
        .dl2_stopstate(dl2_stopstate),
        .dl2_txbyteclkhs(\NLW_master_tx.dphy_tx_fab_top_dl2_txbyteclkhs_UNCONNECTED ),
        .dl2_txclkesc(1'b0),
        .dl2_txdataesc(dl2_txdataesc),
        .dl2_txdatahs(dl2_txdatahs),
        .dl2_txlpdtesc(dl2_txlpdtesc),
        .dl2_txreadyesc(dl2_txreadyesc),
        .dl2_txreadyhs(dl2_txreadyhs),
        .dl2_txrequestesc(dl2_txrequestesc),
        .dl2_txrequesths(dl2_txrequesths),
        .dl2_txskewcalhs(1'b0),
        .dl2_txtriggeresc(dl2_txtriggeresc),
        .dl2_txulpsesc(dl2_txulpsesc),
        .dl2_txulpsexit(dl2_txulpsexit),
        .dl2_txvalidesc(dl2_txvalidesc),
        .dl2_ulpsactivenot(dl2_ulpsactivenot),
        .dl3_enable(dl3_enable),
        .dl3_forcetxstopmode(dl3_forcetxstopmode),
        .dl3_stopstate(dl3_stopstate),
        .dl3_txbyteclkhs(\NLW_master_tx.dphy_tx_fab_top_dl3_txbyteclkhs_UNCONNECTED ),
        .dl3_txclkesc(1'b0),
        .dl3_txdataesc(dl3_txdataesc),
        .dl3_txdatahs(dl3_txdatahs),
        .dl3_txlpdtesc(dl3_txlpdtesc),
        .dl3_txreadyesc(dl3_txreadyesc),
        .dl3_txreadyhs(dl3_txreadyhs),
        .dl3_txrequestesc(dl3_txrequestesc),
        .dl3_txrequesths(dl3_txrequesths),
        .dl3_txskewcalhs(1'b0),
        .dl3_txtriggeresc(dl3_txtriggeresc),
        .dl3_txulpsesc(dl3_txulpsesc),
        .dl3_txulpsexit(dl3_txulpsexit),
        .dl3_txvalidesc(dl3_txvalidesc),
        .dl3_ulpsactivenot(dl3_ulpsactivenot),
        .dl4_enable(1'b0),
        .dl4_forcetxstopmode(1'b0),
        .dl4_stopstate(\NLW_master_tx.dphy_tx_fab_top_dl4_stopstate_UNCONNECTED ),
        .dl4_txbyteclkhs(\NLW_master_tx.dphy_tx_fab_top_dl4_txbyteclkhs_UNCONNECTED ),
        .dl4_txclkesc(1'b0),
        .dl4_txdataesc({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dl4_txdatahs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dl4_txlpdtesc(1'b0),
        .dl4_txreadyesc(\NLW_master_tx.dphy_tx_fab_top_dl4_txreadyesc_UNCONNECTED ),
        .dl4_txreadyhs(\NLW_master_tx.dphy_tx_fab_top_dl4_txreadyhs_UNCONNECTED ),
        .dl4_txrequestesc(1'b0),
        .dl4_txrequesths(1'b0),
        .dl4_txskewcalhs(1'b0),
        .dl4_txtriggeresc({1'b0,1'b0,1'b0,1'b0}),
        .dl4_txulpsesc(1'b0),
        .dl4_txulpsexit(1'b0),
        .dl4_txvalidesc(1'b0),
        .dl4_ulpsactivenot(\NLW_master_tx.dphy_tx_fab_top_dl4_ulpsactivenot_UNCONNECTED ),
        .dl5_enable(1'b0),
        .dl5_forcetxstopmode(1'b0),
        .dl5_stopstate(\NLW_master_tx.dphy_tx_fab_top_dl5_stopstate_UNCONNECTED ),
        .dl5_txbyteclkhs(\NLW_master_tx.dphy_tx_fab_top_dl5_txbyteclkhs_UNCONNECTED ),
        .dl5_txclkesc(1'b0),
        .dl5_txdataesc({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dl5_txdatahs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dl5_txlpdtesc(1'b0),
        .dl5_txreadyesc(\NLW_master_tx.dphy_tx_fab_top_dl5_txreadyesc_UNCONNECTED ),
        .dl5_txreadyhs(\NLW_master_tx.dphy_tx_fab_top_dl5_txreadyhs_UNCONNECTED ),
        .dl5_txrequestesc(1'b0),
        .dl5_txrequesths(1'b0),
        .dl5_txskewcalhs(1'b0),
        .dl5_txtriggeresc({1'b0,1'b0,1'b0,1'b0}),
        .dl5_txulpsesc(1'b0),
        .dl5_txulpsexit(1'b0),
        .dl5_txvalidesc(1'b0),
        .dl5_ulpsactivenot(\NLW_master_tx.dphy_tx_fab_top_dl5_ulpsactivenot_UNCONNECTED ),
        .dl6_enable(1'b0),
        .dl6_forcetxstopmode(1'b0),
        .dl6_stopstate(\NLW_master_tx.dphy_tx_fab_top_dl6_stopstate_UNCONNECTED ),
        .dl6_txbyteclkhs(\NLW_master_tx.dphy_tx_fab_top_dl6_txbyteclkhs_UNCONNECTED ),
        .dl6_txclkesc(1'b0),
        .dl6_txdataesc({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dl6_txdatahs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dl6_txlpdtesc(1'b0),
        .dl6_txreadyesc(\NLW_master_tx.dphy_tx_fab_top_dl6_txreadyesc_UNCONNECTED ),
        .dl6_txreadyhs(\NLW_master_tx.dphy_tx_fab_top_dl6_txreadyhs_UNCONNECTED ),
        .dl6_txrequestesc(1'b0),
        .dl6_txrequesths(1'b0),
        .dl6_txskewcalhs(1'b0),
        .dl6_txtriggeresc({1'b0,1'b0,1'b0,1'b0}),
        .dl6_txulpsesc(1'b0),
        .dl6_txulpsexit(1'b0),
        .dl6_txvalidesc(1'b0),
        .dl6_ulpsactivenot(\NLW_master_tx.dphy_tx_fab_top_dl6_ulpsactivenot_UNCONNECTED ),
        .dl7_enable(1'b0),
        .dl7_forcetxstopmode(1'b0),
        .dl7_stopstate(\NLW_master_tx.dphy_tx_fab_top_dl7_stopstate_UNCONNECTED ),
        .dl7_txbyteclkhs(\NLW_master_tx.dphy_tx_fab_top_dl7_txbyteclkhs_UNCONNECTED ),
        .dl7_txclkesc(1'b0),
        .dl7_txdataesc({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dl7_txdatahs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dl7_txlpdtesc(1'b0),
        .dl7_txreadyesc(\NLW_master_tx.dphy_tx_fab_top_dl7_txreadyesc_UNCONNECTED ),
        .dl7_txreadyhs(\NLW_master_tx.dphy_tx_fab_top_dl7_txreadyhs_UNCONNECTED ),
        .dl7_txrequestesc(1'b0),
        .dl7_txrequesths(1'b0),
        .dl7_txskewcalhs(1'b0),
        .dl7_txtriggeresc({1'b0,1'b0,1'b0,1'b0}),
        .dl7_txulpsesc(1'b0),
        .dl7_txulpsexit(1'b0),
        .dl7_txvalidesc(1'b0),
        .dl7_ulpsactivenot(\NLW_master_tx.dphy_tx_fab_top_dl7_ulpsactivenot_UNCONNECTED ),
        .dl_tst_clk_in(1'b0),
        .dphy_en_out(dphy_en_w),
        .dphy_srst_out(dphy_srst_w),
        .init_done(init_done),
        .oserdes_clkdiv_in(oserdes_clkdiv_out),
        .phy_ready(1'b1),
        .phy_rst(\NLW_master_tx.dphy_tx_fab_top_phy_rst_UNCONNECTED ),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr({s_axi_araddr,1'b0,1'b0}),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr({s_axi_awaddr,1'b0,1'b0}),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(\NLW_master_tx.dphy_tx_fab_top_s_axi_bresp_UNCONNECTED [1:0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(\NLW_master_tx.dphy_tx_fab_top_s_axi_rresp_UNCONNECTED [1:0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wvalid(s_axi_wvalid),
        .system_rst_byteclk_in(system_rst_byteclk_w),
        .system_rst_escclk_in(system_rst_escclk_w),
        .system_rst_in(system_rst_w),
        .system_rst_phybyteclk_in(system_rst_phybyteclk_w),
        .tx_cl_en_hs_tst(\NLW_master_tx.dphy_tx_fab_top_tx_cl_en_hs_tst_UNCONNECTED ),
        .tx_cl_en_lp_tst(\NLW_master_tx.dphy_tx_fab_top_tx_cl_en_lp_tst_UNCONNECTED ),
        .tx_cl_lp_cn(clk_lp_txn),
        .tx_cl_lp_cp(clk_lp_txp),
        .tx_div4_clk(txbyteclkhs),
        .tx_dl0_en_hs_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl0_en_hs_tst_UNCONNECTED ),
        .tx_dl0_en_lp_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl0_en_lp_tst_UNCONNECTED ),
        .tx_dl0_hs_dp(data_in_to_device_w[7:0]),
        .tx_dl0_lp_dn(data_lp_txn[0]),
        .tx_dl0_lp_dp(data_lp_txp[0]),
        .tx_dl1_en_hs_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl1_en_hs_tst_UNCONNECTED ),
        .tx_dl1_en_lp_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl1_en_lp_tst_UNCONNECTED ),
        .tx_dl1_hs_dp(data_in_to_device_w[15:8]),
        .tx_dl1_lp_dn(data_lp_txn[1]),
        .tx_dl1_lp_dp(data_lp_txp[1]),
        .tx_dl2_en_hs_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl2_en_hs_tst_UNCONNECTED ),
        .tx_dl2_en_lp_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl2_en_lp_tst_UNCONNECTED ),
        .tx_dl2_hs_dp(data_in_to_device_w[23:16]),
        .tx_dl2_lp_dn(data_lp_txn[2]),
        .tx_dl2_lp_dp(data_lp_txp[2]),
        .tx_dl3_en_hs_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl3_en_hs_tst_UNCONNECTED ),
        .tx_dl3_en_lp_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl3_en_lp_tst_UNCONNECTED ),
        .tx_dl3_hs_dp(data_in_to_device_w[31:24]),
        .tx_dl3_lp_dn(data_lp_txn[3]),
        .tx_dl3_lp_dp(data_lp_txp[3]),
        .tx_dl4_en_hs_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl4_en_hs_tst_UNCONNECTED ),
        .tx_dl4_en_lp_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl4_en_lp_tst_UNCONNECTED ),
        .tx_dl4_hs_dp(\NLW_master_tx.dphy_tx_fab_top_tx_dl4_hs_dp_UNCONNECTED [7:0]),
        .tx_dl4_lp_dn(\NLW_master_tx.dphy_tx_fab_top_tx_dl4_lp_dn_UNCONNECTED ),
        .tx_dl4_lp_dp(\NLW_master_tx.dphy_tx_fab_top_tx_dl4_lp_dp_UNCONNECTED ),
        .tx_dl5_en_hs_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl5_en_hs_tst_UNCONNECTED ),
        .tx_dl5_en_lp_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl5_en_lp_tst_UNCONNECTED ),
        .tx_dl5_hs_dp(\NLW_master_tx.dphy_tx_fab_top_tx_dl5_hs_dp_UNCONNECTED [7:0]),
        .tx_dl5_lp_dn(\NLW_master_tx.dphy_tx_fab_top_tx_dl5_lp_dn_UNCONNECTED ),
        .tx_dl5_lp_dp(\NLW_master_tx.dphy_tx_fab_top_tx_dl5_lp_dp_UNCONNECTED ),
        .tx_dl6_en_hs_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl6_en_hs_tst_UNCONNECTED ),
        .tx_dl6_en_lp_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl6_en_lp_tst_UNCONNECTED ),
        .tx_dl6_hs_dp(\NLW_master_tx.dphy_tx_fab_top_tx_dl6_hs_dp_UNCONNECTED [7:0]),
        .tx_dl6_lp_dn(\NLW_master_tx.dphy_tx_fab_top_tx_dl6_lp_dn_UNCONNECTED ),
        .tx_dl6_lp_dp(\NLW_master_tx.dphy_tx_fab_top_tx_dl6_lp_dp_UNCONNECTED ),
        .tx_dl7_en_hs_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl7_en_hs_tst_UNCONNECTED ),
        .tx_dl7_en_lp_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl7_en_lp_tst_UNCONNECTED ),
        .tx_dl7_hs_dp(\NLW_master_tx.dphy_tx_fab_top_tx_dl7_hs_dp_UNCONNECTED [7:0]),
        .tx_dl7_lp_dn(\NLW_master_tx.dphy_tx_fab_top_tx_dl7_lp_dn_UNCONNECTED ),
        .tx_dl7_lp_dp(\NLW_master_tx.dphy_tx_fab_top_tx_dl7_lp_dp_UNCONNECTED ),
        .tx_hs_clk_p({\NLW_master_tx.dphy_tx_fab_top_tx_hs_clk_p_UNCONNECTED [7:2],tx_hs_clk_p_w,\NLW_master_tx.dphy_tx_fab_top_tx_hs_clk_p_UNCONNECTED [0]}));
  (* c_init_val = "1'b1" *) 
  (* c_mtbf_stages = "5'b00010" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_rst_sync \master_tx.u_core_rst_coreclk_sync_tx_i 
       (.prmry_in(core_rst),
        .scndry_aclk(core_clk),
        .scndry_out(core_rst_coreclk_sync));
  (* ASSERT_ALL_RESETS = "3'b001" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* MMCM_USED = "TRUE" *) 
  (* MTBF_SYNC_STAGES = "3" *) 
  (* RELEASE_MMCM_RESET = "3'b010" *) 
  (* RELEASE_TXPLL_RESET = "3'b011" *) 
  (* RESET_FSM_DONE = "3'b101" *) 
  (* RST_BEGIN = "3'b000" *) 
  (* STABLE_CLK_PERIOD = "5.000000" *) 
  (* TIME_OUT = "40000" *) 
  (* TXPLL_USED = "TRUE" *) 
  (* WAIT_FOR_ENABLE = "3'b100" *) 
  (* WATCHDOG_TIMEOUT = "200000" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_rst_logic \master_tx.u_tx_rst_logic 
       (.core_clk(core_clk),
        .core_rst(core_rst_coreclk_sync),
        .dphyen(dphy_en_w),
        .mmcm_lock(mmcm_lock_out),
        .mmcm_rst(mmcm_reset_w),
        .phy_rdy(1'b1),
        .phy_rst(\NLW_master_tx.u_tx_rst_logic_phy_rst_UNCONNECTED ),
        .srst(dphy_srst_w),
        .system_rst(system_rst_w),
        .system_rst_byteclk(system_rst_byteclk_w),
        .system_rst_div4clk(system_rst_phybyteclk_w),
        .system_rst_escclk(system_rst_escclk_w),
        .txpll_lock(1'b1),
        .txpll_rst(system_rst_out));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_clk_lane_7series
   (out,
    s_level_out_d3_reg,
    s_level_out_d3_reg_0,
    cl_txclkactivehs,
    init_done,
    cl_status_reg_w,
    cl_init_done_coreclk_i,
    cl_stopstate,
    cl_txclkactivehs_i,
    cl_ulpsactivenot,
    tx_hs_clk_p,
    tx_cl_lp_cp,
    tx_cl_lp_cn,
    O,
    TRAIL_TIMEOUT1_0,
    TRAIL_TIMEOUT1_1,
    PREPARE_TIMEOUT1_0,
    PREPARE_TIMEOUT1_1,
    core_rst,
    cl_enable,
    core_clk,
    cl_txrequesths,
    cl_txulpsclk,
    cl_txulpsexit,
    oserdes_clkdiv_in,
    cl_txrequesths_r2_reg_0,
    tx_cl_lp_cn_r_reg_0,
    tx_div4_clk,
    start_clkzero_r_reg_0,
    cl_stopstate_reg_0,
    start_clkpost_r_reg_0,
    cl_txclkactivehs_reg_i_3,
    \trail_count[9]_i_11_0 ,
    time_out_prepare_i_10_0,
    \cl_tx_state[3]_i_2 ,
    \trail_count_reg[9]_i_100_0 ,
    \trail_count_reg[9]_i_66_0 ,
    \trail_count_reg[9]_i_36_0 ,
    time_out_prepare_reg_i_50_0,
    time_out_prepare_reg_i_22_0,
    time_out_prepare_reg_i_15_0,
    dl_hs_exit_done_i,
    \cl_tx_state_reg[0]_0 ,
    D,
    clear);
  output out;
  output s_level_out_d3_reg;
  output s_level_out_d3_reg_0;
  output cl_txclkactivehs;
  output init_done;
  output [4:0]cl_status_reg_w;
  output cl_init_done_coreclk_i;
  output cl_stopstate;
  output cl_txclkactivehs_i;
  output cl_ulpsactivenot;
  output [0:0]tx_hs_clk_p;
  output tx_cl_lp_cp;
  output tx_cl_lp_cn;
  output [3:0]O;
  output [2:0]TRAIL_TIMEOUT1_0;
  output [0:0]TRAIL_TIMEOUT1_1;
  output [2:0]PREPARE_TIMEOUT1_0;
  output [1:0]PREPARE_TIMEOUT1_1;
  input core_rst;
  input cl_enable;
  input core_clk;
  input cl_txrequesths;
  input cl_txulpsclk;
  input cl_txulpsexit;
  input oserdes_clkdiv_in;
  input cl_txrequesths_r2_reg_0;
  input tx_cl_lp_cn_r_reg_0;
  input tx_div4_clk;
  input start_clkzero_r_reg_0;
  input [0:0]cl_stopstate_reg_0;
  input start_clkpost_r_reg_0;
  input cl_txclkactivehs_reg_i_3;
  input [3:0]\trail_count[9]_i_11_0 ;
  input [0:0]time_out_prepare_i_10_0;
  input \cl_tx_state[3]_i_2 ;
  input [0:0]\trail_count_reg[9]_i_100_0 ;
  input [3:0]\trail_count_reg[9]_i_66_0 ;
  input [3:0]\trail_count_reg[9]_i_36_0 ;
  input [0:0]time_out_prepare_reg_i_50_0;
  input [3:0]time_out_prepare_reg_i_22_0;
  input [3:0]time_out_prepare_reg_i_15_0;
  input [3:0]dl_hs_exit_done_i;
  input \cl_tx_state_reg[0]_0 ;
  input [11:0]D;
  input clear;

  wire \CLK_GEN_BLK4.tx_cl_hs_cp[1]_i_1_n_0 ;
  wire [11:0]D;
  wire [3:0]O;
  wire [4:3]PREPARE_TIMEOUT0;
  wire [2:0]PREPARE_TIMEOUT1_0;
  wire [1:0]PREPARE_TIMEOUT1_1;
  wire PREPARE_TIMEOUT1_n_100;
  wire PREPARE_TIMEOUT1_n_101;
  wire PREPARE_TIMEOUT1_n_102;
  wire PREPARE_TIMEOUT1_n_103;
  wire PREPARE_TIMEOUT1_n_104;
  wire PREPARE_TIMEOUT1_n_105;
  wire PREPARE_TIMEOUT1_n_89;
  wire PREPARE_TIMEOUT1_n_90;
  wire PREPARE_TIMEOUT1_n_91;
  wire PREPARE_TIMEOUT1_n_92;
  wire PREPARE_TIMEOUT1_n_93;
  wire PREPARE_TIMEOUT1_n_94;
  wire PREPARE_TIMEOUT1_n_95;
  wire PREPARE_TIMEOUT1_n_96;
  wire PREPARE_TIMEOUT1_n_97;
  wire PREPARE_TIMEOUT1_n_98;
  wire PREPARE_TIMEOUT1_n_99;
  wire [7:4]TRAIL_TIMEOUT0;
  wire [2:0]TRAIL_TIMEOUT1_0;
  wire [0:0]TRAIL_TIMEOUT1_1;
  wire TRAIL_TIMEOUT1_n_100;
  wire TRAIL_TIMEOUT1_n_101;
  wire TRAIL_TIMEOUT1_n_102;
  wire TRAIL_TIMEOUT1_n_103;
  wire TRAIL_TIMEOUT1_n_104;
  wire TRAIL_TIMEOUT1_n_105;
  wire TRAIL_TIMEOUT1_n_86;
  wire TRAIL_TIMEOUT1_n_87;
  wire TRAIL_TIMEOUT1_n_88;
  wire TRAIL_TIMEOUT1_n_89;
  wire TRAIL_TIMEOUT1_n_90;
  wire TRAIL_TIMEOUT1_n_91;
  wire TRAIL_TIMEOUT1_n_92;
  wire TRAIL_TIMEOUT1_n_93;
  wire TRAIL_TIMEOUT1_n_94;
  wire TRAIL_TIMEOUT1_n_95;
  wire TRAIL_TIMEOUT1_n_96;
  wire TRAIL_TIMEOUT1_n_97;
  wire TRAIL_TIMEOUT1_n_98;
  wire TRAIL_TIMEOUT1_n_99;
  wire cl_enable;
  wire cl_enable_sync_i_n_1;
  wire cl_enable_sync_i_n_2;
  wire cl_init_done_coreclk_i;
  wire cl_init_done_coreclk_r1;
  wire cl_status_reg_bit_00;
  (* DONT_TOUCH *) wire cl_status_reg_bit_1;
  wire cl_status_reg_bit_1_i_1_n_0;
  (* DONT_TOUCH *) wire cl_status_reg_bit_2;
  wire [4:0]\^cl_status_reg_w ;
  wire cl_stopstate;
  wire cl_stopstate_i_4_n_0;
  wire cl_stopstate_i_8_n_0;
  wire [0:0]cl_stopstate_reg_0;
  wire cl_tx_state;
  wire cl_tx_state117_out;
  wire cl_tx_state119_out;
  wire \cl_tx_state[3]_i_2 ;
  wire \cl_tx_state_reg[0]_0 ;
  wire \cl_tx_state_reg_n_0_[0] ;
  wire \cl_tx_state_reg_n_0_[1] ;
  wire \cl_tx_state_reg_n_0_[2] ;
  wire \cl_tx_state_reg_n_0_[3] ;
  wire cl_txclkactivehs;
  wire cl_txclkactivehs_i;
  wire cl_txclkactivehs_reg_i_3;
  wire cl_txrequesths;
  wire cl_txrequesths_coreclk_sync_i_n_1;
  wire cl_txrequesths_coreclk_sync_i_n_10;
  wire cl_txrequesths_coreclk_sync_i_n_11;
  wire cl_txrequesths_coreclk_sync_i_n_12;
  wire cl_txrequesths_coreclk_sync_i_n_13;
  wire cl_txrequesths_coreclk_sync_i_n_14;
  wire cl_txrequesths_coreclk_sync_i_n_15;
  wire cl_txrequesths_coreclk_sync_i_n_16;
  wire cl_txrequesths_coreclk_sync_i_n_17;
  wire cl_txrequesths_coreclk_sync_i_n_2;
  wire cl_txrequesths_coreclk_sync_i_n_3;
  wire cl_txrequesths_coreclk_sync_i_n_5;
  wire cl_txrequesths_coreclk_sync_i_n_6;
  wire cl_txrequesths_coreclk_sync_i_n_8;
  wire cl_txrequesths_coreclk_sync_i_n_9;
  wire cl_txrequesths_negedge_r;
  wire cl_txrequesths_negedge_sync;
  wire cl_txrequesths_negedge_sync_i_n_1;
  wire cl_txrequesths_negedge_sync_i_n_2;
  wire cl_txrequesths_negedge_sync_i_n_3;
  wire cl_txrequesths_negedge_sync_i_n_4;
  wire cl_txrequesths_negedge_sync_i_n_5;
  wire cl_txrequesths_negedge_sync_i_n_7;
  wire cl_txrequesths_negedge_sync_i_n_8;
  wire cl_txrequesths_negedge_sync_i_n_9;
  wire cl_txrequesths_r;
  wire cl_txrequesths_r2;
  wire cl_txrequesths_r2_reg_0;
  wire cl_txulpsclk;
  wire cl_txulpsclk_sync;
  wire cl_txulpsclk_sync_i_n_1;
  wire cl_txulpsclk_sync_i_n_2;
  wire cl_txulpsclk_sync_i_n_3;
  wire cl_txulpsclk_sync_i_n_4;
  wire cl_txulpsclk_sync_i_n_5;
  wire cl_txulpsclk_sync_i_n_6;
  wire cl_txulpsclk_sync_i_n_7;
  wire cl_txulpsexit;
  wire cl_txulpsexit_sync;
  wire cl_txulpsexit_sync_i_n_3;
  wire cl_txulpsexit_sync_i_n_4;
  wire cl_txulpsexit_sync_i_n_5;
  wire cl_txulpsexit_sync_i_n_6;
  wire cl_txulpsexit_sync_i_n_7;
  wire cl_ulpsactivenot;
  wire cl_ulpsactivenot_i_3_n_0;
  wire clear;
  wire clear_0;
  wire \clk_pre_cnt[0]_i_11_n_0 ;
  wire \clk_pre_cnt[0]_i_12_n_0 ;
  wire \clk_pre_cnt[0]_i_13_n_0 ;
  wire \clk_pre_cnt[0]_i_14_n_0 ;
  wire \clk_pre_cnt[0]_i_15_n_0 ;
  wire \clk_pre_cnt[0]_i_16_n_0 ;
  wire \clk_pre_cnt[0]_i_17_n_0 ;
  wire \clk_pre_cnt[0]_i_18_n_0 ;
  wire \clk_pre_cnt[0]_i_1_n_0 ;
  wire \clk_pre_cnt[0]_i_2_n_0 ;
  wire \clk_pre_cnt[0]_i_5_n_0 ;
  wire \clk_pre_cnt[0]_i_7_n_0 ;
  wire \clk_pre_cnt[0]_i_8_n_0 ;
  wire \clk_pre_cnt[0]_i_9_n_0 ;
  wire [31:0]clk_pre_cnt_reg;
  wire \clk_pre_cnt_reg[0]_i_10_n_0 ;
  wire \clk_pre_cnt_reg[0]_i_10_n_1 ;
  wire \clk_pre_cnt_reg[0]_i_10_n_2 ;
  wire \clk_pre_cnt_reg[0]_i_10_n_3 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_0 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_1 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_2 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_3 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_4 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_5 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_6 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_7 ;
  wire \clk_pre_cnt_reg[0]_i_4_n_2 ;
  wire \clk_pre_cnt_reg[0]_i_4_n_3 ;
  wire \clk_pre_cnt_reg[0]_i_6_n_0 ;
  wire \clk_pre_cnt_reg[0]_i_6_n_1 ;
  wire \clk_pre_cnt_reg[0]_i_6_n_2 ;
  wire \clk_pre_cnt_reg[0]_i_6_n_3 ;
  wire \clk_pre_cnt_reg[12]_i_1_n_0 ;
  wire \clk_pre_cnt_reg[12]_i_1_n_1 ;
  wire \clk_pre_cnt_reg[12]_i_1_n_2 ;
  wire \clk_pre_cnt_reg[12]_i_1_n_3 ;
  wire \clk_pre_cnt_reg[12]_i_1_n_4 ;
  wire \clk_pre_cnt_reg[12]_i_1_n_5 ;
  wire \clk_pre_cnt_reg[12]_i_1_n_6 ;
  wire \clk_pre_cnt_reg[12]_i_1_n_7 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_0 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_1 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_2 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_3 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_4 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_5 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_6 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_7 ;
  wire \clk_pre_cnt_reg[20]_i_1_n_0 ;
  wire \clk_pre_cnt_reg[20]_i_1_n_1 ;
  wire \clk_pre_cnt_reg[20]_i_1_n_2 ;
  wire \clk_pre_cnt_reg[20]_i_1_n_3 ;
  wire \clk_pre_cnt_reg[20]_i_1_n_4 ;
  wire \clk_pre_cnt_reg[20]_i_1_n_5 ;
  wire \clk_pre_cnt_reg[20]_i_1_n_6 ;
  wire \clk_pre_cnt_reg[20]_i_1_n_7 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_0 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_1 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_2 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_3 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_4 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_5 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_6 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_7 ;
  wire \clk_pre_cnt_reg[28]_i_1_n_1 ;
  wire \clk_pre_cnt_reg[28]_i_1_n_2 ;
  wire \clk_pre_cnt_reg[28]_i_1_n_3 ;
  wire \clk_pre_cnt_reg[28]_i_1_n_4 ;
  wire \clk_pre_cnt_reg[28]_i_1_n_5 ;
  wire \clk_pre_cnt_reg[28]_i_1_n_6 ;
  wire \clk_pre_cnt_reg[28]_i_1_n_7 ;
  wire \clk_pre_cnt_reg[4]_i_1_n_0 ;
  wire \clk_pre_cnt_reg[4]_i_1_n_1 ;
  wire \clk_pre_cnt_reg[4]_i_1_n_2 ;
  wire \clk_pre_cnt_reg[4]_i_1_n_3 ;
  wire \clk_pre_cnt_reg[4]_i_1_n_4 ;
  wire \clk_pre_cnt_reg[4]_i_1_n_5 ;
  wire \clk_pre_cnt_reg[4]_i_1_n_6 ;
  wire \clk_pre_cnt_reg[4]_i_1_n_7 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_0 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_1 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_2 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_3 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_4 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_5 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_6 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_7 ;
  wire core_clk;
  wire core_rst;
  wire [3:0]dl_hs_exit_done_i;
  wire \en_cl_init_to_blk.init_done_i_10_n_0 ;
  wire \en_cl_init_to_blk.init_done_i_11_n_0 ;
  wire \en_cl_init_to_blk.init_done_i_12_n_0 ;
  wire \en_cl_init_to_blk.init_done_i_13_n_0 ;
  wire \en_cl_init_to_blk.init_done_i_1_n_0 ;
  wire \en_cl_init_to_blk.init_done_i_4_n_0 ;
  wire \en_cl_init_to_blk.init_done_i_5_n_0 ;
  wire \en_cl_init_to_blk.init_done_i_6_n_0 ;
  wire \en_cl_init_to_blk.init_done_i_7_n_0 ;
  wire \en_cl_init_to_blk.init_done_i_8_n_0 ;
  wire \en_cl_init_to_blk.init_done_i_9_n_0 ;
  wire \en_cl_init_to_blk.init_done_reg_i_3_n_0 ;
  wire \en_cl_init_to_blk.init_done_reg_i_3_n_1 ;
  wire \en_cl_init_to_blk.init_done_reg_i_3_n_2 ;
  wire \en_cl_init_to_blk.init_done_reg_i_3_n_3 ;
  wire \en_cl_init_to_blk.init_to_cnt_level1[2]_i_1_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level1[6]_i_2_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level1[7]_i_1_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level1[7]_i_3_n_0 ;
  wire [7:0]\en_cl_init_to_blk.init_to_cnt_level1_reg ;
  wire \en_cl_init_to_blk.init_to_cnt_level1_tc ;
  wire \en_cl_init_to_blk.init_to_cnt_level1_tc_i_1_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level1_tc_i_2_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level20 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2[0]_i_1_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2[0]_i_4_n_0 ;
  wire [13:0]\en_cl_init_to_blk.init_to_cnt_level2_reg ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_1 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_2 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_3 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_4 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_5 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_6 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_7 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_3 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_6 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_7 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_1 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_2 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_3 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_4 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_5 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_6 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_7 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_1 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_2 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_3 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_4 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_5 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_6 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_7 ;
  wire en_lp_01_cnt_i_2_n_0;
  wire en_lp_01_cnt_reg_n_0;
  wire en_lp_10_cnt_reg_n_0;
  wire en_lp_11_cnt_i_2_n_0;
  wire en_lp_11_cnt_reg_n_0;
  wire [19:8]\en_regs.init_reg_nxt ;
  wire [11:0]\en_regs.init_to_r ;
  wire [9:0]\en_regs.init_to_r_2 ;
  wire \en_regs.init_to_r_2[0]_i_1_n_0 ;
  wire \en_regs.init_to_r_2[0]_i_2_n_0 ;
  wire \en_regs.init_to_r_2[0]_i_3_n_0 ;
  wire \en_regs.init_to_r_2[1]_i_1_n_0 ;
  wire \en_regs.init_to_r_2[1]_i_2_n_0 ;
  wire \en_regs.init_to_r_2[2]_i_1_n_0 ;
  wire \en_regs.init_to_r_2[2]_i_2_n_0 ;
  wire \en_regs.init_to_r_2[2]_i_3_n_0 ;
  wire \en_regs.init_to_r_2[2]_i_4_n_0 ;
  wire \en_regs.init_to_r_2[3]_i_1_n_0 ;
  wire \en_regs.init_to_r_2[3]_i_2_n_0 ;
  wire \en_regs.init_to_r_2[4]_i_1_n_0 ;
  wire \en_regs.init_to_r_2[4]_i_2_n_0 ;
  wire \en_regs.init_to_r_2[5]_i_1_n_0 ;
  wire \en_regs.init_to_r_2[5]_i_2_n_0 ;
  wire \en_regs.init_to_r_2[5]_i_3_n_0 ;
  wire \en_regs.init_to_r_2[6]_i_1_n_0 ;
  wire \en_regs.init_to_r_2[7]_i_1_n_0 ;
  wire \en_regs.init_to_r_2[8]_i_1_n_0 ;
  wire \en_regs.init_to_r_2[9]_i_1_n_0 ;
  wire hs_clk_state_byteclk_sync_i_n_0;
  wire hs_clk_state_r;
  wire hs_clk_state_r_reg_n_0;
  wire [13:0]init_count;
  wire init_done;
  wire init_done_byteclk_pos_r;
  wire init_done_byteclk_pos_r0;
  wire init_done_byteclk_r;
  wire init_done_byteclk_sync;
  wire lp_01_r;
  wire lp_01_r_reg_n_0;
  wire lp_10_r;
  wire lp_10_r_reg_n_0;
  wire lp_11_r;
  wire lp_11_r_reg_n_0;
  wire [6:0]lp_st01_cnt;
  wire \lp_st01_cnt[1]_i_2_n_0 ;
  wire \lp_st01_cnt[3]_i_2_n_0 ;
  wire \lp_st01_cnt[5]_i_2_n_0 ;
  wire \lp_st01_cnt[6]_i_2_n_0 ;
  wire \lp_st01_cnt_reg_n_0_[0] ;
  wire \lp_st01_cnt_reg_n_0_[1] ;
  wire \lp_st01_cnt_reg_n_0_[2] ;
  wire \lp_st01_cnt_reg_n_0_[3] ;
  wire \lp_st01_cnt_reg_n_0_[4] ;
  wire \lp_st01_cnt_reg_n_0_[5] ;
  wire \lp_st01_cnt_reg_n_0_[6] ;
  wire [6:0]lp_st10_cnt;
  wire \lp_st10_cnt[1]_i_2_n_0 ;
  wire \lp_st10_cnt[3]_i_2_n_0 ;
  wire \lp_st10_cnt[5]_i_2_n_0 ;
  wire \lp_st10_cnt[6]_i_2_n_0 ;
  wire \lp_st10_cnt_reg_n_0_[0] ;
  wire \lp_st10_cnt_reg_n_0_[1] ;
  wire \lp_st10_cnt_reg_n_0_[2] ;
  wire \lp_st10_cnt_reg_n_0_[3] ;
  wire \lp_st10_cnt_reg_n_0_[4] ;
  wire \lp_st10_cnt_reg_n_0_[5] ;
  wire \lp_st10_cnt_reg_n_0_[6] ;
  wire [6:0]lp_st11_cnt;
  wire \lp_st11_cnt[1]_i_2_n_0 ;
  wire \lp_st11_cnt[3]_i_2_n_0 ;
  wire \lp_st11_cnt[5]_i_2_n_0 ;
  wire \lp_st11_cnt[6]_i_2_n_0 ;
  wire \lp_st11_cnt_reg_n_0_[0] ;
  wire \lp_st11_cnt_reg_n_0_[1] ;
  wire \lp_st11_cnt_reg_n_0_[2] ;
  wire \lp_st11_cnt_reg_n_0_[3] ;
  wire \lp_st11_cnt_reg_n_0_[4] ;
  wire \lp_st11_cnt_reg_n_0_[5] ;
  wire \lp_st11_cnt_reg_n_0_[6] ;
  wire oserdes_clkdiv_in;
  wire out;
  wire [7:0]p_0_in;
  wire [9:1]p_0_in__0;
  wire \post_count[0]_i_11_n_0 ;
  wire \post_count[0]_i_12_n_0 ;
  wire \post_count[0]_i_13_n_0 ;
  wire \post_count[0]_i_14_n_0 ;
  wire \post_count[0]_i_15_n_0 ;
  wire \post_count[0]_i_16_n_0 ;
  wire \post_count[0]_i_17_n_0 ;
  wire \post_count[0]_i_18_n_0 ;
  wire \post_count[0]_i_2_n_0 ;
  wire \post_count[0]_i_5_n_0 ;
  wire \post_count[0]_i_7_n_0 ;
  wire \post_count[0]_i_8_n_0 ;
  wire \post_count[0]_i_9_n_0 ;
  wire [31:0]post_count_reg;
  wire \post_count_reg[0]_i_10_n_0 ;
  wire \post_count_reg[0]_i_10_n_1 ;
  wire \post_count_reg[0]_i_10_n_2 ;
  wire \post_count_reg[0]_i_10_n_3 ;
  wire \post_count_reg[0]_i_3_n_0 ;
  wire \post_count_reg[0]_i_3_n_1 ;
  wire \post_count_reg[0]_i_3_n_2 ;
  wire \post_count_reg[0]_i_3_n_3 ;
  wire \post_count_reg[0]_i_3_n_4 ;
  wire \post_count_reg[0]_i_3_n_5 ;
  wire \post_count_reg[0]_i_3_n_6 ;
  wire \post_count_reg[0]_i_3_n_7 ;
  wire \post_count_reg[0]_i_4_n_2 ;
  wire \post_count_reg[0]_i_4_n_3 ;
  wire \post_count_reg[0]_i_6_n_0 ;
  wire \post_count_reg[0]_i_6_n_1 ;
  wire \post_count_reg[0]_i_6_n_2 ;
  wire \post_count_reg[0]_i_6_n_3 ;
  wire \post_count_reg[12]_i_1_n_0 ;
  wire \post_count_reg[12]_i_1_n_1 ;
  wire \post_count_reg[12]_i_1_n_2 ;
  wire \post_count_reg[12]_i_1_n_3 ;
  wire \post_count_reg[12]_i_1_n_4 ;
  wire \post_count_reg[12]_i_1_n_5 ;
  wire \post_count_reg[12]_i_1_n_6 ;
  wire \post_count_reg[12]_i_1_n_7 ;
  wire \post_count_reg[16]_i_1_n_0 ;
  wire \post_count_reg[16]_i_1_n_1 ;
  wire \post_count_reg[16]_i_1_n_2 ;
  wire \post_count_reg[16]_i_1_n_3 ;
  wire \post_count_reg[16]_i_1_n_4 ;
  wire \post_count_reg[16]_i_1_n_5 ;
  wire \post_count_reg[16]_i_1_n_6 ;
  wire \post_count_reg[16]_i_1_n_7 ;
  wire \post_count_reg[20]_i_1_n_0 ;
  wire \post_count_reg[20]_i_1_n_1 ;
  wire \post_count_reg[20]_i_1_n_2 ;
  wire \post_count_reg[20]_i_1_n_3 ;
  wire \post_count_reg[20]_i_1_n_4 ;
  wire \post_count_reg[20]_i_1_n_5 ;
  wire \post_count_reg[20]_i_1_n_6 ;
  wire \post_count_reg[20]_i_1_n_7 ;
  wire \post_count_reg[24]_i_1_n_0 ;
  wire \post_count_reg[24]_i_1_n_1 ;
  wire \post_count_reg[24]_i_1_n_2 ;
  wire \post_count_reg[24]_i_1_n_3 ;
  wire \post_count_reg[24]_i_1_n_4 ;
  wire \post_count_reg[24]_i_1_n_5 ;
  wire \post_count_reg[24]_i_1_n_6 ;
  wire \post_count_reg[24]_i_1_n_7 ;
  wire \post_count_reg[28]_i_1_n_1 ;
  wire \post_count_reg[28]_i_1_n_2 ;
  wire \post_count_reg[28]_i_1_n_3 ;
  wire \post_count_reg[28]_i_1_n_4 ;
  wire \post_count_reg[28]_i_1_n_5 ;
  wire \post_count_reg[28]_i_1_n_6 ;
  wire \post_count_reg[28]_i_1_n_7 ;
  wire \post_count_reg[4]_i_1_n_0 ;
  wire \post_count_reg[4]_i_1_n_1 ;
  wire \post_count_reg[4]_i_1_n_2 ;
  wire \post_count_reg[4]_i_1_n_3 ;
  wire \post_count_reg[4]_i_1_n_4 ;
  wire \post_count_reg[4]_i_1_n_5 ;
  wire \post_count_reg[4]_i_1_n_6 ;
  wire \post_count_reg[4]_i_1_n_7 ;
  wire \post_count_reg[8]_i_1_n_0 ;
  wire \post_count_reg[8]_i_1_n_1 ;
  wire \post_count_reg[8]_i_1_n_2 ;
  wire \post_count_reg[8]_i_1_n_3 ;
  wire \post_count_reg[8]_i_1_n_4 ;
  wire \post_count_reg[8]_i_1_n_5 ;
  wire \post_count_reg[8]_i_1_n_6 ;
  wire \post_count_reg[8]_i_1_n_7 ;
  wire prepare_zero_cnt;
  wire \prepare_zero_cnt[0]_i_4_n_0 ;
  wire [31:0]prepare_zero_cnt_reg;
  wire \prepare_zero_cnt_reg[0]_i_3_n_0 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_1 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_2 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_3 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_4 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_5 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_6 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_7 ;
  wire \prepare_zero_cnt_reg[12]_i_1_n_0 ;
  wire \prepare_zero_cnt_reg[12]_i_1_n_1 ;
  wire \prepare_zero_cnt_reg[12]_i_1_n_2 ;
  wire \prepare_zero_cnt_reg[12]_i_1_n_3 ;
  wire \prepare_zero_cnt_reg[12]_i_1_n_4 ;
  wire \prepare_zero_cnt_reg[12]_i_1_n_5 ;
  wire \prepare_zero_cnt_reg[12]_i_1_n_6 ;
  wire \prepare_zero_cnt_reg[12]_i_1_n_7 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_0 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_1 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_2 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_3 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_4 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_5 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_6 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_7 ;
  wire \prepare_zero_cnt_reg[20]_i_1_n_0 ;
  wire \prepare_zero_cnt_reg[20]_i_1_n_1 ;
  wire \prepare_zero_cnt_reg[20]_i_1_n_2 ;
  wire \prepare_zero_cnt_reg[20]_i_1_n_3 ;
  wire \prepare_zero_cnt_reg[20]_i_1_n_4 ;
  wire \prepare_zero_cnt_reg[20]_i_1_n_5 ;
  wire \prepare_zero_cnt_reg[20]_i_1_n_6 ;
  wire \prepare_zero_cnt_reg[20]_i_1_n_7 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_0 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_1 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_2 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_3 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_4 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_5 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_6 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_7 ;
  wire \prepare_zero_cnt_reg[28]_i_1_n_1 ;
  wire \prepare_zero_cnt_reg[28]_i_1_n_2 ;
  wire \prepare_zero_cnt_reg[28]_i_1_n_3 ;
  wire \prepare_zero_cnt_reg[28]_i_1_n_4 ;
  wire \prepare_zero_cnt_reg[28]_i_1_n_5 ;
  wire \prepare_zero_cnt_reg[28]_i_1_n_6 ;
  wire \prepare_zero_cnt_reg[28]_i_1_n_7 ;
  wire \prepare_zero_cnt_reg[4]_i_1_n_0 ;
  wire \prepare_zero_cnt_reg[4]_i_1_n_1 ;
  wire \prepare_zero_cnt_reg[4]_i_1_n_2 ;
  wire \prepare_zero_cnt_reg[4]_i_1_n_3 ;
  wire \prepare_zero_cnt_reg[4]_i_1_n_4 ;
  wire \prepare_zero_cnt_reg[4]_i_1_n_5 ;
  wire \prepare_zero_cnt_reg[4]_i_1_n_6 ;
  wire \prepare_zero_cnt_reg[4]_i_1_n_7 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_0 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_1 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_2 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_3 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_4 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_5 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_6 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_7 ;
  wire reset_timer_r;
  wire reset_timer_r_reg_n_0;
  wire s_level_out_d3_reg;
  wire s_level_out_d3_reg_0;
  wire sel;
  wire start_clkpost_byteclk_sync_i_n_1;
  wire start_clkpost_r_reg_0;
  wire start_clkpost_r_reg_n_0;
  wire start_clkzero_byteclk_sync;
  wire start_clkzero_byteclk_sync_i_n_1;
  wire start_clkzero_byteclk_sync_r;
  wire start_clkzero_r_i_1_n_0;
  wire start_clkzero_r_reg_0;
  wire start_clkzero_r_reg_n_0;
  wire time_out_counter2;
  wire \time_out_counter[0]_i_10_n_0 ;
  wire \time_out_counter[0]_i_11_n_0 ;
  wire \time_out_counter[0]_i_12_n_0 ;
  wire \time_out_counter[0]_i_13_n_0 ;
  wire \time_out_counter[0]_i_14_n_0 ;
  wire \time_out_counter[0]_i_1_n_0 ;
  wire \time_out_counter[0]_i_4_n_0 ;
  wire \time_out_counter[0]_i_5_n_0 ;
  wire \time_out_counter[0]_i_6_n_0 ;
  wire \time_out_counter[0]_i_7_n_0 ;
  wire \time_out_counter[0]_i_8_n_0 ;
  wire \time_out_counter[12]_i_2_n_0 ;
  wire \time_out_counter[12]_i_3_n_0 ;
  wire \time_out_counter[4]_i_2_n_0 ;
  wire \time_out_counter[4]_i_3_n_0 ;
  wire \time_out_counter[4]_i_4_n_0 ;
  wire \time_out_counter[4]_i_5_n_0 ;
  wire \time_out_counter[8]_i_2_n_0 ;
  wire \time_out_counter[8]_i_3_n_0 ;
  wire \time_out_counter[8]_i_4_n_0 ;
  wire \time_out_counter[8]_i_5_n_0 ;
  wire [13:0]time_out_counter_reg;
  wire \time_out_counter_reg[0]_i_2_n_0 ;
  wire \time_out_counter_reg[0]_i_2_n_1 ;
  wire \time_out_counter_reg[0]_i_2_n_2 ;
  wire \time_out_counter_reg[0]_i_2_n_3 ;
  wire \time_out_counter_reg[0]_i_2_n_4 ;
  wire \time_out_counter_reg[0]_i_2_n_5 ;
  wire \time_out_counter_reg[0]_i_2_n_6 ;
  wire \time_out_counter_reg[0]_i_2_n_7 ;
  wire \time_out_counter_reg[0]_i_9_n_0 ;
  wire \time_out_counter_reg[0]_i_9_n_1 ;
  wire \time_out_counter_reg[0]_i_9_n_2 ;
  wire \time_out_counter_reg[0]_i_9_n_3 ;
  wire \time_out_counter_reg[12]_i_1_n_3 ;
  wire \time_out_counter_reg[12]_i_1_n_6 ;
  wire \time_out_counter_reg[12]_i_1_n_7 ;
  wire \time_out_counter_reg[4]_i_1_n_0 ;
  wire \time_out_counter_reg[4]_i_1_n_1 ;
  wire \time_out_counter_reg[4]_i_1_n_2 ;
  wire \time_out_counter_reg[4]_i_1_n_3 ;
  wire \time_out_counter_reg[4]_i_1_n_4 ;
  wire \time_out_counter_reg[4]_i_1_n_5 ;
  wire \time_out_counter_reg[4]_i_1_n_6 ;
  wire \time_out_counter_reg[4]_i_1_n_7 ;
  wire \time_out_counter_reg[8]_i_1_n_0 ;
  wire \time_out_counter_reg[8]_i_1_n_1 ;
  wire \time_out_counter_reg[8]_i_1_n_2 ;
  wire \time_out_counter_reg[8]_i_1_n_3 ;
  wire \time_out_counter_reg[8]_i_1_n_4 ;
  wire \time_out_counter_reg[8]_i_1_n_5 ;
  wire \time_out_counter_reg[8]_i_1_n_6 ;
  wire \time_out_counter_reg[8]_i_1_n_7 ;
  wire time_out_hsexit_i_1_n_0;
  wire time_out_hsexit_i_2_n_0;
  wire time_out_hsexit_reg_n_0;
  wire time_out_post0;
  wire time_out_post_coreclk_sync;
  wire time_out_post_coreclk_sync_i_n_1;
  wire time_out_post_coreclk_sync_i_n_3;
  wire time_out_post_coreclk_sync_i_n_4;
  wire time_out_post_coreclk_sync_i_n_5;
  wire time_out_post_r1;
  wire time_out_post_r2;
  wire time_out_post_reg_n_0;
  wire time_out_prepare1;
  wire time_out_prepare_i_100_n_0;
  wire time_out_prepare_i_101_n_0;
  wire time_out_prepare_i_102_n_0;
  wire time_out_prepare_i_103_n_0;
  wire time_out_prepare_i_104_n_0;
  wire time_out_prepare_i_105_n_0;
  wire time_out_prepare_i_106_n_0;
  wire time_out_prepare_i_107_n_0;
  wire time_out_prepare_i_108_n_0;
  wire time_out_prepare_i_109_n_0;
  wire [0:0]time_out_prepare_i_10_0;
  wire time_out_prepare_i_10_n_0;
  wire time_out_prepare_i_110_n_0;
  wire time_out_prepare_i_111_n_0;
  wire time_out_prepare_i_12_n_0;
  wire time_out_prepare_i_17_n_0;
  wire time_out_prepare_i_19_n_0;
  wire time_out_prepare_i_1_n_0;
  wire time_out_prepare_i_23_n_0;
  wire time_out_prepare_i_24_n_0;
  wire time_out_prepare_i_25_n_0;
  wire time_out_prepare_i_26_n_0;
  wire time_out_prepare_i_28_n_0;
  wire time_out_prepare_i_29_n_0;
  wire time_out_prepare_i_30_n_0;
  wire time_out_prepare_i_31_n_0;
  wire time_out_prepare_i_32_n_0;
  wire time_out_prepare_i_33_n_0;
  wire time_out_prepare_i_34_n_0;
  wire time_out_prepare_i_35_n_0;
  wire time_out_prepare_i_36_n_0;
  wire time_out_prepare_i_37_n_0;
  wire time_out_prepare_i_38_n_0;
  wire time_out_prepare_i_39_n_0;
  wire time_out_prepare_i_3_n_0;
  wire time_out_prepare_i_40_n_0;
  wire time_out_prepare_i_51_n_0;
  wire time_out_prepare_i_52_n_0;
  wire time_out_prepare_i_53_n_0;
  wire time_out_prepare_i_54_n_0;
  wire time_out_prepare_i_55_n_0;
  wire time_out_prepare_i_56_n_0;
  wire time_out_prepare_i_57_n_0;
  wire time_out_prepare_i_58_n_0;
  wire time_out_prepare_i_5_n_0;
  wire time_out_prepare_i_60_n_0;
  wire time_out_prepare_i_61_n_0;
  wire time_out_prepare_i_62_n_0;
  wire time_out_prepare_i_63_n_0;
  wire time_out_prepare_i_64_n_0;
  wire time_out_prepare_i_65_n_0;
  wire time_out_prepare_i_66_n_0;
  wire time_out_prepare_i_67_n_0;
  wire time_out_prepare_i_6_n_0;
  wire time_out_prepare_i_76_n_0;
  wire time_out_prepare_i_77_n_0;
  wire time_out_prepare_i_78_n_0;
  wire time_out_prepare_i_79_n_0;
  wire time_out_prepare_i_7_n_0;
  wire time_out_prepare_i_80_n_0;
  wire time_out_prepare_i_81_n_0;
  wire time_out_prepare_i_82_n_0;
  wire time_out_prepare_i_83_n_0;
  wire time_out_prepare_i_85_n_0;
  wire time_out_prepare_i_86_n_0;
  wire time_out_prepare_i_87_n_0;
  wire time_out_prepare_i_88_n_0;
  wire time_out_prepare_i_89_n_0;
  wire time_out_prepare_i_8_n_0;
  wire time_out_prepare_i_90_n_0;
  wire time_out_prepare_i_91_n_0;
  wire time_out_prepare_i_92_n_0;
  wire time_out_prepare_i_98_n_0;
  wire time_out_prepare_i_99_n_0;
  wire time_out_prepare_i_9_n_0;
  wire [3:0]time_out_prepare_reg_i_15_0;
  wire time_out_prepare_reg_i_15_n_2;
  wire time_out_prepare_reg_i_15_n_3;
  wire time_out_prepare_reg_i_16_n_0;
  wire time_out_prepare_reg_i_16_n_1;
  wire time_out_prepare_reg_i_16_n_2;
  wire time_out_prepare_reg_i_16_n_3;
  wire time_out_prepare_reg_i_18_n_2;
  wire time_out_prepare_reg_i_18_n_3;
  wire [3:0]time_out_prepare_reg_i_22_0;
  wire time_out_prepare_reg_i_22_n_0;
  wire time_out_prepare_reg_i_22_n_1;
  wire time_out_prepare_reg_i_22_n_2;
  wire time_out_prepare_reg_i_22_n_3;
  wire time_out_prepare_reg_i_27_n_0;
  wire time_out_prepare_reg_i_27_n_1;
  wire time_out_prepare_reg_i_27_n_2;
  wire time_out_prepare_reg_i_27_n_3;
  wire time_out_prepare_reg_i_4_n_0;
  wire time_out_prepare_reg_i_4_n_1;
  wire time_out_prepare_reg_i_4_n_2;
  wire time_out_prepare_reg_i_4_n_3;
  wire [0:0]time_out_prepare_reg_i_50_0;
  wire time_out_prepare_reg_i_50_n_0;
  wire time_out_prepare_reg_i_50_n_1;
  wire time_out_prepare_reg_i_50_n_2;
  wire time_out_prepare_reg_i_50_n_3;
  wire time_out_prepare_reg_i_59_n_0;
  wire time_out_prepare_reg_i_59_n_1;
  wire time_out_prepare_reg_i_59_n_2;
  wire time_out_prepare_reg_i_59_n_3;
  wire time_out_prepare_reg_i_75_n_0;
  wire time_out_prepare_reg_i_75_n_1;
  wire time_out_prepare_reg_i_75_n_2;
  wire time_out_prepare_reg_i_75_n_3;
  wire time_out_prepare_reg_i_84_n_0;
  wire time_out_prepare_reg_i_84_n_1;
  wire time_out_prepare_reg_i_84_n_2;
  wire time_out_prepare_reg_i_84_n_3;
  wire time_out_prepare_reg_n_0;
  wire time_out_trail0;
  wire time_out_trail_reg_n_0;
  wire time_out_zero;
  wire time_out_zero0;
  wire time_out_zero_i_1_n_0;
  wire \trail_count[9]_i_101_n_0 ;
  wire \trail_count[9]_i_102_n_0 ;
  wire \trail_count[9]_i_103_n_0 ;
  wire \trail_count[9]_i_104_n_0 ;
  wire \trail_count[9]_i_105_n_0 ;
  wire \trail_count[9]_i_106_n_0 ;
  wire \trail_count[9]_i_107_n_0 ;
  wire \trail_count[9]_i_108_n_0 ;
  wire \trail_count[9]_i_110_n_0 ;
  wire \trail_count[9]_i_111_n_0 ;
  wire \trail_count[9]_i_112_n_0 ;
  wire \trail_count[9]_i_113_n_0 ;
  wire \trail_count[9]_i_114_n_0 ;
  wire \trail_count[9]_i_115_n_0 ;
  wire \trail_count[9]_i_116_n_0 ;
  wire \trail_count[9]_i_117_n_0 ;
  wire \trail_count[9]_i_118_n_0 ;
  wire \trail_count[9]_i_119_n_0 ;
  wire [3:0]\trail_count[9]_i_11_0 ;
  wire \trail_count[9]_i_11_n_0 ;
  wire \trail_count[9]_i_120_n_0 ;
  wire \trail_count[9]_i_121_n_0 ;
  wire \trail_count[9]_i_138_n_0 ;
  wire \trail_count[9]_i_139_n_0 ;
  wire \trail_count[9]_i_13_n_0 ;
  wire \trail_count[9]_i_140_n_0 ;
  wire \trail_count[9]_i_141_n_0 ;
  wire \trail_count[9]_i_142_n_0 ;
  wire \trail_count[9]_i_143_n_0 ;
  wire \trail_count[9]_i_144_n_0 ;
  wire \trail_count[9]_i_145_n_0 ;
  wire \trail_count[9]_i_147_n_0 ;
  wire \trail_count[9]_i_148_n_0 ;
  wire \trail_count[9]_i_149_n_0 ;
  wire \trail_count[9]_i_150_n_0 ;
  wire \trail_count[9]_i_151_n_0 ;
  wire \trail_count[9]_i_152_n_0 ;
  wire \trail_count[9]_i_153_n_0 ;
  wire \trail_count[9]_i_154_n_0 ;
  wire \trail_count[9]_i_155_n_0 ;
  wire \trail_count[9]_i_156_n_0 ;
  wire \trail_count[9]_i_157_n_0 ;
  wire \trail_count[9]_i_158_n_0 ;
  wire \trail_count[9]_i_159_n_0 ;
  wire \trail_count[9]_i_160_n_0 ;
  wire \trail_count[9]_i_161_n_0 ;
  wire \trail_count[9]_i_162_n_0 ;
  wire \trail_count[9]_i_163_n_0 ;
  wire \trail_count[9]_i_164_n_0 ;
  wire \trail_count[9]_i_165_n_0 ;
  wire \trail_count[9]_i_166_n_0 ;
  wire \trail_count[9]_i_167_n_0 ;
  wire \trail_count[9]_i_168_n_0 ;
  wire \trail_count[9]_i_169_n_0 ;
  wire \trail_count[9]_i_16_n_0 ;
  wire \trail_count[9]_i_20_n_0 ;
  wire \trail_count[9]_i_21_n_0 ;
  wire \trail_count[9]_i_23_n_0 ;
  wire \trail_count[9]_i_24_n_0 ;
  wire \trail_count[9]_i_25_n_0 ;
  wire \trail_count[9]_i_27_n_0 ;
  wire \trail_count[9]_i_37_n_0 ;
  wire \trail_count[9]_i_38_n_0 ;
  wire \trail_count[9]_i_40_n_0 ;
  wire \trail_count[9]_i_41_n_0 ;
  wire \trail_count[9]_i_42_n_0 ;
  wire \trail_count[9]_i_43_n_0 ;
  wire \trail_count[9]_i_44_n_0 ;
  wire \trail_count[9]_i_45_n_0 ;
  wire \trail_count[9]_i_46_n_0 ;
  wire \trail_count[9]_i_47_n_0 ;
  wire \trail_count[9]_i_48_n_0 ;
  wire \trail_count[9]_i_49_n_0 ;
  wire \trail_count[9]_i_50_n_0 ;
  wire \trail_count[9]_i_51_n_0 ;
  wire \trail_count[9]_i_52_n_0 ;
  wire \trail_count[9]_i_53_n_0 ;
  wire \trail_count[9]_i_54_n_0 ;
  wire \trail_count[9]_i_55_n_0 ;
  wire \trail_count[9]_i_56_n_0 ;
  wire \trail_count[9]_i_5_n_0 ;
  wire \trail_count[9]_i_67_n_0 ;
  wire \trail_count[9]_i_68_n_0 ;
  wire \trail_count[9]_i_69_n_0 ;
  wire \trail_count[9]_i_6_n_0 ;
  wire \trail_count[9]_i_70_n_0 ;
  wire \trail_count[9]_i_71_n_0 ;
  wire \trail_count[9]_i_72_n_0 ;
  wire \trail_count[9]_i_73_n_0 ;
  wire \trail_count[9]_i_74_n_0 ;
  wire \trail_count[9]_i_76_n_0 ;
  wire \trail_count[9]_i_77_n_0 ;
  wire \trail_count[9]_i_78_n_0 ;
  wire \trail_count[9]_i_79_n_0 ;
  wire \trail_count[9]_i_7_n_0 ;
  wire \trail_count[9]_i_80_n_0 ;
  wire \trail_count[9]_i_81_n_0 ;
  wire \trail_count[9]_i_82_n_0 ;
  wire \trail_count[9]_i_83_n_0 ;
  wire \trail_count[9]_i_84_n_0 ;
  wire \trail_count[9]_i_85_n_0 ;
  wire \trail_count[9]_i_86_n_0 ;
  wire \trail_count[9]_i_87_n_0 ;
  wire \trail_count[9]_i_88_n_0 ;
  wire \trail_count[9]_i_89_n_0 ;
  wire \trail_count[9]_i_8_n_0 ;
  wire \trail_count[9]_i_90_n_0 ;
  wire \trail_count[9]_i_9_n_0 ;
  wire [9:0]trail_count_reg;
  wire [0:0]\trail_count_reg[9]_i_100_0 ;
  wire \trail_count_reg[9]_i_100_n_0 ;
  wire \trail_count_reg[9]_i_100_n_1 ;
  wire \trail_count_reg[9]_i_100_n_2 ;
  wire \trail_count_reg[9]_i_100_n_3 ;
  wire \trail_count_reg[9]_i_109_n_0 ;
  wire \trail_count_reg[9]_i_109_n_1 ;
  wire \trail_count_reg[9]_i_109_n_2 ;
  wire \trail_count_reg[9]_i_109_n_3 ;
  wire \trail_count_reg[9]_i_137_n_0 ;
  wire \trail_count_reg[9]_i_137_n_1 ;
  wire \trail_count_reg[9]_i_137_n_2 ;
  wire \trail_count_reg[9]_i_137_n_3 ;
  wire \trail_count_reg[9]_i_146_n_0 ;
  wire \trail_count_reg[9]_i_146_n_1 ;
  wire \trail_count_reg[9]_i_146_n_2 ;
  wire \trail_count_reg[9]_i_146_n_3 ;
  wire \trail_count_reg[9]_i_18_n_3 ;
  wire \trail_count_reg[9]_i_19_n_0 ;
  wire \trail_count_reg[9]_i_19_n_1 ;
  wire \trail_count_reg[9]_i_19_n_2 ;
  wire \trail_count_reg[9]_i_19_n_3 ;
  wire \trail_count_reg[9]_i_22_n_0 ;
  wire \trail_count_reg[9]_i_22_n_1 ;
  wire \trail_count_reg[9]_i_22_n_2 ;
  wire \trail_count_reg[9]_i_22_n_3 ;
  wire [3:0]\trail_count_reg[9]_i_36_0 ;
  wire \trail_count_reg[9]_i_36_n_0 ;
  wire \trail_count_reg[9]_i_36_n_1 ;
  wire \trail_count_reg[9]_i_36_n_2 ;
  wire \trail_count_reg[9]_i_36_n_3 ;
  wire \trail_count_reg[9]_i_39_n_0 ;
  wire \trail_count_reg[9]_i_39_n_1 ;
  wire \trail_count_reg[9]_i_39_n_2 ;
  wire \trail_count_reg[9]_i_39_n_3 ;
  wire \trail_count_reg[9]_i_4_n_1 ;
  wire \trail_count_reg[9]_i_4_n_2 ;
  wire \trail_count_reg[9]_i_4_n_3 ;
  wire [3:0]\trail_count_reg[9]_i_66_0 ;
  wire \trail_count_reg[9]_i_66_n_0 ;
  wire \trail_count_reg[9]_i_66_n_1 ;
  wire \trail_count_reg[9]_i_66_n_2 ;
  wire \trail_count_reg[9]_i_66_n_3 ;
  wire \trail_count_reg[9]_i_75_n_0 ;
  wire \trail_count_reg[9]_i_75_n_1 ;
  wire \trail_count_reg[9]_i_75_n_2 ;
  wire \trail_count_reg[9]_i_75_n_3 ;
  wire tx_cl_lp_cn;
  wire tx_cl_lp_cn_r_reg_0;
  wire tx_cl_lp_cp;
  wire tx_cl_lp_cp_r_i_6_n_0;
  wire tx_div4_clk;
  wire [0:0]tx_hs_clk_p;
  wire xmit_clk_pre_coreclk_sync_i_n_0;
  wire xmit_clk_pre_coreclk_sync_i_n_1;
  wire xmit_clk_pre_coreclk_sync_i_n_2;
  wire xmit_clk_pre_r0;
  wire xmit_clk_pre_r_i_1_n_0;
  wire xmit_clk_pre_r_reg_n_0;
  wire xmit_clk_r;
  wire xmit_clk_r0;
  wire xmit_clk_r_i_10_n_0;
  wire xmit_clk_r_i_11_n_0;
  wire xmit_clk_r_i_12_n_0;
  wire xmit_clk_r_i_13_n_0;
  wire xmit_clk_r_i_14_n_0;
  wire xmit_clk_r_i_15_n_0;
  wire xmit_clk_r_i_4_n_0;
  wire xmit_clk_r_i_5_n_0;
  wire xmit_clk_r_i_6_n_0;
  wire xmit_clk_r_i_8_n_0;
  wire xmit_clk_r_i_9_n_0;
  wire xmit_clk_r_reg_i_2_n_1;
  wire xmit_clk_r_reg_i_2_n_2;
  wire xmit_clk_r_reg_i_2_n_3;
  wire xmit_clk_r_reg_i_3_n_0;
  wire xmit_clk_r_reg_i_3_n_1;
  wire xmit_clk_r_reg_i_3_n_2;
  wire xmit_clk_r_reg_i_3_n_3;
  wire xmit_clk_r_reg_i_7_n_0;
  wire xmit_clk_r_reg_i_7_n_1;
  wire xmit_clk_r_reg_i_7_n_2;
  wire xmit_clk_r_reg_i_7_n_3;
  wire [31:0]zero_count;
  wire [31:1]zero_count0;
  wire \zero_count[0]_i_1_n_0 ;
  wire \zero_count[10]_i_1_n_0 ;
  wire \zero_count[11]_i_1_n_0 ;
  wire \zero_count[12]_i_1_n_0 ;
  wire \zero_count[13]_i_1_n_0 ;
  wire \zero_count[14]_i_1_n_0 ;
  wire \zero_count[15]_i_1_n_0 ;
  wire \zero_count[16]_i_1_n_0 ;
  wire \zero_count[17]_i_1_n_0 ;
  wire \zero_count[18]_i_1_n_0 ;
  wire \zero_count[19]_i_1_n_0 ;
  wire \zero_count[1]_i_1_n_0 ;
  wire \zero_count[20]_i_1_n_0 ;
  wire \zero_count[21]_i_1_n_0 ;
  wire \zero_count[22]_i_1_n_0 ;
  wire \zero_count[23]_i_1_n_0 ;
  wire \zero_count[24]_i_1_n_0 ;
  wire \zero_count[25]_i_1_n_0 ;
  wire \zero_count[26]_i_1_n_0 ;
  wire \zero_count[27]_i_1_n_0 ;
  wire \zero_count[28]_i_1_n_0 ;
  wire \zero_count[29]_i_1_n_0 ;
  wire \zero_count[2]_i_1_n_0 ;
  wire \zero_count[30]_i_1_n_0 ;
  wire \zero_count[31]_i_10_n_0 ;
  wire \zero_count[31]_i_11_n_0 ;
  wire \zero_count[31]_i_12_n_0 ;
  wire \zero_count[31]_i_13_n_0 ;
  wire \zero_count[31]_i_14_n_0 ;
  wire \zero_count[31]_i_15_n_0 ;
  wire \zero_count[31]_i_16_n_0 ;
  wire \zero_count[31]_i_17_n_0 ;
  wire \zero_count[31]_i_1_n_0 ;
  wire \zero_count[31]_i_2_n_0 ;
  wire \zero_count[31]_i_6_n_0 ;
  wire \zero_count[31]_i_7_n_0 ;
  wire \zero_count[31]_i_8_n_0 ;
  wire \zero_count[3]_i_1_n_0 ;
  wire \zero_count[4]_i_1_n_0 ;
  wire \zero_count[5]_i_1_n_0 ;
  wire \zero_count[6]_i_1_n_0 ;
  wire \zero_count[7]_i_1_n_0 ;
  wire \zero_count[8]_i_1_n_0 ;
  wire \zero_count[9]_i_1_n_0 ;
  wire \zero_count_reg[12]_i_2_n_0 ;
  wire \zero_count_reg[12]_i_2_n_1 ;
  wire \zero_count_reg[12]_i_2_n_2 ;
  wire \zero_count_reg[12]_i_2_n_3 ;
  wire \zero_count_reg[16]_i_2_n_0 ;
  wire \zero_count_reg[16]_i_2_n_1 ;
  wire \zero_count_reg[16]_i_2_n_2 ;
  wire \zero_count_reg[16]_i_2_n_3 ;
  wire \zero_count_reg[20]_i_2_n_0 ;
  wire \zero_count_reg[20]_i_2_n_1 ;
  wire \zero_count_reg[20]_i_2_n_2 ;
  wire \zero_count_reg[20]_i_2_n_3 ;
  wire \zero_count_reg[24]_i_2_n_0 ;
  wire \zero_count_reg[24]_i_2_n_1 ;
  wire \zero_count_reg[24]_i_2_n_2 ;
  wire \zero_count_reg[24]_i_2_n_3 ;
  wire \zero_count_reg[28]_i_2_n_0 ;
  wire \zero_count_reg[28]_i_2_n_1 ;
  wire \zero_count_reg[28]_i_2_n_2 ;
  wire \zero_count_reg[28]_i_2_n_3 ;
  wire \zero_count_reg[31]_i_3_n_2 ;
  wire \zero_count_reg[31]_i_3_n_3 ;
  wire \zero_count_reg[31]_i_4_n_2 ;
  wire \zero_count_reg[31]_i_4_n_3 ;
  wire \zero_count_reg[31]_i_5_n_0 ;
  wire \zero_count_reg[31]_i_5_n_1 ;
  wire \zero_count_reg[31]_i_5_n_2 ;
  wire \zero_count_reg[31]_i_5_n_3 ;
  wire \zero_count_reg[31]_i_9_n_0 ;
  wire \zero_count_reg[31]_i_9_n_1 ;
  wire \zero_count_reg[31]_i_9_n_2 ;
  wire \zero_count_reg[31]_i_9_n_3 ;
  wire \zero_count_reg[4]_i_2_n_0 ;
  wire \zero_count_reg[4]_i_2_n_1 ;
  wire \zero_count_reg[4]_i_2_n_2 ;
  wire \zero_count_reg[4]_i_2_n_3 ;
  wire \zero_count_reg[8]_i_2_n_0 ;
  wire \zero_count_reg[8]_i_2_n_1 ;
  wire \zero_count_reg[8]_i_2_n_2 ;
  wire \zero_count_reg[8]_i_2_n_3 ;
  wire NLW_PREPARE_TIMEOUT1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_OVERFLOW_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_PATTERNDETECT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_PREPARE_TIMEOUT1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_PREPARE_TIMEOUT1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT1_CARRYOUT_UNCONNECTED;
  wire [47:17]NLW_PREPARE_TIMEOUT1_P_UNCONNECTED;
  wire [47:0]NLW_PREPARE_TIMEOUT1_PCOUT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_OVERFLOW_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_PATTERNDETECT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_TRAIL_TIMEOUT1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_TRAIL_TIMEOUT1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT1_CARRYOUT_UNCONNECTED;
  wire [47:20]NLW_TRAIL_TIMEOUT1_P_UNCONNECTED;
  wire [47:0]NLW_TRAIL_TIMEOUT1_PCOUT_UNCONNECTED;
  wire [3:0]\NLW_clk_pre_cnt_reg[0]_i_10_O_UNCONNECTED ;
  wire [3:3]\NLW_clk_pre_cnt_reg[0]_i_4_CO_UNCONNECTED ;
  wire [3:0]\NLW_clk_pre_cnt_reg[0]_i_4_O_UNCONNECTED ;
  wire [3:0]\NLW_clk_pre_cnt_reg[0]_i_6_O_UNCONNECTED ;
  wire [3:3]\NLW_clk_pre_cnt_reg[28]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_en_cl_init_to_blk.init_done_reg_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_en_cl_init_to_blk.init_done_reg_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_en_cl_init_to_blk.init_done_reg_i_3_O_UNCONNECTED ;
  wire [3:1]\NLW_en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_post_count_reg[0]_i_10_O_UNCONNECTED ;
  wire [3:3]\NLW_post_count_reg[0]_i_4_CO_UNCONNECTED ;
  wire [3:0]\NLW_post_count_reg[0]_i_4_O_UNCONNECTED ;
  wire [3:0]\NLW_post_count_reg[0]_i_6_O_UNCONNECTED ;
  wire [3:3]\NLW_post_count_reg[28]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_prepare_zero_cnt_reg[28]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_time_out_counter_reg[0]_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_time_out_counter_reg[0]_i_3_O_UNCONNECTED ;
  wire [3:0]\NLW_time_out_counter_reg[0]_i_9_O_UNCONNECTED ;
  wire [3:1]\NLW_time_out_counter_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_time_out_counter_reg[12]_i_1_O_UNCONNECTED ;
  wire [3:2]NLW_time_out_prepare_reg_i_15_CO_UNCONNECTED;
  wire [3:0]NLW_time_out_prepare_reg_i_15_O_UNCONNECTED;
  wire [1:0]NLW_time_out_prepare_reg_i_16_O_UNCONNECTED;
  wire [3:2]NLW_time_out_prepare_reg_i_18_CO_UNCONNECTED;
  wire [3:3]NLW_time_out_prepare_reg_i_18_O_UNCONNECTED;
  wire [3:1]NLW_time_out_prepare_reg_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_time_out_prepare_reg_i_2_O_UNCONNECTED;
  wire [3:0]NLW_time_out_prepare_reg_i_22_O_UNCONNECTED;
  wire [3:0]NLW_time_out_prepare_reg_i_27_O_UNCONNECTED;
  wire [3:0]NLW_time_out_prepare_reg_i_4_O_UNCONNECTED;
  wire [3:0]NLW_time_out_prepare_reg_i_50_O_UNCONNECTED;
  wire [3:0]NLW_time_out_prepare_reg_i_59_O_UNCONNECTED;
  wire [3:0]NLW_time_out_prepare_reg_i_75_O_UNCONNECTED;
  wire [3:0]NLW_time_out_prepare_reg_i_84_O_UNCONNECTED;
  wire [3:0]\NLW_trail_count_reg[9]_i_100_O_UNCONNECTED ;
  wire [3:0]\NLW_trail_count_reg[9]_i_109_O_UNCONNECTED ;
  wire [3:0]\NLW_trail_count_reg[9]_i_137_O_UNCONNECTED ;
  wire [3:0]\NLW_trail_count_reg[9]_i_146_O_UNCONNECTED ;
  wire [3:1]\NLW_trail_count_reg[9]_i_18_CO_UNCONNECTED ;
  wire [3:0]\NLW_trail_count_reg[9]_i_18_O_UNCONNECTED ;
  wire [0:0]\NLW_trail_count_reg[9]_i_19_O_UNCONNECTED ;
  wire [3:0]\NLW_trail_count_reg[9]_i_26_CO_UNCONNECTED ;
  wire [3:1]\NLW_trail_count_reg[9]_i_26_O_UNCONNECTED ;
  wire [3:0]\NLW_trail_count_reg[9]_i_36_O_UNCONNECTED ;
  wire [3:0]\NLW_trail_count_reg[9]_i_39_O_UNCONNECTED ;
  wire [3:0]\NLW_trail_count_reg[9]_i_4_O_UNCONNECTED ;
  wire [3:0]\NLW_trail_count_reg[9]_i_66_O_UNCONNECTED ;
  wire [3:0]\NLW_trail_count_reg[9]_i_75_O_UNCONNECTED ;
  wire [3:3]NLW_xmit_clk_r_reg_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_xmit_clk_r_reg_i_2_O_UNCONNECTED;
  wire [3:0]NLW_xmit_clk_r_reg_i_3_O_UNCONNECTED;
  wire [3:0]NLW_xmit_clk_r_reg_i_7_O_UNCONNECTED;
  wire [3:3]\NLW_zero_count_reg[31]_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_zero_count_reg[31]_i_3_O_UNCONNECTED ;
  wire [3:2]\NLW_zero_count_reg[31]_i_4_CO_UNCONNECTED ;
  wire [3:3]\NLW_zero_count_reg[31]_i_4_O_UNCONNECTED ;
  wire [3:0]\NLW_zero_count_reg[31]_i_5_O_UNCONNECTED ;
  wire [3:0]\NLW_zero_count_reg[31]_i_9_O_UNCONNECTED ;

  assign cl_status_reg_w[4:3] = \^cl_status_reg_w [4:3];
  assign cl_status_reg_w[2] = cl_status_reg_bit_2;
  assign cl_status_reg_w[1] = cl_status_reg_bit_1;
  assign cl_status_reg_w[0] = \^cl_status_reg_w [0];
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \CLK_GEN_BLK4.tx_cl_hs_cp[1]_i_1 
       (.I0(xmit_clk_r),
        .I1(time_out_post_reg_n_0),
        .I2(cl_txrequesths_r2_reg_0),
        .O(\CLK_GEN_BLK4.tx_cl_hs_cp[1]_i_1_n_0 ));
  FDRE \CLK_GEN_BLK4.tx_cl_hs_cp_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(\CLK_GEN_BLK4.tx_cl_hs_cp[1]_i_1_n_0 ),
        .Q(tx_hs_clk_p),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-13 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    PREPARE_TIMEOUT1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_PREPARE_TIMEOUT1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_PREPARE_TIMEOUT1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_PREPARE_TIMEOUT1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_PREPARE_TIMEOUT1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_PREPARE_TIMEOUT1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_PREPARE_TIMEOUT1_OVERFLOW_UNCONNECTED),
        .P({NLW_PREPARE_TIMEOUT1_P_UNCONNECTED[47:17],PREPARE_TIMEOUT1_n_89,PREPARE_TIMEOUT1_n_90,PREPARE_TIMEOUT1_n_91,PREPARE_TIMEOUT1_n_92,PREPARE_TIMEOUT1_n_93,PREPARE_TIMEOUT1_n_94,PREPARE_TIMEOUT1_n_95,PREPARE_TIMEOUT1_n_96,PREPARE_TIMEOUT1_n_97,PREPARE_TIMEOUT1_n_98,PREPARE_TIMEOUT1_n_99,PREPARE_TIMEOUT1_n_100,PREPARE_TIMEOUT1_n_101,PREPARE_TIMEOUT1_n_102,PREPARE_TIMEOUT1_n_103,PREPARE_TIMEOUT1_n_104,PREPARE_TIMEOUT1_n_105}),
        .PATTERNBDETECT(NLW_PREPARE_TIMEOUT1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_PREPARE_TIMEOUT1_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_PREPARE_TIMEOUT1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_PREPARE_TIMEOUT1_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-13 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    TRAIL_TIMEOUT1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b0,1'b0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_TRAIL_TIMEOUT1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_TRAIL_TIMEOUT1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_TRAIL_TIMEOUT1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_TRAIL_TIMEOUT1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_TRAIL_TIMEOUT1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_TRAIL_TIMEOUT1_OVERFLOW_UNCONNECTED),
        .P({NLW_TRAIL_TIMEOUT1_P_UNCONNECTED[47:20],TRAIL_TIMEOUT1_n_86,TRAIL_TIMEOUT1_n_87,TRAIL_TIMEOUT1_n_88,TRAIL_TIMEOUT1_n_89,TRAIL_TIMEOUT1_n_90,TRAIL_TIMEOUT1_n_91,TRAIL_TIMEOUT1_n_92,TRAIL_TIMEOUT1_n_93,TRAIL_TIMEOUT1_n_94,TRAIL_TIMEOUT1_n_95,TRAIL_TIMEOUT1_n_96,TRAIL_TIMEOUT1_n_97,TRAIL_TIMEOUT1_n_98,TRAIL_TIMEOUT1_n_99,TRAIL_TIMEOUT1_n_100,TRAIL_TIMEOUT1_n_101,TRAIL_TIMEOUT1_n_102,TRAIL_TIMEOUT1_n_103,TRAIL_TIMEOUT1_n_104,TRAIL_TIMEOUT1_n_105}),
        .PATTERNBDETECT(NLW_TRAIL_TIMEOUT1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_TRAIL_TIMEOUT1_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_TRAIL_TIMEOUT1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_TRAIL_TIMEOUT1_UNDERFLOW_UNCONNECTED));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_84 cl_enable_sync_i
       (.cl_enable(cl_enable),
        .cl_stopstate(cl_stopstate),
        .cl_stopstate_reg(cl_enable_sync_i_n_2),
        .cl_stopstate_reg_0(start_clkzero_r_reg_0),
        .cl_stopstate_reg_1(cl_init_done_coreclk_i),
        .cl_stopstate_reg_2(cl_stopstate_reg_0),
        .cl_stopstate_reg_3(cl_txrequesths_coreclk_sync_i_n_1),
        .cl_stopstate_reg_4(cl_stopstate_i_4_n_0),
        .cl_tx_state(cl_tx_state),
        .\cl_tx_state_reg[1] (cl_enable_sync_i_n_1),
        .\cl_tx_state_reg[1]_0 (\cl_tx_state_reg_n_0_[1] ),
        .\cl_tx_state_reg[1]_1 (cl_txrequesths_negedge_sync_i_n_1),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .out(out));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_85 cl_init_done_byteclk_sync_i
       (.init_done(init_done),
        .init_done_byteclk_r(init_done_byteclk_r),
        .tx_div4_clk(tx_div4_clk));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'h524A)) 
    cl_status_reg_bit_0_i_1
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[2] ),
        .I3(\cl_tx_state_reg_n_0_[1] ),
        .O(cl_status_reg_bit_00));
  FDCE cl_status_reg_bit_0_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(cl_status_reg_bit_00),
        .Q(\^cl_status_reg_w [0]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    cl_status_reg_bit_1_i_1
       (.I0(\cl_tx_state_reg_n_0_[1] ),
        .I1(\cl_tx_state_reg_n_0_[2] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .O(cl_status_reg_bit_1_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE cl_status_reg_bit_1_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(cl_status_reg_bit_1_i_1_n_0),
        .Q(cl_status_reg_bit_1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE cl_status_reg_bit_2_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(cl_status_reg_bit_1_i_1_n_0),
        .Q(cl_status_reg_bit_2));
  FDCE cl_status_reg_bit_3_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(cl_init_done_coreclk_i),
        .Q(\^cl_status_reg_w [3]));
  FDCE cl_status_reg_bit_4_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(cl_stopstate),
        .Q(\^cl_status_reg_w [4]));
  LUT6 #(
    .INIT(64'hFFFFFFFF24640000)) 
    cl_stopstate_i_4
       (.I0(\cl_tx_state_reg_n_0_[1] ),
        .I1(\cl_tx_state_reg_n_0_[2] ),
        .I2(\cl_tx_state_reg_n_0_[0] ),
        .I3(\cl_tx_state_reg_n_0_[3] ),
        .I4(time_out_hsexit_reg_n_0),
        .I5(cl_stopstate_i_8_n_0),
        .O(cl_stopstate_i_4_n_0));
  LUT6 #(
    .INIT(64'hC0303E3000303E30)) 
    cl_stopstate_i_8
       (.I0(cl_init_done_coreclk_i),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(\cl_tx_state_reg_n_0_[2] ),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[3] ),
        .I5(lp_11_r_reg_n_0),
        .O(cl_stopstate_i_8_n_0));
  FDRE cl_stopstate_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_enable_sync_i_n_2),
        .Q(cl_stopstate),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cl_tx_state_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txulpsexit_sync_i_n_7),
        .Q(\cl_tx_state_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cl_tx_state_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_enable_sync_i_n_1),
        .Q(\cl_tx_state_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cl_tx_state_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txulpsexit_sync_i_n_6),
        .Q(\cl_tx_state_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cl_tx_state_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txulpsexit_sync_i_n_5),
        .Q(\cl_tx_state_reg_n_0_[3] ),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_86 cl_txclkactivehs_byteclk_sync_i
       (.cl_txclkactivehs(cl_txclkactivehs),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .tx_div4_clk(tx_div4_clk));
  FDRE cl_txclkactivehs_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths_coreclk_sync_i_n_11),
        .Q(cl_txclkactivehs_i),
        .R(tx_cl_lp_cn_r_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_87 cl_txrequesths_coreclk_sync_i
       (.cl_stopstate_reg(cl_txulpsclk_sync_i_n_4),
        .cl_tx_state117_out(cl_tx_state117_out),
        .cl_tx_state119_out(cl_tx_state119_out),
        .\cl_tx_state[2]_i_4 (time_out_prepare_reg_n_0),
        .\cl_tx_state_reg[0] (cl_txrequesths_coreclk_sync_i_n_8),
        .\cl_tx_state_reg[0]_0 (cl_txrequesths_coreclk_sync_i_n_10),
        .\cl_tx_state_reg[1] (cl_txrequesths_coreclk_sync_i_n_11),
        .\cl_tx_state_reg[1]_0 (cl_txrequesths_coreclk_sync_i_n_12),
        .\cl_tx_state_reg[2] (lp_10_r_reg_n_0),
        .\cl_tx_state_reg[3] (cl_txrequesths_coreclk_sync_i_n_1),
        .\cl_tx_state_reg[3]_0 (cl_txrequesths_coreclk_sync_i_n_13),
        .\cl_tx_state_reg[3]_1 (cl_txrequesths_coreclk_sync_i_n_14),
        .\cl_tx_state_reg[3]_2 (cl_txrequesths_coreclk_sync_i_n_15),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .cl_txclkactivehs_reg(\cl_tx_state_reg_n_0_[1] ),
        .cl_txclkactivehs_reg_0(xmit_clk_pre_coreclk_sync_i_n_2),
        .cl_txclkactivehs_reg_i_3_0(start_clkpost_r_reg_0),
        .cl_txclkactivehs_reg_i_3_1(cl_txclkactivehs_reg_i_3),
        .cl_txclkactivehs_reg_i_3_2(cl_txrequesths_negedge_sync),
        .cl_txrequesths(cl_txrequesths),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .en_lp_01_cnt_reg(lp_01_r_reg_n_0),
        .en_lp_01_cnt_reg_0(en_lp_01_cnt_i_2_n_0),
        .en_lp_01_cnt_reg_1(en_lp_01_cnt_reg_n_0),
        .en_lp_10_cnt_reg(cl_txulpsclk_sync_i_n_7),
        .hs_clk_state_r(hs_clk_state_r),
        .hs_clk_state_r_reg(\cl_tx_state_reg_n_0_[0] ),
        .hs_clk_state_r_reg_0(\cl_tx_state_reg_n_0_[3] ),
        .hs_clk_state_r_reg_1(xmit_clk_pre_coreclk_sync_i_n_0),
        .hs_clk_state_r_reg_2(hs_clk_state_r_reg_n_0),
        .lp_01_r_reg(cl_txrequesths_coreclk_sync_i_n_3),
        .lp_10_r_reg(cl_txrequesths_coreclk_sync_i_n_5),
        .lp_10_r_reg_0(cl_txrequesths_coreclk_sync_i_n_6),
        .lp_10_r_reg_1(cl_txrequesths_coreclk_sync_i_n_9),
        .out(s_level_out_d3_reg),
        .reset_timer_r(reset_timer_r),
        .reset_timer_r_i_2_0(time_out_post_coreclk_sync),
        .reset_timer_r_i_2_1(time_out_hsexit_reg_n_0),
        .reset_timer_r_reg(reset_timer_r_reg_n_0),
        .s_level_out_d3_reg_0(cl_txrequesths_coreclk_sync_i_n_2),
        .s_level_out_d3_reg_1(cl_txrequesths_coreclk_sync_i_n_16),
        .s_level_out_d3_reg_2(cl_txrequesths_coreclk_sync_i_n_17),
        .time_out_zero(time_out_zero),
        .tx_cl_lp_cn(tx_cl_lp_cn),
        .tx_cl_lp_cn_r_reg(\cl_tx_state_reg_n_0_[2] ),
        .tx_cl_lp_cn_r_reg_0(cl_txulpsclk_sync),
        .tx_cl_lp_cn_r_reg_1(cl_init_done_coreclk_i),
        .tx_cl_lp_cn_r_reg_2(cl_txulpsclk_sync_i_n_2),
        .tx_cl_lp_cp(tx_cl_lp_cp),
        .tx_cl_lp_cp_r_reg(cl_txulpsclk_sync_i_n_3),
        .tx_cl_lp_cp_r_reg_0(cl_txulpsexit_sync_i_n_3));
  FDRE cl_txrequesths_negedge_r_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(hs_clk_state_byteclk_sync_i_n_0),
        .Q(cl_txrequesths_negedge_r),
        .R(cl_txrequesths_r2_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_88 cl_txrequesths_negedge_sync_i
       (.cl_tx_state117_out(cl_tx_state117_out),
        .cl_tx_state119_out(cl_tx_state119_out),
        .\cl_tx_state[3]_i_2 (xmit_clk_pre_coreclk_sync_i_n_1),
        .\cl_tx_state[3]_i_2_0 (cl_txclkactivehs_reg_i_3),
        .\cl_tx_state_reg[0] (cl_txrequesths_negedge_sync_i_n_3),
        .\cl_tx_state_reg[0]_0 (cl_txrequesths_negedge_sync_i_n_5),
        .\cl_tx_state_reg[0]_1 (cl_txrequesths_negedge_sync_i_n_9),
        .\cl_tx_state_reg[0]_2 (s_level_out_d3_reg),
        .\cl_tx_state_reg[0]_3 (time_out_prepare_reg_n_0),
        .\cl_tx_state_reg[1] (cl_txrequesths_coreclk_sync_i_n_9),
        .\cl_tx_state_reg[2] (cl_txrequesths_negedge_sync_i_n_2),
        .\cl_tx_state_reg[2]_0 (cl_txrequesths_negedge_sync_i_n_8),
        .\cl_tx_state_reg[2]_1 (lp_01_r_reg_n_0),
        .\cl_tx_state_reg[2]_2 (\cl_tx_state_reg_n_0_[0] ),
        .\cl_tx_state_reg[3] (cl_txrequesths_negedge_sync_i_n_1),
        .cl_txrequesths_negedge_r(cl_txrequesths_negedge_r),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_hs_exit_done_i(dl_hs_exit_done_i),
        .hs_clk_state_r(hs_clk_state_r),
        .hs_clk_state_r_reg(cl_txrequesths_coreclk_sync_i_n_16),
        .out(cl_txrequesths_negedge_sync),
        .s_level_out_d3_reg_0(cl_txrequesths_negedge_sync_i_n_4),
        .s_level_out_d3_reg_1(cl_txrequesths_negedge_sync_i_n_7),
        .start_clkpost_r_reg(\cl_tx_state_reg_n_0_[3] ),
        .start_clkpost_r_reg_0(\cl_tx_state_reg_n_0_[2] ),
        .start_clkpost_r_reg_1(\cl_tx_state_reg_n_0_[1] ),
        .start_clkpost_r_reg_2(start_clkpost_r_reg_0),
        .start_clkpost_r_reg_3(time_out_post_coreclk_sync_i_n_3),
        .start_clkpost_r_reg_4(start_clkpost_r_reg_n_0));
  FDRE cl_txrequesths_r2_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(cl_txrequesths_r),
        .Q(cl_txrequesths_r2),
        .R(cl_txrequesths_r2_reg_0));
  FDRE cl_txrequesths_r_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(cl_txrequesths),
        .Q(cl_txrequesths_r),
        .R(cl_txrequesths_r2_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_89 cl_txulpsclk_sync_i
       (.cl_stopstate_reg_i_3(lp_11_r_reg_n_0),
        .\cl_tx_state_reg[0] (\cl_tx_state_reg_n_0_[0] ),
        .\cl_tx_state_reg[0]_0 (s_level_out_d3_reg),
        .\cl_tx_state_reg[1] (cl_txulpsclk_sync_i_n_2),
        .\cl_tx_state_reg[1]_0 (cl_txulpsclk_sync_i_n_5),
        .\cl_tx_state_reg[2] (cl_txulpsclk_sync_i_n_3),
        .\cl_tx_state_reg[3] (cl_txulpsclk_sync_i_n_6),
        .cl_txulpsclk(cl_txulpsclk),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .en_lp_10_cnt_reg(lp_10_r_reg_n_0),
        .en_lp_10_cnt_reg_0(\cl_tx_state_reg_n_0_[2] ),
        .en_lp_10_cnt_reg_1(\cl_tx_state_reg_n_0_[1] ),
        .en_lp_10_cnt_reg_2(cl_txrequesths_coreclk_sync_i_n_8),
        .en_lp_10_cnt_reg_3(en_lp_10_cnt_reg_n_0),
        .en_lp_11_cnt_reg(time_out_hsexit_reg_n_0),
        .en_lp_11_cnt_reg_0(en_lp_11_cnt_i_2_n_0),
        .en_lp_11_cnt_reg_1(\cl_tx_state_reg_n_0_[3] ),
        .en_lp_11_cnt_reg_2(cl_txrequesths_coreclk_sync_i_n_17),
        .en_lp_11_cnt_reg_3(en_lp_11_cnt_reg_n_0),
        .lp_10_r_reg(cl_txulpsclk_sync_i_n_7),
        .lp_11_r_reg(cl_txulpsclk_sync_i_n_4),
        .out(cl_txulpsclk_sync),
        .s_level_out_d3_reg_0(cl_txulpsclk_sync_i_n_1),
        .tx_cl_lp_cn_r_reg(tx_cl_lp_cp_r_i_6_n_0),
        .tx_cl_lp_cp_r_i_8_0(cl_txulpsexit_sync),
        .tx_cl_lp_cp_r_reg_i_4(time_out_trail_reg_n_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_90 cl_txulpsexit_sync_i
       (.cl_tx_state(cl_tx_state),
        .\cl_tx_state[3]_i_2_0 (lp_11_r_reg_n_0),
        .\cl_tx_state_reg[0] (cl_txulpsexit_sync_i_n_7),
        .\cl_tx_state_reg[0]_0 (\cl_tx_state_reg_n_0_[0] ),
        .\cl_tx_state_reg[0]_1 (\cl_tx_state_reg[0]_0 ),
        .\cl_tx_state_reg[0]_2 (cl_txrequesths_negedge_sync_i_n_9),
        .\cl_tx_state_reg[0]_3 (cl_txulpsclk_sync_i_n_1),
        .\cl_tx_state_reg[1] (cl_txulpsexit_sync_i_n_3),
        .\cl_tx_state_reg[2] (cl_txulpsexit_sync_i_n_6),
        .\cl_tx_state_reg[2]_0 (\cl_tx_state_reg_n_0_[2] ),
        .\cl_tx_state_reg[2]_1 (cl_txrequesths_negedge_sync_i_n_2),
        .\cl_tx_state_reg[2]_2 (cl_txrequesths_coreclk_sync_i_n_5),
        .\cl_tx_state_reg[3] (cl_txulpsexit_sync_i_n_5),
        .\cl_tx_state_reg[3]_0 (\cl_tx_state_reg_n_0_[3] ),
        .\cl_tx_state_reg[3]_1 (cl_txrequesths_negedge_sync_i_n_5),
        .\cl_tx_state_reg[3]_2 (cl_txrequesths_coreclk_sync_i_n_3),
        .\cl_tx_state_reg[3]_3 (cl_txrequesths_negedge_sync_i_n_7),
        .\cl_tx_state_reg[3]_4 (cl_txrequesths_coreclk_sync_i_n_6),
        .cl_txulpsexit(cl_txulpsexit),
        .cl_ulpsactivenot(cl_ulpsactivenot),
        .cl_ulpsactivenot_reg(cl_txulpsclk_sync),
        .cl_ulpsactivenot_reg_0(lp_10_r_reg_n_0),
        .cl_ulpsactivenot_reg_1(cl_ulpsactivenot_i_3_n_0),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .out(cl_txulpsexit_sync),
        .reset_timer_r(reset_timer_r),
        .reset_timer_r_reg(time_out_post_coreclk_sync_i_n_4),
        .reset_timer_r_reg_0(cl_txrequesths_negedge_sync_i_n_3),
        .reset_timer_r_reg_1(cl_txrequesths_coreclk_sync_i_n_2),
        .s_level_out_d3_reg_0(cl_txulpsexit_sync_i_n_4),
        .tx_cl_lp_cp_r_reg(\cl_tx_state_reg_n_0_[1] ),
        .tx_cl_lp_cp_r_reg_0(tx_cl_lp_cp_r_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h41)) 
    cl_ulpsactivenot_i_3
       (.I0(\cl_tx_state_reg_n_0_[1] ),
        .I1(\cl_tx_state_reg_n_0_[3] ),
        .I2(\cl_tx_state_reg_n_0_[2] ),
        .O(cl_ulpsactivenot_i_3_n_0));
  FDSE cl_ulpsactivenot_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txulpsexit_sync_i_n_4),
        .Q(cl_ulpsactivenot),
        .S(tx_cl_lp_cn_r_reg_0));
  LUT3 #(
    .INIT(8'hEF)) 
    \clk_pre_cnt[0]_i_1 
       (.I0(cl_txrequesths_r2_reg_0),
        .I1(time_out_post_reg_n_0),
        .I2(xmit_clk_r),
        .O(\clk_pre_cnt[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \clk_pre_cnt[0]_i_11 
       (.I0(clk_pre_cnt_reg[23]),
        .I1(clk_pre_cnt_reg[22]),
        .I2(clk_pre_cnt_reg[21]),
        .O(\clk_pre_cnt[0]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \clk_pre_cnt[0]_i_12 
       (.I0(clk_pre_cnt_reg[20]),
        .I1(clk_pre_cnt_reg[19]),
        .I2(clk_pre_cnt_reg[18]),
        .O(\clk_pre_cnt[0]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \clk_pre_cnt[0]_i_13 
       (.I0(clk_pre_cnt_reg[17]),
        .I1(clk_pre_cnt_reg[16]),
        .I2(clk_pre_cnt_reg[15]),
        .O(\clk_pre_cnt[0]_i_13_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \clk_pre_cnt[0]_i_14 
       (.I0(clk_pre_cnt_reg[14]),
        .I1(clk_pre_cnt_reg[13]),
        .I2(clk_pre_cnt_reg[12]),
        .O(\clk_pre_cnt[0]_i_14_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \clk_pre_cnt[0]_i_15 
       (.I0(clk_pre_cnt_reg[11]),
        .I1(clk_pre_cnt_reg[10]),
        .I2(clk_pre_cnt_reg[9]),
        .O(\clk_pre_cnt[0]_i_15_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \clk_pre_cnt[0]_i_16 
       (.I0(clk_pre_cnt_reg[8]),
        .I1(clk_pre_cnt_reg[7]),
        .I2(clk_pre_cnt_reg[6]),
        .O(\clk_pre_cnt[0]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \clk_pre_cnt[0]_i_17 
       (.I0(clk_pre_cnt_reg[5]),
        .I1(clk_pre_cnt_reg[4]),
        .I2(clk_pre_cnt_reg[3]),
        .O(\clk_pre_cnt[0]_i_17_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \clk_pre_cnt[0]_i_18 
       (.I0(clk_pre_cnt_reg[2]),
        .I1(clk_pre_cnt_reg[1]),
        .I2(clk_pre_cnt_reg[0]),
        .O(\clk_pre_cnt[0]_i_18_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \clk_pre_cnt[0]_i_2 
       (.I0(xmit_clk_pre_r0),
        .O(\clk_pre_cnt[0]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \clk_pre_cnt[0]_i_5 
       (.I0(clk_pre_cnt_reg[0]),
        .O(\clk_pre_cnt[0]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \clk_pre_cnt[0]_i_7 
       (.I0(clk_pre_cnt_reg[30]),
        .I1(clk_pre_cnt_reg[31]),
        .O(\clk_pre_cnt[0]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \clk_pre_cnt[0]_i_8 
       (.I0(clk_pre_cnt_reg[29]),
        .I1(clk_pre_cnt_reg[28]),
        .I2(clk_pre_cnt_reg[27]),
        .O(\clk_pre_cnt[0]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \clk_pre_cnt[0]_i_9 
       (.I0(clk_pre_cnt_reg[26]),
        .I1(clk_pre_cnt_reg[25]),
        .I2(clk_pre_cnt_reg[24]),
        .O(\clk_pre_cnt[0]_i_9_n_0 ));
  FDRE \clk_pre_cnt_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[0]_i_3_n_7 ),
        .Q(clk_pre_cnt_reg[0]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  CARRY4 \clk_pre_cnt_reg[0]_i_10 
       (.CI(1'b0),
        .CO({\clk_pre_cnt_reg[0]_i_10_n_0 ,\clk_pre_cnt_reg[0]_i_10_n_1 ,\clk_pre_cnt_reg[0]_i_10_n_2 ,\clk_pre_cnt_reg[0]_i_10_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_clk_pre_cnt_reg[0]_i_10_O_UNCONNECTED [3:0]),
        .S({\clk_pre_cnt[0]_i_15_n_0 ,\clk_pre_cnt[0]_i_16_n_0 ,\clk_pre_cnt[0]_i_17_n_0 ,\clk_pre_cnt[0]_i_18_n_0 }));
  CARRY4 \clk_pre_cnt_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\clk_pre_cnt_reg[0]_i_3_n_0 ,\clk_pre_cnt_reg[0]_i_3_n_1 ,\clk_pre_cnt_reg[0]_i_3_n_2 ,\clk_pre_cnt_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\clk_pre_cnt_reg[0]_i_3_n_4 ,\clk_pre_cnt_reg[0]_i_3_n_5 ,\clk_pre_cnt_reg[0]_i_3_n_6 ,\clk_pre_cnt_reg[0]_i_3_n_7 }),
        .S({clk_pre_cnt_reg[3:1],\clk_pre_cnt[0]_i_5_n_0 }));
  CARRY4 \clk_pre_cnt_reg[0]_i_4 
       (.CI(\clk_pre_cnt_reg[0]_i_6_n_0 ),
        .CO({\NLW_clk_pre_cnt_reg[0]_i_4_CO_UNCONNECTED [3],xmit_clk_pre_r0,\clk_pre_cnt_reg[0]_i_4_n_2 ,\clk_pre_cnt_reg[0]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_clk_pre_cnt_reg[0]_i_4_O_UNCONNECTED [3:0]),
        .S({1'b0,\clk_pre_cnt[0]_i_7_n_0 ,\clk_pre_cnt[0]_i_8_n_0 ,\clk_pre_cnt[0]_i_9_n_0 }));
  CARRY4 \clk_pre_cnt_reg[0]_i_6 
       (.CI(\clk_pre_cnt_reg[0]_i_10_n_0 ),
        .CO({\clk_pre_cnt_reg[0]_i_6_n_0 ,\clk_pre_cnt_reg[0]_i_6_n_1 ,\clk_pre_cnt_reg[0]_i_6_n_2 ,\clk_pre_cnt_reg[0]_i_6_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_clk_pre_cnt_reg[0]_i_6_O_UNCONNECTED [3:0]),
        .S({\clk_pre_cnt[0]_i_11_n_0 ,\clk_pre_cnt[0]_i_12_n_0 ,\clk_pre_cnt[0]_i_13_n_0 ,\clk_pre_cnt[0]_i_14_n_0 }));
  FDRE \clk_pre_cnt_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[8]_i_1_n_5 ),
        .Q(clk_pre_cnt_reg[10]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[8]_i_1_n_4 ),
        .Q(clk_pre_cnt_reg[11]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[12]_i_1_n_7 ),
        .Q(clk_pre_cnt_reg[12]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  CARRY4 \clk_pre_cnt_reg[12]_i_1 
       (.CI(\clk_pre_cnt_reg[8]_i_1_n_0 ),
        .CO({\clk_pre_cnt_reg[12]_i_1_n_0 ,\clk_pre_cnt_reg[12]_i_1_n_1 ,\clk_pre_cnt_reg[12]_i_1_n_2 ,\clk_pre_cnt_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_pre_cnt_reg[12]_i_1_n_4 ,\clk_pre_cnt_reg[12]_i_1_n_5 ,\clk_pre_cnt_reg[12]_i_1_n_6 ,\clk_pre_cnt_reg[12]_i_1_n_7 }),
        .S(clk_pre_cnt_reg[15:12]));
  FDRE \clk_pre_cnt_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[12]_i_1_n_6 ),
        .Q(clk_pre_cnt_reg[13]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[12]_i_1_n_5 ),
        .Q(clk_pre_cnt_reg[14]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[12]_i_1_n_4 ),
        .Q(clk_pre_cnt_reg[15]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[16]_i_1_n_7 ),
        .Q(clk_pre_cnt_reg[16]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  CARRY4 \clk_pre_cnt_reg[16]_i_1 
       (.CI(\clk_pre_cnt_reg[12]_i_1_n_0 ),
        .CO({\clk_pre_cnt_reg[16]_i_1_n_0 ,\clk_pre_cnt_reg[16]_i_1_n_1 ,\clk_pre_cnt_reg[16]_i_1_n_2 ,\clk_pre_cnt_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_pre_cnt_reg[16]_i_1_n_4 ,\clk_pre_cnt_reg[16]_i_1_n_5 ,\clk_pre_cnt_reg[16]_i_1_n_6 ,\clk_pre_cnt_reg[16]_i_1_n_7 }),
        .S(clk_pre_cnt_reg[19:16]));
  FDRE \clk_pre_cnt_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[16]_i_1_n_6 ),
        .Q(clk_pre_cnt_reg[17]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[16]_i_1_n_5 ),
        .Q(clk_pre_cnt_reg[18]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[16]_i_1_n_4 ),
        .Q(clk_pre_cnt_reg[19]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[0]_i_3_n_6 ),
        .Q(clk_pre_cnt_reg[1]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[20]_i_1_n_7 ),
        .Q(clk_pre_cnt_reg[20]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  CARRY4 \clk_pre_cnt_reg[20]_i_1 
       (.CI(\clk_pre_cnt_reg[16]_i_1_n_0 ),
        .CO({\clk_pre_cnt_reg[20]_i_1_n_0 ,\clk_pre_cnt_reg[20]_i_1_n_1 ,\clk_pre_cnt_reg[20]_i_1_n_2 ,\clk_pre_cnt_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_pre_cnt_reg[20]_i_1_n_4 ,\clk_pre_cnt_reg[20]_i_1_n_5 ,\clk_pre_cnt_reg[20]_i_1_n_6 ,\clk_pre_cnt_reg[20]_i_1_n_7 }),
        .S(clk_pre_cnt_reg[23:20]));
  FDRE \clk_pre_cnt_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[20]_i_1_n_6 ),
        .Q(clk_pre_cnt_reg[21]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[20]_i_1_n_5 ),
        .Q(clk_pre_cnt_reg[22]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[20]_i_1_n_4 ),
        .Q(clk_pre_cnt_reg[23]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[24]_i_1_n_7 ),
        .Q(clk_pre_cnt_reg[24]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  CARRY4 \clk_pre_cnt_reg[24]_i_1 
       (.CI(\clk_pre_cnt_reg[20]_i_1_n_0 ),
        .CO({\clk_pre_cnt_reg[24]_i_1_n_0 ,\clk_pre_cnt_reg[24]_i_1_n_1 ,\clk_pre_cnt_reg[24]_i_1_n_2 ,\clk_pre_cnt_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_pre_cnt_reg[24]_i_1_n_4 ,\clk_pre_cnt_reg[24]_i_1_n_5 ,\clk_pre_cnt_reg[24]_i_1_n_6 ,\clk_pre_cnt_reg[24]_i_1_n_7 }),
        .S(clk_pre_cnt_reg[27:24]));
  FDRE \clk_pre_cnt_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[24]_i_1_n_6 ),
        .Q(clk_pre_cnt_reg[25]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[24]_i_1_n_5 ),
        .Q(clk_pre_cnt_reg[26]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[24]_i_1_n_4 ),
        .Q(clk_pre_cnt_reg[27]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[28]_i_1_n_7 ),
        .Q(clk_pre_cnt_reg[28]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  CARRY4 \clk_pre_cnt_reg[28]_i_1 
       (.CI(\clk_pre_cnt_reg[24]_i_1_n_0 ),
        .CO({\NLW_clk_pre_cnt_reg[28]_i_1_CO_UNCONNECTED [3],\clk_pre_cnt_reg[28]_i_1_n_1 ,\clk_pre_cnt_reg[28]_i_1_n_2 ,\clk_pre_cnt_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_pre_cnt_reg[28]_i_1_n_4 ,\clk_pre_cnt_reg[28]_i_1_n_5 ,\clk_pre_cnt_reg[28]_i_1_n_6 ,\clk_pre_cnt_reg[28]_i_1_n_7 }),
        .S(clk_pre_cnt_reg[31:28]));
  FDRE \clk_pre_cnt_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[28]_i_1_n_6 ),
        .Q(clk_pre_cnt_reg[29]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[0]_i_3_n_5 ),
        .Q(clk_pre_cnt_reg[2]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[28]_i_1_n_5 ),
        .Q(clk_pre_cnt_reg[30]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[28]_i_1_n_4 ),
        .Q(clk_pre_cnt_reg[31]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[0]_i_3_n_4 ),
        .Q(clk_pre_cnt_reg[3]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[4]_i_1_n_7 ),
        .Q(clk_pre_cnt_reg[4]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  CARRY4 \clk_pre_cnt_reg[4]_i_1 
       (.CI(\clk_pre_cnt_reg[0]_i_3_n_0 ),
        .CO({\clk_pre_cnt_reg[4]_i_1_n_0 ,\clk_pre_cnt_reg[4]_i_1_n_1 ,\clk_pre_cnt_reg[4]_i_1_n_2 ,\clk_pre_cnt_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_pre_cnt_reg[4]_i_1_n_4 ,\clk_pre_cnt_reg[4]_i_1_n_5 ,\clk_pre_cnt_reg[4]_i_1_n_6 ,\clk_pre_cnt_reg[4]_i_1_n_7 }),
        .S(clk_pre_cnt_reg[7:4]));
  FDRE \clk_pre_cnt_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[4]_i_1_n_6 ),
        .Q(clk_pre_cnt_reg[5]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[4]_i_1_n_5 ),
        .Q(clk_pre_cnt_reg[6]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[4]_i_1_n_4 ),
        .Q(clk_pre_cnt_reg[7]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[8]_i_1_n_7 ),
        .Q(clk_pre_cnt_reg[8]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  CARRY4 \clk_pre_cnt_reg[8]_i_1 
       (.CI(\clk_pre_cnt_reg[4]_i_1_n_0 ),
        .CO({\clk_pre_cnt_reg[8]_i_1_n_0 ,\clk_pre_cnt_reg[8]_i_1_n_1 ,\clk_pre_cnt_reg[8]_i_1_n_2 ,\clk_pre_cnt_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_pre_cnt_reg[8]_i_1_n_4 ,\clk_pre_cnt_reg[8]_i_1_n_5 ,\clk_pre_cnt_reg[8]_i_1_n_6 ,\clk_pre_cnt_reg[8]_i_1_n_7 }),
        .S(clk_pre_cnt_reg[11:8]));
  FDRE \clk_pre_cnt_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(\clk_pre_cnt[0]_i_2_n_0 ),
        .D(\clk_pre_cnt_reg[8]_i_1_n_6 ),
        .Q(clk_pre_cnt_reg[9]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_count_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [0]),
        .Q(init_count[0]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [10]),
        .Q(init_count[10]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [11]),
        .Q(init_count[11]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [12]),
        .Q(init_count[12]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [13]),
        .Q(init_count[13]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [1]),
        .Q(init_count[1]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [2]),
        .Q(init_count[2]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [3]),
        .Q(init_count[3]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [4]),
        .Q(init_count[4]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [5]),
        .Q(init_count[5]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [6]),
        .Q(init_count[6]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [7]),
        .Q(init_count[7]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [8]),
        .Q(init_count[8]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [9]),
        .Q(init_count[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAEAA)) 
    \en_cl_init_to_blk.init_done_i_1 
       (.I0(cl_init_done_coreclk_i),
        .I1(cl_init_done_coreclk_r1),
        .I2(\cl_tx_state_reg_n_0_[1] ),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[3] ),
        .I5(\cl_tx_state_reg_n_0_[2] ),
        .O(\en_cl_init_to_blk.init_done_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \en_cl_init_to_blk.init_done_i_10 
       (.I0(\en_regs.init_to_r_2 [5]),
        .I1(\en_regs.init_to_r_2 [3]),
        .I2(\en_regs.init_to_r_2 [1]),
        .I3(\en_regs.init_to_r_2 [0]),
        .I4(\en_regs.init_to_r_2 [2]),
        .I5(\en_regs.init_to_r_2 [4]),
        .O(\en_cl_init_to_blk.init_done_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h1888844442222111)) 
    \en_cl_init_to_blk.init_done_i_11 
       (.I0(init_count[7]),
        .I1(init_count[8]),
        .I2(\en_regs.init_to_r_2 [6]),
        .I3(\en_cl_init_to_blk.init_done_i_10_n_0 ),
        .I4(\en_regs.init_to_r_2 [7]),
        .I5(\en_regs.init_to_r_2 [8]),
        .O(\en_cl_init_to_blk.init_done_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT5 #(
    .INIT(32'h6AAA9555)) 
    \en_cl_init_to_blk.init_done_i_12 
       (.I0(\en_regs.init_to_r_2 [3]),
        .I1(\en_regs.init_to_r_2 [2]),
        .I2(\en_regs.init_to_r_2 [0]),
        .I3(\en_regs.init_to_r_2 [1]),
        .I4(init_count[3]),
        .O(\en_cl_init_to_blk.init_done_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \en_cl_init_to_blk.init_done_i_13 
       (.I0(\en_regs.init_to_r_2 [3]),
        .I1(\en_regs.init_to_r_2 [1]),
        .I2(\en_regs.init_to_r_2 [0]),
        .I3(\en_regs.init_to_r_2 [2]),
        .O(\en_cl_init_to_blk.init_done_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \en_cl_init_to_blk.init_done_i_4 
       (.I0(init_count[12]),
        .I1(init_count[13]),
        .O(\en_cl_init_to_blk.init_done_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000006A95)) 
    \en_cl_init_to_blk.init_done_i_5 
       (.I0(init_count[9]),
        .I1(\en_cl_init_to_blk.init_done_i_9_n_0 ),
        .I2(\en_regs.init_to_r_2 [8]),
        .I3(\en_regs.init_to_r_2 [9]),
        .I4(init_count[11]),
        .I5(init_count[10]),
        .O(\en_cl_init_to_blk.init_done_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h6900)) 
    \en_cl_init_to_blk.init_done_i_6 
       (.I0(init_count[6]),
        .I1(\en_cl_init_to_blk.init_done_i_10_n_0 ),
        .I2(\en_regs.init_to_r_2 [6]),
        .I3(\en_cl_init_to_blk.init_done_i_11_n_0 ),
        .O(\en_cl_init_to_blk.init_done_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0880022020088002)) 
    \en_cl_init_to_blk.init_done_i_7 
       (.I0(\en_cl_init_to_blk.init_done_i_12_n_0 ),
        .I1(\en_regs.init_to_r_2 [5]),
        .I2(\en_regs.init_to_r_2 [4]),
        .I3(\en_cl_init_to_blk.init_done_i_13_n_0 ),
        .I4(init_count[5]),
        .I5(init_count[4]),
        .O(\en_cl_init_to_blk.init_done_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0480012010084002)) 
    \en_cl_init_to_blk.init_done_i_8 
       (.I0(init_count[0]),
        .I1(\en_regs.init_to_r_2 [2]),
        .I2(\en_regs.init_to_r_2 [1]),
        .I3(\en_regs.init_to_r_2 [0]),
        .I4(init_count[2]),
        .I5(init_count[1]),
        .O(\en_cl_init_to_blk.init_done_i_8_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \en_cl_init_to_blk.init_done_i_9 
       (.I0(\en_regs.init_to_r_2 [7]),
        .I1(\en_cl_init_to_blk.init_done_i_10_n_0 ),
        .I2(\en_regs.init_to_r_2 [6]),
        .O(\en_cl_init_to_blk.init_done_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \en_cl_init_to_blk.init_done_reg 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_done_i_1_n_0 ),
        .Q(cl_init_done_coreclk_i),
        .R(1'b0));
  CARRY4 \en_cl_init_to_blk.init_done_reg_i_2 
       (.CI(\en_cl_init_to_blk.init_done_reg_i_3_n_0 ),
        .CO({\NLW_en_cl_init_to_blk.init_done_reg_i_2_CO_UNCONNECTED [3:1],cl_init_done_coreclk_r1}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_en_cl_init_to_blk.init_done_reg_i_2_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,1'b0,\en_cl_init_to_blk.init_done_i_4_n_0 }));
  CARRY4 \en_cl_init_to_blk.init_done_reg_i_3 
       (.CI(1'b0),
        .CO({\en_cl_init_to_blk.init_done_reg_i_3_n_0 ,\en_cl_init_to_blk.init_done_reg_i_3_n_1 ,\en_cl_init_to_blk.init_done_reg_i_3_n_2 ,\en_cl_init_to_blk.init_done_reg_i_3_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_en_cl_init_to_blk.init_done_reg_i_3_O_UNCONNECTED [3:0]),
        .S({\en_cl_init_to_blk.init_done_i_5_n_0 ,\en_cl_init_to_blk.init_done_i_6_n_0 ,\en_cl_init_to_blk.init_done_i_7_n_0 ,\en_cl_init_to_blk.init_done_i_8_n_0 }));
  LUT1 #(
    .INIT(2'h1)) 
    \en_cl_init_to_blk.init_to_cnt_level1[0]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \en_cl_init_to_blk.init_to_cnt_level1[1]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \en_cl_init_to_blk.init_to_cnt_level1[2]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [1]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg [2]),
        .O(\en_cl_init_to_blk.init_to_cnt_level1[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \en_cl_init_to_blk.init_to_cnt_level1[3]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [1]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg [2]),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg [3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \en_cl_init_to_blk.init_to_cnt_level1[4]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [2]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [1]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg [3]),
        .I4(\en_cl_init_to_blk.init_to_cnt_level1_reg [4]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \en_cl_init_to_blk.init_to_cnt_level1[5]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [3]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg [1]),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg [2]),
        .I4(\en_cl_init_to_blk.init_to_cnt_level1_reg [4]),
        .I5(\en_cl_init_to_blk.init_to_cnt_level1_reg [5]),
        .O(p_0_in[5]));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \en_cl_init_to_blk.init_to_cnt_level1[6]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [4]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [2]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1[6]_i_2_n_0 ),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg [3]),
        .I4(\en_cl_init_to_blk.init_to_cnt_level1_reg [5]),
        .I5(\en_cl_init_to_blk.init_to_cnt_level1_reg [6]),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \en_cl_init_to_blk.init_to_cnt_level1[6]_i_2 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [1]),
        .O(\en_cl_init_to_blk.init_to_cnt_level1[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \en_cl_init_to_blk.init_to_cnt_level1[7]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[2] ),
        .I1(\cl_tx_state_reg_n_0_[3] ),
        .I2(\cl_tx_state_reg_n_0_[0] ),
        .I3(\cl_tx_state_reg_n_0_[1] ),
        .O(\en_cl_init_to_blk.init_to_cnt_level1[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \en_cl_init_to_blk.init_to_cnt_level1[7]_i_2 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1[7]_i_3_n_0 ),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [6]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg [7]),
        .O(p_0_in[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \en_cl_init_to_blk.init_to_cnt_level1[7]_i_3 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [5]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [3]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg [1]),
        .I4(\en_cl_init_to_blk.init_to_cnt_level1_reg [2]),
        .I5(\en_cl_init_to_blk.init_to_cnt_level1_reg [4]),
        .O(\en_cl_init_to_blk.init_to_cnt_level1[7]_i_3_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .R(\en_cl_init_to_blk.init_to_cnt_level1[7]_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg [1]),
        .R(\en_cl_init_to_blk.init_to_cnt_level1[7]_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level1[2]_i_1_n_0 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg [2]),
        .R(\en_cl_init_to_blk.init_to_cnt_level1[7]_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg [3]),
        .R(\en_cl_init_to_blk.init_to_cnt_level1[7]_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[4]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg [4]),
        .R(\en_cl_init_to_blk.init_to_cnt_level1[7]_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[5]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg [5]),
        .R(\en_cl_init_to_blk.init_to_cnt_level1[7]_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[6]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg [6]),
        .R(\en_cl_init_to_blk.init_to_cnt_level1[7]_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[7]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg [7]),
        .R(\en_cl_init_to_blk.init_to_cnt_level1[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \en_cl_init_to_blk.init_to_cnt_level1_tc_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [2]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [3]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg [1]),
        .I4(\en_cl_init_to_blk.init_to_cnt_level1_tc_i_2_n_0 ),
        .O(\en_cl_init_to_blk.init_to_cnt_level1_tc_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \en_cl_init_to_blk.init_to_cnt_level1_tc_i_2 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [5]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [4]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg [7]),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg [6]),
        .O(\en_cl_init_to_blk.init_to_cnt_level1_tc_i_2_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_tc_reg 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level1_tc_i_1_n_0 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_tc ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0001)) 
    \en_cl_init_to_blk.init_to_cnt_level2[0]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[2] ),
        .I2(\cl_tx_state_reg_n_0_[0] ),
        .I3(\cl_tx_state_reg_n_0_[1] ),
        .O(\en_cl_init_to_blk.init_to_cnt_level2[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00100000)) 
    \en_cl_init_to_blk.init_to_cnt_level2[0]_i_2 
       (.I0(\cl_tx_state_reg_n_0_[2] ),
        .I1(\cl_tx_state_reg_n_0_[3] ),
        .I2(\cl_tx_state_reg_n_0_[0] ),
        .I3(\cl_tx_state_reg_n_0_[1] ),
        .I4(\en_cl_init_to_blk.init_to_cnt_level1_tc ),
        .O(\en_cl_init_to_blk.init_to_cnt_level20 ));
  LUT1 #(
    .INIT(2'h1)) 
    \en_cl_init_to_blk.init_to_cnt_level2[0]_i_4 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level2_reg [0]),
        .O(\en_cl_init_to_blk.init_to_cnt_level2[0]_i_4_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[0] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_7 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [0]),
        .R(\en_cl_init_to_blk.init_to_cnt_level2[0]_i_1_n_0 ));
  CARRY4 \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_0 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_1 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_2 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_4 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_5 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_6 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_7 }),
        .S({\en_cl_init_to_blk.init_to_cnt_level2_reg [3:1],\en_cl_init_to_blk.init_to_cnt_level2[0]_i_4_n_0 }));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[10] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_5 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [10]),
        .R(\en_cl_init_to_blk.init_to_cnt_level2[0]_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[11] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_4 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [11]),
        .R(\en_cl_init_to_blk.init_to_cnt_level2[0]_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[12] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_7 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [12]),
        .R(\en_cl_init_to_blk.init_to_cnt_level2[0]_i_1_n_0 ));
  CARRY4 \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1 
       (.CI(\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_0 ),
        .CO({\NLW_en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_CO_UNCONNECTED [3:1],\en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_O_UNCONNECTED [3:2],\en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_6 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_7 }),
        .S({1'b0,1'b0,\en_cl_init_to_blk.init_to_cnt_level2_reg [13:12]}));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[13] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_6 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [13]),
        .R(\en_cl_init_to_blk.init_to_cnt_level2[0]_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[1] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_6 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [1]),
        .R(\en_cl_init_to_blk.init_to_cnt_level2[0]_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[2] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_5 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [2]),
        .R(\en_cl_init_to_blk.init_to_cnt_level2[0]_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[3] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_4 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [3]),
        .R(\en_cl_init_to_blk.init_to_cnt_level2[0]_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[4] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_7 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [4]),
        .R(\en_cl_init_to_blk.init_to_cnt_level2[0]_i_1_n_0 ));
  CARRY4 \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1 
       (.CI(\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_3_n_0 ),
        .CO({\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_0 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_1 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_2 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_4 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_5 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_6 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_7 }),
        .S(\en_cl_init_to_blk.init_to_cnt_level2_reg [7:4]));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[5] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_6 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [5]),
        .R(\en_cl_init_to_blk.init_to_cnt_level2[0]_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[6] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_5 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [6]),
        .R(\en_cl_init_to_blk.init_to_cnt_level2[0]_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[7] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_4 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [7]),
        .R(\en_cl_init_to_blk.init_to_cnt_level2[0]_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[8] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_7 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [8]),
        .R(\en_cl_init_to_blk.init_to_cnt_level2[0]_i_1_n_0 ));
  CARRY4 \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1 
       (.CI(\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_0 ),
        .CO({\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_0 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_1 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_2 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_4 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_5 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_6 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_7 }),
        .S(\en_cl_init_to_blk.init_to_cnt_level2_reg [11:8]));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[9] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_6 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [9]),
        .R(\en_cl_init_to_blk.init_to_cnt_level2[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h1)) 
    en_lp_01_cnt_i_2
       (.I0(\cl_tx_state_reg_n_0_[2] ),
        .I1(\cl_tx_state_reg_n_0_[3] ),
        .O(en_lp_01_cnt_i_2_n_0));
  FDRE en_lp_01_cnt_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths_coreclk_sync_i_n_12),
        .Q(en_lp_01_cnt_reg_n_0),
        .R(tx_cl_lp_cn_r_reg_0));
  FDRE en_lp_10_cnt_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txulpsclk_sync_i_n_5),
        .Q(en_lp_10_cnt_reg_n_0),
        .R(tx_cl_lp_cn_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT5 #(
    .INIT(32'h7FF077F0)) 
    en_lp_11_cnt_i_2
       (.I0(\cl_tx_state_reg_n_0_[1] ),
        .I1(\cl_tx_state_reg_n_0_[3] ),
        .I2(\cl_tx_state_reg_n_0_[2] ),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(time_out_hsexit_reg_n_0),
        .O(en_lp_11_cnt_i_2_n_0));
  FDRE en_lp_11_cnt_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txulpsclk_sync_i_n_6),
        .Q(en_lp_11_cnt_reg_n_0),
        .R(tx_cl_lp_cn_r_reg_0));
  FDRE \en_regs.init_reg_nxt_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\en_regs.init_reg_nxt [10]),
        .R(1'b0));
  FDRE \en_regs.init_reg_nxt_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\en_regs.init_reg_nxt [11]),
        .R(1'b0));
  FDRE \en_regs.init_reg_nxt_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\en_regs.init_reg_nxt [12]),
        .R(1'b0));
  FDRE \en_regs.init_reg_nxt_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\en_regs.init_reg_nxt [13]),
        .R(1'b0));
  FDRE \en_regs.init_reg_nxt_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\en_regs.init_reg_nxt [14]),
        .R(1'b0));
  FDRE \en_regs.init_reg_nxt_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\en_regs.init_reg_nxt [15]),
        .R(1'b0));
  FDRE \en_regs.init_reg_nxt_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(\en_regs.init_reg_nxt [16]),
        .R(1'b0));
  FDRE \en_regs.init_reg_nxt_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\en_regs.init_reg_nxt [17]),
        .R(1'b0));
  FDRE \en_regs.init_reg_nxt_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[10]),
        .Q(\en_regs.init_reg_nxt [18]),
        .R(1'b0));
  FDRE \en_regs.init_reg_nxt_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[11]),
        .Q(\en_regs.init_reg_nxt [19]),
        .R(1'b0));
  FDRE \en_regs.init_reg_nxt_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\en_regs.init_reg_nxt [8]),
        .R(1'b0));
  FDRE \en_regs.init_reg_nxt_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\en_regs.init_reg_nxt [9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hF79EA714D71A8610)) 
    \en_regs.init_to_r_2[0]_i_1 
       (.I0(\en_regs.init_to_r_2[2]_i_2_n_0 ),
        .I1(\en_regs.init_to_r [1]),
        .I2(\en_regs.init_to_r [2]),
        .I3(\en_regs.init_to_r_2[0]_i_2_n_0 ),
        .I4(\en_regs.init_to_r_2[0]_i_3_n_0 ),
        .I5(\en_regs.init_to_r [0]),
        .O(\en_regs.init_to_r_2[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB2BA5D4D4D45A2B2)) 
    \en_regs.init_to_r_2[0]_i_2 
       (.I0(\en_regs.init_to_r_2[2]_i_3_n_0 ),
        .I1(\en_regs.init_to_r_2[2]_i_4_n_0 ),
        .I2(\en_regs.init_to_r_2[4]_i_1_n_0 ),
        .I3(\en_regs.init_to_r [4]),
        .I4(\en_regs.init_to_r [3]),
        .I5(\en_regs.init_to_r [2]),
        .O(\en_regs.init_to_r_2[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h816EC936936C897E)) 
    \en_regs.init_to_r_2[0]_i_3 
       (.I0(\en_regs.init_to_r [2]),
        .I1(\en_regs.init_to_r_2[4]_i_1_n_0 ),
        .I2(\en_regs.init_to_r [3]),
        .I3(\en_regs.init_to_r [4]),
        .I4(\en_regs.init_to_r_2[2]_i_3_n_0 ),
        .I5(\en_regs.init_to_r_2[2]_i_4_n_0 ),
        .O(\en_regs.init_to_r_2[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h27BABA1B27A2A21B)) 
    \en_regs.init_to_r_2[1]_i_1 
       (.I0(\en_regs.init_to_r_2[1]_i_2_n_0 ),
        .I1(\en_regs.init_to_r_2[2]_i_2_n_0 ),
        .I2(\en_regs.init_to_r [2]),
        .I3(\en_regs.init_to_r_2[3]_i_1_n_0 ),
        .I4(\en_regs.init_to_r [3]),
        .I5(\en_regs.init_to_r [1]),
        .O(\en_regs.init_to_r_2[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \en_regs.init_to_r_2[1]_i_2 
       (.I0(\en_regs.init_to_r_2[4]_i_1_n_0 ),
        .I1(\en_regs.init_to_r [3]),
        .I2(\en_regs.init_to_r [4]),
        .O(\en_regs.init_to_r_2[1]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \en_regs.init_to_r_2[2]_i_1 
       (.I0(\en_regs.init_to_r_2[2]_i_2_n_0 ),
        .O(\en_regs.init_to_r_2[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h710D4331733D4F71)) 
    \en_regs.init_to_r_2[2]_i_2 
       (.I0(\en_regs.init_to_r_2[2]_i_3_n_0 ),
        .I1(\en_regs.init_to_r_2[2]_i_4_n_0 ),
        .I2(\en_regs.init_to_r_2[4]_i_1_n_0 ),
        .I3(\en_regs.init_to_r [4]),
        .I4(\en_regs.init_to_r [3]),
        .I5(\en_regs.init_to_r [2]),
        .O(\en_regs.init_to_r_2[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'hC936936C)) 
    \en_regs.init_to_r_2[2]_i_3 
       (.I0(\en_regs.init_to_r [4]),
        .I1(\en_regs.init_to_r_2[6]_i_1_n_0 ),
        .I2(\en_regs.init_to_r [5]),
        .I3(\en_regs.init_to_r [6]),
        .I4(\en_regs.init_to_r_2[5]_i_2_n_0 ),
        .O(\en_regs.init_to_r_2[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \en_regs.init_to_r_2[2]_i_4 
       (.I0(\en_regs.init_to_r [5]),
        .I1(\en_regs.init_to_r_2[5]_i_2_n_0 ),
        .I2(\en_regs.init_to_r [4]),
        .O(\en_regs.init_to_r_2[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hEB7EA12AAB7A8128)) 
    \en_regs.init_to_r_2[3]_i_1 
       (.I0(\en_regs.init_to_r_2[3]_i_2_n_0 ),
        .I1(\en_regs.init_to_r [4]),
        .I2(\en_regs.init_to_r_2[5]_i_2_n_0 ),
        .I3(\en_regs.init_to_r [5]),
        .I4(\en_regs.init_to_r_2[4]_i_1_n_0 ),
        .I5(\en_regs.init_to_r [3]),
        .O(\en_regs.init_to_r_2[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \en_regs.init_to_r_2[3]_i_2 
       (.I0(\en_regs.init_to_r_2[6]_i_1_n_0 ),
        .I1(\en_regs.init_to_r [5]),
        .I2(\en_regs.init_to_r [6]),
        .O(\en_regs.init_to_r_2[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h52B0F6BD4290F2B5)) 
    \en_regs.init_to_r_2[4]_i_1 
       (.I0(\en_regs.init_to_r [6]),
        .I1(\en_regs.init_to_r [5]),
        .I2(\en_regs.init_to_r_2[4]_i_2_n_0 ),
        .I3(\en_regs.init_to_r_2[6]_i_1_n_0 ),
        .I4(\en_regs.init_to_r_2[5]_i_2_n_0 ),
        .I5(\en_regs.init_to_r [4]),
        .O(\en_regs.init_to_r_2[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h3CB6CB6DC3493492)) 
    \en_regs.init_to_r_2[4]_i_2 
       (.I0(\en_regs.init_to_r [10]),
        .I1(\en_regs.init_to_r [9]),
        .I2(\en_regs.init_to_r [11]),
        .I3(\en_regs.init_to_r [8]),
        .I4(\en_regs.init_to_r [7]),
        .I5(\en_regs.init_to_r [6]),
        .O(\en_regs.init_to_r_2[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \en_regs.init_to_r_2[5]_i_1 
       (.I0(\en_regs.init_to_r_2[5]_i_2_n_0 ),
        .O(\en_regs.init_to_r_2[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1100998E8E66FF77)) 
    \en_regs.init_to_r_2[5]_i_2 
       (.I0(\en_regs.init_to_r_2[7]_i_1_n_0 ),
        .I1(\en_regs.init_to_r [7]),
        .I2(\en_regs.init_to_r [5]),
        .I3(\en_regs.init_to_r [6]),
        .I4(\en_regs.init_to_r_2[6]_i_1_n_0 ),
        .I5(\en_regs.init_to_r_2[5]_i_3_n_0 ),
        .O(\en_regs.init_to_r_2[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT5 #(
    .INIT(32'hA6DB5924)) 
    \en_regs.init_to_r_2[5]_i_3 
       (.I0(\en_regs.init_to_r [10]),
        .I1(\en_regs.init_to_r [11]),
        .I2(\en_regs.init_to_r [9]),
        .I3(\en_regs.init_to_r [8]),
        .I4(\en_regs.init_to_r [7]),
        .O(\en_regs.init_to_r_2[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h3793C9EC361381C8)) 
    \en_regs.init_to_r_2[6]_i_1 
       (.I0(\en_regs.init_to_r [7]),
        .I1(\en_regs.init_to_r [8]),
        .I2(\en_regs.init_to_r [11]),
        .I3(\en_regs.init_to_r [9]),
        .I4(\en_regs.init_to_r [10]),
        .I5(\en_regs.init_to_r [6]),
        .O(\en_regs.init_to_r_2[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT5 #(
    .INIT(32'h3CB63492)) 
    \en_regs.init_to_r_2[7]_i_1 
       (.I0(\en_regs.init_to_r [10]),
        .I1(\en_regs.init_to_r [9]),
        .I2(\en_regs.init_to_r [11]),
        .I3(\en_regs.init_to_r [8]),
        .I4(\en_regs.init_to_r [7]),
        .O(\en_regs.init_to_r_2[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'hA624)) 
    \en_regs.init_to_r_2[8]_i_1 
       (.I0(\en_regs.init_to_r [10]),
        .I1(\en_regs.init_to_r [11]),
        .I2(\en_regs.init_to_r [9]),
        .I3(\en_regs.init_to_r [8]),
        .O(\en_regs.init_to_r_2[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \en_regs.init_to_r_2[9]_i_1 
       (.I0(\en_regs.init_to_r [11]),
        .I1(\en_regs.init_to_r [9]),
        .I2(\en_regs.init_to_r [10]),
        .O(\en_regs.init_to_r_2[9]_i_1_n_0 ));
  FDRE \en_regs.init_to_r_2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_to_r_2[0]_i_1_n_0 ),
        .Q(\en_regs.init_to_r_2 [0]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_to_r_2[1]_i_1_n_0 ),
        .Q(\en_regs.init_to_r_2 [1]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_to_r_2[2]_i_1_n_0 ),
        .Q(\en_regs.init_to_r_2 [2]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_to_r_2[3]_i_1_n_0 ),
        .Q(\en_regs.init_to_r_2 [3]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_to_r_2[4]_i_1_n_0 ),
        .Q(\en_regs.init_to_r_2 [4]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_to_r_2[5]_i_1_n_0 ),
        .Q(\en_regs.init_to_r_2 [5]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_to_r_2[6]_i_1_n_0 ),
        .Q(\en_regs.init_to_r_2 [6]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_to_r_2[7]_i_1_n_0 ),
        .Q(\en_regs.init_to_r_2 [7]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_to_r_2[8]_i_1_n_0 ),
        .Q(\en_regs.init_to_r_2 [8]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_to_r_2[9]_i_1_n_0 ),
        .Q(\en_regs.init_to_r_2 [9]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_reg_nxt [8]),
        .Q(\en_regs.init_to_r [0]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_reg_nxt [18]),
        .Q(\en_regs.init_to_r [10]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_reg_nxt [19]),
        .Q(\en_regs.init_to_r [11]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_reg_nxt [9]),
        .Q(\en_regs.init_to_r [1]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_reg_nxt [10]),
        .Q(\en_regs.init_to_r [2]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_reg_nxt [11]),
        .Q(\en_regs.init_to_r [3]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_reg_nxt [12]),
        .Q(\en_regs.init_to_r [4]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_reg_nxt [13]),
        .Q(\en_regs.init_to_r [5]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_reg_nxt [14]),
        .Q(\en_regs.init_to_r [6]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_reg_nxt [15]),
        .Q(\en_regs.init_to_r [7]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_reg_nxt [16]),
        .Q(\en_regs.init_to_r [8]),
        .R(1'b0));
  FDRE \en_regs.init_to_r_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_regs.init_reg_nxt [17]),
        .Q(\en_regs.init_to_r [9]),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_91 hs_clk_state_byteclk_sync_i
       (.cl_txrequesths(cl_txrequesths),
        .cl_txrequesths_0(hs_clk_state_byteclk_sync_i_n_0),
        .cl_txrequesths_negedge_r(cl_txrequesths_negedge_r),
        .cl_txrequesths_r(cl_txrequesths_r),
        .oserdes_clkdiv_in(oserdes_clkdiv_in),
        .out(s_level_out_d3_reg_0),
        .s_level_out_d1_cdc_to_reg_0(hs_clk_state_r_reg_n_0));
  FDRE hs_clk_state_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths_coreclk_sync_i_n_10),
        .Q(hs_clk_state_r_reg_n_0),
        .R(tx_cl_lp_cn_r_reg_0));
  FDRE init_done_byteclk_pos_r_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(init_done_byteclk_pos_r0),
        .Q(init_done_byteclk_pos_r),
        .R(1'b0));
  FDRE init_done_byteclk_r_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(init_done_byteclk_sync),
        .Q(init_done_byteclk_r),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_92 init_done_byteclk_sync_i
       (.init_done_byteclk_pos_r0(init_done_byteclk_pos_r0),
        .init_done_byteclk_r(init_done_byteclk_r),
        .oserdes_clkdiv_in(oserdes_clkdiv_in),
        .out(init_done_byteclk_sync),
        .s_level_out_d1_cdc_to_reg_0(cl_init_done_coreclk_i));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'h04)) 
    lp_01_r_i_1
       (.I0(\lp_st01_cnt_reg_n_0_[1] ),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .I2(\lp_st01_cnt[1]_i_2_n_0 ),
        .O(lp_01_r));
  FDCE lp_01_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_01_r),
        .Q(lp_01_r_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h04)) 
    lp_10_r_i_1
       (.I0(\lp_st10_cnt_reg_n_0_[1] ),
        .I1(\lp_st10_cnt_reg_n_0_[0] ),
        .I2(\lp_st10_cnt[1]_i_2_n_0 ),
        .O(lp_10_r));
  FDCE lp_10_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_10_r),
        .Q(lp_10_r_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'h04)) 
    lp_11_r_i_1
       (.I0(\lp_st11_cnt_reg_n_0_[1] ),
        .I1(\lp_st11_cnt_reg_n_0_[0] ),
        .I2(\lp_st11_cnt[1]_i_2_n_0 ),
        .O(lp_11_r));
  FDCE lp_11_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_11_r),
        .Q(lp_11_r_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \lp_st01_cnt[0]_i_1 
       (.I0(en_lp_01_cnt_reg_n_0),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'h20C0)) 
    \lp_st01_cnt[1]_i_1 
       (.I0(\lp_st01_cnt[1]_i_2_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    \lp_st01_cnt[1]_i_2 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .I3(\lp_st01_cnt_reg_n_0_[5] ),
        .I4(\lp_st01_cnt_reg_n_0_[6] ),
        .O(\lp_st01_cnt[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7080)) 
    \lp_st01_cnt[2]_i_1 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[2] ),
        .O(lp_st01_cnt[2]));
  LUT6 #(
    .INIT(64'h76FF000088000000)) 
    \lp_st01_cnt[3]_i_1 
       (.I0(\lp_st01_cnt_reg_n_0_[2] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt[3]_i_2_n_0 ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[3] ),
        .O(lp_st01_cnt[3]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \lp_st01_cnt[3]_i_2 
       (.I0(\lp_st01_cnt_reg_n_0_[6] ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \lp_st01_cnt[4]_i_1 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[1] ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[4] ),
        .O(lp_st01_cnt[4]));
  LUT6 #(
    .INIT(64'hBFFF000040000000)) 
    \lp_st01_cnt[5]_i_1 
       (.I0(\lp_st01_cnt[5]_i_2_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[3] ),
        .I3(\lp_st01_cnt_reg_n_0_[4] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[5] ),
        .O(lp_st01_cnt[5]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \lp_st01_cnt[5]_i_2 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .O(\lp_st01_cnt[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'hB040)) 
    \lp_st01_cnt[6]_i_1 
       (.I0(\lp_st01_cnt[6]_i_2_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[6] ),
        .O(lp_st01_cnt[6]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \lp_st01_cnt[6]_i_2 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt_reg_n_0_[2] ),
        .I3(\lp_st01_cnt_reg_n_0_[3] ),
        .I4(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[6]_i_2_n_0 ));
  FDCE \lp_st01_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[0]),
        .Q(\lp_st01_cnt_reg_n_0_[0] ));
  FDCE \lp_st01_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[1]),
        .Q(\lp_st01_cnt_reg_n_0_[1] ));
  FDCE \lp_st01_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[2]),
        .Q(\lp_st01_cnt_reg_n_0_[2] ));
  FDCE \lp_st01_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[3]),
        .Q(\lp_st01_cnt_reg_n_0_[3] ));
  FDCE \lp_st01_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[4]),
        .Q(\lp_st01_cnt_reg_n_0_[4] ));
  FDCE \lp_st01_cnt_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[5]),
        .Q(\lp_st01_cnt_reg_n_0_[5] ));
  FDCE \lp_st01_cnt_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[6]),
        .Q(\lp_st01_cnt_reg_n_0_[6] ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \lp_st10_cnt[0]_i_1 
       (.I0(en_lp_10_cnt_reg_n_0),
        .I1(\lp_st10_cnt_reg_n_0_[0] ),
        .O(lp_st10_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'h20C0)) 
    \lp_st10_cnt[1]_i_1 
       (.I0(\lp_st10_cnt[1]_i_2_n_0 ),
        .I1(\lp_st10_cnt_reg_n_0_[1] ),
        .I2(en_lp_10_cnt_reg_n_0),
        .I3(\lp_st10_cnt_reg_n_0_[0] ),
        .O(lp_st10_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    \lp_st10_cnt[1]_i_2 
       (.I0(\lp_st10_cnt_reg_n_0_[3] ),
        .I1(\lp_st10_cnt_reg_n_0_[2] ),
        .I2(\lp_st10_cnt_reg_n_0_[4] ),
        .I3(\lp_st10_cnt_reg_n_0_[5] ),
        .I4(\lp_st10_cnt_reg_n_0_[6] ),
        .O(\lp_st10_cnt[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7080)) 
    \lp_st10_cnt[2]_i_1 
       (.I0(\lp_st10_cnt_reg_n_0_[0] ),
        .I1(\lp_st10_cnt_reg_n_0_[1] ),
        .I2(en_lp_10_cnt_reg_n_0),
        .I3(\lp_st10_cnt_reg_n_0_[2] ),
        .O(lp_st10_cnt[2]));
  LUT6 #(
    .INIT(64'h76FF000088000000)) 
    \lp_st10_cnt[3]_i_1 
       (.I0(\lp_st10_cnt_reg_n_0_[2] ),
        .I1(\lp_st10_cnt_reg_n_0_[1] ),
        .I2(\lp_st10_cnt[3]_i_2_n_0 ),
        .I3(\lp_st10_cnt_reg_n_0_[0] ),
        .I4(en_lp_10_cnt_reg_n_0),
        .I5(\lp_st10_cnt_reg_n_0_[3] ),
        .O(lp_st10_cnt[3]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \lp_st10_cnt[3]_i_2 
       (.I0(\lp_st10_cnt_reg_n_0_[6] ),
        .I1(\lp_st10_cnt_reg_n_0_[5] ),
        .I2(\lp_st10_cnt_reg_n_0_[4] ),
        .O(\lp_st10_cnt[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \lp_st10_cnt[4]_i_1 
       (.I0(\lp_st10_cnt_reg_n_0_[3] ),
        .I1(\lp_st10_cnt_reg_n_0_[2] ),
        .I2(\lp_st10_cnt_reg_n_0_[1] ),
        .I3(\lp_st10_cnt_reg_n_0_[0] ),
        .I4(en_lp_10_cnt_reg_n_0),
        .I5(\lp_st10_cnt_reg_n_0_[4] ),
        .O(lp_st10_cnt[4]));
  LUT6 #(
    .INIT(64'hBFFF000040000000)) 
    \lp_st10_cnt[5]_i_1 
       (.I0(\lp_st10_cnt[5]_i_2_n_0 ),
        .I1(\lp_st10_cnt_reg_n_0_[2] ),
        .I2(\lp_st10_cnt_reg_n_0_[3] ),
        .I3(\lp_st10_cnt_reg_n_0_[4] ),
        .I4(en_lp_10_cnt_reg_n_0),
        .I5(\lp_st10_cnt_reg_n_0_[5] ),
        .O(lp_st10_cnt[5]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \lp_st10_cnt[5]_i_2 
       (.I0(\lp_st10_cnt_reg_n_0_[0] ),
        .I1(\lp_st10_cnt_reg_n_0_[1] ),
        .O(\lp_st10_cnt[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'hB040)) 
    \lp_st10_cnt[6]_i_1 
       (.I0(\lp_st10_cnt[6]_i_2_n_0 ),
        .I1(\lp_st10_cnt_reg_n_0_[5] ),
        .I2(en_lp_10_cnt_reg_n_0),
        .I3(\lp_st10_cnt_reg_n_0_[6] ),
        .O(lp_st10_cnt[6]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \lp_st10_cnt[6]_i_2 
       (.I0(\lp_st10_cnt_reg_n_0_[0] ),
        .I1(\lp_st10_cnt_reg_n_0_[1] ),
        .I2(\lp_st10_cnt_reg_n_0_[2] ),
        .I3(\lp_st10_cnt_reg_n_0_[3] ),
        .I4(\lp_st10_cnt_reg_n_0_[4] ),
        .O(\lp_st10_cnt[6]_i_2_n_0 ));
  FDCE \lp_st10_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st10_cnt[0]),
        .Q(\lp_st10_cnt_reg_n_0_[0] ));
  FDCE \lp_st10_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st10_cnt[1]),
        .Q(\lp_st10_cnt_reg_n_0_[1] ));
  FDCE \lp_st10_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st10_cnt[2]),
        .Q(\lp_st10_cnt_reg_n_0_[2] ));
  FDCE \lp_st10_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st10_cnt[3]),
        .Q(\lp_st10_cnt_reg_n_0_[3] ));
  FDCE \lp_st10_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st10_cnt[4]),
        .Q(\lp_st10_cnt_reg_n_0_[4] ));
  FDCE \lp_st10_cnt_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st10_cnt[5]),
        .Q(\lp_st10_cnt_reg_n_0_[5] ));
  FDCE \lp_st10_cnt_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st10_cnt[6]),
        .Q(\lp_st10_cnt_reg_n_0_[6] ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \lp_st11_cnt[0]_i_1 
       (.I0(en_lp_11_cnt_reg_n_0),
        .I1(\lp_st11_cnt_reg_n_0_[0] ),
        .O(lp_st11_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'h20C0)) 
    \lp_st11_cnt[1]_i_1 
       (.I0(\lp_st11_cnt[1]_i_2_n_0 ),
        .I1(\lp_st11_cnt_reg_n_0_[1] ),
        .I2(en_lp_11_cnt_reg_n_0),
        .I3(\lp_st11_cnt_reg_n_0_[0] ),
        .O(lp_st11_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    \lp_st11_cnt[1]_i_2 
       (.I0(\lp_st11_cnt_reg_n_0_[3] ),
        .I1(\lp_st11_cnt_reg_n_0_[2] ),
        .I2(\lp_st11_cnt_reg_n_0_[4] ),
        .I3(\lp_st11_cnt_reg_n_0_[5] ),
        .I4(\lp_st11_cnt_reg_n_0_[6] ),
        .O(\lp_st11_cnt[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7080)) 
    \lp_st11_cnt[2]_i_1 
       (.I0(\lp_st11_cnt_reg_n_0_[0] ),
        .I1(\lp_st11_cnt_reg_n_0_[1] ),
        .I2(en_lp_11_cnt_reg_n_0),
        .I3(\lp_st11_cnt_reg_n_0_[2] ),
        .O(lp_st11_cnt[2]));
  LUT6 #(
    .INIT(64'h76FF000088000000)) 
    \lp_st11_cnt[3]_i_1 
       (.I0(\lp_st11_cnt_reg_n_0_[2] ),
        .I1(\lp_st11_cnt_reg_n_0_[1] ),
        .I2(\lp_st11_cnt[3]_i_2_n_0 ),
        .I3(\lp_st11_cnt_reg_n_0_[0] ),
        .I4(en_lp_11_cnt_reg_n_0),
        .I5(\lp_st11_cnt_reg_n_0_[3] ),
        .O(lp_st11_cnt[3]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \lp_st11_cnt[3]_i_2 
       (.I0(\lp_st11_cnt_reg_n_0_[6] ),
        .I1(\lp_st11_cnt_reg_n_0_[5] ),
        .I2(\lp_st11_cnt_reg_n_0_[4] ),
        .O(\lp_st11_cnt[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \lp_st11_cnt[4]_i_1 
       (.I0(\lp_st11_cnt_reg_n_0_[3] ),
        .I1(\lp_st11_cnt_reg_n_0_[2] ),
        .I2(\lp_st11_cnt_reg_n_0_[1] ),
        .I3(\lp_st11_cnt_reg_n_0_[0] ),
        .I4(en_lp_11_cnt_reg_n_0),
        .I5(\lp_st11_cnt_reg_n_0_[4] ),
        .O(lp_st11_cnt[4]));
  LUT6 #(
    .INIT(64'hBFFF000040000000)) 
    \lp_st11_cnt[5]_i_1 
       (.I0(\lp_st11_cnt[5]_i_2_n_0 ),
        .I1(\lp_st11_cnt_reg_n_0_[2] ),
        .I2(\lp_st11_cnt_reg_n_0_[3] ),
        .I3(\lp_st11_cnt_reg_n_0_[4] ),
        .I4(en_lp_11_cnt_reg_n_0),
        .I5(\lp_st11_cnt_reg_n_0_[5] ),
        .O(lp_st11_cnt[5]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \lp_st11_cnt[5]_i_2 
       (.I0(\lp_st11_cnt_reg_n_0_[0] ),
        .I1(\lp_st11_cnt_reg_n_0_[1] ),
        .O(\lp_st11_cnt[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'hB040)) 
    \lp_st11_cnt[6]_i_1 
       (.I0(\lp_st11_cnt[6]_i_2_n_0 ),
        .I1(\lp_st11_cnt_reg_n_0_[5] ),
        .I2(en_lp_11_cnt_reg_n_0),
        .I3(\lp_st11_cnt_reg_n_0_[6] ),
        .O(lp_st11_cnt[6]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \lp_st11_cnt[6]_i_2 
       (.I0(\lp_st11_cnt_reg_n_0_[0] ),
        .I1(\lp_st11_cnt_reg_n_0_[1] ),
        .I2(\lp_st11_cnt_reg_n_0_[2] ),
        .I3(\lp_st11_cnt_reg_n_0_[3] ),
        .I4(\lp_st11_cnt_reg_n_0_[4] ),
        .O(\lp_st11_cnt[6]_i_2_n_0 ));
  FDCE \lp_st11_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st11_cnt[0]),
        .Q(\lp_st11_cnt_reg_n_0_[0] ));
  FDCE \lp_st11_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st11_cnt[1]),
        .Q(\lp_st11_cnt_reg_n_0_[1] ));
  FDCE \lp_st11_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st11_cnt[2]),
        .Q(\lp_st11_cnt_reg_n_0_[2] ));
  FDCE \lp_st11_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st11_cnt[3]),
        .Q(\lp_st11_cnt_reg_n_0_[3] ));
  FDCE \lp_st11_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st11_cnt[4]),
        .Q(\lp_st11_cnt_reg_n_0_[4] ));
  FDCE \lp_st11_cnt_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st11_cnt[5]),
        .Q(\lp_st11_cnt_reg_n_0_[5] ));
  FDCE \lp_st11_cnt_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st11_cnt[6]),
        .Q(\lp_st11_cnt_reg_n_0_[6] ));
  LUT3 #(
    .INIT(8'h01)) 
    \post_count[0]_i_11 
       (.I0(post_count_reg[23]),
        .I1(post_count_reg[22]),
        .I2(post_count_reg[21]),
        .O(\post_count[0]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \post_count[0]_i_12 
       (.I0(post_count_reg[20]),
        .I1(post_count_reg[19]),
        .I2(post_count_reg[18]),
        .O(\post_count[0]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \post_count[0]_i_13 
       (.I0(post_count_reg[17]),
        .I1(post_count_reg[16]),
        .I2(post_count_reg[15]),
        .O(\post_count[0]_i_13_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \post_count[0]_i_14 
       (.I0(post_count_reg[14]),
        .I1(post_count_reg[13]),
        .I2(post_count_reg[12]),
        .O(\post_count[0]_i_14_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \post_count[0]_i_15 
       (.I0(post_count_reg[11]),
        .I1(post_count_reg[10]),
        .I2(post_count_reg[9]),
        .O(\post_count[0]_i_15_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \post_count[0]_i_16 
       (.I0(post_count_reg[8]),
        .I1(post_count_reg[7]),
        .I2(post_count_reg[6]),
        .O(\post_count[0]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \post_count[0]_i_17 
       (.I0(post_count_reg[3]),
        .I1(post_count_reg[5]),
        .I2(post_count_reg[4]),
        .O(\post_count[0]_i_17_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \post_count[0]_i_18 
       (.I0(post_count_reg[1]),
        .I1(post_count_reg[2]),
        .I2(post_count_reg[0]),
        .O(\post_count[0]_i_18_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \post_count[0]_i_2 
       (.I0(time_out_post0),
        .O(\post_count[0]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \post_count[0]_i_5 
       (.I0(post_count_reg[0]),
        .O(\post_count[0]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \post_count[0]_i_7 
       (.I0(post_count_reg[30]),
        .I1(post_count_reg[31]),
        .O(\post_count[0]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \post_count[0]_i_8 
       (.I0(post_count_reg[29]),
        .I1(post_count_reg[28]),
        .I2(post_count_reg[27]),
        .O(\post_count[0]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \post_count[0]_i_9 
       (.I0(post_count_reg[26]),
        .I1(post_count_reg[25]),
        .I2(post_count_reg[24]),
        .O(\post_count[0]_i_9_n_0 ));
  FDRE \post_count_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[0]_i_3_n_7 ),
        .Q(post_count_reg[0]),
        .R(clear));
  CARRY4 \post_count_reg[0]_i_10 
       (.CI(1'b0),
        .CO({\post_count_reg[0]_i_10_n_0 ,\post_count_reg[0]_i_10_n_1 ,\post_count_reg[0]_i_10_n_2 ,\post_count_reg[0]_i_10_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_post_count_reg[0]_i_10_O_UNCONNECTED [3:0]),
        .S({\post_count[0]_i_15_n_0 ,\post_count[0]_i_16_n_0 ,\post_count[0]_i_17_n_0 ,\post_count[0]_i_18_n_0 }));
  CARRY4 \post_count_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\post_count_reg[0]_i_3_n_0 ,\post_count_reg[0]_i_3_n_1 ,\post_count_reg[0]_i_3_n_2 ,\post_count_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\post_count_reg[0]_i_3_n_4 ,\post_count_reg[0]_i_3_n_5 ,\post_count_reg[0]_i_3_n_6 ,\post_count_reg[0]_i_3_n_7 }),
        .S({post_count_reg[3:1],\post_count[0]_i_5_n_0 }));
  CARRY4 \post_count_reg[0]_i_4 
       (.CI(\post_count_reg[0]_i_6_n_0 ),
        .CO({\NLW_post_count_reg[0]_i_4_CO_UNCONNECTED [3],time_out_post0,\post_count_reg[0]_i_4_n_2 ,\post_count_reg[0]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_post_count_reg[0]_i_4_O_UNCONNECTED [3:0]),
        .S({1'b0,\post_count[0]_i_7_n_0 ,\post_count[0]_i_8_n_0 ,\post_count[0]_i_9_n_0 }));
  CARRY4 \post_count_reg[0]_i_6 
       (.CI(\post_count_reg[0]_i_10_n_0 ),
        .CO({\post_count_reg[0]_i_6_n_0 ,\post_count_reg[0]_i_6_n_1 ,\post_count_reg[0]_i_6_n_2 ,\post_count_reg[0]_i_6_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_post_count_reg[0]_i_6_O_UNCONNECTED [3:0]),
        .S({\post_count[0]_i_11_n_0 ,\post_count[0]_i_12_n_0 ,\post_count[0]_i_13_n_0 ,\post_count[0]_i_14_n_0 }));
  FDRE \post_count_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[8]_i_1_n_5 ),
        .Q(post_count_reg[10]),
        .R(clear));
  FDRE \post_count_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[8]_i_1_n_4 ),
        .Q(post_count_reg[11]),
        .R(clear));
  FDRE \post_count_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[12]_i_1_n_7 ),
        .Q(post_count_reg[12]),
        .R(clear));
  CARRY4 \post_count_reg[12]_i_1 
       (.CI(\post_count_reg[8]_i_1_n_0 ),
        .CO({\post_count_reg[12]_i_1_n_0 ,\post_count_reg[12]_i_1_n_1 ,\post_count_reg[12]_i_1_n_2 ,\post_count_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\post_count_reg[12]_i_1_n_4 ,\post_count_reg[12]_i_1_n_5 ,\post_count_reg[12]_i_1_n_6 ,\post_count_reg[12]_i_1_n_7 }),
        .S(post_count_reg[15:12]));
  FDRE \post_count_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[12]_i_1_n_6 ),
        .Q(post_count_reg[13]),
        .R(clear));
  FDRE \post_count_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[12]_i_1_n_5 ),
        .Q(post_count_reg[14]),
        .R(clear));
  FDRE \post_count_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[12]_i_1_n_4 ),
        .Q(post_count_reg[15]),
        .R(clear));
  FDRE \post_count_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[16]_i_1_n_7 ),
        .Q(post_count_reg[16]),
        .R(clear));
  CARRY4 \post_count_reg[16]_i_1 
       (.CI(\post_count_reg[12]_i_1_n_0 ),
        .CO({\post_count_reg[16]_i_1_n_0 ,\post_count_reg[16]_i_1_n_1 ,\post_count_reg[16]_i_1_n_2 ,\post_count_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\post_count_reg[16]_i_1_n_4 ,\post_count_reg[16]_i_1_n_5 ,\post_count_reg[16]_i_1_n_6 ,\post_count_reg[16]_i_1_n_7 }),
        .S(post_count_reg[19:16]));
  FDRE \post_count_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[16]_i_1_n_6 ),
        .Q(post_count_reg[17]),
        .R(clear));
  FDRE \post_count_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[16]_i_1_n_5 ),
        .Q(post_count_reg[18]),
        .R(clear));
  FDRE \post_count_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[16]_i_1_n_4 ),
        .Q(post_count_reg[19]),
        .R(clear));
  FDRE \post_count_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[0]_i_3_n_6 ),
        .Q(post_count_reg[1]),
        .R(clear));
  FDRE \post_count_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[20]_i_1_n_7 ),
        .Q(post_count_reg[20]),
        .R(clear));
  CARRY4 \post_count_reg[20]_i_1 
       (.CI(\post_count_reg[16]_i_1_n_0 ),
        .CO({\post_count_reg[20]_i_1_n_0 ,\post_count_reg[20]_i_1_n_1 ,\post_count_reg[20]_i_1_n_2 ,\post_count_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\post_count_reg[20]_i_1_n_4 ,\post_count_reg[20]_i_1_n_5 ,\post_count_reg[20]_i_1_n_6 ,\post_count_reg[20]_i_1_n_7 }),
        .S(post_count_reg[23:20]));
  FDRE \post_count_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[20]_i_1_n_6 ),
        .Q(post_count_reg[21]),
        .R(clear));
  FDRE \post_count_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[20]_i_1_n_5 ),
        .Q(post_count_reg[22]),
        .R(clear));
  FDRE \post_count_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[20]_i_1_n_4 ),
        .Q(post_count_reg[23]),
        .R(clear));
  FDRE \post_count_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[24]_i_1_n_7 ),
        .Q(post_count_reg[24]),
        .R(clear));
  CARRY4 \post_count_reg[24]_i_1 
       (.CI(\post_count_reg[20]_i_1_n_0 ),
        .CO({\post_count_reg[24]_i_1_n_0 ,\post_count_reg[24]_i_1_n_1 ,\post_count_reg[24]_i_1_n_2 ,\post_count_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\post_count_reg[24]_i_1_n_4 ,\post_count_reg[24]_i_1_n_5 ,\post_count_reg[24]_i_1_n_6 ,\post_count_reg[24]_i_1_n_7 }),
        .S(post_count_reg[27:24]));
  FDRE \post_count_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[24]_i_1_n_6 ),
        .Q(post_count_reg[25]),
        .R(clear));
  FDRE \post_count_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[24]_i_1_n_5 ),
        .Q(post_count_reg[26]),
        .R(clear));
  FDRE \post_count_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[24]_i_1_n_4 ),
        .Q(post_count_reg[27]),
        .R(clear));
  FDRE \post_count_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[28]_i_1_n_7 ),
        .Q(post_count_reg[28]),
        .R(clear));
  CARRY4 \post_count_reg[28]_i_1 
       (.CI(\post_count_reg[24]_i_1_n_0 ),
        .CO({\NLW_post_count_reg[28]_i_1_CO_UNCONNECTED [3],\post_count_reg[28]_i_1_n_1 ,\post_count_reg[28]_i_1_n_2 ,\post_count_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\post_count_reg[28]_i_1_n_4 ,\post_count_reg[28]_i_1_n_5 ,\post_count_reg[28]_i_1_n_6 ,\post_count_reg[28]_i_1_n_7 }),
        .S(post_count_reg[31:28]));
  FDRE \post_count_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[28]_i_1_n_6 ),
        .Q(post_count_reg[29]),
        .R(clear));
  FDRE \post_count_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[0]_i_3_n_5 ),
        .Q(post_count_reg[2]),
        .R(clear));
  FDRE \post_count_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[28]_i_1_n_5 ),
        .Q(post_count_reg[30]),
        .R(clear));
  FDRE \post_count_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[28]_i_1_n_4 ),
        .Q(post_count_reg[31]),
        .R(clear));
  FDRE \post_count_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[0]_i_3_n_4 ),
        .Q(post_count_reg[3]),
        .R(clear));
  FDRE \post_count_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[4]_i_1_n_7 ),
        .Q(post_count_reg[4]),
        .R(clear));
  CARRY4 \post_count_reg[4]_i_1 
       (.CI(\post_count_reg[0]_i_3_n_0 ),
        .CO({\post_count_reg[4]_i_1_n_0 ,\post_count_reg[4]_i_1_n_1 ,\post_count_reg[4]_i_1_n_2 ,\post_count_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\post_count_reg[4]_i_1_n_4 ,\post_count_reg[4]_i_1_n_5 ,\post_count_reg[4]_i_1_n_6 ,\post_count_reg[4]_i_1_n_7 }),
        .S(post_count_reg[7:4]));
  FDRE \post_count_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[4]_i_1_n_6 ),
        .Q(post_count_reg[5]),
        .R(clear));
  FDRE \post_count_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[4]_i_1_n_5 ),
        .Q(post_count_reg[6]),
        .R(clear));
  FDRE \post_count_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[4]_i_1_n_4 ),
        .Q(post_count_reg[7]),
        .R(clear));
  FDRE \post_count_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[8]_i_1_n_7 ),
        .Q(post_count_reg[8]),
        .R(clear));
  CARRY4 \post_count_reg[8]_i_1 
       (.CI(\post_count_reg[4]_i_1_n_0 ),
        .CO({\post_count_reg[8]_i_1_n_0 ,\post_count_reg[8]_i_1_n_1 ,\post_count_reg[8]_i_1_n_2 ,\post_count_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\post_count_reg[8]_i_1_n_4 ,\post_count_reg[8]_i_1_n_5 ,\post_count_reg[8]_i_1_n_6 ,\post_count_reg[8]_i_1_n_7 }),
        .S(post_count_reg[11:8]));
  FDRE \post_count_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(\post_count[0]_i_2_n_0 ),
        .D(\post_count_reg[8]_i_1_n_6 ),
        .Q(post_count_reg[9]),
        .R(clear));
  LUT1 #(
    .INIT(2'h1)) 
    \prepare_zero_cnt[0]_i_4 
       (.I0(prepare_zero_cnt_reg[0]),
        .O(\prepare_zero_cnt[0]_i_4_n_0 ));
  FDRE \prepare_zero_cnt_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[0]_i_3_n_7 ),
        .Q(prepare_zero_cnt_reg[0]),
        .R(xmit_clk_r0));
  CARRY4 \prepare_zero_cnt_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\prepare_zero_cnt_reg[0]_i_3_n_0 ,\prepare_zero_cnt_reg[0]_i_3_n_1 ,\prepare_zero_cnt_reg[0]_i_3_n_2 ,\prepare_zero_cnt_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\prepare_zero_cnt_reg[0]_i_3_n_4 ,\prepare_zero_cnt_reg[0]_i_3_n_5 ,\prepare_zero_cnt_reg[0]_i_3_n_6 ,\prepare_zero_cnt_reg[0]_i_3_n_7 }),
        .S({prepare_zero_cnt_reg[3:1],\prepare_zero_cnt[0]_i_4_n_0 }));
  FDRE \prepare_zero_cnt_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[8]_i_1_n_5 ),
        .Q(prepare_zero_cnt_reg[10]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[8]_i_1_n_4 ),
        .Q(prepare_zero_cnt_reg[11]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[12]_i_1_n_7 ),
        .Q(prepare_zero_cnt_reg[12]),
        .R(xmit_clk_r0));
  CARRY4 \prepare_zero_cnt_reg[12]_i_1 
       (.CI(\prepare_zero_cnt_reg[8]_i_1_n_0 ),
        .CO({\prepare_zero_cnt_reg[12]_i_1_n_0 ,\prepare_zero_cnt_reg[12]_i_1_n_1 ,\prepare_zero_cnt_reg[12]_i_1_n_2 ,\prepare_zero_cnt_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\prepare_zero_cnt_reg[12]_i_1_n_4 ,\prepare_zero_cnt_reg[12]_i_1_n_5 ,\prepare_zero_cnt_reg[12]_i_1_n_6 ,\prepare_zero_cnt_reg[12]_i_1_n_7 }),
        .S(prepare_zero_cnt_reg[15:12]));
  FDRE \prepare_zero_cnt_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[12]_i_1_n_6 ),
        .Q(prepare_zero_cnt_reg[13]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[12]_i_1_n_5 ),
        .Q(prepare_zero_cnt_reg[14]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[12]_i_1_n_4 ),
        .Q(prepare_zero_cnt_reg[15]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[16]_i_1_n_7 ),
        .Q(prepare_zero_cnt_reg[16]),
        .R(xmit_clk_r0));
  CARRY4 \prepare_zero_cnt_reg[16]_i_1 
       (.CI(\prepare_zero_cnt_reg[12]_i_1_n_0 ),
        .CO({\prepare_zero_cnt_reg[16]_i_1_n_0 ,\prepare_zero_cnt_reg[16]_i_1_n_1 ,\prepare_zero_cnt_reg[16]_i_1_n_2 ,\prepare_zero_cnt_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\prepare_zero_cnt_reg[16]_i_1_n_4 ,\prepare_zero_cnt_reg[16]_i_1_n_5 ,\prepare_zero_cnt_reg[16]_i_1_n_6 ,\prepare_zero_cnt_reg[16]_i_1_n_7 }),
        .S(prepare_zero_cnt_reg[19:16]));
  FDRE \prepare_zero_cnt_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[16]_i_1_n_6 ),
        .Q(prepare_zero_cnt_reg[17]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[16]_i_1_n_5 ),
        .Q(prepare_zero_cnt_reg[18]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[16]_i_1_n_4 ),
        .Q(prepare_zero_cnt_reg[19]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[0]_i_3_n_6 ),
        .Q(prepare_zero_cnt_reg[1]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[20]_i_1_n_7 ),
        .Q(prepare_zero_cnt_reg[20]),
        .R(xmit_clk_r0));
  CARRY4 \prepare_zero_cnt_reg[20]_i_1 
       (.CI(\prepare_zero_cnt_reg[16]_i_1_n_0 ),
        .CO({\prepare_zero_cnt_reg[20]_i_1_n_0 ,\prepare_zero_cnt_reg[20]_i_1_n_1 ,\prepare_zero_cnt_reg[20]_i_1_n_2 ,\prepare_zero_cnt_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\prepare_zero_cnt_reg[20]_i_1_n_4 ,\prepare_zero_cnt_reg[20]_i_1_n_5 ,\prepare_zero_cnt_reg[20]_i_1_n_6 ,\prepare_zero_cnt_reg[20]_i_1_n_7 }),
        .S(prepare_zero_cnt_reg[23:20]));
  FDRE \prepare_zero_cnt_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[20]_i_1_n_6 ),
        .Q(prepare_zero_cnt_reg[21]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[20]_i_1_n_5 ),
        .Q(prepare_zero_cnt_reg[22]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[20]_i_1_n_4 ),
        .Q(prepare_zero_cnt_reg[23]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[24]_i_1_n_7 ),
        .Q(prepare_zero_cnt_reg[24]),
        .R(xmit_clk_r0));
  CARRY4 \prepare_zero_cnt_reg[24]_i_1 
       (.CI(\prepare_zero_cnt_reg[20]_i_1_n_0 ),
        .CO({\prepare_zero_cnt_reg[24]_i_1_n_0 ,\prepare_zero_cnt_reg[24]_i_1_n_1 ,\prepare_zero_cnt_reg[24]_i_1_n_2 ,\prepare_zero_cnt_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\prepare_zero_cnt_reg[24]_i_1_n_4 ,\prepare_zero_cnt_reg[24]_i_1_n_5 ,\prepare_zero_cnt_reg[24]_i_1_n_6 ,\prepare_zero_cnt_reg[24]_i_1_n_7 }),
        .S(prepare_zero_cnt_reg[27:24]));
  FDRE \prepare_zero_cnt_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[24]_i_1_n_6 ),
        .Q(prepare_zero_cnt_reg[25]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[24]_i_1_n_5 ),
        .Q(prepare_zero_cnt_reg[26]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[24]_i_1_n_4 ),
        .Q(prepare_zero_cnt_reg[27]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[28]_i_1_n_7 ),
        .Q(prepare_zero_cnt_reg[28]),
        .R(xmit_clk_r0));
  CARRY4 \prepare_zero_cnt_reg[28]_i_1 
       (.CI(\prepare_zero_cnt_reg[24]_i_1_n_0 ),
        .CO({\NLW_prepare_zero_cnt_reg[28]_i_1_CO_UNCONNECTED [3],\prepare_zero_cnt_reg[28]_i_1_n_1 ,\prepare_zero_cnt_reg[28]_i_1_n_2 ,\prepare_zero_cnt_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\prepare_zero_cnt_reg[28]_i_1_n_4 ,\prepare_zero_cnt_reg[28]_i_1_n_5 ,\prepare_zero_cnt_reg[28]_i_1_n_6 ,\prepare_zero_cnt_reg[28]_i_1_n_7 }),
        .S(prepare_zero_cnt_reg[31:28]));
  FDRE \prepare_zero_cnt_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[28]_i_1_n_6 ),
        .Q(prepare_zero_cnt_reg[29]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[0]_i_3_n_5 ),
        .Q(prepare_zero_cnt_reg[2]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[28]_i_1_n_5 ),
        .Q(prepare_zero_cnt_reg[30]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[28]_i_1_n_4 ),
        .Q(prepare_zero_cnt_reg[31]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[0]_i_3_n_4 ),
        .Q(prepare_zero_cnt_reg[3]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[4]_i_1_n_7 ),
        .Q(prepare_zero_cnt_reg[4]),
        .R(xmit_clk_r0));
  CARRY4 \prepare_zero_cnt_reg[4]_i_1 
       (.CI(\prepare_zero_cnt_reg[0]_i_3_n_0 ),
        .CO({\prepare_zero_cnt_reg[4]_i_1_n_0 ,\prepare_zero_cnt_reg[4]_i_1_n_1 ,\prepare_zero_cnt_reg[4]_i_1_n_2 ,\prepare_zero_cnt_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\prepare_zero_cnt_reg[4]_i_1_n_4 ,\prepare_zero_cnt_reg[4]_i_1_n_5 ,\prepare_zero_cnt_reg[4]_i_1_n_6 ,\prepare_zero_cnt_reg[4]_i_1_n_7 }),
        .S(prepare_zero_cnt_reg[7:4]));
  FDRE \prepare_zero_cnt_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[4]_i_1_n_6 ),
        .Q(prepare_zero_cnt_reg[5]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[4]_i_1_n_5 ),
        .Q(prepare_zero_cnt_reg[6]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[4]_i_1_n_4 ),
        .Q(prepare_zero_cnt_reg[7]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[8]_i_1_n_7 ),
        .Q(prepare_zero_cnt_reg[8]),
        .R(xmit_clk_r0));
  CARRY4 \prepare_zero_cnt_reg[8]_i_1 
       (.CI(\prepare_zero_cnt_reg[4]_i_1_n_0 ),
        .CO({\prepare_zero_cnt_reg[8]_i_1_n_0 ,\prepare_zero_cnt_reg[8]_i_1_n_1 ,\prepare_zero_cnt_reg[8]_i_1_n_2 ,\prepare_zero_cnt_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\prepare_zero_cnt_reg[8]_i_1_n_4 ,\prepare_zero_cnt_reg[8]_i_1_n_5 ,\prepare_zero_cnt_reg[8]_i_1_n_6 ,\prepare_zero_cnt_reg[8]_i_1_n_7 }),
        .S(prepare_zero_cnt_reg[11:8]));
  FDRE \prepare_zero_cnt_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(prepare_zero_cnt),
        .D(\prepare_zero_cnt_reg[8]_i_1_n_6 ),
        .Q(prepare_zero_cnt_reg[9]),
        .R(xmit_clk_r0));
  FDSE reset_timer_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths_coreclk_sync_i_n_13),
        .Q(reset_timer_r_reg_n_0),
        .S(tx_cl_lp_cn_r_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_93 start_clkpost_byteclk_sync_i
       (.CO(time_out_post0),
        .oserdes_clkdiv_in(oserdes_clkdiv_in),
        .out(s_level_out_d3_reg_0),
        .s_level_out_d1_cdc_to_reg_0(start_clkpost_r_reg_n_0),
        .s_level_out_d3_reg_0(start_clkpost_byteclk_sync_i_n_1),
        .time_out_post_reg(time_out_post_reg_n_0));
  FDRE start_clkpost_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths_negedge_sync_i_n_8),
        .Q(start_clkpost_r_reg_n_0),
        .R(tx_cl_lp_cn_r_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_94 start_clkzero_byteclk_sync_i
       (.CO(xmit_clk_r_reg_i_2_n_1),
        .cl_txrequesths_r2(cl_txrequesths_r2),
        .init_done_byteclk_pos_r(init_done_byteclk_pos_r),
        .oserdes_clkdiv_in(oserdes_clkdiv_in),
        .out(start_clkzero_byteclk_sync),
        .prepare_zero_cnt(prepare_zero_cnt),
        .\prepare_zero_cnt_reg[31] (time_out_post_reg_n_0),
        .\prepare_zero_cnt_reg[31]_0 (cl_txrequesths_r2_reg_0),
        .s_level_out_d1_cdc_to_reg_0(start_clkzero_r_reg_n_0),
        .start_clkzero_byteclk_sync_r(start_clkzero_byteclk_sync_r),
        .xmit_clk_r(xmit_clk_r),
        .xmit_clk_r0(xmit_clk_r0),
        .xmit_clk_r_reg(start_clkzero_byteclk_sync_i_n_1));
  FDRE start_clkzero_byteclk_sync_r_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(start_clkzero_byteclk_sync),
        .Q(start_clkzero_byteclk_sync_r),
        .R(cl_txrequesths_r2_reg_0));
  LUT6 #(
    .INIT(64'h5555454500000040)) 
    start_clkzero_r_i_1
       (.I0(start_clkzero_r_reg_0),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[1] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[3] ),
        .I5(start_clkzero_r_reg_n_0),
        .O(start_clkzero_r_i_1_n_0));
  FDCE start_clkzero_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(start_clkzero_r_i_1_n_0),
        .Q(start_clkzero_r_reg_n_0));
  LUT6 #(
    .INIT(64'hEFFFFFFFFFFFFFFF)) 
    \time_out_counter[0]_i_1 
       (.I0(reset_timer_r_reg_n_0),
        .I1(\cl_tx_state_reg_n_0_[2] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .I5(time_out_counter2),
        .O(\time_out_counter[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \time_out_counter[0]_i_10 
       (.I0(time_out_counter_reg[12]),
        .I1(time_out_counter_reg[13]),
        .O(\time_out_counter[0]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \time_out_counter[0]_i_11 
       (.I0(time_out_counter_reg[11]),
        .I1(time_out_counter_reg[10]),
        .I2(time_out_counter_reg[9]),
        .O(\time_out_counter[0]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \time_out_counter[0]_i_12 
       (.I0(time_out_counter_reg[8]),
        .I1(time_out_counter_reg[7]),
        .I2(time_out_counter_reg[6]),
        .O(\time_out_counter[0]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \time_out_counter[0]_i_13 
       (.I0(time_out_counter_reg[5]),
        .I1(time_out_counter_reg[4]),
        .I2(time_out_counter_reg[3]),
        .O(\time_out_counter[0]_i_13_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \time_out_counter[0]_i_14 
       (.I0(time_out_counter_reg[0]),
        .I1(time_out_counter_reg[2]),
        .I2(time_out_counter_reg[1]),
        .O(\time_out_counter[0]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \time_out_counter[0]_i_4 
       (.I0(time_out_counter_reg[0]),
        .I1(reset_timer_r_reg_n_0),
        .O(\time_out_counter[0]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \time_out_counter[0]_i_5 
       (.I0(time_out_counter_reg[3]),
        .I1(reset_timer_r_reg_n_0),
        .O(\time_out_counter[0]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \time_out_counter[0]_i_6 
       (.I0(time_out_counter_reg[2]),
        .I1(reset_timer_r_reg_n_0),
        .O(\time_out_counter[0]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \time_out_counter[0]_i_7 
       (.I0(time_out_counter_reg[1]),
        .I1(reset_timer_r_reg_n_0),
        .O(\time_out_counter[0]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \time_out_counter[0]_i_8 
       (.I0(time_out_counter_reg[0]),
        .I1(reset_timer_r_reg_n_0),
        .O(\time_out_counter[0]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \time_out_counter[12]_i_2 
       (.I0(time_out_counter_reg[13]),
        .I1(reset_timer_r_reg_n_0),
        .O(\time_out_counter[12]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \time_out_counter[12]_i_3 
       (.I0(time_out_counter_reg[12]),
        .I1(reset_timer_r_reg_n_0),
        .O(\time_out_counter[12]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \time_out_counter[4]_i_2 
       (.I0(time_out_counter_reg[7]),
        .I1(reset_timer_r_reg_n_0),
        .O(\time_out_counter[4]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \time_out_counter[4]_i_3 
       (.I0(time_out_counter_reg[6]),
        .I1(reset_timer_r_reg_n_0),
        .O(\time_out_counter[4]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \time_out_counter[4]_i_4 
       (.I0(time_out_counter_reg[5]),
        .I1(reset_timer_r_reg_n_0),
        .O(\time_out_counter[4]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \time_out_counter[4]_i_5 
       (.I0(time_out_counter_reg[4]),
        .I1(reset_timer_r_reg_n_0),
        .O(\time_out_counter[4]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \time_out_counter[8]_i_2 
       (.I0(time_out_counter_reg[11]),
        .I1(reset_timer_r_reg_n_0),
        .O(\time_out_counter[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \time_out_counter[8]_i_3 
       (.I0(time_out_counter_reg[10]),
        .I1(reset_timer_r_reg_n_0),
        .O(\time_out_counter[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \time_out_counter[8]_i_4 
       (.I0(time_out_counter_reg[9]),
        .I1(reset_timer_r_reg_n_0),
        .O(\time_out_counter[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \time_out_counter[8]_i_5 
       (.I0(time_out_counter_reg[8]),
        .I1(reset_timer_r_reg_n_0),
        .O(\time_out_counter[8]_i_5_n_0 ));
  FDCE \time_out_counter_reg[0] 
       (.C(core_clk),
        .CE(\time_out_counter[0]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter_reg[0]_i_2_n_7 ),
        .Q(time_out_counter_reg[0]));
  CARRY4 \time_out_counter_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\time_out_counter_reg[0]_i_2_n_0 ,\time_out_counter_reg[0]_i_2_n_1 ,\time_out_counter_reg[0]_i_2_n_2 ,\time_out_counter_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\time_out_counter[0]_i_4_n_0 }),
        .O({\time_out_counter_reg[0]_i_2_n_4 ,\time_out_counter_reg[0]_i_2_n_5 ,\time_out_counter_reg[0]_i_2_n_6 ,\time_out_counter_reg[0]_i_2_n_7 }),
        .S({\time_out_counter[0]_i_5_n_0 ,\time_out_counter[0]_i_6_n_0 ,\time_out_counter[0]_i_7_n_0 ,\time_out_counter[0]_i_8_n_0 }));
  CARRY4 \time_out_counter_reg[0]_i_3 
       (.CI(\time_out_counter_reg[0]_i_9_n_0 ),
        .CO({\NLW_time_out_counter_reg[0]_i_3_CO_UNCONNECTED [3:1],time_out_counter2}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_time_out_counter_reg[0]_i_3_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,1'b0,\time_out_counter[0]_i_10_n_0 }));
  CARRY4 \time_out_counter_reg[0]_i_9 
       (.CI(1'b0),
        .CO({\time_out_counter_reg[0]_i_9_n_0 ,\time_out_counter_reg[0]_i_9_n_1 ,\time_out_counter_reg[0]_i_9_n_2 ,\time_out_counter_reg[0]_i_9_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_time_out_counter_reg[0]_i_9_O_UNCONNECTED [3:0]),
        .S({\time_out_counter[0]_i_11_n_0 ,\time_out_counter[0]_i_12_n_0 ,\time_out_counter[0]_i_13_n_0 ,\time_out_counter[0]_i_14_n_0 }));
  FDCE \time_out_counter_reg[10] 
       (.C(core_clk),
        .CE(\time_out_counter[0]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter_reg[8]_i_1_n_5 ),
        .Q(time_out_counter_reg[10]));
  FDCE \time_out_counter_reg[11] 
       (.C(core_clk),
        .CE(\time_out_counter[0]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter_reg[8]_i_1_n_4 ),
        .Q(time_out_counter_reg[11]));
  FDCE \time_out_counter_reg[12] 
       (.C(core_clk),
        .CE(\time_out_counter[0]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter_reg[12]_i_1_n_7 ),
        .Q(time_out_counter_reg[12]));
  CARRY4 \time_out_counter_reg[12]_i_1 
       (.CI(\time_out_counter_reg[8]_i_1_n_0 ),
        .CO({\NLW_time_out_counter_reg[12]_i_1_CO_UNCONNECTED [3:1],\time_out_counter_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_time_out_counter_reg[12]_i_1_O_UNCONNECTED [3:2],\time_out_counter_reg[12]_i_1_n_6 ,\time_out_counter_reg[12]_i_1_n_7 }),
        .S({1'b0,1'b0,\time_out_counter[12]_i_2_n_0 ,\time_out_counter[12]_i_3_n_0 }));
  FDCE \time_out_counter_reg[13] 
       (.C(core_clk),
        .CE(\time_out_counter[0]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter_reg[12]_i_1_n_6 ),
        .Q(time_out_counter_reg[13]));
  FDCE \time_out_counter_reg[1] 
       (.C(core_clk),
        .CE(\time_out_counter[0]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter_reg[0]_i_2_n_6 ),
        .Q(time_out_counter_reg[1]));
  FDCE \time_out_counter_reg[2] 
       (.C(core_clk),
        .CE(\time_out_counter[0]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter_reg[0]_i_2_n_5 ),
        .Q(time_out_counter_reg[2]));
  FDCE \time_out_counter_reg[3] 
       (.C(core_clk),
        .CE(\time_out_counter[0]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter_reg[0]_i_2_n_4 ),
        .Q(time_out_counter_reg[3]));
  FDCE \time_out_counter_reg[4] 
       (.C(core_clk),
        .CE(\time_out_counter[0]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter_reg[4]_i_1_n_7 ),
        .Q(time_out_counter_reg[4]));
  CARRY4 \time_out_counter_reg[4]_i_1 
       (.CI(\time_out_counter_reg[0]_i_2_n_0 ),
        .CO({\time_out_counter_reg[4]_i_1_n_0 ,\time_out_counter_reg[4]_i_1_n_1 ,\time_out_counter_reg[4]_i_1_n_2 ,\time_out_counter_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[4]_i_1_n_4 ,\time_out_counter_reg[4]_i_1_n_5 ,\time_out_counter_reg[4]_i_1_n_6 ,\time_out_counter_reg[4]_i_1_n_7 }),
        .S({\time_out_counter[4]_i_2_n_0 ,\time_out_counter[4]_i_3_n_0 ,\time_out_counter[4]_i_4_n_0 ,\time_out_counter[4]_i_5_n_0 }));
  FDCE \time_out_counter_reg[5] 
       (.C(core_clk),
        .CE(\time_out_counter[0]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter_reg[4]_i_1_n_6 ),
        .Q(time_out_counter_reg[5]));
  FDCE \time_out_counter_reg[6] 
       (.C(core_clk),
        .CE(\time_out_counter[0]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter_reg[4]_i_1_n_5 ),
        .Q(time_out_counter_reg[6]));
  FDCE \time_out_counter_reg[7] 
       (.C(core_clk),
        .CE(\time_out_counter[0]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter_reg[4]_i_1_n_4 ),
        .Q(time_out_counter_reg[7]));
  FDCE \time_out_counter_reg[8] 
       (.C(core_clk),
        .CE(\time_out_counter[0]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter_reg[8]_i_1_n_7 ),
        .Q(time_out_counter_reg[8]));
  CARRY4 \time_out_counter_reg[8]_i_1 
       (.CI(\time_out_counter_reg[4]_i_1_n_0 ),
        .CO({\time_out_counter_reg[8]_i_1_n_0 ,\time_out_counter_reg[8]_i_1_n_1 ,\time_out_counter_reg[8]_i_1_n_2 ,\time_out_counter_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[8]_i_1_n_4 ,\time_out_counter_reg[8]_i_1_n_5 ,\time_out_counter_reg[8]_i_1_n_6 ,\time_out_counter_reg[8]_i_1_n_7 }),
        .S({\time_out_counter[8]_i_2_n_0 ,\time_out_counter[8]_i_3_n_0 ,\time_out_counter[8]_i_4_n_0 ,\time_out_counter[8]_i_5_n_0 }));
  FDCE \time_out_counter_reg[9] 
       (.C(core_clk),
        .CE(\time_out_counter[0]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter_reg[8]_i_1_n_6 ),
        .Q(time_out_counter_reg[9]));
  LUT6 #(
    .INIT(64'h5555555500004000)) 
    time_out_hsexit_i_1
       (.I0(reset_timer_r_reg_n_0),
        .I1(time_out_counter2),
        .I2(\cl_tx_state_reg_n_0_[1] ),
        .I3(time_out_hsexit_i_2_n_0),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .I5(time_out_hsexit_reg_n_0),
        .O(time_out_hsexit_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h8)) 
    time_out_hsexit_i_2
       (.I0(\cl_tx_state_reg_n_0_[0] ),
        .I1(\cl_tx_state_reg_n_0_[3] ),
        .O(time_out_hsexit_i_2_n_0));
  FDCE time_out_hsexit_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(time_out_hsexit_i_1_n_0),
        .Q(time_out_hsexit_reg_n_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_95 time_out_post_coreclk_sync_i
       (.CO(time_out_trail0),
        .\cl_tx_state[3]_i_2 (time_out_hsexit_reg_n_0),
        .\cl_tx_state[3]_i_2_0 (\cl_tx_state[3]_i_2 ),
        .clear_0(clear_0),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .out(time_out_post_coreclk_sync),
        .s_level_out_d3_reg_0(time_out_post_coreclk_sync_i_n_3),
        .start_clkpost_r_reg(start_clkpost_r_reg_0),
        .start_clkpost_r_reg_0(cl_txrequesths_negedge_sync_i_n_4),
        .start_clkpost_r_reg_1(s_level_out_d3_reg),
        .time_out_hsexit_reg(time_out_post_coreclk_sync_i_n_4),
        .time_out_post_r2(time_out_post_r2),
        .time_out_trail_reg(time_out_post_coreclk_sync_i_n_1),
        .time_out_trail_reg_0(time_out_trail_reg_n_0),
        .trail_count_reg(trail_count_reg[0]),
        .\trail_count_reg[9] (\cl_tx_state_reg_n_0_[1] ),
        .\trail_count_reg[9]_0 (\cl_tx_state_reg_n_0_[3] ),
        .\trail_count_reg[9]_1 (\cl_tx_state_reg_n_0_[2] ),
        .\trail_count_reg[9]_2 (\cl_tx_state_reg_n_0_[0] ),
        .trail_count_reg_0_sp_1(time_out_post_coreclk_sync_i_n_5));
  FDRE time_out_post_r1_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(time_out_post_reg_n_0),
        .Q(time_out_post_r1),
        .R(1'b0));
  FDRE time_out_post_r2_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(time_out_post_r1),
        .Q(time_out_post_r2),
        .R(1'b0));
  FDRE time_out_post_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(start_clkpost_byteclk_sync_i_n_1),
        .Q(time_out_post_reg_n_0),
        .R(cl_txrequesths_r2_reg_0));
  LUT5 #(
    .INIT(32'h55550040)) 
    time_out_prepare_i_1
       (.I0(reset_timer_r_reg_n_0),
        .I1(time_out_prepare1),
        .I2(time_out_prepare_i_3_n_0),
        .I3(\cl_tx_state_reg_n_0_[1] ),
        .I4(time_out_prepare_reg_n_0),
        .O(time_out_prepare_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFEEE7FFFFEFE)) 
    time_out_prepare_i_10
       (.I0(PREPARE_TIMEOUT1_0[2]),
        .I1(PREPARE_TIMEOUT1_0[1]),
        .I2(PREPARE_TIMEOUT1_1[1]),
        .I3(PREPARE_TIMEOUT1_1[0]),
        .I4(PREPARE_TIMEOUT1_0[0]),
        .I5(time_out_prepare_i_19_n_0),
        .O(time_out_prepare_i_10_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    time_out_prepare_i_100
       (.I0(PREPARE_TIMEOUT1_1[0]),
        .I1(PREPARE_TIMEOUT1_n_102),
        .O(time_out_prepare_i_100_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    time_out_prepare_i_101
       (.I0(PREPARE_TIMEOUT1_n_100),
        .I1(PREPARE_TIMEOUT1_0[0]),
        .I2(PREPARE_TIMEOUT1_0[1]),
        .I3(PREPARE_TIMEOUT1_n_99),
        .O(time_out_prepare_i_101_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    time_out_prepare_i_102
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT1_1[1]),
        .I2(PREPARE_TIMEOUT1_0[0]),
        .I3(PREPARE_TIMEOUT1_n_100),
        .O(time_out_prepare_i_102_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    time_out_prepare_i_103
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT1_1[0]),
        .I2(PREPARE_TIMEOUT1_1[1]),
        .I3(PREPARE_TIMEOUT1_n_101),
        .O(time_out_prepare_i_103_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    time_out_prepare_i_104
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT1_1[0]),
        .O(time_out_prepare_i_104_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    time_out_prepare_i_105
       (.I0(PREPARE_TIMEOUT1_n_103),
        .I1(PREPARE_TIMEOUT1_n_105),
        .I2(PREPARE_TIMEOUT1_n_101),
        .O(time_out_prepare_i_105_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    time_out_prepare_i_106
       (.I0(PREPARE_TIMEOUT1_n_105),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_101),
        .O(time_out_prepare_i_106_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    time_out_prepare_i_107
       (.I0(PREPARE_TIMEOUT1_n_103),
        .I1(PREPARE_TIMEOUT1_n_105),
        .O(time_out_prepare_i_107_n_0));
  LUT6 #(
    .INIT(64'h8E71718E718E8E71)) 
    time_out_prepare_i_108
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT1_n_105),
        .I2(PREPARE_TIMEOUT1_n_103),
        .I3(PREPARE_TIMEOUT1_n_104),
        .I4(PREPARE_TIMEOUT1_n_102),
        .I5(PREPARE_TIMEOUT1_n_100),
        .O(time_out_prepare_i_108_n_0));
  LUT5 #(
    .INIT(32'h69966969)) 
    time_out_prepare_i_109
       (.I0(PREPARE_TIMEOUT1_n_105),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_101),
        .I3(PREPARE_TIMEOUT1_n_104),
        .I4(PREPARE_TIMEOUT1_n_102),
        .O(time_out_prepare_i_109_n_0));
  LUT6 #(
    .INIT(64'hBFFFFFFF40000000)) 
    time_out_prepare_i_11
       (.I0(time_out_prepare_i_19_n_0),
        .I1(PREPARE_TIMEOUT1_0[0]),
        .I2(PREPARE_TIMEOUT1_1[0]),
        .I3(PREPARE_TIMEOUT1_1[1]),
        .I4(PREPARE_TIMEOUT1_0[1]),
        .I5(PREPARE_TIMEOUT1_0[2]),
        .O(PREPARE_TIMEOUT0[4]));
  LUT4 #(
    .INIT(16'h2DD2)) 
    time_out_prepare_i_110
       (.I0(PREPARE_TIMEOUT1_n_105),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_104),
        .I3(PREPARE_TIMEOUT1_n_102),
        .O(time_out_prepare_i_110_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    time_out_prepare_i_111
       (.I0(PREPARE_TIMEOUT1_n_103),
        .I1(PREPARE_TIMEOUT1_n_105),
        .O(time_out_prepare_i_111_n_0));
  LUT6 #(
    .INIT(64'hEAEAEAEA6E6EEA6E)) 
    time_out_prepare_i_12
       (.I0(PREPARE_TIMEOUT1_0[0]),
        .I1(PREPARE_TIMEOUT1_1[1]),
        .I2(PREPARE_TIMEOUT1_1[0]),
        .I3(time_out_prepare_i_10_0),
        .I4(PREPARE_TIMEOUT1_n_89),
        .I5(time_out_prepare_reg_i_15_n_2),
        .O(time_out_prepare_i_12_n_0));
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    time_out_prepare_i_13
       (.I0(time_out_prepare_i_19_n_0),
        .I1(PREPARE_TIMEOUT1_1[1]),
        .I2(PREPARE_TIMEOUT1_1[0]),
        .I3(PREPARE_TIMEOUT1_0[0]),
        .I4(PREPARE_TIMEOUT1_0[1]),
        .O(PREPARE_TIMEOUT0[3]));
  LUT6 #(
    .INIT(64'h4128281441284128)) 
    time_out_prepare_i_17
       (.I0(time_out_counter_reg[1]),
        .I1(time_out_counter_reg[2]),
        .I2(PREPARE_TIMEOUT1_0[0]),
        .I3(PREPARE_TIMEOUT1_1[1]),
        .I4(PREPARE_TIMEOUT1_1[0]),
        .I5(time_out_prepare_i_19_n_0),
        .O(time_out_prepare_i_17_n_0));
  LUT3 #(
    .INIT(8'hBA)) 
    time_out_prepare_i_19
       (.I0(time_out_prepare_reg_i_15_n_2),
        .I1(PREPARE_TIMEOUT1_n_89),
        .I2(time_out_prepare_i_10_0),
        .O(time_out_prepare_i_19_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    time_out_prepare_i_23
       (.I0(time_out_prepare_reg_i_15_0[3]),
        .I1(PREPARE_TIMEOUT1_n_90),
        .O(time_out_prepare_i_23_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    time_out_prepare_i_24
       (.I0(time_out_prepare_reg_i_15_0[2]),
        .I1(PREPARE_TIMEOUT1_n_91),
        .O(time_out_prepare_i_24_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    time_out_prepare_i_25
       (.I0(PREPARE_TIMEOUT1_n_90),
        .I1(time_out_prepare_reg_i_15_0[3]),
        .I2(time_out_prepare_i_10_0),
        .I3(PREPARE_TIMEOUT1_n_89),
        .O(time_out_prepare_i_25_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    time_out_prepare_i_26
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(time_out_prepare_reg_i_15_0[2]),
        .I2(time_out_prepare_reg_i_15_0[3]),
        .I3(PREPARE_TIMEOUT1_n_90),
        .O(time_out_prepare_i_26_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    time_out_prepare_i_28
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT1_n_93),
        .I2(PREPARE_TIMEOUT1_n_89),
        .O(time_out_prepare_i_28_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    time_out_prepare_i_29
       (.I0(PREPARE_TIMEOUT1_n_92),
        .I1(PREPARE_TIMEOUT1_n_94),
        .I2(PREPARE_TIMEOUT1_n_90),
        .O(time_out_prepare_i_29_n_0));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h02)) 
    time_out_prepare_i_3
       (.I0(\cl_tx_state_reg_n_0_[2] ),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .O(time_out_prepare_i_3_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    time_out_prepare_i_30
       (.I0(PREPARE_TIMEOUT1_n_93),
        .I1(PREPARE_TIMEOUT1_n_95),
        .I2(PREPARE_TIMEOUT1_n_91),
        .O(time_out_prepare_i_30_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    time_out_prepare_i_31
       (.I0(PREPARE_TIMEOUT1_n_94),
        .I1(PREPARE_TIMEOUT1_n_96),
        .I2(PREPARE_TIMEOUT1_n_92),
        .O(time_out_prepare_i_31_n_0));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    time_out_prepare_i_32
       (.I0(PREPARE_TIMEOUT1_n_89),
        .I1(PREPARE_TIMEOUT1_n_93),
        .I2(PREPARE_TIMEOUT1_n_91),
        .I3(PREPARE_TIMEOUT1_n_90),
        .I4(PREPARE_TIMEOUT1_n_92),
        .O(time_out_prepare_i_32_n_0));
  LUT6 #(
    .INIT(64'h8E71718E718E8E71)) 
    time_out_prepare_i_33
       (.I0(PREPARE_TIMEOUT1_n_90),
        .I1(PREPARE_TIMEOUT1_n_94),
        .I2(PREPARE_TIMEOUT1_n_92),
        .I3(PREPARE_TIMEOUT1_n_93),
        .I4(PREPARE_TIMEOUT1_n_91),
        .I5(PREPARE_TIMEOUT1_n_89),
        .O(time_out_prepare_i_33_n_0));
  LUT6 #(
    .INIT(64'h8E71718E718E8E71)) 
    time_out_prepare_i_34
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT1_n_95),
        .I2(PREPARE_TIMEOUT1_n_93),
        .I3(PREPARE_TIMEOUT1_n_94),
        .I4(PREPARE_TIMEOUT1_n_92),
        .I5(PREPARE_TIMEOUT1_n_90),
        .O(time_out_prepare_i_34_n_0));
  LUT6 #(
    .INIT(64'h8E71718E718E8E71)) 
    time_out_prepare_i_35
       (.I0(PREPARE_TIMEOUT1_n_92),
        .I1(PREPARE_TIMEOUT1_n_96),
        .I2(PREPARE_TIMEOUT1_n_94),
        .I3(PREPARE_TIMEOUT1_n_95),
        .I4(PREPARE_TIMEOUT1_n_93),
        .I5(PREPARE_TIMEOUT1_n_91),
        .O(time_out_prepare_i_35_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    time_out_prepare_i_36
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT1_n_89),
        .O(time_out_prepare_i_36_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    time_out_prepare_i_37
       (.I0(PREPARE_TIMEOUT1_n_92),
        .I1(PREPARE_TIMEOUT1_n_90),
        .O(time_out_prepare_i_37_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    time_out_prepare_i_38
       (.I0(PREPARE_TIMEOUT1_n_90),
        .I1(PREPARE_TIMEOUT1_n_89),
        .O(time_out_prepare_i_38_n_0));
  LUT3 #(
    .INIT(8'h4B)) 
    time_out_prepare_i_39
       (.I0(PREPARE_TIMEOUT1_n_89),
        .I1(PREPARE_TIMEOUT1_n_91),
        .I2(PREPARE_TIMEOUT1_n_90),
        .O(time_out_prepare_i_39_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    time_out_prepare_i_40
       (.I0(PREPARE_TIMEOUT1_n_90),
        .I1(PREPARE_TIMEOUT1_n_92),
        .I2(PREPARE_TIMEOUT1_n_89),
        .I3(PREPARE_TIMEOUT1_n_91),
        .O(time_out_prepare_i_40_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    time_out_prepare_i_5
       (.I0(time_out_counter_reg[12]),
        .I1(time_out_counter_reg[13]),
        .O(time_out_prepare_i_5_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    time_out_prepare_i_51
       (.I0(time_out_prepare_reg_i_15_0[1]),
        .I1(PREPARE_TIMEOUT1_n_92),
        .O(time_out_prepare_i_51_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    time_out_prepare_i_52
       (.I0(time_out_prepare_reg_i_15_0[0]),
        .I1(PREPARE_TIMEOUT1_n_93),
        .O(time_out_prepare_i_52_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    time_out_prepare_i_53
       (.I0(time_out_prepare_reg_i_22_0[3]),
        .I1(PREPARE_TIMEOUT1_n_94),
        .O(time_out_prepare_i_53_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    time_out_prepare_i_54
       (.I0(time_out_prepare_reg_i_22_0[2]),
        .I1(PREPARE_TIMEOUT1_n_95),
        .O(time_out_prepare_i_54_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    time_out_prepare_i_55
       (.I0(PREPARE_TIMEOUT1_n_92),
        .I1(time_out_prepare_reg_i_15_0[1]),
        .I2(time_out_prepare_reg_i_15_0[2]),
        .I3(PREPARE_TIMEOUT1_n_91),
        .O(time_out_prepare_i_55_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    time_out_prepare_i_56
       (.I0(PREPARE_TIMEOUT1_n_93),
        .I1(time_out_prepare_reg_i_15_0[0]),
        .I2(time_out_prepare_reg_i_15_0[1]),
        .I3(PREPARE_TIMEOUT1_n_92),
        .O(time_out_prepare_i_56_n_0));
  LUT4 #(
    .INIT(16'h4BB4)) 
    time_out_prepare_i_57
       (.I0(PREPARE_TIMEOUT1_n_94),
        .I1(time_out_prepare_reg_i_22_0[3]),
        .I2(time_out_prepare_reg_i_15_0[0]),
        .I3(PREPARE_TIMEOUT1_n_93),
        .O(time_out_prepare_i_57_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    time_out_prepare_i_58
       (.I0(PREPARE_TIMEOUT1_n_95),
        .I1(time_out_prepare_reg_i_22_0[2]),
        .I2(time_out_prepare_reg_i_22_0[3]),
        .I3(PREPARE_TIMEOUT1_n_94),
        .O(time_out_prepare_i_58_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    time_out_prepare_i_6
       (.I0(time_out_counter_reg[11]),
        .I1(time_out_counter_reg[10]),
        .I2(time_out_counter_reg[9]),
        .O(time_out_prepare_i_6_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    time_out_prepare_i_60
       (.I0(PREPARE_TIMEOUT1_n_95),
        .I1(PREPARE_TIMEOUT1_n_97),
        .I2(PREPARE_TIMEOUT1_n_93),
        .O(time_out_prepare_i_60_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    time_out_prepare_i_61
       (.I0(PREPARE_TIMEOUT1_n_96),
        .I1(PREPARE_TIMEOUT1_n_98),
        .I2(PREPARE_TIMEOUT1_n_94),
        .O(time_out_prepare_i_61_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    time_out_prepare_i_62
       (.I0(PREPARE_TIMEOUT1_n_97),
        .I1(PREPARE_TIMEOUT1_n_99),
        .I2(PREPARE_TIMEOUT1_n_95),
        .O(time_out_prepare_i_62_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    time_out_prepare_i_63
       (.I0(PREPARE_TIMEOUT1_n_98),
        .I1(PREPARE_TIMEOUT1_n_100),
        .I2(PREPARE_TIMEOUT1_n_96),
        .O(time_out_prepare_i_63_n_0));
  LUT6 #(
    .INIT(64'h8E71718E718E8E71)) 
    time_out_prepare_i_64
       (.I0(PREPARE_TIMEOUT1_n_93),
        .I1(PREPARE_TIMEOUT1_n_97),
        .I2(PREPARE_TIMEOUT1_n_95),
        .I3(PREPARE_TIMEOUT1_n_96),
        .I4(PREPARE_TIMEOUT1_n_94),
        .I5(PREPARE_TIMEOUT1_n_92),
        .O(time_out_prepare_i_64_n_0));
  LUT6 #(
    .INIT(64'h8E71718E718E8E71)) 
    time_out_prepare_i_65
       (.I0(PREPARE_TIMEOUT1_n_94),
        .I1(PREPARE_TIMEOUT1_n_98),
        .I2(PREPARE_TIMEOUT1_n_96),
        .I3(PREPARE_TIMEOUT1_n_97),
        .I4(PREPARE_TIMEOUT1_n_95),
        .I5(PREPARE_TIMEOUT1_n_93),
        .O(time_out_prepare_i_65_n_0));
  LUT6 #(
    .INIT(64'h8E71718E718E8E71)) 
    time_out_prepare_i_66
       (.I0(PREPARE_TIMEOUT1_n_95),
        .I1(PREPARE_TIMEOUT1_n_99),
        .I2(PREPARE_TIMEOUT1_n_97),
        .I3(PREPARE_TIMEOUT1_n_98),
        .I4(PREPARE_TIMEOUT1_n_96),
        .I5(PREPARE_TIMEOUT1_n_94),
        .O(time_out_prepare_i_66_n_0));
  LUT6 #(
    .INIT(64'h8E71718E718E8E71)) 
    time_out_prepare_i_67
       (.I0(PREPARE_TIMEOUT1_n_96),
        .I1(PREPARE_TIMEOUT1_n_100),
        .I2(PREPARE_TIMEOUT1_n_98),
        .I3(PREPARE_TIMEOUT1_n_99),
        .I4(PREPARE_TIMEOUT1_n_97),
        .I5(PREPARE_TIMEOUT1_n_95),
        .O(time_out_prepare_i_67_n_0));
  LUT4 #(
    .INIT(16'h0006)) 
    time_out_prepare_i_7
       (.I0(time_out_counter_reg[6]),
        .I1(time_out_prepare_i_10_n_0),
        .I2(time_out_counter_reg[8]),
        .I3(time_out_counter_reg[7]),
        .O(time_out_prepare_i_7_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    time_out_prepare_i_76
       (.I0(time_out_prepare_reg_i_22_0[1]),
        .I1(PREPARE_TIMEOUT1_n_96),
        .O(time_out_prepare_i_76_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    time_out_prepare_i_77
       (.I0(time_out_prepare_reg_i_22_0[0]),
        .I1(PREPARE_TIMEOUT1_n_97),
        .O(time_out_prepare_i_77_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    time_out_prepare_i_78
       (.I0(time_out_prepare_reg_i_50_0),
        .I1(PREPARE_TIMEOUT1_n_98),
        .O(time_out_prepare_i_78_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    time_out_prepare_i_79
       (.I0(PREPARE_TIMEOUT1_0[1]),
        .I1(PREPARE_TIMEOUT1_n_99),
        .O(time_out_prepare_i_79_n_0));
  LUT6 #(
    .INIT(64'h0002844000002118)) 
    time_out_prepare_i_8
       (.I0(time_out_counter_reg[3]),
        .I1(PREPARE_TIMEOUT0[4]),
        .I2(time_out_prepare_i_12_n_0),
        .I3(PREPARE_TIMEOUT0[3]),
        .I4(time_out_counter_reg[5]),
        .I5(time_out_counter_reg[4]),
        .O(time_out_prepare_i_8_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    time_out_prepare_i_80
       (.I0(PREPARE_TIMEOUT1_n_96),
        .I1(time_out_prepare_reg_i_22_0[1]),
        .I2(time_out_prepare_reg_i_22_0[2]),
        .I3(PREPARE_TIMEOUT1_n_95),
        .O(time_out_prepare_i_80_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    time_out_prepare_i_81
       (.I0(PREPARE_TIMEOUT1_n_97),
        .I1(time_out_prepare_reg_i_22_0[0]),
        .I2(time_out_prepare_reg_i_22_0[1]),
        .I3(PREPARE_TIMEOUT1_n_96),
        .O(time_out_prepare_i_81_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    time_out_prepare_i_82
       (.I0(PREPARE_TIMEOUT1_n_98),
        .I1(time_out_prepare_reg_i_50_0),
        .I2(time_out_prepare_reg_i_22_0[0]),
        .I3(PREPARE_TIMEOUT1_n_97),
        .O(time_out_prepare_i_82_n_0));
  LUT4 #(
    .INIT(16'h4BB4)) 
    time_out_prepare_i_83
       (.I0(PREPARE_TIMEOUT1_n_99),
        .I1(PREPARE_TIMEOUT1_0[1]),
        .I2(time_out_prepare_reg_i_50_0),
        .I3(PREPARE_TIMEOUT1_n_98),
        .O(time_out_prepare_i_83_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    time_out_prepare_i_85
       (.I0(PREPARE_TIMEOUT1_n_99),
        .I1(PREPARE_TIMEOUT1_n_101),
        .I2(PREPARE_TIMEOUT1_n_97),
        .O(time_out_prepare_i_85_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    time_out_prepare_i_86
       (.I0(PREPARE_TIMEOUT1_n_100),
        .I1(PREPARE_TIMEOUT1_n_102),
        .I2(PREPARE_TIMEOUT1_n_98),
        .O(time_out_prepare_i_86_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    time_out_prepare_i_87
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_99),
        .O(time_out_prepare_i_87_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    time_out_prepare_i_88
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT1_n_104),
        .I2(PREPARE_TIMEOUT1_n_100),
        .O(time_out_prepare_i_88_n_0));
  LUT6 #(
    .INIT(64'h8E71718E718E8E71)) 
    time_out_prepare_i_89
       (.I0(PREPARE_TIMEOUT1_n_97),
        .I1(PREPARE_TIMEOUT1_n_101),
        .I2(PREPARE_TIMEOUT1_n_99),
        .I3(PREPARE_TIMEOUT1_n_100),
        .I4(PREPARE_TIMEOUT1_n_98),
        .I5(PREPARE_TIMEOUT1_n_96),
        .O(time_out_prepare_i_89_n_0));
  LUT6 #(
    .INIT(64'h55A6AA5900000000)) 
    time_out_prepare_i_9
       (.I0(time_out_counter_reg[0]),
        .I1(time_out_prepare_i_10_0),
        .I2(PREPARE_TIMEOUT1_n_89),
        .I3(time_out_prepare_reg_i_15_n_2),
        .I4(PREPARE_TIMEOUT1_1[0]),
        .I5(time_out_prepare_i_17_n_0),
        .O(time_out_prepare_i_9_n_0));
  LUT6 #(
    .INIT(64'h8E71718E718E8E71)) 
    time_out_prepare_i_90
       (.I0(PREPARE_TIMEOUT1_n_98),
        .I1(PREPARE_TIMEOUT1_n_102),
        .I2(PREPARE_TIMEOUT1_n_100),
        .I3(PREPARE_TIMEOUT1_n_101),
        .I4(PREPARE_TIMEOUT1_n_99),
        .I5(PREPARE_TIMEOUT1_n_97),
        .O(time_out_prepare_i_90_n_0));
  LUT6 #(
    .INIT(64'h8E71718E718E8E71)) 
    time_out_prepare_i_91
       (.I0(PREPARE_TIMEOUT1_n_99),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_101),
        .I3(PREPARE_TIMEOUT1_n_102),
        .I4(PREPARE_TIMEOUT1_n_100),
        .I5(PREPARE_TIMEOUT1_n_98),
        .O(time_out_prepare_i_91_n_0));
  LUT6 #(
    .INIT(64'h8E71718E718E8E71)) 
    time_out_prepare_i_92
       (.I0(PREPARE_TIMEOUT1_n_100),
        .I1(PREPARE_TIMEOUT1_n_104),
        .I2(PREPARE_TIMEOUT1_n_102),
        .I3(PREPARE_TIMEOUT1_n_103),
        .I4(PREPARE_TIMEOUT1_n_101),
        .I5(PREPARE_TIMEOUT1_n_99),
        .O(time_out_prepare_i_92_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    time_out_prepare_i_98
       (.I0(PREPARE_TIMEOUT1_0[0]),
        .I1(PREPARE_TIMEOUT1_n_100),
        .O(time_out_prepare_i_98_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    time_out_prepare_i_99
       (.I0(PREPARE_TIMEOUT1_1[1]),
        .I1(PREPARE_TIMEOUT1_n_101),
        .O(time_out_prepare_i_99_n_0));
  FDCE time_out_prepare_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(time_out_prepare_i_1_n_0),
        .Q(time_out_prepare_reg_n_0));
  CARRY4 time_out_prepare_reg_i_15
       (.CI(time_out_prepare_reg_i_22_n_0),
        .CO({NLW_time_out_prepare_reg_i_15_CO_UNCONNECTED[3:2],time_out_prepare_reg_i_15_n_2,time_out_prepare_reg_i_15_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,time_out_prepare_i_23_n_0,time_out_prepare_i_24_n_0}),
        .O(NLW_time_out_prepare_reg_i_15_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,time_out_prepare_i_25_n_0,time_out_prepare_i_26_n_0}));
  CARRY4 time_out_prepare_reg_i_16
       (.CI(time_out_prepare_reg_i_27_n_0),
        .CO({time_out_prepare_reg_i_16_n_0,time_out_prepare_reg_i_16_n_1,time_out_prepare_reg_i_16_n_2,time_out_prepare_reg_i_16_n_3}),
        .CYINIT(1'b0),
        .DI({time_out_prepare_i_28_n_0,time_out_prepare_i_29_n_0,time_out_prepare_i_30_n_0,time_out_prepare_i_31_n_0}),
        .O({PREPARE_TIMEOUT1_1,NLW_time_out_prepare_reg_i_16_O_UNCONNECTED[1:0]}),
        .S({time_out_prepare_i_32_n_0,time_out_prepare_i_33_n_0,time_out_prepare_i_34_n_0,time_out_prepare_i_35_n_0}));
  CARRY4 time_out_prepare_reg_i_18
       (.CI(time_out_prepare_reg_i_16_n_0),
        .CO({NLW_time_out_prepare_reg_i_18_CO_UNCONNECTED[3:2],time_out_prepare_reg_i_18_n_2,time_out_prepare_reg_i_18_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,time_out_prepare_i_36_n_0,time_out_prepare_i_37_n_0}),
        .O({NLW_time_out_prepare_reg_i_18_O_UNCONNECTED[3],PREPARE_TIMEOUT1_0}),
        .S({1'b0,time_out_prepare_i_38_n_0,time_out_prepare_i_39_n_0,time_out_prepare_i_40_n_0}));
  CARRY4 time_out_prepare_reg_i_2
       (.CI(time_out_prepare_reg_i_4_n_0),
        .CO({NLW_time_out_prepare_reg_i_2_CO_UNCONNECTED[3:1],time_out_prepare1}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_time_out_prepare_reg_i_2_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,time_out_prepare_i_5_n_0}));
  CARRY4 time_out_prepare_reg_i_22
       (.CI(time_out_prepare_reg_i_50_n_0),
        .CO({time_out_prepare_reg_i_22_n_0,time_out_prepare_reg_i_22_n_1,time_out_prepare_reg_i_22_n_2,time_out_prepare_reg_i_22_n_3}),
        .CYINIT(1'b0),
        .DI({time_out_prepare_i_51_n_0,time_out_prepare_i_52_n_0,time_out_prepare_i_53_n_0,time_out_prepare_i_54_n_0}),
        .O(NLW_time_out_prepare_reg_i_22_O_UNCONNECTED[3:0]),
        .S({time_out_prepare_i_55_n_0,time_out_prepare_i_56_n_0,time_out_prepare_i_57_n_0,time_out_prepare_i_58_n_0}));
  CARRY4 time_out_prepare_reg_i_27
       (.CI(time_out_prepare_reg_i_59_n_0),
        .CO({time_out_prepare_reg_i_27_n_0,time_out_prepare_reg_i_27_n_1,time_out_prepare_reg_i_27_n_2,time_out_prepare_reg_i_27_n_3}),
        .CYINIT(1'b0),
        .DI({time_out_prepare_i_60_n_0,time_out_prepare_i_61_n_0,time_out_prepare_i_62_n_0,time_out_prepare_i_63_n_0}),
        .O(NLW_time_out_prepare_reg_i_27_O_UNCONNECTED[3:0]),
        .S({time_out_prepare_i_64_n_0,time_out_prepare_i_65_n_0,time_out_prepare_i_66_n_0,time_out_prepare_i_67_n_0}));
  CARRY4 time_out_prepare_reg_i_4
       (.CI(1'b0),
        .CO({time_out_prepare_reg_i_4_n_0,time_out_prepare_reg_i_4_n_1,time_out_prepare_reg_i_4_n_2,time_out_prepare_reg_i_4_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_time_out_prepare_reg_i_4_O_UNCONNECTED[3:0]),
        .S({time_out_prepare_i_6_n_0,time_out_prepare_i_7_n_0,time_out_prepare_i_8_n_0,time_out_prepare_i_9_n_0}));
  CARRY4 time_out_prepare_reg_i_50
       (.CI(time_out_prepare_reg_i_75_n_0),
        .CO({time_out_prepare_reg_i_50_n_0,time_out_prepare_reg_i_50_n_1,time_out_prepare_reg_i_50_n_2,time_out_prepare_reg_i_50_n_3}),
        .CYINIT(1'b0),
        .DI({time_out_prepare_i_76_n_0,time_out_prepare_i_77_n_0,time_out_prepare_i_78_n_0,time_out_prepare_i_79_n_0}),
        .O(NLW_time_out_prepare_reg_i_50_O_UNCONNECTED[3:0]),
        .S({time_out_prepare_i_80_n_0,time_out_prepare_i_81_n_0,time_out_prepare_i_82_n_0,time_out_prepare_i_83_n_0}));
  CARRY4 time_out_prepare_reg_i_59
       (.CI(time_out_prepare_reg_i_84_n_0),
        .CO({time_out_prepare_reg_i_59_n_0,time_out_prepare_reg_i_59_n_1,time_out_prepare_reg_i_59_n_2,time_out_prepare_reg_i_59_n_3}),
        .CYINIT(1'b0),
        .DI({time_out_prepare_i_85_n_0,time_out_prepare_i_86_n_0,time_out_prepare_i_87_n_0,time_out_prepare_i_88_n_0}),
        .O(NLW_time_out_prepare_reg_i_59_O_UNCONNECTED[3:0]),
        .S({time_out_prepare_i_89_n_0,time_out_prepare_i_90_n_0,time_out_prepare_i_91_n_0,time_out_prepare_i_92_n_0}));
  CARRY4 time_out_prepare_reg_i_75
       (.CI(1'b0),
        .CO({time_out_prepare_reg_i_75_n_0,time_out_prepare_reg_i_75_n_1,time_out_prepare_reg_i_75_n_2,time_out_prepare_reg_i_75_n_3}),
        .CYINIT(1'b0),
        .DI({time_out_prepare_i_98_n_0,time_out_prepare_i_99_n_0,time_out_prepare_i_100_n_0,1'b0}),
        .O(NLW_time_out_prepare_reg_i_75_O_UNCONNECTED[3:0]),
        .S({time_out_prepare_i_101_n_0,time_out_prepare_i_102_n_0,time_out_prepare_i_103_n_0,time_out_prepare_i_104_n_0}));
  CARRY4 time_out_prepare_reg_i_84
       (.CI(1'b0),
        .CO({time_out_prepare_reg_i_84_n_0,time_out_prepare_reg_i_84_n_1,time_out_prepare_reg_i_84_n_2,time_out_prepare_reg_i_84_n_3}),
        .CYINIT(1'b0),
        .DI({time_out_prepare_i_105_n_0,time_out_prepare_i_106_n_0,time_out_prepare_i_107_n_0,1'b0}),
        .O(NLW_time_out_prepare_reg_i_84_O_UNCONNECTED[3:0]),
        .S({time_out_prepare_i_108_n_0,time_out_prepare_i_109_n_0,time_out_prepare_i_110_n_0,time_out_prepare_i_111_n_0}));
  FDRE time_out_trail_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(time_out_post_coreclk_sync_i_n_1),
        .Q(time_out_trail_reg_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0022000000200000)) 
    time_out_zero_i_1
       (.I0(\cl_tx_state_reg_n_0_[2] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(time_out_zero0),
        .I3(\cl_tx_state_reg_n_0_[3] ),
        .I4(\cl_tx_state_reg_n_0_[0] ),
        .I5(time_out_zero),
        .O(time_out_zero_i_1_n_0));
  FDCE time_out_zero_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(time_out_zero_i_1_n_0),
        .Q(time_out_zero));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \trail_count[1]_i_1 
       (.I0(trail_count_reg[0]),
        .I1(trail_count_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \trail_count[2]_i_1 
       (.I0(trail_count_reg[0]),
        .I1(trail_count_reg[1]),
        .I2(trail_count_reg[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \trail_count[3]_i_1 
       (.I0(trail_count_reg[1]),
        .I1(trail_count_reg[0]),
        .I2(trail_count_reg[2]),
        .I3(trail_count_reg[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \trail_count[4]_i_1 
       (.I0(trail_count_reg[2]),
        .I1(trail_count_reg[0]),
        .I2(trail_count_reg[1]),
        .I3(trail_count_reg[3]),
        .I4(trail_count_reg[4]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \trail_count[5]_i_1 
       (.I0(trail_count_reg[3]),
        .I1(trail_count_reg[1]),
        .I2(trail_count_reg[0]),
        .I3(trail_count_reg[2]),
        .I4(trail_count_reg[4]),
        .I5(trail_count_reg[5]),
        .O(p_0_in__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \trail_count[6]_i_1 
       (.I0(\trail_count[9]_i_5_n_0 ),
        .I1(trail_count_reg[6]),
        .O(p_0_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \trail_count[7]_i_1 
       (.I0(\trail_count[9]_i_5_n_0 ),
        .I1(trail_count_reg[6]),
        .I2(trail_count_reg[7]),
        .O(p_0_in__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \trail_count[8]_i_1 
       (.I0(trail_count_reg[6]),
        .I1(\trail_count[9]_i_5_n_0 ),
        .I2(trail_count_reg[7]),
        .I3(trail_count_reg[8]),
        .O(p_0_in__0[8]));
  LUT5 #(
    .INIT(32'hBAFF4500)) 
    \trail_count[9]_i_10 
       (.I0(\trail_count_reg[9]_i_18_n_3 ),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(\trail_count[9]_i_11_0 [3]),
        .I3(\trail_count[9]_i_21_n_0 ),
        .I4(O[3]),
        .O(TRAIL_TIMEOUT0[6]));
  LUT2 #(
    .INIT(4'h2)) 
    \trail_count[9]_i_101 
       (.I0(\trail_count_reg[9]_i_36_0 [1]),
        .I1(TRAIL_TIMEOUT1_n_92),
        .O(\trail_count[9]_i_101_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \trail_count[9]_i_102 
       (.I0(\trail_count_reg[9]_i_36_0 [0]),
        .I1(TRAIL_TIMEOUT1_n_93),
        .O(\trail_count[9]_i_102_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \trail_count[9]_i_103 
       (.I0(\trail_count_reg[9]_i_66_0 [3]),
        .I1(TRAIL_TIMEOUT1_n_94),
        .O(\trail_count[9]_i_103_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \trail_count[9]_i_104 
       (.I0(\trail_count_reg[9]_i_66_0 [2]),
        .I1(TRAIL_TIMEOUT1_n_95),
        .O(\trail_count[9]_i_104_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \trail_count[9]_i_105 
       (.I0(TRAIL_TIMEOUT1_n_92),
        .I1(\trail_count_reg[9]_i_36_0 [1]),
        .I2(\trail_count_reg[9]_i_36_0 [2]),
        .I3(TRAIL_TIMEOUT1_n_91),
        .O(\trail_count[9]_i_105_n_0 ));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \trail_count[9]_i_106 
       (.I0(TRAIL_TIMEOUT1_n_93),
        .I1(\trail_count_reg[9]_i_36_0 [0]),
        .I2(\trail_count_reg[9]_i_36_0 [1]),
        .I3(TRAIL_TIMEOUT1_n_92),
        .O(\trail_count[9]_i_106_n_0 ));
  LUT4 #(
    .INIT(16'h4BB4)) 
    \trail_count[9]_i_107 
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(\trail_count_reg[9]_i_66_0 [3]),
        .I2(\trail_count_reg[9]_i_36_0 [0]),
        .I3(TRAIL_TIMEOUT1_n_93),
        .O(\trail_count[9]_i_107_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \trail_count[9]_i_108 
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(\trail_count_reg[9]_i_66_0 [2]),
        .I2(\trail_count_reg[9]_i_66_0 [3]),
        .I3(TRAIL_TIMEOUT1_n_94),
        .O(\trail_count[9]_i_108_n_0 ));
  LUT6 #(
    .INIT(64'h8828000000000000)) 
    \trail_count[9]_i_11 
       (.I0(O[2]),
        .I1(O[0]),
        .I2(\trail_count[9]_i_23_n_0 ),
        .I3(\trail_count[9]_i_24_n_0 ),
        .I4(\trail_count[9]_i_25_n_0 ),
        .I5(O[1]),
        .O(\trail_count[9]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hD444DDD4)) 
    \trail_count[9]_i_110 
       (.I0(\trail_count[9]_i_155_n_0 ),
        .I1(TRAIL_TIMEOUT1_n_92),
        .I2(TRAIL_TIMEOUT1_n_97),
        .I3(TRAIL_TIMEOUT1_n_101),
        .I4(TRAIL_TIMEOUT1_n_99),
        .O(\trail_count[9]_i_110_n_0 ));
  LUT5 #(
    .INIT(32'hD444DDD4)) 
    \trail_count[9]_i_111 
       (.I0(\trail_count[9]_i_156_n_0 ),
        .I1(TRAIL_TIMEOUT1_n_93),
        .I2(TRAIL_TIMEOUT1_n_98),
        .I3(TRAIL_TIMEOUT1_n_102),
        .I4(TRAIL_TIMEOUT1_n_100),
        .O(\trail_count[9]_i_111_n_0 ));
  LUT5 #(
    .INIT(32'hD444DDD4)) 
    \trail_count[9]_i_112 
       (.I0(\trail_count[9]_i_157_n_0 ),
        .I1(TRAIL_TIMEOUT1_n_94),
        .I2(TRAIL_TIMEOUT1_n_99),
        .I3(TRAIL_TIMEOUT1_n_103),
        .I4(TRAIL_TIMEOUT1_n_101),
        .O(\trail_count[9]_i_112_n_0 ));
  LUT5 #(
    .INIT(32'hD444DDD4)) 
    \trail_count[9]_i_113 
       (.I0(\trail_count[9]_i_158_n_0 ),
        .I1(TRAIL_TIMEOUT1_n_95),
        .I2(TRAIL_TIMEOUT1_n_100),
        .I3(TRAIL_TIMEOUT1_n_104),
        .I4(TRAIL_TIMEOUT1_n_102),
        .O(\trail_count[9]_i_113_n_0 ));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \trail_count[9]_i_114 
       (.I0(\trail_count[9]_i_110_n_0 ),
        .I1(\trail_count[9]_i_121_n_0 ),
        .I2(TRAIL_TIMEOUT1_n_91),
        .I3(TRAIL_TIMEOUT1_n_98),
        .I4(TRAIL_TIMEOUT1_n_100),
        .I5(TRAIL_TIMEOUT1_n_96),
        .O(\trail_count[9]_i_114_n_0 ));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \trail_count[9]_i_115 
       (.I0(\trail_count[9]_i_111_n_0 ),
        .I1(\trail_count[9]_i_155_n_0 ),
        .I2(TRAIL_TIMEOUT1_n_92),
        .I3(TRAIL_TIMEOUT1_n_99),
        .I4(TRAIL_TIMEOUT1_n_101),
        .I5(TRAIL_TIMEOUT1_n_97),
        .O(\trail_count[9]_i_115_n_0 ));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \trail_count[9]_i_116 
       (.I0(\trail_count[9]_i_112_n_0 ),
        .I1(\trail_count[9]_i_156_n_0 ),
        .I2(TRAIL_TIMEOUT1_n_93),
        .I3(TRAIL_TIMEOUT1_n_100),
        .I4(TRAIL_TIMEOUT1_n_102),
        .I5(TRAIL_TIMEOUT1_n_98),
        .O(\trail_count[9]_i_116_n_0 ));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \trail_count[9]_i_117 
       (.I0(\trail_count[9]_i_113_n_0 ),
        .I1(\trail_count[9]_i_157_n_0 ),
        .I2(TRAIL_TIMEOUT1_n_94),
        .I3(TRAIL_TIMEOUT1_n_101),
        .I4(TRAIL_TIMEOUT1_n_103),
        .I5(TRAIL_TIMEOUT1_n_99),
        .O(\trail_count[9]_i_117_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \trail_count[9]_i_118 
       (.I0(TRAIL_TIMEOUT1_n_92),
        .I1(TRAIL_TIMEOUT1_n_94),
        .I2(TRAIL_TIMEOUT1_n_96),
        .O(\trail_count[9]_i_118_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \trail_count[9]_i_119 
       (.I0(TRAIL_TIMEOUT1_n_93),
        .I1(TRAIL_TIMEOUT1_n_95),
        .I2(TRAIL_TIMEOUT1_n_97),
        .O(\trail_count[9]_i_119_n_0 ));
  LUT6 #(
    .INIT(64'hBAFFFFFF45000000)) 
    \trail_count[9]_i_12 
       (.I0(\trail_count_reg[9]_i_18_n_3 ),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(\trail_count[9]_i_11_0 [3]),
        .I3(\trail_count[9]_i_21_n_0 ),
        .I4(O[3]),
        .I5(TRAIL_TIMEOUT1_1),
        .O(TRAIL_TIMEOUT0[7]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \trail_count[9]_i_120 
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT1_n_96),
        .I2(TRAIL_TIMEOUT1_n_98),
        .O(\trail_count[9]_i_120_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \trail_count[9]_i_121 
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT1_n_97),
        .I2(TRAIL_TIMEOUT1_n_99),
        .O(\trail_count[9]_i_121_n_0 ));
  LUT6 #(
    .INIT(64'h3BFFC400C4003BFF)) 
    \trail_count[9]_i_13 
       (.I0(\trail_count[9]_i_24_n_0 ),
        .I1(TRAIL_TIMEOUT1_0[1]),
        .I2(TRAIL_TIMEOUT1_0[0]),
        .I3(TRAIL_TIMEOUT1_0[2]),
        .I4(O[0]),
        .I5(trail_count_reg[3]),
        .O(\trail_count[9]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \trail_count[9]_i_138 
       (.I0(\trail_count_reg[9]_i_66_0 [1]),
        .I1(TRAIL_TIMEOUT1_n_96),
        .O(\trail_count[9]_i_138_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \trail_count[9]_i_139 
       (.I0(\trail_count_reg[9]_i_66_0 [0]),
        .I1(TRAIL_TIMEOUT1_n_97),
        .O(\trail_count[9]_i_139_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT5 #(
    .INIT(32'hBAFF4500)) 
    \trail_count[9]_i_14 
       (.I0(\trail_count_reg[9]_i_18_n_3 ),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(\trail_count[9]_i_11_0 [3]),
        .I3(\trail_count[9]_i_27_n_0 ),
        .I4(O[2]),
        .O(TRAIL_TIMEOUT0[5]));
  LUT2 #(
    .INIT(4'hB)) 
    \trail_count[9]_i_140 
       (.I0(\trail_count_reg[9]_i_100_0 ),
        .I1(TRAIL_TIMEOUT1_n_98),
        .O(\trail_count[9]_i_140_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \trail_count[9]_i_141 
       (.I0(O[0]),
        .I1(TRAIL_TIMEOUT1_n_99),
        .O(\trail_count[9]_i_141_n_0 ));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \trail_count[9]_i_142 
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(\trail_count_reg[9]_i_66_0 [1]),
        .I2(\trail_count_reg[9]_i_66_0 [2]),
        .I3(TRAIL_TIMEOUT1_n_95),
        .O(\trail_count[9]_i_142_n_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \trail_count[9]_i_143 
       (.I0(TRAIL_TIMEOUT1_n_97),
        .I1(\trail_count_reg[9]_i_66_0 [0]),
        .I2(\trail_count_reg[9]_i_66_0 [1]),
        .I3(TRAIL_TIMEOUT1_n_96),
        .O(\trail_count[9]_i_143_n_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \trail_count[9]_i_144 
       (.I0(TRAIL_TIMEOUT1_n_98),
        .I1(\trail_count_reg[9]_i_100_0 ),
        .I2(\trail_count_reg[9]_i_66_0 [0]),
        .I3(TRAIL_TIMEOUT1_n_97),
        .O(\trail_count[9]_i_144_n_0 ));
  LUT4 #(
    .INIT(16'h4BB4)) 
    \trail_count[9]_i_145 
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(O[0]),
        .I2(\trail_count_reg[9]_i_100_0 ),
        .I3(TRAIL_TIMEOUT1_n_98),
        .O(\trail_count[9]_i_145_n_0 ));
  LUT5 #(
    .INIT(32'hD444DDD4)) 
    \trail_count[9]_i_147 
       (.I0(\trail_count[9]_i_169_n_0 ),
        .I1(TRAIL_TIMEOUT1_n_96),
        .I2(TRAIL_TIMEOUT1_n_101),
        .I3(TRAIL_TIMEOUT1_n_105),
        .I4(TRAIL_TIMEOUT1_n_103),
        .O(\trail_count[9]_i_147_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \trail_count[9]_i_148 
       (.I0(TRAIL_TIMEOUT1_n_101),
        .I1(TRAIL_TIMEOUT1_n_105),
        .I2(TRAIL_TIMEOUT1_n_103),
        .I3(TRAIL_TIMEOUT1_n_96),
        .I4(\trail_count[9]_i_169_n_0 ),
        .O(\trail_count[9]_i_148_n_0 ));
  LUT4 #(
    .INIT(16'h9669)) 
    \trail_count[9]_i_149 
       (.I0(TRAIL_TIMEOUT1_n_105),
        .I1(TRAIL_TIMEOUT1_n_103),
        .I2(TRAIL_TIMEOUT1_n_101),
        .I3(TRAIL_TIMEOUT1_n_97),
        .O(\trail_count[9]_i_149_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF40000000)) 
    \trail_count[9]_i_15 
       (.I0(\trail_count[9]_i_24_n_0 ),
        .I1(TRAIL_TIMEOUT1_0[2]),
        .I2(TRAIL_TIMEOUT1_0[0]),
        .I3(TRAIL_TIMEOUT1_0[1]),
        .I4(O[0]),
        .I5(O[1]),
        .O(TRAIL_TIMEOUT0[4]));
  LUT2 #(
    .INIT(4'hB)) 
    \trail_count[9]_i_150 
       (.I0(TRAIL_TIMEOUT1_n_103),
        .I1(TRAIL_TIMEOUT1_n_105),
        .O(\trail_count[9]_i_150_n_0 ));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \trail_count[9]_i_151 
       (.I0(\trail_count[9]_i_147_n_0 ),
        .I1(\trail_count[9]_i_158_n_0 ),
        .I2(TRAIL_TIMEOUT1_n_95),
        .I3(TRAIL_TIMEOUT1_n_102),
        .I4(TRAIL_TIMEOUT1_n_104),
        .I5(TRAIL_TIMEOUT1_n_100),
        .O(\trail_count[9]_i_151_n_0 ));
  LUT6 #(
    .INIT(64'h6696696669669969)) 
    \trail_count[9]_i_152 
       (.I0(\trail_count[9]_i_169_n_0 ),
        .I1(TRAIL_TIMEOUT1_n_96),
        .I2(TRAIL_TIMEOUT1_n_101),
        .I3(TRAIL_TIMEOUT1_n_103),
        .I4(TRAIL_TIMEOUT1_n_105),
        .I5(TRAIL_TIMEOUT1_n_97),
        .O(\trail_count[9]_i_152_n_0 ));
  LUT4 #(
    .INIT(16'h6A56)) 
    \trail_count[9]_i_153 
       (.I0(\trail_count[9]_i_149_n_0 ),
        .I1(TRAIL_TIMEOUT1_n_98),
        .I2(TRAIL_TIMEOUT1_n_102),
        .I3(TRAIL_TIMEOUT1_n_104),
        .O(\trail_count[9]_i_153_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \trail_count[9]_i_154 
       (.I0(TRAIL_TIMEOUT1_n_105),
        .I1(TRAIL_TIMEOUT1_n_103),
        .I2(TRAIL_TIMEOUT1_n_102),
        .I3(TRAIL_TIMEOUT1_n_104),
        .I4(TRAIL_TIMEOUT1_n_98),
        .O(\trail_count[9]_i_154_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \trail_count[9]_i_155 
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT1_n_98),
        .I2(TRAIL_TIMEOUT1_n_100),
        .O(\trail_count[9]_i_155_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \trail_count[9]_i_156 
       (.I0(TRAIL_TIMEOUT1_n_97),
        .I1(TRAIL_TIMEOUT1_n_99),
        .I2(TRAIL_TIMEOUT1_n_101),
        .O(\trail_count[9]_i_156_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \trail_count[9]_i_157 
       (.I0(TRAIL_TIMEOUT1_n_98),
        .I1(TRAIL_TIMEOUT1_n_100),
        .I2(TRAIL_TIMEOUT1_n_102),
        .O(\trail_count[9]_i_157_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \trail_count[9]_i_158 
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT1_n_101),
        .I2(TRAIL_TIMEOUT1_n_103),
        .O(\trail_count[9]_i_158_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \trail_count[9]_i_159 
       (.I0(TRAIL_TIMEOUT1_0[2]),
        .I1(TRAIL_TIMEOUT1_n_100),
        .O(\trail_count[9]_i_159_n_0 ));
  LUT5 #(
    .INIT(32'h80080000)) 
    \trail_count[9]_i_16 
       (.I0(O[0]),
        .I1(TRAIL_TIMEOUT1_0[1]),
        .I2(TRAIL_TIMEOUT1_0[0]),
        .I3(\trail_count[9]_i_24_n_0 ),
        .I4(TRAIL_TIMEOUT1_0[2]),
        .O(\trail_count[9]_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \trail_count[9]_i_160 
       (.I0(TRAIL_TIMEOUT1_0[1]),
        .I1(TRAIL_TIMEOUT1_n_101),
        .O(\trail_count[9]_i_160_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \trail_count[9]_i_161 
       (.I0(TRAIL_TIMEOUT1_0[0]),
        .I1(TRAIL_TIMEOUT1_n_102),
        .O(\trail_count[9]_i_161_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \trail_count[9]_i_162 
       (.I0(TRAIL_TIMEOUT1_n_100),
        .I1(TRAIL_TIMEOUT1_0[2]),
        .I2(O[0]),
        .I3(TRAIL_TIMEOUT1_n_99),
        .O(\trail_count[9]_i_162_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \trail_count[9]_i_163 
       (.I0(TRAIL_TIMEOUT1_n_101),
        .I1(TRAIL_TIMEOUT1_0[1]),
        .I2(TRAIL_TIMEOUT1_0[2]),
        .I3(TRAIL_TIMEOUT1_n_100),
        .O(\trail_count[9]_i_163_n_0 ));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \trail_count[9]_i_164 
       (.I0(TRAIL_TIMEOUT1_n_102),
        .I1(TRAIL_TIMEOUT1_0[0]),
        .I2(TRAIL_TIMEOUT1_0[1]),
        .I3(TRAIL_TIMEOUT1_n_101),
        .O(\trail_count[9]_i_164_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \trail_count[9]_i_165 
       (.I0(TRAIL_TIMEOUT1_n_102),
        .I1(TRAIL_TIMEOUT1_0[0]),
        .O(\trail_count[9]_i_165_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \trail_count[9]_i_166 
       (.I0(TRAIL_TIMEOUT1_n_105),
        .I1(TRAIL_TIMEOUT1_n_103),
        .I2(TRAIL_TIMEOUT1_n_99),
        .O(\trail_count[9]_i_166_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \trail_count[9]_i_167 
       (.I0(TRAIL_TIMEOUT1_n_100),
        .I1(TRAIL_TIMEOUT1_n_104),
        .O(\trail_count[9]_i_167_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \trail_count[9]_i_168 
       (.I0(TRAIL_TIMEOUT1_n_101),
        .I1(TRAIL_TIMEOUT1_n_105),
        .O(\trail_count[9]_i_168_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \trail_count[9]_i_169 
       (.I0(TRAIL_TIMEOUT1_n_100),
        .I1(TRAIL_TIMEOUT1_n_102),
        .I2(TRAIL_TIMEOUT1_n_104),
        .O(\trail_count[9]_i_169_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \trail_count[9]_i_2 
       (.I0(time_out_trail0),
        .O(sel));
  LUT6 #(
    .INIT(64'h1482824114821482)) 
    \trail_count[9]_i_20 
       (.I0(trail_count_reg[1]),
        .I1(trail_count_reg[2]),
        .I2(TRAIL_TIMEOUT1_0[2]),
        .I3(TRAIL_TIMEOUT1_0[1]),
        .I4(TRAIL_TIMEOUT1_0[0]),
        .I5(\trail_count[9]_i_24_n_0 ),
        .O(\trail_count[9]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \trail_count[9]_i_21 
       (.I0(O[2]),
        .I1(O[0]),
        .I2(TRAIL_TIMEOUT1_0[1]),
        .I3(TRAIL_TIMEOUT1_0[0]),
        .I4(TRAIL_TIMEOUT1_0[2]),
        .I5(O[1]),
        .O(\trail_count[9]_i_21_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \trail_count[9]_i_23 
       (.I0(TRAIL_TIMEOUT1_0[2]),
        .I1(TRAIL_TIMEOUT1_0[0]),
        .I2(TRAIL_TIMEOUT1_0[1]),
        .O(\trail_count[9]_i_23_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \trail_count[9]_i_24 
       (.I0(\trail_count_reg[9]_i_18_n_3 ),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(\trail_count[9]_i_11_0 [3]),
        .O(\trail_count[9]_i_24_n_0 ));
  LUT6 #(
    .INIT(64'hAA0800A200000000)) 
    \trail_count[9]_i_25 
       (.I0(TRAIL_TIMEOUT1_0[2]),
        .I1(\trail_count[9]_i_11_0 [3]),
        .I2(TRAIL_TIMEOUT1_n_86),
        .I3(\trail_count_reg[9]_i_18_n_3 ),
        .I4(TRAIL_TIMEOUT1_0[0]),
        .I5(TRAIL_TIMEOUT1_0[1]),
        .O(\trail_count[9]_i_25_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \trail_count[9]_i_27 
       (.I0(O[1]),
        .I1(TRAIL_TIMEOUT1_0[2]),
        .I2(TRAIL_TIMEOUT1_0[0]),
        .I3(TRAIL_TIMEOUT1_0[1]),
        .I4(O[0]),
        .O(\trail_count[9]_i_27_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \trail_count[9]_i_3 
       (.I0(trail_count_reg[7]),
        .I1(\trail_count[9]_i_5_n_0 ),
        .I2(trail_count_reg[6]),
        .I3(trail_count_reg[8]),
        .I4(trail_count_reg[9]),
        .O(p_0_in__0[9]));
  LUT2 #(
    .INIT(4'h2)) 
    \trail_count[9]_i_37 
       (.I0(\trail_count[9]_i_11_0 [2]),
        .I1(TRAIL_TIMEOUT1_n_87),
        .O(\trail_count[9]_i_37_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \trail_count[9]_i_38 
       (.I0(TRAIL_TIMEOUT1_n_87),
        .I1(\trail_count[9]_i_11_0 [2]),
        .I2(\trail_count[9]_i_11_0 [3]),
        .I3(TRAIL_TIMEOUT1_n_86),
        .O(\trail_count[9]_i_38_n_0 ));
  LUT6 #(
    .INIT(64'h008E8E008E00008E)) 
    \trail_count[9]_i_40 
       (.I0(TRAIL_TIMEOUT1_n_89),
        .I1(TRAIL_TIMEOUT1_n_93),
        .I2(TRAIL_TIMEOUT1_n_91),
        .I3(TRAIL_TIMEOUT1_n_92),
        .I4(TRAIL_TIMEOUT1_n_90),
        .I5(TRAIL_TIMEOUT1_n_88),
        .O(\trail_count[9]_i_40_n_0 ));
  LUT6 #(
    .INIT(64'h008E8E008E00008E)) 
    \trail_count[9]_i_41 
       (.I0(TRAIL_TIMEOUT1_n_90),
        .I1(TRAIL_TIMEOUT1_n_94),
        .I2(TRAIL_TIMEOUT1_n_92),
        .I3(TRAIL_TIMEOUT1_n_93),
        .I4(TRAIL_TIMEOUT1_n_91),
        .I5(TRAIL_TIMEOUT1_n_89),
        .O(\trail_count[9]_i_41_n_0 ));
  LUT5 #(
    .INIT(32'hD444DDD4)) 
    \trail_count[9]_i_42 
       (.I0(\trail_count[9]_i_84_n_0 ),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(TRAIL_TIMEOUT1_n_91),
        .I3(TRAIL_TIMEOUT1_n_95),
        .I4(TRAIL_TIMEOUT1_n_93),
        .O(\trail_count[9]_i_42_n_0 ));
  LUT5 #(
    .INIT(32'hD444DDD4)) 
    \trail_count[9]_i_43 
       (.I0(\trail_count[9]_i_85_n_0 ),
        .I1(TRAIL_TIMEOUT1_n_87),
        .I2(TRAIL_TIMEOUT1_n_92),
        .I3(TRAIL_TIMEOUT1_n_96),
        .I4(TRAIL_TIMEOUT1_n_94),
        .O(\trail_count[9]_i_43_n_0 ));
  LUT5 #(
    .INIT(32'h66969699)) 
    \trail_count[9]_i_44 
       (.I0(\trail_count[9]_i_40_n_0 ),
        .I1(\trail_count[9]_i_86_n_0 ),
        .I2(TRAIL_TIMEOUT1_n_90),
        .I3(TRAIL_TIMEOUT1_n_92),
        .I4(TRAIL_TIMEOUT1_n_88),
        .O(\trail_count[9]_i_44_n_0 ));
  LUT5 #(
    .INIT(32'h66969699)) 
    \trail_count[9]_i_45 
       (.I0(\trail_count[9]_i_41_n_0 ),
        .I1(\trail_count[9]_i_87_n_0 ),
        .I2(TRAIL_TIMEOUT1_n_91),
        .I3(TRAIL_TIMEOUT1_n_93),
        .I4(TRAIL_TIMEOUT1_n_89),
        .O(\trail_count[9]_i_45_n_0 ));
  LUT6 #(
    .INIT(64'h781EE178E17887E1)) 
    \trail_count[9]_i_46 
       (.I0(\trail_count[9]_i_88_n_0 ),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(\trail_count[9]_i_89_n_0 ),
        .I3(TRAIL_TIMEOUT1_n_92),
        .I4(TRAIL_TIMEOUT1_n_94),
        .I5(TRAIL_TIMEOUT1_n_90),
        .O(\trail_count[9]_i_46_n_0 ));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \trail_count[9]_i_47 
       (.I0(\trail_count[9]_i_43_n_0 ),
        .I1(\trail_count[9]_i_84_n_0 ),
        .I2(TRAIL_TIMEOUT1_n_86),
        .I3(TRAIL_TIMEOUT1_n_93),
        .I4(TRAIL_TIMEOUT1_n_95),
        .I5(TRAIL_TIMEOUT1_n_91),
        .O(\trail_count[9]_i_47_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \trail_count[9]_i_48 
       (.I0(TRAIL_TIMEOUT1_n_88),
        .I1(TRAIL_TIMEOUT1_n_86),
        .O(\trail_count[9]_i_48_n_0 ));
  LUT5 #(
    .INIT(32'hD444DDD4)) 
    \trail_count[9]_i_49 
       (.I0(TRAIL_TIMEOUT1_n_87),
        .I1(TRAIL_TIMEOUT1_n_89),
        .I2(TRAIL_TIMEOUT1_n_86),
        .I3(TRAIL_TIMEOUT1_n_90),
        .I4(TRAIL_TIMEOUT1_n_88),
        .O(\trail_count[9]_i_49_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \trail_count[9]_i_5 
       (.I0(trail_count_reg[5]),
        .I1(trail_count_reg[3]),
        .I2(trail_count_reg[1]),
        .I3(trail_count_reg[0]),
        .I4(trail_count_reg[2]),
        .I5(trail_count_reg[4]),
        .O(\trail_count[9]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h008E8E008E00008E)) 
    \trail_count[9]_i_50 
       (.I0(TRAIL_TIMEOUT1_n_87),
        .I1(TRAIL_TIMEOUT1_n_91),
        .I2(TRAIL_TIMEOUT1_n_89),
        .I3(TRAIL_TIMEOUT1_n_90),
        .I4(TRAIL_TIMEOUT1_n_88),
        .I5(TRAIL_TIMEOUT1_n_86),
        .O(\trail_count[9]_i_50_n_0 ));
  LUT6 #(
    .INIT(64'h008E8E008E00008E)) 
    \trail_count[9]_i_51 
       (.I0(TRAIL_TIMEOUT1_n_88),
        .I1(TRAIL_TIMEOUT1_n_92),
        .I2(TRAIL_TIMEOUT1_n_90),
        .I3(TRAIL_TIMEOUT1_n_91),
        .I4(TRAIL_TIMEOUT1_n_89),
        .I5(TRAIL_TIMEOUT1_n_87),
        .O(\trail_count[9]_i_51_n_0 ));
  LUT3 #(
    .INIT(8'h4B)) 
    \trail_count[9]_i_52 
       (.I0(TRAIL_TIMEOUT1_n_86),
        .I1(TRAIL_TIMEOUT1_n_88),
        .I2(TRAIL_TIMEOUT1_n_87),
        .O(\trail_count[9]_i_52_n_0 ));
  LUT5 #(
    .INIT(32'h710CCF71)) 
    \trail_count[9]_i_53 
       (.I0(TRAIL_TIMEOUT1_n_90),
        .I1(TRAIL_TIMEOUT1_n_89),
        .I2(TRAIL_TIMEOUT1_n_87),
        .I3(TRAIL_TIMEOUT1_n_86),
        .I4(TRAIL_TIMEOUT1_n_88),
        .O(\trail_count[9]_i_53_n_0 ));
  LUT6 #(
    .INIT(64'h3C8E713C713CC371)) 
    \trail_count[9]_i_54 
       (.I0(TRAIL_TIMEOUT1_n_91),
        .I1(TRAIL_TIMEOUT1_n_89),
        .I2(TRAIL_TIMEOUT1_n_87),
        .I3(TRAIL_TIMEOUT1_n_88),
        .I4(TRAIL_TIMEOUT1_n_90),
        .I5(TRAIL_TIMEOUT1_n_86),
        .O(\trail_count[9]_i_54_n_0 ));
  LUT5 #(
    .INIT(32'h66969699)) 
    \trail_count[9]_i_55 
       (.I0(\trail_count[9]_i_51_n_0 ),
        .I1(\trail_count[9]_i_90_n_0 ),
        .I2(TRAIL_TIMEOUT1_n_89),
        .I3(TRAIL_TIMEOUT1_n_91),
        .I4(TRAIL_TIMEOUT1_n_87),
        .O(\trail_count[9]_i_55_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \trail_count[9]_i_56 
       (.I0(TRAIL_TIMEOUT1_n_87),
        .I1(TRAIL_TIMEOUT1_n_86),
        .O(\trail_count[9]_i_56_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \trail_count[9]_i_6 
       (.I0(trail_count_reg[9]),
        .O(\trail_count[9]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \trail_count[9]_i_67 
       (.I0(\trail_count[9]_i_11_0 [1]),
        .I1(TRAIL_TIMEOUT1_n_88),
        .O(\trail_count[9]_i_67_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \trail_count[9]_i_68 
       (.I0(\trail_count[9]_i_11_0 [0]),
        .I1(TRAIL_TIMEOUT1_n_89),
        .O(\trail_count[9]_i_68_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \trail_count[9]_i_69 
       (.I0(\trail_count_reg[9]_i_36_0 [3]),
        .I1(TRAIL_TIMEOUT1_n_90),
        .O(\trail_count[9]_i_69_n_0 ));
  LUT6 #(
    .INIT(64'h0000294040000029)) 
    \trail_count[9]_i_7 
       (.I0(trail_count_reg[6]),
        .I1(TRAIL_TIMEOUT0[6]),
        .I2(\trail_count[9]_i_11_n_0 ),
        .I3(TRAIL_TIMEOUT0[7]),
        .I4(trail_count_reg[8]),
        .I5(trail_count_reg[7]),
        .O(\trail_count[9]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \trail_count[9]_i_70 
       (.I0(\trail_count_reg[9]_i_36_0 [2]),
        .I1(TRAIL_TIMEOUT1_n_91),
        .O(\trail_count[9]_i_70_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \trail_count[9]_i_71 
       (.I0(TRAIL_TIMEOUT1_n_88),
        .I1(\trail_count[9]_i_11_0 [1]),
        .I2(\trail_count[9]_i_11_0 [2]),
        .I3(TRAIL_TIMEOUT1_n_87),
        .O(\trail_count[9]_i_71_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \trail_count[9]_i_72 
       (.I0(TRAIL_TIMEOUT1_n_89),
        .I1(\trail_count[9]_i_11_0 [0]),
        .I2(\trail_count[9]_i_11_0 [1]),
        .I3(TRAIL_TIMEOUT1_n_88),
        .O(\trail_count[9]_i_72_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \trail_count[9]_i_73 
       (.I0(TRAIL_TIMEOUT1_n_90),
        .I1(\trail_count_reg[9]_i_36_0 [3]),
        .I2(\trail_count[9]_i_11_0 [0]),
        .I3(TRAIL_TIMEOUT1_n_89),
        .O(\trail_count[9]_i_73_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \trail_count[9]_i_74 
       (.I0(TRAIL_TIMEOUT1_n_91),
        .I1(\trail_count_reg[9]_i_36_0 [2]),
        .I2(\trail_count_reg[9]_i_36_0 [3]),
        .I3(TRAIL_TIMEOUT1_n_90),
        .O(\trail_count[9]_i_74_n_0 ));
  LUT5 #(
    .INIT(32'hD444DDD4)) 
    \trail_count[9]_i_76 
       (.I0(\trail_count[9]_i_118_n_0 ),
        .I1(TRAIL_TIMEOUT1_n_88),
        .I2(TRAIL_TIMEOUT1_n_93),
        .I3(TRAIL_TIMEOUT1_n_97),
        .I4(TRAIL_TIMEOUT1_n_95),
        .O(\trail_count[9]_i_76_n_0 ));
  LUT5 #(
    .INIT(32'hD444DDD4)) 
    \trail_count[9]_i_77 
       (.I0(\trail_count[9]_i_119_n_0 ),
        .I1(TRAIL_TIMEOUT1_n_89),
        .I2(TRAIL_TIMEOUT1_n_94),
        .I3(TRAIL_TIMEOUT1_n_98),
        .I4(TRAIL_TIMEOUT1_n_96),
        .O(\trail_count[9]_i_77_n_0 ));
  LUT5 #(
    .INIT(32'hD444DDD4)) 
    \trail_count[9]_i_78 
       (.I0(\trail_count[9]_i_120_n_0 ),
        .I1(TRAIL_TIMEOUT1_n_90),
        .I2(TRAIL_TIMEOUT1_n_95),
        .I3(TRAIL_TIMEOUT1_n_99),
        .I4(TRAIL_TIMEOUT1_n_97),
        .O(\trail_count[9]_i_78_n_0 ));
  LUT5 #(
    .INIT(32'hD444DDD4)) 
    \trail_count[9]_i_79 
       (.I0(\trail_count[9]_i_121_n_0 ),
        .I1(TRAIL_TIMEOUT1_n_91),
        .I2(TRAIL_TIMEOUT1_n_96),
        .I3(TRAIL_TIMEOUT1_n_100),
        .I4(TRAIL_TIMEOUT1_n_98),
        .O(\trail_count[9]_i_79_n_0 ));
  LUT6 #(
    .INIT(64'h0880022020088002)) 
    \trail_count[9]_i_8 
       (.I0(\trail_count[9]_i_13_n_0 ),
        .I1(TRAIL_TIMEOUT0[5]),
        .I2(TRAIL_TIMEOUT0[4]),
        .I3(\trail_count[9]_i_16_n_0 ),
        .I4(trail_count_reg[5]),
        .I5(trail_count_reg[4]),
        .O(\trail_count[9]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \trail_count[9]_i_80 
       (.I0(\trail_count[9]_i_76_n_0 ),
        .I1(\trail_count[9]_i_85_n_0 ),
        .I2(TRAIL_TIMEOUT1_n_87),
        .I3(TRAIL_TIMEOUT1_n_94),
        .I4(TRAIL_TIMEOUT1_n_96),
        .I5(TRAIL_TIMEOUT1_n_92),
        .O(\trail_count[9]_i_80_n_0 ));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \trail_count[9]_i_81 
       (.I0(\trail_count[9]_i_77_n_0 ),
        .I1(\trail_count[9]_i_118_n_0 ),
        .I2(TRAIL_TIMEOUT1_n_88),
        .I3(TRAIL_TIMEOUT1_n_95),
        .I4(TRAIL_TIMEOUT1_n_97),
        .I5(TRAIL_TIMEOUT1_n_93),
        .O(\trail_count[9]_i_81_n_0 ));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \trail_count[9]_i_82 
       (.I0(\trail_count[9]_i_78_n_0 ),
        .I1(\trail_count[9]_i_119_n_0 ),
        .I2(TRAIL_TIMEOUT1_n_89),
        .I3(TRAIL_TIMEOUT1_n_96),
        .I4(TRAIL_TIMEOUT1_n_98),
        .I5(TRAIL_TIMEOUT1_n_94),
        .O(\trail_count[9]_i_82_n_0 ));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \trail_count[9]_i_83 
       (.I0(\trail_count[9]_i_79_n_0 ),
        .I1(\trail_count[9]_i_120_n_0 ),
        .I2(TRAIL_TIMEOUT1_n_90),
        .I3(TRAIL_TIMEOUT1_n_97),
        .I4(TRAIL_TIMEOUT1_n_99),
        .I5(TRAIL_TIMEOUT1_n_95),
        .O(\trail_count[9]_i_83_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \trail_count[9]_i_84 
       (.I0(TRAIL_TIMEOUT1_n_90),
        .I1(TRAIL_TIMEOUT1_n_92),
        .I2(TRAIL_TIMEOUT1_n_94),
        .O(\trail_count[9]_i_84_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \trail_count[9]_i_85 
       (.I0(TRAIL_TIMEOUT1_n_91),
        .I1(TRAIL_TIMEOUT1_n_93),
        .I2(TRAIL_TIMEOUT1_n_95),
        .O(\trail_count[9]_i_85_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \trail_count[9]_i_86 
       (.I0(TRAIL_TIMEOUT1_n_87),
        .I1(TRAIL_TIMEOUT1_n_89),
        .I2(TRAIL_TIMEOUT1_n_91),
        .O(\trail_count[9]_i_86_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \trail_count[9]_i_87 
       (.I0(TRAIL_TIMEOUT1_n_88),
        .I1(TRAIL_TIMEOUT1_n_90),
        .I2(TRAIL_TIMEOUT1_n_92),
        .O(\trail_count[9]_i_87_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \trail_count[9]_i_88 
       (.I0(TRAIL_TIMEOUT1_n_93),
        .I1(TRAIL_TIMEOUT1_n_95),
        .I2(TRAIL_TIMEOUT1_n_91),
        .O(\trail_count[9]_i_88_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \trail_count[9]_i_89 
       (.I0(TRAIL_TIMEOUT1_n_89),
        .I1(TRAIL_TIMEOUT1_n_91),
        .I2(TRAIL_TIMEOUT1_n_93),
        .O(\trail_count[9]_i_89_n_0 ));
  LUT6 #(
    .INIT(64'h55A6AA5900000000)) 
    \trail_count[9]_i_9 
       (.I0(trail_count_reg[0]),
        .I1(\trail_count[9]_i_11_0 [3]),
        .I2(TRAIL_TIMEOUT1_n_86),
        .I3(\trail_count_reg[9]_i_18_n_3 ),
        .I4(TRAIL_TIMEOUT1_0[0]),
        .I5(\trail_count[9]_i_20_n_0 ),
        .O(\trail_count[9]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \trail_count[9]_i_90 
       (.I0(TRAIL_TIMEOUT1_n_86),
        .I1(TRAIL_TIMEOUT1_n_88),
        .I2(TRAIL_TIMEOUT1_n_90),
        .O(\trail_count[9]_i_90_n_0 ));
  FDRE \trail_count_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(time_out_post_coreclk_sync_i_n_5),
        .Q(trail_count_reg[0]),
        .R(1'b0));
  FDRE \trail_count_reg[1] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[1]),
        .Q(trail_count_reg[1]),
        .R(clear_0));
  FDRE \trail_count_reg[2] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[2]),
        .Q(trail_count_reg[2]),
        .R(clear_0));
  FDRE \trail_count_reg[3] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[3]),
        .Q(trail_count_reg[3]),
        .R(clear_0));
  FDRE \trail_count_reg[4] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[4]),
        .Q(trail_count_reg[4]),
        .R(clear_0));
  FDRE \trail_count_reg[5] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[5]),
        .Q(trail_count_reg[5]),
        .R(clear_0));
  FDRE \trail_count_reg[6] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[6]),
        .Q(trail_count_reg[6]),
        .R(clear_0));
  FDRE \trail_count_reg[7] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[7]),
        .Q(trail_count_reg[7]),
        .R(clear_0));
  FDRE \trail_count_reg[8] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[8]),
        .Q(trail_count_reg[8]),
        .R(clear_0));
  FDRE \trail_count_reg[9] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[9]),
        .Q(trail_count_reg[9]),
        .R(clear_0));
  CARRY4 \trail_count_reg[9]_i_100 
       (.CI(\trail_count_reg[9]_i_137_n_0 ),
        .CO({\trail_count_reg[9]_i_100_n_0 ,\trail_count_reg[9]_i_100_n_1 ,\trail_count_reg[9]_i_100_n_2 ,\trail_count_reg[9]_i_100_n_3 }),
        .CYINIT(1'b0),
        .DI({\trail_count[9]_i_138_n_0 ,\trail_count[9]_i_139_n_0 ,\trail_count[9]_i_140_n_0 ,\trail_count[9]_i_141_n_0 }),
        .O(\NLW_trail_count_reg[9]_i_100_O_UNCONNECTED [3:0]),
        .S({\trail_count[9]_i_142_n_0 ,\trail_count[9]_i_143_n_0 ,\trail_count[9]_i_144_n_0 ,\trail_count[9]_i_145_n_0 }));
  CARRY4 \trail_count_reg[9]_i_109 
       (.CI(\trail_count_reg[9]_i_146_n_0 ),
        .CO({\trail_count_reg[9]_i_109_n_0 ,\trail_count_reg[9]_i_109_n_1 ,\trail_count_reg[9]_i_109_n_2 ,\trail_count_reg[9]_i_109_n_3 }),
        .CYINIT(1'b0),
        .DI({\trail_count[9]_i_147_n_0 ,\trail_count[9]_i_148_n_0 ,\trail_count[9]_i_149_n_0 ,\trail_count[9]_i_150_n_0 }),
        .O(\NLW_trail_count_reg[9]_i_109_O_UNCONNECTED [3:0]),
        .S({\trail_count[9]_i_151_n_0 ,\trail_count[9]_i_152_n_0 ,\trail_count[9]_i_153_n_0 ,\trail_count[9]_i_154_n_0 }));
  CARRY4 \trail_count_reg[9]_i_137 
       (.CI(1'b0),
        .CO({\trail_count_reg[9]_i_137_n_0 ,\trail_count_reg[9]_i_137_n_1 ,\trail_count_reg[9]_i_137_n_2 ,\trail_count_reg[9]_i_137_n_3 }),
        .CYINIT(1'b0),
        .DI({\trail_count[9]_i_159_n_0 ,\trail_count[9]_i_160_n_0 ,\trail_count[9]_i_161_n_0 ,1'b0}),
        .O(\NLW_trail_count_reg[9]_i_137_O_UNCONNECTED [3:0]),
        .S({\trail_count[9]_i_162_n_0 ,\trail_count[9]_i_163_n_0 ,\trail_count[9]_i_164_n_0 ,\trail_count[9]_i_165_n_0 }));
  CARRY4 \trail_count_reg[9]_i_146 
       (.CI(1'b0),
        .CO({\trail_count_reg[9]_i_146_n_0 ,\trail_count_reg[9]_i_146_n_1 ,\trail_count_reg[9]_i_146_n_2 ,\trail_count_reg[9]_i_146_n_3 }),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT1_n_99,TRAIL_TIMEOUT1_n_100,TRAIL_TIMEOUT1_n_101,1'b0}),
        .O(\NLW_trail_count_reg[9]_i_146_O_UNCONNECTED [3:0]),
        .S({\trail_count[9]_i_166_n_0 ,\trail_count[9]_i_167_n_0 ,\trail_count[9]_i_168_n_0 ,TRAIL_TIMEOUT1_n_102}));
  CARRY4 \trail_count_reg[9]_i_18 
       (.CI(\trail_count_reg[9]_i_36_n_0 ),
        .CO({\NLW_trail_count_reg[9]_i_18_CO_UNCONNECTED [3:1],\trail_count_reg[9]_i_18_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\trail_count[9]_i_37_n_0 }),
        .O(\NLW_trail_count_reg[9]_i_18_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,1'b0,\trail_count[9]_i_38_n_0 }));
  CARRY4 \trail_count_reg[9]_i_19 
       (.CI(\trail_count_reg[9]_i_39_n_0 ),
        .CO({\trail_count_reg[9]_i_19_n_0 ,\trail_count_reg[9]_i_19_n_1 ,\trail_count_reg[9]_i_19_n_2 ,\trail_count_reg[9]_i_19_n_3 }),
        .CYINIT(1'b0),
        .DI({\trail_count[9]_i_40_n_0 ,\trail_count[9]_i_41_n_0 ,\trail_count[9]_i_42_n_0 ,\trail_count[9]_i_43_n_0 }),
        .O({TRAIL_TIMEOUT1_0,\NLW_trail_count_reg[9]_i_19_O_UNCONNECTED [0]}),
        .S({\trail_count[9]_i_44_n_0 ,\trail_count[9]_i_45_n_0 ,\trail_count[9]_i_46_n_0 ,\trail_count[9]_i_47_n_0 }));
  CARRY4 \trail_count_reg[9]_i_22 
       (.CI(\trail_count_reg[9]_i_19_n_0 ),
        .CO({\trail_count_reg[9]_i_22_n_0 ,\trail_count_reg[9]_i_22_n_1 ,\trail_count_reg[9]_i_22_n_2 ,\trail_count_reg[9]_i_22_n_3 }),
        .CYINIT(1'b0),
        .DI({\trail_count[9]_i_48_n_0 ,\trail_count[9]_i_49_n_0 ,\trail_count[9]_i_50_n_0 ,\trail_count[9]_i_51_n_0 }),
        .O(O),
        .S({\trail_count[9]_i_52_n_0 ,\trail_count[9]_i_53_n_0 ,\trail_count[9]_i_54_n_0 ,\trail_count[9]_i_55_n_0 }));
  CARRY4 \trail_count_reg[9]_i_26 
       (.CI(\trail_count_reg[9]_i_22_n_0 ),
        .CO(\NLW_trail_count_reg[9]_i_26_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_trail_count_reg[9]_i_26_O_UNCONNECTED [3:1],TRAIL_TIMEOUT1_1}),
        .S({1'b0,1'b0,1'b0,\trail_count[9]_i_56_n_0 }));
  CARRY4 \trail_count_reg[9]_i_36 
       (.CI(\trail_count_reg[9]_i_66_n_0 ),
        .CO({\trail_count_reg[9]_i_36_n_0 ,\trail_count_reg[9]_i_36_n_1 ,\trail_count_reg[9]_i_36_n_2 ,\trail_count_reg[9]_i_36_n_3 }),
        .CYINIT(1'b0),
        .DI({\trail_count[9]_i_67_n_0 ,\trail_count[9]_i_68_n_0 ,\trail_count[9]_i_69_n_0 ,\trail_count[9]_i_70_n_0 }),
        .O(\NLW_trail_count_reg[9]_i_36_O_UNCONNECTED [3:0]),
        .S({\trail_count[9]_i_71_n_0 ,\trail_count[9]_i_72_n_0 ,\trail_count[9]_i_73_n_0 ,\trail_count[9]_i_74_n_0 }));
  CARRY4 \trail_count_reg[9]_i_39 
       (.CI(\trail_count_reg[9]_i_75_n_0 ),
        .CO({\trail_count_reg[9]_i_39_n_0 ,\trail_count_reg[9]_i_39_n_1 ,\trail_count_reg[9]_i_39_n_2 ,\trail_count_reg[9]_i_39_n_3 }),
        .CYINIT(1'b0),
        .DI({\trail_count[9]_i_76_n_0 ,\trail_count[9]_i_77_n_0 ,\trail_count[9]_i_78_n_0 ,\trail_count[9]_i_79_n_0 }),
        .O(\NLW_trail_count_reg[9]_i_39_O_UNCONNECTED [3:0]),
        .S({\trail_count[9]_i_80_n_0 ,\trail_count[9]_i_81_n_0 ,\trail_count[9]_i_82_n_0 ,\trail_count[9]_i_83_n_0 }));
  CARRY4 \trail_count_reg[9]_i_4 
       (.CI(1'b0),
        .CO({time_out_trail0,\trail_count_reg[9]_i_4_n_1 ,\trail_count_reg[9]_i_4_n_2 ,\trail_count_reg[9]_i_4_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_trail_count_reg[9]_i_4_O_UNCONNECTED [3:0]),
        .S({\trail_count[9]_i_6_n_0 ,\trail_count[9]_i_7_n_0 ,\trail_count[9]_i_8_n_0 ,\trail_count[9]_i_9_n_0 }));
  CARRY4 \trail_count_reg[9]_i_66 
       (.CI(\trail_count_reg[9]_i_100_n_0 ),
        .CO({\trail_count_reg[9]_i_66_n_0 ,\trail_count_reg[9]_i_66_n_1 ,\trail_count_reg[9]_i_66_n_2 ,\trail_count_reg[9]_i_66_n_3 }),
        .CYINIT(1'b0),
        .DI({\trail_count[9]_i_101_n_0 ,\trail_count[9]_i_102_n_0 ,\trail_count[9]_i_103_n_0 ,\trail_count[9]_i_104_n_0 }),
        .O(\NLW_trail_count_reg[9]_i_66_O_UNCONNECTED [3:0]),
        .S({\trail_count[9]_i_105_n_0 ,\trail_count[9]_i_106_n_0 ,\trail_count[9]_i_107_n_0 ,\trail_count[9]_i_108_n_0 }));
  CARRY4 \trail_count_reg[9]_i_75 
       (.CI(\trail_count_reg[9]_i_109_n_0 ),
        .CO({\trail_count_reg[9]_i_75_n_0 ,\trail_count_reg[9]_i_75_n_1 ,\trail_count_reg[9]_i_75_n_2 ,\trail_count_reg[9]_i_75_n_3 }),
        .CYINIT(1'b0),
        .DI({\trail_count[9]_i_110_n_0 ,\trail_count[9]_i_111_n_0 ,\trail_count[9]_i_112_n_0 ,\trail_count[9]_i_113_n_0 }),
        .O(\NLW_trail_count_reg[9]_i_75_O_UNCONNECTED [3:0]),
        .S({\trail_count[9]_i_114_n_0 ,\trail_count[9]_i_115_n_0 ,\trail_count[9]_i_116_n_0 ,\trail_count[9]_i_117_n_0 }));
  FDSE tx_cl_lp_cn_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths_coreclk_sync_i_n_14),
        .Q(tx_cl_lp_cn),
        .S(tx_cl_lp_cn_r_reg_0));
  LUT5 #(
    .INIT(32'hBABF8A80)) 
    tx_cl_lp_cp_r_i_6
       (.I0(time_out_hsexit_reg_n_0),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(\cl_tx_state_reg_n_0_[2] ),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(time_out_trail_reg_n_0),
        .O(tx_cl_lp_cp_r_i_6_n_0));
  FDSE tx_cl_lp_cp_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths_coreclk_sync_i_n_15),
        .Q(tx_cl_lp_cp),
        .S(tx_cl_lp_cn_r_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_96 xmit_clk_pre_coreclk_sync_i
       (.\cl_tx_state[3]_i_8 (\cl_tx_state_reg_n_0_[0] ),
        .\cl_tx_state[3]_i_8_0 (time_out_prepare_reg_n_0),
        .\cl_tx_state_reg[2] (xmit_clk_pre_coreclk_sync_i_n_2),
        .cl_txclkactivehs_reg(s_level_out_d3_reg),
        .cl_txclkactivehs_reg_0(\cl_tx_state_reg_n_0_[2] ),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .out(xmit_clk_pre_coreclk_sync_i_n_0),
        .s_level_out_d1_cdc_to_reg_0(xmit_clk_pre_r_reg_n_0),
        .s_level_out_d3_reg_0(xmit_clk_pre_coreclk_sync_i_n_1),
        .time_out_zero(time_out_zero));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'h000000C8)) 
    xmit_clk_pre_r_i_1
       (.I0(xmit_clk_pre_r_reg_n_0),
        .I1(xmit_clk_r),
        .I2(xmit_clk_pre_r0),
        .I3(time_out_post_reg_n_0),
        .I4(cl_txrequesths_r2_reg_0),
        .O(xmit_clk_pre_r_i_1_n_0));
  FDRE xmit_clk_pre_r_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(xmit_clk_pre_r_i_1_n_0),
        .Q(xmit_clk_pre_r_reg_n_0),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h01)) 
    xmit_clk_r_i_10
       (.I0(prepare_zero_cnt_reg[17]),
        .I1(prepare_zero_cnt_reg[16]),
        .I2(prepare_zero_cnt_reg[15]),
        .O(xmit_clk_r_i_10_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    xmit_clk_r_i_11
       (.I0(prepare_zero_cnt_reg[14]),
        .I1(prepare_zero_cnt_reg[13]),
        .I2(prepare_zero_cnt_reg[12]),
        .O(xmit_clk_r_i_11_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    xmit_clk_r_i_12
       (.I0(prepare_zero_cnt_reg[11]),
        .I1(prepare_zero_cnt_reg[10]),
        .I2(prepare_zero_cnt_reg[9]),
        .O(xmit_clk_r_i_12_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    xmit_clk_r_i_13
       (.I0(prepare_zero_cnt_reg[8]),
        .I1(prepare_zero_cnt_reg[7]),
        .I2(prepare_zero_cnt_reg[6]),
        .O(xmit_clk_r_i_13_n_0));
  LUT3 #(
    .INIT(8'h20)) 
    xmit_clk_r_i_14
       (.I0(prepare_zero_cnt_reg[3]),
        .I1(prepare_zero_cnt_reg[4]),
        .I2(prepare_zero_cnt_reg[5]),
        .O(xmit_clk_r_i_14_n_0));
  LUT3 #(
    .INIT(8'h02)) 
    xmit_clk_r_i_15
       (.I0(prepare_zero_cnt_reg[0]),
        .I1(prepare_zero_cnt_reg[2]),
        .I2(prepare_zero_cnt_reg[1]),
        .O(xmit_clk_r_i_15_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    xmit_clk_r_i_4
       (.I0(prepare_zero_cnt_reg[30]),
        .I1(prepare_zero_cnt_reg[31]),
        .O(xmit_clk_r_i_4_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    xmit_clk_r_i_5
       (.I0(prepare_zero_cnt_reg[29]),
        .I1(prepare_zero_cnt_reg[28]),
        .I2(prepare_zero_cnt_reg[27]),
        .O(xmit_clk_r_i_5_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    xmit_clk_r_i_6
       (.I0(prepare_zero_cnt_reg[26]),
        .I1(prepare_zero_cnt_reg[25]),
        .I2(prepare_zero_cnt_reg[24]),
        .O(xmit_clk_r_i_6_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    xmit_clk_r_i_8
       (.I0(prepare_zero_cnt_reg[23]),
        .I1(prepare_zero_cnt_reg[22]),
        .I2(prepare_zero_cnt_reg[21]),
        .O(xmit_clk_r_i_8_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    xmit_clk_r_i_9
       (.I0(prepare_zero_cnt_reg[20]),
        .I1(prepare_zero_cnt_reg[19]),
        .I2(prepare_zero_cnt_reg[18]),
        .O(xmit_clk_r_i_9_n_0));
  FDRE xmit_clk_r_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(start_clkzero_byteclk_sync_i_n_1),
        .Q(xmit_clk_r),
        .R(1'b0));
  CARRY4 xmit_clk_r_reg_i_2
       (.CI(xmit_clk_r_reg_i_3_n_0),
        .CO({NLW_xmit_clk_r_reg_i_2_CO_UNCONNECTED[3],xmit_clk_r_reg_i_2_n_1,xmit_clk_r_reg_i_2_n_2,xmit_clk_r_reg_i_2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_xmit_clk_r_reg_i_2_O_UNCONNECTED[3:0]),
        .S({1'b0,xmit_clk_r_i_4_n_0,xmit_clk_r_i_5_n_0,xmit_clk_r_i_6_n_0}));
  CARRY4 xmit_clk_r_reg_i_3
       (.CI(xmit_clk_r_reg_i_7_n_0),
        .CO({xmit_clk_r_reg_i_3_n_0,xmit_clk_r_reg_i_3_n_1,xmit_clk_r_reg_i_3_n_2,xmit_clk_r_reg_i_3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_xmit_clk_r_reg_i_3_O_UNCONNECTED[3:0]),
        .S({xmit_clk_r_i_8_n_0,xmit_clk_r_i_9_n_0,xmit_clk_r_i_10_n_0,xmit_clk_r_i_11_n_0}));
  CARRY4 xmit_clk_r_reg_i_7
       (.CI(1'b0),
        .CO({xmit_clk_r_reg_i_7_n_0,xmit_clk_r_reg_i_7_n_1,xmit_clk_r_reg_i_7_n_2,xmit_clk_r_reg_i_7_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_xmit_clk_r_reg_i_7_O_UNCONNECTED[3:0]),
        .S({xmit_clk_r_i_12_n_0,xmit_clk_r_i_13_n_0,xmit_clk_r_i_14_n_0,xmit_clk_r_i_15_n_0}));
  LUT5 #(
    .INIT(32'h01000000)) 
    \zero_count[0]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count[0]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[10]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[10]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[11]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[11]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[11]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[12]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[12]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[12]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[13]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[13]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[13]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[14]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[14]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[14]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[15]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[15]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[16]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[16]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[16]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[17]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[17]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[17]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[18]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[18]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[18]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[19]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[19]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[19]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[1]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[1]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[20]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[20]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[21]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[21]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[21]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[22]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[22]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[22]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[23]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[23]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[23]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[24]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[24]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[24]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[25]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[25]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[25]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[26]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[26]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[26]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[27]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[27]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[27]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[28]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[28]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[28]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[29]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[29]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[2]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[2]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[30]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[30]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFDFFFFF)) 
    \zero_count[31]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[2] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(time_out_zero0),
        .I3(\cl_tx_state_reg_n_0_[3] ),
        .I4(\cl_tx_state_reg_n_0_[0] ),
        .O(\zero_count[31]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \zero_count[31]_i_10 
       (.I0(zero_count[23]),
        .I1(zero_count[22]),
        .I2(zero_count[21]),
        .O(\zero_count[31]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \zero_count[31]_i_11 
       (.I0(zero_count[20]),
        .I1(zero_count[19]),
        .I2(zero_count[18]),
        .O(\zero_count[31]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \zero_count[31]_i_12 
       (.I0(zero_count[17]),
        .I1(zero_count[16]),
        .I2(zero_count[15]),
        .O(\zero_count[31]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \zero_count[31]_i_13 
       (.I0(zero_count[14]),
        .I1(zero_count[13]),
        .I2(zero_count[12]),
        .O(\zero_count[31]_i_13_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \zero_count[31]_i_14 
       (.I0(zero_count[11]),
        .I1(zero_count[10]),
        .I2(zero_count[9]),
        .O(\zero_count[31]_i_14_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \zero_count[31]_i_15 
       (.I0(zero_count[8]),
        .I1(zero_count[7]),
        .I2(zero_count[6]),
        .O(\zero_count[31]_i_15_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \zero_count[31]_i_16 
       (.I0(zero_count[3]),
        .I1(zero_count[4]),
        .I2(zero_count[5]),
        .O(\zero_count[31]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \zero_count[31]_i_17 
       (.I0(zero_count[2]),
        .I1(zero_count[1]),
        .I2(zero_count[0]),
        .O(\zero_count[31]_i_17_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[31]_i_2 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[31]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \zero_count[31]_i_6 
       (.I0(zero_count[30]),
        .I1(zero_count[31]),
        .O(\zero_count[31]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \zero_count[31]_i_7 
       (.I0(zero_count[29]),
        .I1(zero_count[28]),
        .I2(zero_count[27]),
        .O(\zero_count[31]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \zero_count[31]_i_8 
       (.I0(zero_count[26]),
        .I1(zero_count[25]),
        .I2(zero_count[24]),
        .O(\zero_count[31]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[3]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[3]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[4]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[4]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[5]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[5]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[6]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[6]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[7]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[7]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[8]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[8]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \zero_count[9]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .I2(zero_count0[9]),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(\zero_count[9]_i_1_n_0 ));
  FDCE \zero_count_reg[0] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[0]_i_1_n_0 ),
        .Q(zero_count[0]));
  FDCE \zero_count_reg[10] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[10]_i_1_n_0 ),
        .Q(zero_count[10]));
  FDCE \zero_count_reg[11] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[11]_i_1_n_0 ),
        .Q(zero_count[11]));
  FDCE \zero_count_reg[12] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[12]_i_1_n_0 ),
        .Q(zero_count[12]));
  CARRY4 \zero_count_reg[12]_i_2 
       (.CI(\zero_count_reg[8]_i_2_n_0 ),
        .CO({\zero_count_reg[12]_i_2_n_0 ,\zero_count_reg[12]_i_2_n_1 ,\zero_count_reg[12]_i_2_n_2 ,\zero_count_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(zero_count0[12:9]),
        .S(zero_count[12:9]));
  FDCE \zero_count_reg[13] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[13]_i_1_n_0 ),
        .Q(zero_count[13]));
  FDCE \zero_count_reg[14] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[14]_i_1_n_0 ),
        .Q(zero_count[14]));
  FDCE \zero_count_reg[15] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[15]_i_1_n_0 ),
        .Q(zero_count[15]));
  FDCE \zero_count_reg[16] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[16]_i_1_n_0 ),
        .Q(zero_count[16]));
  CARRY4 \zero_count_reg[16]_i_2 
       (.CI(\zero_count_reg[12]_i_2_n_0 ),
        .CO({\zero_count_reg[16]_i_2_n_0 ,\zero_count_reg[16]_i_2_n_1 ,\zero_count_reg[16]_i_2_n_2 ,\zero_count_reg[16]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(zero_count0[16:13]),
        .S(zero_count[16:13]));
  FDCE \zero_count_reg[17] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[17]_i_1_n_0 ),
        .Q(zero_count[17]));
  FDCE \zero_count_reg[18] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[18]_i_1_n_0 ),
        .Q(zero_count[18]));
  FDCE \zero_count_reg[19] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[19]_i_1_n_0 ),
        .Q(zero_count[19]));
  FDCE \zero_count_reg[1] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[1]_i_1_n_0 ),
        .Q(zero_count[1]));
  FDCE \zero_count_reg[20] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[20]_i_1_n_0 ),
        .Q(zero_count[20]));
  CARRY4 \zero_count_reg[20]_i_2 
       (.CI(\zero_count_reg[16]_i_2_n_0 ),
        .CO({\zero_count_reg[20]_i_2_n_0 ,\zero_count_reg[20]_i_2_n_1 ,\zero_count_reg[20]_i_2_n_2 ,\zero_count_reg[20]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(zero_count0[20:17]),
        .S(zero_count[20:17]));
  FDCE \zero_count_reg[21] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[21]_i_1_n_0 ),
        .Q(zero_count[21]));
  FDCE \zero_count_reg[22] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[22]_i_1_n_0 ),
        .Q(zero_count[22]));
  FDCE \zero_count_reg[23] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[23]_i_1_n_0 ),
        .Q(zero_count[23]));
  FDCE \zero_count_reg[24] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[24]_i_1_n_0 ),
        .Q(zero_count[24]));
  CARRY4 \zero_count_reg[24]_i_2 
       (.CI(\zero_count_reg[20]_i_2_n_0 ),
        .CO({\zero_count_reg[24]_i_2_n_0 ,\zero_count_reg[24]_i_2_n_1 ,\zero_count_reg[24]_i_2_n_2 ,\zero_count_reg[24]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(zero_count0[24:21]),
        .S(zero_count[24:21]));
  FDCE \zero_count_reg[25] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[25]_i_1_n_0 ),
        .Q(zero_count[25]));
  FDCE \zero_count_reg[26] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[26]_i_1_n_0 ),
        .Q(zero_count[26]));
  FDCE \zero_count_reg[27] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[27]_i_1_n_0 ),
        .Q(zero_count[27]));
  FDCE \zero_count_reg[28] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[28]_i_1_n_0 ),
        .Q(zero_count[28]));
  CARRY4 \zero_count_reg[28]_i_2 
       (.CI(\zero_count_reg[24]_i_2_n_0 ),
        .CO({\zero_count_reg[28]_i_2_n_0 ,\zero_count_reg[28]_i_2_n_1 ,\zero_count_reg[28]_i_2_n_2 ,\zero_count_reg[28]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(zero_count0[28:25]),
        .S(zero_count[28:25]));
  FDCE \zero_count_reg[29] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[29]_i_1_n_0 ),
        .Q(zero_count[29]));
  FDCE \zero_count_reg[2] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[2]_i_1_n_0 ),
        .Q(zero_count[2]));
  FDCE \zero_count_reg[30] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[30]_i_1_n_0 ),
        .Q(zero_count[30]));
  FDCE \zero_count_reg[31] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[31]_i_2_n_0 ),
        .Q(zero_count[31]));
  CARRY4 \zero_count_reg[31]_i_3 
       (.CI(\zero_count_reg[31]_i_5_n_0 ),
        .CO({\NLW_zero_count_reg[31]_i_3_CO_UNCONNECTED [3],time_out_zero0,\zero_count_reg[31]_i_3_n_2 ,\zero_count_reg[31]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_zero_count_reg[31]_i_3_O_UNCONNECTED [3:0]),
        .S({1'b0,\zero_count[31]_i_6_n_0 ,\zero_count[31]_i_7_n_0 ,\zero_count[31]_i_8_n_0 }));
  CARRY4 \zero_count_reg[31]_i_4 
       (.CI(\zero_count_reg[28]_i_2_n_0 ),
        .CO({\NLW_zero_count_reg[31]_i_4_CO_UNCONNECTED [3:2],\zero_count_reg[31]_i_4_n_2 ,\zero_count_reg[31]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_zero_count_reg[31]_i_4_O_UNCONNECTED [3],zero_count0[31:29]}),
        .S({1'b0,zero_count[31:29]}));
  CARRY4 \zero_count_reg[31]_i_5 
       (.CI(\zero_count_reg[31]_i_9_n_0 ),
        .CO({\zero_count_reg[31]_i_5_n_0 ,\zero_count_reg[31]_i_5_n_1 ,\zero_count_reg[31]_i_5_n_2 ,\zero_count_reg[31]_i_5_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_zero_count_reg[31]_i_5_O_UNCONNECTED [3:0]),
        .S({\zero_count[31]_i_10_n_0 ,\zero_count[31]_i_11_n_0 ,\zero_count[31]_i_12_n_0 ,\zero_count[31]_i_13_n_0 }));
  CARRY4 \zero_count_reg[31]_i_9 
       (.CI(1'b0),
        .CO({\zero_count_reg[31]_i_9_n_0 ,\zero_count_reg[31]_i_9_n_1 ,\zero_count_reg[31]_i_9_n_2 ,\zero_count_reg[31]_i_9_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_zero_count_reg[31]_i_9_O_UNCONNECTED [3:0]),
        .S({\zero_count[31]_i_14_n_0 ,\zero_count[31]_i_15_n_0 ,\zero_count[31]_i_16_n_0 ,\zero_count[31]_i_17_n_0 }));
  FDCE \zero_count_reg[3] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[3]_i_1_n_0 ),
        .Q(zero_count[3]));
  FDCE \zero_count_reg[4] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[4]_i_1_n_0 ),
        .Q(zero_count[4]));
  CARRY4 \zero_count_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\zero_count_reg[4]_i_2_n_0 ,\zero_count_reg[4]_i_2_n_1 ,\zero_count_reg[4]_i_2_n_2 ,\zero_count_reg[4]_i_2_n_3 }),
        .CYINIT(zero_count[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(zero_count0[4:1]),
        .S(zero_count[4:1]));
  FDCE \zero_count_reg[5] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[5]_i_1_n_0 ),
        .Q(zero_count[5]));
  FDCE \zero_count_reg[6] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[6]_i_1_n_0 ),
        .Q(zero_count[6]));
  FDCE \zero_count_reg[7] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[7]_i_1_n_0 ),
        .Q(zero_count[7]));
  FDCE \zero_count_reg[8] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[8]_i_1_n_0 ),
        .Q(zero_count[8]));
  CARRY4 \zero_count_reg[8]_i_2 
       (.CI(\zero_count_reg[4]_i_2_n_0 ),
        .CO({\zero_count_reg[8]_i_2_n_0 ,\zero_count_reg[8]_i_2_n_1 ,\zero_count_reg[8]_i_2_n_2 ,\zero_count_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(zero_count0[8:5]),
        .S(zero_count[8:5]));
  FDCE \zero_count_reg[9] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[9]_i_1_n_0 ),
        .Q(zero_count[9]));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_data_lane
   (out,
    s_level_out_d3_reg,
    dl_status_reg,
    s_level_out_d3_reg_0,
    esc_ctrl_all_sm_reg,
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ,
    timeout_hsexit,
    dl_txreadyesc_reg,
    dl0_ulpsactivenot,
    dl0_stopstate,
    tx_dl0_lp_dp,
    tx_dl0_lp_dn,
    dl1_txrequesths_0,
    dl2_txrequesths_0,
    dl3_txrequesths_0,
    timeout_zero_out_i_0,
    tx_dl0_hs_dp,
    pkt_cnt,
    en_hs_datapath_r_reg,
    dl0_txrequesths,
    tx_div4_clk,
    core_rst,
    dl0_enable,
    core_clk,
    dl0_txrequestesc,
    dl0_forcetxstopmode,
    esc_ctrl_all_sm_reg_0,
    dl0_txclkesc,
    dl_txrequesths_r_reg_0,
    s_level_out_d1_cdc_to_reg,
    txlpdtesc_r_reg,
    dl0_txvalidesc,
    dl0_txdataesc,
    dl0_txulpsexit,
    dl0_txtriggeresc,
    dl0_txulpsesc,
    dl0_txlpdtesc,
    dl1_txrequesths,
    dl2_txrequesths,
    dl3_txrequesths,
    \pkt_cnt_reg[15]_0 ,
    dl0_txdatahs,
    cl_init_done_coreclk_i,
    \dl_tx_sm_state[1]_i_4 ,
    cl_txclkactivehs_i,
    dl_tx_sm_state0__0,
    tx_dl_lp_dp_reg,
    timeout_hsexit_all);
  output out;
  output s_level_out_d3_reg;
  output [4:0]dl_status_reg;
  output s_level_out_d3_reg_0;
  output esc_ctrl_all_sm_reg;
  output \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ;
  output [0:0]timeout_hsexit;
  output dl_txreadyesc_reg;
  output dl0_ulpsactivenot;
  output dl0_stopstate;
  output tx_dl0_lp_dp;
  output tx_dl0_lp_dn;
  output dl1_txrequesths_0;
  output dl2_txrequesths_0;
  output dl3_txrequesths_0;
  output timeout_zero_out_i_0;
  output [7:0]tx_dl0_hs_dp;
  output [15:0]pkt_cnt;
  input en_hs_datapath_r_reg;
  input dl0_txrequesths;
  input tx_div4_clk;
  input core_rst;
  input dl0_enable;
  input core_clk;
  input dl0_txrequestesc;
  input dl0_forcetxstopmode;
  input esc_ctrl_all_sm_reg_0;
  input dl0_txclkesc;
  input dl_txrequesths_r_reg_0;
  input s_level_out_d1_cdc_to_reg;
  input txlpdtesc_r_reg;
  input dl0_txvalidesc;
  input [7:0]dl0_txdataesc;
  input dl0_txulpsexit;
  input [3:0]dl0_txtriggeresc;
  input dl0_txulpsesc;
  input dl0_txlpdtesc;
  input dl1_txrequesths;
  input dl2_txrequesths;
  input dl3_txrequesths;
  input \pkt_cnt_reg[15]_0 ;
  input [7:0]dl0_txdatahs;
  input cl_init_done_coreclk_i;
  input \dl_tx_sm_state[1]_i_4 ;
  input cl_txclkactivehs_i;
  input dl_tx_sm_state0__0;
  input tx_dl_lp_dp_reg;
  input timeout_hsexit_all;

  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl0_enable;
  wire dl0_forcetxstopmode;
  wire dl0_stopstate;
  wire dl0_txclkesc;
  wire [7:0]dl0_txdataesc;
  wire [7:0]dl0_txdatahs;
  wire dl0_txlpdtesc;
  wire dl0_txrequestesc;
  wire dl0_txrequesths;
  wire [3:0]dl0_txtriggeresc;
  wire dl0_txulpsesc;
  wire dl0_txulpsexit;
  wire dl0_txvalidesc;
  wire dl0_ulpsactivenot;
  wire dl1_txrequesths;
  wire dl1_txrequesths_0;
  wire dl2_txrequesths;
  wire dl2_txrequesths_0;
  wire dl3_txrequesths;
  wire dl3_txrequesths_0;
  wire dl_active_lane_coreclk_sync;
  wire dl_active_lane_div4clk_sync;
  wire [4:0]dl_status_reg;
  wire dl_tx_sm_state0__0;
  wire \dl_tx_sm_state[1]_i_4 ;
  wire dl_txreadyesc_reg;
  wire dl_txrequesths_r;
  wire dl_txrequesths_r_reg_0;
  wire en_cal_hs_datapath_i;
  wire en_hs_datapath_r_reg;
  wire en_hs_datapath_sync_i_n_4;
  wire esc_abort_i;
  wire esc_ctrl_all_sm_reg;
  wire esc_ctrl_all_sm_reg_0;
  wire esc_ctrl_lane_sm;
  wire esc_start_i;
  wire esc_stopstate_coreclk_sync;
  wire esc_stopstate_i;
  wire esc_ulps_i;
  wire hs_xfer_done_i;
  wire out;
  wire [15:0]pkt_cnt;
  wire pkt_cnt0;
  wire \pkt_cnt[0]_i_4_n_0 ;
  wire \pkt_cnt_reg[0]_i_3_n_0 ;
  wire \pkt_cnt_reg[0]_i_3_n_1 ;
  wire \pkt_cnt_reg[0]_i_3_n_2 ;
  wire \pkt_cnt_reg[0]_i_3_n_3 ;
  wire \pkt_cnt_reg[0]_i_3_n_4 ;
  wire \pkt_cnt_reg[0]_i_3_n_5 ;
  wire \pkt_cnt_reg[0]_i_3_n_6 ;
  wire \pkt_cnt_reg[0]_i_3_n_7 ;
  wire \pkt_cnt_reg[12]_i_1_n_1 ;
  wire \pkt_cnt_reg[12]_i_1_n_2 ;
  wire \pkt_cnt_reg[12]_i_1_n_3 ;
  wire \pkt_cnt_reg[12]_i_1_n_4 ;
  wire \pkt_cnt_reg[12]_i_1_n_5 ;
  wire \pkt_cnt_reg[12]_i_1_n_6 ;
  wire \pkt_cnt_reg[12]_i_1_n_7 ;
  wire \pkt_cnt_reg[15]_0 ;
  wire \pkt_cnt_reg[4]_i_1_n_0 ;
  wire \pkt_cnt_reg[4]_i_1_n_1 ;
  wire \pkt_cnt_reg[4]_i_1_n_2 ;
  wire \pkt_cnt_reg[4]_i_1_n_3 ;
  wire \pkt_cnt_reg[4]_i_1_n_4 ;
  wire \pkt_cnt_reg[4]_i_1_n_5 ;
  wire \pkt_cnt_reg[4]_i_1_n_6 ;
  wire \pkt_cnt_reg[4]_i_1_n_7 ;
  wire \pkt_cnt_reg[8]_i_1_n_0 ;
  wire \pkt_cnt_reg[8]_i_1_n_1 ;
  wire \pkt_cnt_reg[8]_i_1_n_2 ;
  wire \pkt_cnt_reg[8]_i_1_n_3 ;
  wire \pkt_cnt_reg[8]_i_1_n_4 ;
  wire \pkt_cnt_reg[8]_i_1_n_5 ;
  wire \pkt_cnt_reg[8]_i_1_n_6 ;
  wire \pkt_cnt_reg[8]_i_1_n_7 ;
  wire s_level_out_d1_cdc_to_reg;
  wire s_level_out_d3_reg;
  wire s_level_out_d3_reg_0;
  wire [0:0]timeout_hsexit;
  wire timeout_hsexit_all;
  wire timeout_zero_out_i_0;
  wire tx_div4_clk;
  wire [7:0]tx_dl0_hs_dp;
  wire tx_dl0_lp_dn;
  wire tx_dl0_lp_dp;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_reg;
  wire txlpdtesc_r_reg;
  wire u_tx_data_lane_sm_n_7;
  wire [3:3]\NLW_pkt_cnt_reg[12]_i_1_CO_UNCONNECTED ;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_64 ac_start_in_sync_i
       (.tx_div4_clk(tx_div4_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_65 dl_active_lane_coreclk_sync_i
       (.core_clk(core_clk),
        .out(dl_active_lane_coreclk_sync));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_66 dl_active_lane_div4clk_sync_i
       (.out(dl_active_lane_div4clk_sync),
        .tx_div4_clk(tx_div4_clk));
  FDRE dl_status_reg_bit_2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(esc_ulps_i),
        .Q(dl_status_reg[2]),
        .R(1'b0));
  FDRE dl_status_reg_bit_5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(esc_abort_i),
        .Q(dl_status_reg[3]),
        .R(1'b0));
  FDRE dl_stopstate_coreclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(u_tx_data_lane_sm_n_7),
        .Q(dl0_stopstate),
        .R(1'b0));
  FDRE dl_txrequesths_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl0_txrequesths),
        .Q(dl_txrequesths_r),
        .R(dl_txrequesths_r_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_67 en_cal_hs_datapath_sync_i
       (.en_cal_hs_datapath_i(en_cal_hs_datapath_i),
        .tx_div4_clk(tx_div4_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_68 en_hs_datapath_sync_i
       (.dl0_txrequesths(dl0_txrequesths),
        .dl1_txrequesths(dl1_txrequesths),
        .dl1_txrequesths_0(dl1_txrequesths_0),
        .dl2_txrequesths(dl2_txrequesths),
        .dl2_txrequesths_0(dl2_txrequesths_0),
        .dl3_txrequesths(dl3_txrequesths),
        .dl3_txrequesths_0(dl3_txrequesths_0),
        .dl_status_reg(dl_status_reg[0]),
        .out(s_level_out_d3_reg),
        .s_level_out_d3_reg_0(en_hs_datapath_sync_i_n_4),
        .tx_div4_clk(tx_div4_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_69 esc_stopstate_coreclk_sync_i
       (.core_clk(core_clk),
        .out(esc_stopstate_coreclk_sync),
        .s_level_out_d1_cdc_to_reg_0(esc_stopstate_i));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_70 \gen_tx_dl_en_tst_7s.gen_tx_dl_en_tst_obuf.hs_xfer_done_sync_i 
       (.core_clk(core_clk),
        .core_rst(core_rst),
        .hs_xfer_done_i(hs_xfer_done_i),
        .out(out));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_hs_datapath_7series_71 \gen_tx_hs_datapath_7series.u_tx_hs_datapath_7series 
       (.\HS_BYTE_XFER_BLK2.dl_tx_state_reg[0]_0 (en_hs_datapath_sync_i_n_4),
        .\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 (\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ),
        .dl0_txdatahs(dl0_txdatahs),
        .dl0_txrequesths(dl0_txrequesths),
        .en_hs_datapath_r_reg_0(en_hs_datapath_r_reg),
        .hs_xfer_done_i(hs_xfer_done_i),
        .hs_xfer_done_reg_0(dl_active_lane_div4clk_sync),
        .out(s_level_out_d3_reg),
        .pkt_cnt0(pkt_cnt0),
        .time_out_zero_reg_0(timeout_zero_out_i_0),
        .tx_div4_clk(tx_div4_clk),
        .tx_dl0_hs_dp(tx_dl0_hs_dp));
  LUT1 #(
    .INIT(2'h1)) 
    \pkt_cnt[0]_i_4 
       (.I0(pkt_cnt[0]),
        .O(\pkt_cnt[0]_i_4_n_0 ));
  FDRE \pkt_cnt_reg[0] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[0]_i_3_n_7 ),
        .Q(pkt_cnt[0]),
        .R(\pkt_cnt_reg[15]_0 ));
  CARRY4 \pkt_cnt_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\pkt_cnt_reg[0]_i_3_n_0 ,\pkt_cnt_reg[0]_i_3_n_1 ,\pkt_cnt_reg[0]_i_3_n_2 ,\pkt_cnt_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\pkt_cnt_reg[0]_i_3_n_4 ,\pkt_cnt_reg[0]_i_3_n_5 ,\pkt_cnt_reg[0]_i_3_n_6 ,\pkt_cnt_reg[0]_i_3_n_7 }),
        .S({pkt_cnt[3:1],\pkt_cnt[0]_i_4_n_0 }));
  FDRE \pkt_cnt_reg[10] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[8]_i_1_n_5 ),
        .Q(pkt_cnt[10]),
        .R(\pkt_cnt_reg[15]_0 ));
  FDRE \pkt_cnt_reg[11] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[8]_i_1_n_4 ),
        .Q(pkt_cnt[11]),
        .R(\pkt_cnt_reg[15]_0 ));
  FDRE \pkt_cnt_reg[12] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[12]_i_1_n_7 ),
        .Q(pkt_cnt[12]),
        .R(\pkt_cnt_reg[15]_0 ));
  CARRY4 \pkt_cnt_reg[12]_i_1 
       (.CI(\pkt_cnt_reg[8]_i_1_n_0 ),
        .CO({\NLW_pkt_cnt_reg[12]_i_1_CO_UNCONNECTED [3],\pkt_cnt_reg[12]_i_1_n_1 ,\pkt_cnt_reg[12]_i_1_n_2 ,\pkt_cnt_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_reg[12]_i_1_n_4 ,\pkt_cnt_reg[12]_i_1_n_5 ,\pkt_cnt_reg[12]_i_1_n_6 ,\pkt_cnt_reg[12]_i_1_n_7 }),
        .S(pkt_cnt[15:12]));
  FDRE \pkt_cnt_reg[13] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[12]_i_1_n_6 ),
        .Q(pkt_cnt[13]),
        .R(\pkt_cnt_reg[15]_0 ));
  FDRE \pkt_cnt_reg[14] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[12]_i_1_n_5 ),
        .Q(pkt_cnt[14]),
        .R(\pkt_cnt_reg[15]_0 ));
  FDRE \pkt_cnt_reg[15] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[12]_i_1_n_4 ),
        .Q(pkt_cnt[15]),
        .R(\pkt_cnt_reg[15]_0 ));
  FDRE \pkt_cnt_reg[1] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[0]_i_3_n_6 ),
        .Q(pkt_cnt[1]),
        .R(\pkt_cnt_reg[15]_0 ));
  FDRE \pkt_cnt_reg[2] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[0]_i_3_n_5 ),
        .Q(pkt_cnt[2]),
        .R(\pkt_cnt_reg[15]_0 ));
  FDRE \pkt_cnt_reg[3] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[0]_i_3_n_4 ),
        .Q(pkt_cnt[3]),
        .R(\pkt_cnt_reg[15]_0 ));
  FDRE \pkt_cnt_reg[4] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[4]_i_1_n_7 ),
        .Q(pkt_cnt[4]),
        .R(\pkt_cnt_reg[15]_0 ));
  CARRY4 \pkt_cnt_reg[4]_i_1 
       (.CI(\pkt_cnt_reg[0]_i_3_n_0 ),
        .CO({\pkt_cnt_reg[4]_i_1_n_0 ,\pkt_cnt_reg[4]_i_1_n_1 ,\pkt_cnt_reg[4]_i_1_n_2 ,\pkt_cnt_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_reg[4]_i_1_n_4 ,\pkt_cnt_reg[4]_i_1_n_5 ,\pkt_cnt_reg[4]_i_1_n_6 ,\pkt_cnt_reg[4]_i_1_n_7 }),
        .S(pkt_cnt[7:4]));
  FDRE \pkt_cnt_reg[5] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[4]_i_1_n_6 ),
        .Q(pkt_cnt[5]),
        .R(\pkt_cnt_reg[15]_0 ));
  FDRE \pkt_cnt_reg[6] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[4]_i_1_n_5 ),
        .Q(pkt_cnt[6]),
        .R(\pkt_cnt_reg[15]_0 ));
  FDRE \pkt_cnt_reg[7] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[4]_i_1_n_4 ),
        .Q(pkt_cnt[7]),
        .R(\pkt_cnt_reg[15]_0 ));
  FDRE \pkt_cnt_reg[8] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[8]_i_1_n_7 ),
        .Q(pkt_cnt[8]),
        .R(\pkt_cnt_reg[15]_0 ));
  CARRY4 \pkt_cnt_reg[8]_i_1 
       (.CI(\pkt_cnt_reg[4]_i_1_n_0 ),
        .CO({\pkt_cnt_reg[8]_i_1_n_0 ,\pkt_cnt_reg[8]_i_1_n_1 ,\pkt_cnt_reg[8]_i_1_n_2 ,\pkt_cnt_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_reg[8]_i_1_n_4 ,\pkt_cnt_reg[8]_i_1_n_5 ,\pkt_cnt_reg[8]_i_1_n_6 ,\pkt_cnt_reg[8]_i_1_n_7 }),
        .S(pkt_cnt[11:8]));
  FDRE \pkt_cnt_reg[9] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[8]_i_1_n_6 ),
        .Q(pkt_cnt[9]),
        .R(\pkt_cnt_reg[15]_0 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_data_lane_sm_72 u_tx_data_lane_sm
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_enable(dl0_enable),
        .dl0_forcetxstopmode(dl0_forcetxstopmode),
        .dl0_txrequestesc(dl0_txrequestesc),
        .dl_status_reg(dl_status_reg[0]),
        .dl_stopstate_coreclk_reg(esc_stopstate_coreclk_sync),
        .dl_stopstate_reg_0(u_tx_data_lane_sm_n_7),
        .dl_tx_sm_state0__0(dl_tx_sm_state0__0),
        .\dl_tx_sm_state[1]_i_4 (\dl_tx_sm_state[1]_i_4 ),
        .dl_txrequesths_r(dl_txrequesths_r),
        .en_cal_hs_datapath_i(en_cal_hs_datapath_i),
        .esc_start_i(esc_start_i),
        .out(dl_status_reg[4]),
        .s_level_out_d1_cdc_to_reg(esc_ctrl_lane_sm),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_hsexit_reg_0(timeout_hsexit),
        .timeout_hsexit_reg_1(dl_active_lane_coreclk_sync),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i),
        .tx_dl_lp_dp_reg_0(tx_dl_lp_dp_reg));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_esc_datapath_73 u_tx_esc_datapath
       (.dl0_forcetxstopmode(dl0_forcetxstopmode),
        .dl0_txclkesc(dl0_txclkesc),
        .dl0_txdataesc(dl0_txdataesc),
        .dl0_txlpdtesc(dl0_txlpdtesc),
        .dl0_txrequestesc(dl0_txrequestesc),
        .dl0_txtriggeresc(dl0_txtriggeresc),
        .dl0_txulpsesc(dl0_txulpsesc),
        .dl0_txulpsexit(dl0_txulpsexit),
        .dl0_txvalidesc(dl0_txvalidesc),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl_status_reg(dl_status_reg[1]),
        .dl_txreadyesc_reg_0(dl_txreadyesc_reg),
        .esc_abort_i(esc_abort_i),
        .esc_ctrl_all_sm_reg_0(esc_ctrl_all_sm_reg),
        .esc_ctrl_all_sm_reg_1(esc_ctrl_all_sm_reg_0),
        .esc_start_i(esc_start_i),
        .esc_stopstate_reg_0(esc_stopstate_i),
        .esc_ulps_i(esc_ulps_i),
        .hs_xfer_done_i(hs_xfer_done_i),
        .out(esc_ctrl_lane_sm),
        .s_level_out_d1_cdc_to_reg(s_level_out_d1_cdc_to_reg),
        .s_level_out_d3_reg(s_level_out_d3_reg_0),
        .tx_dl0_lp_dn(tx_dl0_lp_dn),
        .tx_dl0_lp_dp(tx_dl0_lp_dp),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i),
        .txlpdtesc_r_reg_0(txlpdtesc_r_reg));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_data_lane" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_data_lane_3
   (out,
    dl_status_reg,
    s_level_out_d3_reg,
    \pkt_cnt_reg[15]_0 ,
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ,
    dl_txreadyesc_reg,
    dl1_ulpsactivenot,
    dl1_stopstate,
    tx_dl1_lp_dp,
    tx_dl1_lp_dn,
    timeout_hsexit_all,
    esc_ctrl_all_sm_reg,
    s_level_out_d3_reg_0,
    tx_dl1_hs_dp,
    \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] ,
    dl1_txrequesths,
    tx_div4_clk,
    core_rst,
    dl1_enable,
    core_clk,
    dl1_txrequestesc,
    dl1_forcetxstopmode,
    esc_active_all_reg,
    esc_ctrl_all_sm_reg_0,
    dl0_txclkesc,
    dl_txrequesths_r_reg_0,
    \pkt_cnt_reg[0]_0 ,
    dl_status_bit_6_i_6,
    s_level_out_d1_cdc_to_reg,
    txlpdtesc_r_reg,
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] ,
    dl1_txdatahs,
    timeout_zero_out_i_0,
    \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ,
    dl1_txvalidesc,
    dl1_txdataesc,
    dl1_txulpsexit,
    dl1_txtriggeresc,
    dl1_txulpsesc,
    dl1_txlpdtesc,
    dl_hs_exit_done_i,
    \cl_tx_state[3]_i_7 ,
    cl_init_done_coreclk_i,
    \dl_tx_sm_state[1]_i_4__0 ,
    cl_txclkactivehs_i,
    dl_tx_sm_state0__0,
    tx_dl_lp_dp_reg);
  output out;
  output [4:0]dl_status_reg;
  output s_level_out_d3_reg;
  output [15:0]\pkt_cnt_reg[15]_0 ;
  output \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ;
  output dl_txreadyesc_reg;
  output dl1_ulpsactivenot;
  output dl1_stopstate;
  output tx_dl1_lp_dp;
  output tx_dl1_lp_dn;
  output timeout_hsexit_all;
  output esc_ctrl_all_sm_reg;
  output s_level_out_d3_reg_0;
  output [7:0]tx_dl1_hs_dp;
  input \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] ;
  input dl1_txrequesths;
  input tx_div4_clk;
  input core_rst;
  input dl1_enable;
  input core_clk;
  input dl1_txrequestesc;
  input dl1_forcetxstopmode;
  input [2:0]esc_active_all_reg;
  input esc_ctrl_all_sm_reg_0;
  input dl0_txclkesc;
  input dl_txrequesths_r_reg_0;
  input \pkt_cnt_reg[0]_0 ;
  input [2:0]dl_status_bit_6_i_6;
  input s_level_out_d1_cdc_to_reg;
  input txlpdtesc_r_reg;
  input \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] ;
  input [7:0]dl1_txdatahs;
  input timeout_zero_out_i_0;
  input \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ;
  input dl1_txvalidesc;
  input [7:0]dl1_txdataesc;
  input dl1_txulpsexit;
  input [3:0]dl1_txtriggeresc;
  input dl1_txulpsesc;
  input dl1_txlpdtesc;
  input [2:0]dl_hs_exit_done_i;
  input \cl_tx_state[3]_i_7 ;
  input cl_init_done_coreclk_i;
  input \dl_tx_sm_state[1]_i_4__0 ;
  input cl_txclkactivehs_i;
  input dl_tx_sm_state0__0;
  input tx_dl_lp_dp_reg;

  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ;
  wire cl_init_done_coreclk_i;
  wire \cl_tx_state[3]_i_7 ;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl0_txclkesc;
  wire dl1_enable;
  wire dl1_forcetxstopmode;
  wire dl1_stopstate;
  wire [7:0]dl1_txdataesc;
  wire [7:0]dl1_txdatahs;
  wire dl1_txlpdtesc;
  wire dl1_txrequestesc;
  wire dl1_txrequesths;
  wire [3:0]dl1_txtriggeresc;
  wire dl1_txulpsesc;
  wire dl1_txulpsexit;
  wire dl1_txvalidesc;
  wire dl1_ulpsactivenot;
  wire dl_active_lane_coreclk_sync;
  wire dl_active_lane_div4clk_sync;
  wire [2:0]dl_hs_exit_done_i;
  wire [2:0]dl_status_bit_6_i_6;
  wire [4:0]dl_status_reg;
  wire dl_tx_sm_state0__0;
  wire \dl_tx_sm_state[1]_i_4__0 ;
  wire dl_txreadyesc_reg;
  wire dl_txrequesths_r;
  wire dl_txrequesths_r_reg_0;
  wire en_cal_hs_datapath_i;
  wire esc_abort_i;
  wire [2:0]esc_active_all_reg;
  wire esc_ctrl_all_sm_reg;
  wire esc_ctrl_all_sm_reg_0;
  wire esc_ctrl_lane_sm;
  wire esc_start_i;
  wire esc_stopstate_coreclk_sync;
  wire esc_stopstate_i;
  wire esc_ulps_i;
  wire hs_xfer_done_i;
  wire out;
  wire pkt_cnt0;
  wire \pkt_cnt[0]_i_3_n_0 ;
  wire \pkt_cnt_reg[0]_0 ;
  wire \pkt_cnt_reg[0]_i_2_n_0 ;
  wire \pkt_cnt_reg[0]_i_2_n_1 ;
  wire \pkt_cnt_reg[0]_i_2_n_2 ;
  wire \pkt_cnt_reg[0]_i_2_n_3 ;
  wire \pkt_cnt_reg[0]_i_2_n_4 ;
  wire \pkt_cnt_reg[0]_i_2_n_5 ;
  wire \pkt_cnt_reg[0]_i_2_n_6 ;
  wire \pkt_cnt_reg[0]_i_2_n_7 ;
  wire \pkt_cnt_reg[12]_i_1__0_n_1 ;
  wire \pkt_cnt_reg[12]_i_1__0_n_2 ;
  wire \pkt_cnt_reg[12]_i_1__0_n_3 ;
  wire \pkt_cnt_reg[12]_i_1__0_n_4 ;
  wire \pkt_cnt_reg[12]_i_1__0_n_5 ;
  wire \pkt_cnt_reg[12]_i_1__0_n_6 ;
  wire \pkt_cnt_reg[12]_i_1__0_n_7 ;
  wire [15:0]\pkt_cnt_reg[15]_0 ;
  wire \pkt_cnt_reg[4]_i_1__0_n_0 ;
  wire \pkt_cnt_reg[4]_i_1__0_n_1 ;
  wire \pkt_cnt_reg[4]_i_1__0_n_2 ;
  wire \pkt_cnt_reg[4]_i_1__0_n_3 ;
  wire \pkt_cnt_reg[4]_i_1__0_n_4 ;
  wire \pkt_cnt_reg[4]_i_1__0_n_5 ;
  wire \pkt_cnt_reg[4]_i_1__0_n_6 ;
  wire \pkt_cnt_reg[4]_i_1__0_n_7 ;
  wire \pkt_cnt_reg[8]_i_1__0_n_0 ;
  wire \pkt_cnt_reg[8]_i_1__0_n_1 ;
  wire \pkt_cnt_reg[8]_i_1__0_n_2 ;
  wire \pkt_cnt_reg[8]_i_1__0_n_3 ;
  wire \pkt_cnt_reg[8]_i_1__0_n_4 ;
  wire \pkt_cnt_reg[8]_i_1__0_n_5 ;
  wire \pkt_cnt_reg[8]_i_1__0_n_6 ;
  wire \pkt_cnt_reg[8]_i_1__0_n_7 ;
  wire s_level_out_d1_cdc_to_reg;
  wire s_level_out_d3_reg;
  wire s_level_out_d3_reg_0;
  wire timeout_hsexit_all;
  wire timeout_zero_out_i_0;
  wire tx_div4_clk;
  wire [7:0]tx_dl1_hs_dp;
  wire tx_dl1_lp_dn;
  wire tx_dl1_lp_dp;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_reg;
  wire txlpdtesc_r_reg;
  wire u_tx_data_lane_sm_n_7;
  wire [3:3]\NLW_pkt_cnt_reg[12]_i_1__0_CO_UNCONNECTED ;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_44 ac_start_in_sync_i
       (.tx_div4_clk(tx_div4_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_45 dl_active_lane_coreclk_sync_i
       (.core_clk(core_clk),
        .out(dl_active_lane_coreclk_sync));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_46 dl_active_lane_div4clk_sync_i
       (.out(dl_active_lane_div4clk_sync),
        .tx_div4_clk(tx_div4_clk));
  FDRE dl_status_reg_bit_2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(esc_ulps_i),
        .Q(dl_status_reg[2]),
        .R(1'b0));
  FDRE dl_status_reg_bit_5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(esc_abort_i),
        .Q(dl_status_reg[3]),
        .R(1'b0));
  FDRE dl_stopstate_coreclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(u_tx_data_lane_sm_n_7),
        .Q(dl1_stopstate),
        .R(1'b0));
  FDRE dl_txrequesths_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl1_txrequesths),
        .Q(dl_txrequesths_r),
        .R(dl_txrequesths_r_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_47 en_cal_hs_datapath_sync_i
       (.en_cal_hs_datapath_i(en_cal_hs_datapath_i),
        .tx_div4_clk(tx_div4_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_48 en_hs_datapath_sync_i
       (.dl_status_reg(dl_status_reg[0]),
        .tx_div4_clk(tx_div4_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_49 esc_stopstate_coreclk_sync_i
       (.core_clk(core_clk),
        .out(esc_stopstate_coreclk_sync),
        .s_level_out_d1_cdc_to_reg_0(esc_stopstate_i));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_50 \gen_tx_dl_en_tst_7s.gen_tx_dl_en_tst_obuf.hs_xfer_done_sync_i 
       (.\cl_tx_state[3]_i_7 (\cl_tx_state[3]_i_7 ),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_hs_exit_done_i(dl_hs_exit_done_i),
        .hs_xfer_done_i(hs_xfer_done_i),
        .out(out),
        .s_level_out_d3_reg_0(s_level_out_d3_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_hs_datapath_7series_51 \gen_tx_hs_datapath_7series.u_tx_hs_datapath_7series 
       (.\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 (\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] ),
        .\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 (\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ),
        .\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 (\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] ),
        .\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 (\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ),
        .dl1_txdatahs(dl1_txdatahs),
        .dl1_txrequesths(dl1_txrequesths),
        .hs_xfer_done_i(hs_xfer_done_i),
        .out(dl_active_lane_div4clk_sync),
        .pkt_cnt0(pkt_cnt0),
        .timeout_zero_out_i_0(timeout_zero_out_i_0),
        .tx_div4_clk(tx_div4_clk),
        .tx_dl1_hs_dp(tx_dl1_hs_dp));
  LUT1 #(
    .INIT(2'h1)) 
    \pkt_cnt[0]_i_3 
       (.I0(\pkt_cnt_reg[15]_0 [0]),
        .O(\pkt_cnt[0]_i_3_n_0 ));
  FDRE \pkt_cnt_reg[0] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[0]_i_2_n_7 ),
        .Q(\pkt_cnt_reg[15]_0 [0]),
        .R(\pkt_cnt_reg[0]_0 ));
  CARRY4 \pkt_cnt_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\pkt_cnt_reg[0]_i_2_n_0 ,\pkt_cnt_reg[0]_i_2_n_1 ,\pkt_cnt_reg[0]_i_2_n_2 ,\pkt_cnt_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\pkt_cnt_reg[0]_i_2_n_4 ,\pkt_cnt_reg[0]_i_2_n_5 ,\pkt_cnt_reg[0]_i_2_n_6 ,\pkt_cnt_reg[0]_i_2_n_7 }),
        .S({\pkt_cnt_reg[15]_0 [3:1],\pkt_cnt[0]_i_3_n_0 }));
  FDRE \pkt_cnt_reg[10] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[8]_i_1__0_n_5 ),
        .Q(\pkt_cnt_reg[15]_0 [10]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[11] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[8]_i_1__0_n_4 ),
        .Q(\pkt_cnt_reg[15]_0 [11]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[12] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[12]_i_1__0_n_7 ),
        .Q(\pkt_cnt_reg[15]_0 [12]),
        .R(\pkt_cnt_reg[0]_0 ));
  CARRY4 \pkt_cnt_reg[12]_i_1__0 
       (.CI(\pkt_cnt_reg[8]_i_1__0_n_0 ),
        .CO({\NLW_pkt_cnt_reg[12]_i_1__0_CO_UNCONNECTED [3],\pkt_cnt_reg[12]_i_1__0_n_1 ,\pkt_cnt_reg[12]_i_1__0_n_2 ,\pkt_cnt_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_reg[12]_i_1__0_n_4 ,\pkt_cnt_reg[12]_i_1__0_n_5 ,\pkt_cnt_reg[12]_i_1__0_n_6 ,\pkt_cnt_reg[12]_i_1__0_n_7 }),
        .S(\pkt_cnt_reg[15]_0 [15:12]));
  FDRE \pkt_cnt_reg[13] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[12]_i_1__0_n_6 ),
        .Q(\pkt_cnt_reg[15]_0 [13]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[14] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[12]_i_1__0_n_5 ),
        .Q(\pkt_cnt_reg[15]_0 [14]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[15] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[12]_i_1__0_n_4 ),
        .Q(\pkt_cnt_reg[15]_0 [15]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[1] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[0]_i_2_n_6 ),
        .Q(\pkt_cnt_reg[15]_0 [1]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[2] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[0]_i_2_n_5 ),
        .Q(\pkt_cnt_reg[15]_0 [2]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[3] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[0]_i_2_n_4 ),
        .Q(\pkt_cnt_reg[15]_0 [3]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[4] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[4]_i_1__0_n_7 ),
        .Q(\pkt_cnt_reg[15]_0 [4]),
        .R(\pkt_cnt_reg[0]_0 ));
  CARRY4 \pkt_cnt_reg[4]_i_1__0 
       (.CI(\pkt_cnt_reg[0]_i_2_n_0 ),
        .CO({\pkt_cnt_reg[4]_i_1__0_n_0 ,\pkt_cnt_reg[4]_i_1__0_n_1 ,\pkt_cnt_reg[4]_i_1__0_n_2 ,\pkt_cnt_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_reg[4]_i_1__0_n_4 ,\pkt_cnt_reg[4]_i_1__0_n_5 ,\pkt_cnt_reg[4]_i_1__0_n_6 ,\pkt_cnt_reg[4]_i_1__0_n_7 }),
        .S(\pkt_cnt_reg[15]_0 [7:4]));
  FDRE \pkt_cnt_reg[5] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[4]_i_1__0_n_6 ),
        .Q(\pkt_cnt_reg[15]_0 [5]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[6] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[4]_i_1__0_n_5 ),
        .Q(\pkt_cnt_reg[15]_0 [6]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[7] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[4]_i_1__0_n_4 ),
        .Q(\pkt_cnt_reg[15]_0 [7]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[8] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[8]_i_1__0_n_7 ),
        .Q(\pkt_cnt_reg[15]_0 [8]),
        .R(\pkt_cnt_reg[0]_0 ));
  CARRY4 \pkt_cnt_reg[8]_i_1__0 
       (.CI(\pkt_cnt_reg[4]_i_1__0_n_0 ),
        .CO({\pkt_cnt_reg[8]_i_1__0_n_0 ,\pkt_cnt_reg[8]_i_1__0_n_1 ,\pkt_cnt_reg[8]_i_1__0_n_2 ,\pkt_cnt_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_reg[8]_i_1__0_n_4 ,\pkt_cnt_reg[8]_i_1__0_n_5 ,\pkt_cnt_reg[8]_i_1__0_n_6 ,\pkt_cnt_reg[8]_i_1__0_n_7 }),
        .S(\pkt_cnt_reg[15]_0 [11:8]));
  FDRE \pkt_cnt_reg[9] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[8]_i_1__0_n_6 ),
        .Q(\pkt_cnt_reg[15]_0 [9]),
        .R(\pkt_cnt_reg[0]_0 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_data_lane_sm_52 u_tx_data_lane_sm
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl1_enable(dl1_enable),
        .dl1_forcetxstopmode(dl1_forcetxstopmode),
        .dl1_txrequestesc(dl1_txrequestesc),
        .dl_status_bit_6_i_6(dl_status_bit_6_i_6),
        .dl_status_reg(dl_status_reg[0]),
        .dl_stopstate_coreclk_reg(esc_stopstate_coreclk_sync),
        .dl_stopstate_reg_0(u_tx_data_lane_sm_n_7),
        .dl_tx_sm_state0__0(dl_tx_sm_state0__0),
        .\dl_tx_sm_state[1]_i_4__0 (\dl_tx_sm_state[1]_i_4__0 ),
        .dl_txrequesths_r(dl_txrequesths_r),
        .en_cal_hs_datapath_i(en_cal_hs_datapath_i),
        .esc_start_i(esc_start_i),
        .out(dl_status_reg[4]),
        .s_level_out_d1_cdc_to_reg(esc_ctrl_lane_sm),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_hsexit_reg_0(dl_active_lane_coreclk_sync),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i),
        .tx_dl_lp_dp_reg_0(tx_dl_lp_dp_reg));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_esc_datapath_53 u_tx_esc_datapath
       (.dl0_txclkesc(dl0_txclkesc),
        .dl1_forcetxstopmode(dl1_forcetxstopmode),
        .dl1_txdataesc(dl1_txdataesc),
        .dl1_txlpdtesc(dl1_txlpdtesc),
        .dl1_txrequestesc(dl1_txrequestesc),
        .dl1_txtriggeresc(dl1_txtriggeresc),
        .dl1_txulpsesc(dl1_txulpsesc),
        .dl1_txulpsexit(dl1_txulpsexit),
        .dl1_txvalidesc(dl1_txvalidesc),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dl_status_reg(dl_status_reg[1]),
        .dl_txreadyesc_reg_0(dl_txreadyesc_reg),
        .esc_abort_i(esc_abort_i),
        .esc_active_all_reg(esc_active_all_reg),
        .esc_ctrl_all_sm_reg_0(esc_ctrl_all_sm_reg),
        .esc_ctrl_all_sm_reg_1(esc_ctrl_all_sm_reg_0),
        .esc_start_i(esc_start_i),
        .esc_stopstate_reg_0(esc_stopstate_i),
        .esc_ulps_i(esc_ulps_i),
        .hs_xfer_done_i(hs_xfer_done_i),
        .out(esc_ctrl_lane_sm),
        .s_level_out_d1_cdc_to_reg(s_level_out_d1_cdc_to_reg),
        .s_level_out_d3_reg(s_level_out_d3_reg),
        .tx_dl1_lp_dn(tx_dl1_lp_dn),
        .tx_dl1_lp_dp(tx_dl1_lp_dp),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i),
        .txlpdtesc_r_reg_0(txlpdtesc_r_reg));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_data_lane" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_data_lane_4
   (out,
    dl_status_reg,
    s_level_out_d3_reg,
    esc_ctrl_all_sm_reg,
    \pkt_cnt_reg[15]_0 ,
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ,
    timeout_hsexit_reg,
    dl_txreadyesc_reg,
    dl2_ulpsactivenot,
    dl2_stopstate,
    tx_dl2_lp_dp,
    tx_dl2_lp_dn,
    en_hs_datapath_reg,
    s_level_out_d3_reg_0,
    dl_tx_sm_state0__0,
    tx_dl2_hs_dp,
    \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] ,
    dl2_txrequesths,
    tx_div4_clk,
    core_rst,
    dl2_enable,
    core_clk,
    dl2_txrequestesc,
    dl2_forcetxstopmode,
    esc_ctrl_all_sm_reg_0,
    dl0_txclkesc,
    dl_txrequesths_r_reg_0,
    \pkt_cnt_reg[0]_0 ,
    s_level_out_d1_cdc_to_reg,
    txlpdtesc_r_reg,
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] ,
    dl2_txdatahs,
    timeout_zero_out_i_0,
    \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ,
    dl2_txvalidesc,
    dl2_txdataesc,
    dl2_txulpsexit,
    dl2_txtriggeresc,
    dl2_txulpsesc,
    dl2_txlpdtesc,
    cl_txclkactivehs_i_5,
    dl_hs_exit_done_i,
    cl_txclkactivehs_i,
    cl_init_done_coreclk_i,
    \dl_tx_sm_state[1]_i_4__1 ,
    tx_dl_lp_dp_reg,
    timeout_hsexit_all);
  output out;
  output [4:0]dl_status_reg;
  output s_level_out_d3_reg;
  output esc_ctrl_all_sm_reg;
  output [15:0]\pkt_cnt_reg[15]_0 ;
  output \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ;
  output [0:0]timeout_hsexit_reg;
  output dl_txreadyesc_reg;
  output dl2_ulpsactivenot;
  output dl2_stopstate;
  output tx_dl2_lp_dp;
  output tx_dl2_lp_dn;
  output en_hs_datapath_reg;
  output s_level_out_d3_reg_0;
  output dl_tx_sm_state0__0;
  output [7:0]tx_dl2_hs_dp;
  input \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] ;
  input dl2_txrequesths;
  input tx_div4_clk;
  input core_rst;
  input dl2_enable;
  input core_clk;
  input dl2_txrequestesc;
  input dl2_forcetxstopmode;
  input esc_ctrl_all_sm_reg_0;
  input dl0_txclkesc;
  input dl_txrequesths_r_reg_0;
  input \pkt_cnt_reg[0]_0 ;
  input s_level_out_d1_cdc_to_reg;
  input txlpdtesc_r_reg;
  input \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] ;
  input [7:0]dl2_txdatahs;
  input timeout_zero_out_i_0;
  input \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ;
  input dl2_txvalidesc;
  input [7:0]dl2_txdataesc;
  input dl2_txulpsexit;
  input [3:0]dl2_txtriggeresc;
  input dl2_txulpsesc;
  input dl2_txlpdtesc;
  input [2:0]cl_txclkactivehs_i_5;
  input [2:0]dl_hs_exit_done_i;
  input cl_txclkactivehs_i;
  input cl_init_done_coreclk_i;
  input \dl_tx_sm_state[1]_i_4__1 ;
  input tx_dl_lp_dp_reg;
  input timeout_hsexit_all;

  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire [2:0]cl_txclkactivehs_i_5;
  wire core_clk;
  wire core_rst;
  wire dl0_txclkesc;
  wire dl2_enable;
  wire dl2_forcetxstopmode;
  wire dl2_stopstate;
  wire [7:0]dl2_txdataesc;
  wire [7:0]dl2_txdatahs;
  wire dl2_txlpdtesc;
  wire dl2_txrequestesc;
  wire dl2_txrequesths;
  wire [3:0]dl2_txtriggeresc;
  wire dl2_txulpsesc;
  wire dl2_txulpsexit;
  wire dl2_txvalidesc;
  wire dl2_ulpsactivenot;
  wire dl_active_lane_coreclk_sync;
  wire dl_active_lane_div4clk_sync;
  wire [2:0]dl_hs_exit_done_i;
  wire [4:0]dl_status_reg;
  wire dl_tx_sm_state0__0;
  wire \dl_tx_sm_state[1]_i_4__1 ;
  wire dl_txreadyesc_reg;
  wire dl_txrequesths_r;
  wire dl_txrequesths_r_reg_0;
  wire en_cal_hs_datapath_i;
  wire en_hs_datapath_reg;
  wire esc_abort_i;
  wire esc_ctrl_all_sm_reg;
  wire esc_ctrl_all_sm_reg_0;
  wire esc_ctrl_lane_sm;
  wire esc_start_i;
  wire esc_stopstate_coreclk_sync;
  wire esc_stopstate_i;
  wire esc_ulps_i;
  wire hs_xfer_done_i;
  wire out;
  wire pkt_cnt0;
  wire \pkt_cnt[0]_i_3__0_n_0 ;
  wire \pkt_cnt_reg[0]_0 ;
  wire \pkt_cnt_reg[0]_i_2__0_n_0 ;
  wire \pkt_cnt_reg[0]_i_2__0_n_1 ;
  wire \pkt_cnt_reg[0]_i_2__0_n_2 ;
  wire \pkt_cnt_reg[0]_i_2__0_n_3 ;
  wire \pkt_cnt_reg[0]_i_2__0_n_4 ;
  wire \pkt_cnt_reg[0]_i_2__0_n_5 ;
  wire \pkt_cnt_reg[0]_i_2__0_n_6 ;
  wire \pkt_cnt_reg[0]_i_2__0_n_7 ;
  wire \pkt_cnt_reg[12]_i_1__1_n_1 ;
  wire \pkt_cnt_reg[12]_i_1__1_n_2 ;
  wire \pkt_cnt_reg[12]_i_1__1_n_3 ;
  wire \pkt_cnt_reg[12]_i_1__1_n_4 ;
  wire \pkt_cnt_reg[12]_i_1__1_n_5 ;
  wire \pkt_cnt_reg[12]_i_1__1_n_6 ;
  wire \pkt_cnt_reg[12]_i_1__1_n_7 ;
  wire [15:0]\pkt_cnt_reg[15]_0 ;
  wire \pkt_cnt_reg[4]_i_1__1_n_0 ;
  wire \pkt_cnt_reg[4]_i_1__1_n_1 ;
  wire \pkt_cnt_reg[4]_i_1__1_n_2 ;
  wire \pkt_cnt_reg[4]_i_1__1_n_3 ;
  wire \pkt_cnt_reg[4]_i_1__1_n_4 ;
  wire \pkt_cnt_reg[4]_i_1__1_n_5 ;
  wire \pkt_cnt_reg[4]_i_1__1_n_6 ;
  wire \pkt_cnt_reg[4]_i_1__1_n_7 ;
  wire \pkt_cnt_reg[8]_i_1__1_n_0 ;
  wire \pkt_cnt_reg[8]_i_1__1_n_1 ;
  wire \pkt_cnt_reg[8]_i_1__1_n_2 ;
  wire \pkt_cnt_reg[8]_i_1__1_n_3 ;
  wire \pkt_cnt_reg[8]_i_1__1_n_4 ;
  wire \pkt_cnt_reg[8]_i_1__1_n_5 ;
  wire \pkt_cnt_reg[8]_i_1__1_n_6 ;
  wire \pkt_cnt_reg[8]_i_1__1_n_7 ;
  wire s_level_out_d1_cdc_to_reg;
  wire s_level_out_d3_reg;
  wire s_level_out_d3_reg_0;
  wire timeout_hsexit_all;
  wire [0:0]timeout_hsexit_reg;
  wire timeout_zero_out_i_0;
  wire tx_div4_clk;
  wire [7:0]tx_dl2_hs_dp;
  wire tx_dl2_lp_dn;
  wire tx_dl2_lp_dp;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_reg;
  wire txlpdtesc_r_reg;
  wire u_tx_data_lane_sm_n_7;
  wire [3:3]\NLW_pkt_cnt_reg[12]_i_1__1_CO_UNCONNECTED ;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_24 ac_start_in_sync_i
       (.tx_div4_clk(tx_div4_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_25 dl_active_lane_coreclk_sync_i
       (.core_clk(core_clk),
        .out(dl_active_lane_coreclk_sync));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_26 dl_active_lane_div4clk_sync_i
       (.out(dl_active_lane_div4clk_sync),
        .tx_div4_clk(tx_div4_clk));
  FDRE dl_status_reg_bit_2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(esc_ulps_i),
        .Q(dl_status_reg[2]),
        .R(1'b0));
  FDRE dl_status_reg_bit_5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(esc_abort_i),
        .Q(dl_status_reg[3]),
        .R(1'b0));
  FDRE dl_stopstate_coreclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(u_tx_data_lane_sm_n_7),
        .Q(dl2_stopstate),
        .R(1'b0));
  FDRE dl_txrequesths_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl2_txrequesths),
        .Q(dl_txrequesths_r),
        .R(dl_txrequesths_r_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_27 en_cal_hs_datapath_sync_i
       (.en_cal_hs_datapath_i(en_cal_hs_datapath_i),
        .tx_div4_clk(tx_div4_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_28 en_hs_datapath_sync_i
       (.s_level_out_d1_cdc_to_reg_0(dl_status_reg[0]),
        .tx_div4_clk(tx_div4_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_29 esc_stopstate_coreclk_sync_i
       (.core_clk(core_clk),
        .out(esc_stopstate_coreclk_sync),
        .s_level_out_d1_cdc_to_reg_0(esc_stopstate_i));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_30 \gen_tx_dl_en_tst_7s.gen_tx_dl_en_tst_obuf.hs_xfer_done_sync_i 
       (.cl_txclkactivehs_i(cl_txclkactivehs_i),
        .cl_txclkactivehs_i_5(dl_status_reg[0]),
        .cl_txclkactivehs_i_5_0(cl_txclkactivehs_i_5),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_hs_exit_done_i(dl_hs_exit_done_i),
        .en_hs_datapath_reg(en_hs_datapath_reg),
        .hs_xfer_done_i(hs_xfer_done_i),
        .out(out),
        .s_level_out_d3_reg_0(s_level_out_d3_reg_0),
        .s_level_out_d3_reg_1(dl_tx_sm_state0__0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_hs_datapath_7series_31 \gen_tx_hs_datapath_7series.u_tx_hs_datapath_7series 
       (.\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 (\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] ),
        .\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 (\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ),
        .\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 (\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] ),
        .\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 (\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ),
        .dl2_txdatahs(dl2_txdatahs),
        .dl2_txrequesths(dl2_txrequesths),
        .hs_xfer_done_i(hs_xfer_done_i),
        .out(dl_active_lane_div4clk_sync),
        .pkt_cnt0(pkt_cnt0),
        .timeout_zero_out_i_0(timeout_zero_out_i_0),
        .tx_div4_clk(tx_div4_clk),
        .tx_dl2_hs_dp(tx_dl2_hs_dp));
  LUT1 #(
    .INIT(2'h1)) 
    \pkt_cnt[0]_i_3__0 
       (.I0(\pkt_cnt_reg[15]_0 [0]),
        .O(\pkt_cnt[0]_i_3__0_n_0 ));
  FDRE \pkt_cnt_reg[0] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[0]_i_2__0_n_7 ),
        .Q(\pkt_cnt_reg[15]_0 [0]),
        .R(\pkt_cnt_reg[0]_0 ));
  CARRY4 \pkt_cnt_reg[0]_i_2__0 
       (.CI(1'b0),
        .CO({\pkt_cnt_reg[0]_i_2__0_n_0 ,\pkt_cnt_reg[0]_i_2__0_n_1 ,\pkt_cnt_reg[0]_i_2__0_n_2 ,\pkt_cnt_reg[0]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\pkt_cnt_reg[0]_i_2__0_n_4 ,\pkt_cnt_reg[0]_i_2__0_n_5 ,\pkt_cnt_reg[0]_i_2__0_n_6 ,\pkt_cnt_reg[0]_i_2__0_n_7 }),
        .S({\pkt_cnt_reg[15]_0 [3:1],\pkt_cnt[0]_i_3__0_n_0 }));
  FDRE \pkt_cnt_reg[10] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[8]_i_1__1_n_5 ),
        .Q(\pkt_cnt_reg[15]_0 [10]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[11] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[8]_i_1__1_n_4 ),
        .Q(\pkt_cnt_reg[15]_0 [11]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[12] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[12]_i_1__1_n_7 ),
        .Q(\pkt_cnt_reg[15]_0 [12]),
        .R(\pkt_cnt_reg[0]_0 ));
  CARRY4 \pkt_cnt_reg[12]_i_1__1 
       (.CI(\pkt_cnt_reg[8]_i_1__1_n_0 ),
        .CO({\NLW_pkt_cnt_reg[12]_i_1__1_CO_UNCONNECTED [3],\pkt_cnt_reg[12]_i_1__1_n_1 ,\pkt_cnt_reg[12]_i_1__1_n_2 ,\pkt_cnt_reg[12]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_reg[12]_i_1__1_n_4 ,\pkt_cnt_reg[12]_i_1__1_n_5 ,\pkt_cnt_reg[12]_i_1__1_n_6 ,\pkt_cnt_reg[12]_i_1__1_n_7 }),
        .S(\pkt_cnt_reg[15]_0 [15:12]));
  FDRE \pkt_cnt_reg[13] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[12]_i_1__1_n_6 ),
        .Q(\pkt_cnt_reg[15]_0 [13]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[14] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[12]_i_1__1_n_5 ),
        .Q(\pkt_cnt_reg[15]_0 [14]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[15] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[12]_i_1__1_n_4 ),
        .Q(\pkt_cnt_reg[15]_0 [15]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[1] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[0]_i_2__0_n_6 ),
        .Q(\pkt_cnt_reg[15]_0 [1]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[2] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[0]_i_2__0_n_5 ),
        .Q(\pkt_cnt_reg[15]_0 [2]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[3] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[0]_i_2__0_n_4 ),
        .Q(\pkt_cnt_reg[15]_0 [3]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[4] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[4]_i_1__1_n_7 ),
        .Q(\pkt_cnt_reg[15]_0 [4]),
        .R(\pkt_cnt_reg[0]_0 ));
  CARRY4 \pkt_cnt_reg[4]_i_1__1 
       (.CI(\pkt_cnt_reg[0]_i_2__0_n_0 ),
        .CO({\pkt_cnt_reg[4]_i_1__1_n_0 ,\pkt_cnt_reg[4]_i_1__1_n_1 ,\pkt_cnt_reg[4]_i_1__1_n_2 ,\pkt_cnt_reg[4]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_reg[4]_i_1__1_n_4 ,\pkt_cnt_reg[4]_i_1__1_n_5 ,\pkt_cnt_reg[4]_i_1__1_n_6 ,\pkt_cnt_reg[4]_i_1__1_n_7 }),
        .S(\pkt_cnt_reg[15]_0 [7:4]));
  FDRE \pkt_cnt_reg[5] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[4]_i_1__1_n_6 ),
        .Q(\pkt_cnt_reg[15]_0 [5]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[6] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[4]_i_1__1_n_5 ),
        .Q(\pkt_cnt_reg[15]_0 [6]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[7] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[4]_i_1__1_n_4 ),
        .Q(\pkt_cnt_reg[15]_0 [7]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[8] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[8]_i_1__1_n_7 ),
        .Q(\pkt_cnt_reg[15]_0 [8]),
        .R(\pkt_cnt_reg[0]_0 ));
  CARRY4 \pkt_cnt_reg[8]_i_1__1 
       (.CI(\pkt_cnt_reg[4]_i_1__1_n_0 ),
        .CO({\pkt_cnt_reg[8]_i_1__1_n_0 ,\pkt_cnt_reg[8]_i_1__1_n_1 ,\pkt_cnt_reg[8]_i_1__1_n_2 ,\pkt_cnt_reg[8]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_reg[8]_i_1__1_n_4 ,\pkt_cnt_reg[8]_i_1__1_n_5 ,\pkt_cnt_reg[8]_i_1__1_n_6 ,\pkt_cnt_reg[8]_i_1__1_n_7 }),
        .S(\pkt_cnt_reg[15]_0 [11:8]));
  FDRE \pkt_cnt_reg[9] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[8]_i_1__1_n_6 ),
        .Q(\pkt_cnt_reg[15]_0 [9]),
        .R(\pkt_cnt_reg[0]_0 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_data_lane_sm_32 u_tx_data_lane_sm
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl2_enable(dl2_enable),
        .dl2_forcetxstopmode(dl2_forcetxstopmode),
        .dl2_txrequestesc(dl2_txrequestesc),
        .dl_stopstate_coreclk_reg(esc_stopstate_coreclk_sync),
        .dl_stopstate_reg_0(u_tx_data_lane_sm_n_7),
        .\dl_tx_sm_state[1]_i_4__1 (\dl_tx_sm_state[1]_i_4__1 ),
        .dl_txrequesths_r(dl_txrequesths_r),
        .en_cal_hs_datapath_i(en_cal_hs_datapath_i),
        .en_hs_datapath_reg_0(dl_status_reg[0]),
        .esc_start_i(esc_start_i),
        .out(dl_status_reg[4]),
        .s_level_out_d1_cdc_to_reg(esc_ctrl_lane_sm),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_hsexit_reg_0(timeout_hsexit_reg),
        .timeout_hsexit_reg_1(dl_active_lane_coreclk_sync),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dn_reg_0(dl_tx_sm_state0__0),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i),
        .tx_dl_lp_dp_reg_0(tx_dl_lp_dp_reg));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_esc_datapath_33 u_tx_esc_datapath
       (.dl0_txclkesc(dl0_txclkesc),
        .dl2_forcetxstopmode(dl2_forcetxstopmode),
        .dl2_txdataesc(dl2_txdataesc),
        .dl2_txlpdtesc(dl2_txlpdtesc),
        .dl2_txrequestesc(dl2_txrequestesc),
        .dl2_txtriggeresc(dl2_txtriggeresc),
        .dl2_txulpsesc(dl2_txulpsesc),
        .dl2_txulpsexit(dl2_txulpsexit),
        .dl2_txvalidesc(dl2_txvalidesc),
        .dl2_ulpsactivenot(dl2_ulpsactivenot),
        .dl_status_reg(dl_status_reg[1]),
        .dl_txreadyesc_reg_0(dl_txreadyesc_reg),
        .esc_abort_i(esc_abort_i),
        .esc_ctrl_all_sm_reg_0(esc_ctrl_all_sm_reg),
        .esc_ctrl_all_sm_reg_1(esc_ctrl_all_sm_reg_0),
        .esc_start_i(esc_start_i),
        .esc_stopstate_reg_0(esc_stopstate_i),
        .esc_ulps_i(esc_ulps_i),
        .hs_xfer_done_i(hs_xfer_done_i),
        .out(esc_ctrl_lane_sm),
        .s_level_out_d1_cdc_to_reg(s_level_out_d1_cdc_to_reg),
        .s_level_out_d3_reg(s_level_out_d3_reg),
        .tx_dl2_lp_dn(tx_dl2_lp_dn),
        .tx_dl2_lp_dp(tx_dl2_lp_dp),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i),
        .txlpdtesc_r_reg_0(txlpdtesc_r_reg));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_data_lane" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_data_lane_5
   (out,
    dl_status_reg,
    s_level_out_d3_reg,
    esc_ctrl_all_sm_reg,
    \pkt_cnt_reg[15]_0 ,
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ,
    timeout_hsexit_reg,
    dl_txreadyesc_reg,
    dl3_ulpsactivenot,
    dl3_stopstate,
    tx_dl3_lp_dp,
    tx_dl3_lp_dn,
    tx_dl3_hs_dp,
    \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] ,
    dl3_txrequesths,
    tx_div4_clk,
    core_rst,
    dl3_enable,
    core_clk,
    dl3_txrequestesc,
    dl3_forcetxstopmode,
    esc_ctrl_all_sm_reg_0,
    dl0_txclkesc,
    dl_txrequesths_r_reg_0,
    \pkt_cnt_reg[0]_0 ,
    s_level_out_d1_cdc_to_reg,
    txlpdtesc_r_reg,
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] ,
    dl3_txdatahs,
    timeout_zero_out_i_0,
    \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ,
    dl3_txvalidesc,
    dl3_txdataesc,
    dl3_txulpsexit,
    dl3_txtriggeresc,
    dl3_txulpsesc,
    dl3_txlpdtesc,
    cl_init_done_coreclk_i,
    \dl_tx_sm_state[1]_i_4__2 ,
    cl_txclkactivehs_i,
    dl_tx_sm_state0__0,
    tx_dl_lp_dp_reg,
    timeout_hsexit_all);
  output out;
  output [4:0]dl_status_reg;
  output s_level_out_d3_reg;
  output esc_ctrl_all_sm_reg;
  output [15:0]\pkt_cnt_reg[15]_0 ;
  output \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ;
  output [0:0]timeout_hsexit_reg;
  output dl_txreadyesc_reg;
  output dl3_ulpsactivenot;
  output dl3_stopstate;
  output tx_dl3_lp_dp;
  output tx_dl3_lp_dn;
  output [7:0]tx_dl3_hs_dp;
  input \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] ;
  input dl3_txrequesths;
  input tx_div4_clk;
  input core_rst;
  input dl3_enable;
  input core_clk;
  input dl3_txrequestesc;
  input dl3_forcetxstopmode;
  input esc_ctrl_all_sm_reg_0;
  input dl0_txclkesc;
  input dl_txrequesths_r_reg_0;
  input \pkt_cnt_reg[0]_0 ;
  input s_level_out_d1_cdc_to_reg;
  input txlpdtesc_r_reg;
  input \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] ;
  input [7:0]dl3_txdatahs;
  input timeout_zero_out_i_0;
  input \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ;
  input dl3_txvalidesc;
  input [7:0]dl3_txdataesc;
  input dl3_txulpsexit;
  input [3:0]dl3_txtriggeresc;
  input dl3_txulpsesc;
  input dl3_txlpdtesc;
  input cl_init_done_coreclk_i;
  input \dl_tx_sm_state[1]_i_4__2 ;
  input cl_txclkactivehs_i;
  input dl_tx_sm_state0__0;
  input tx_dl_lp_dp_reg;
  input timeout_hsexit_all;

  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl0_txclkesc;
  wire dl3_enable;
  wire dl3_forcetxstopmode;
  wire dl3_stopstate;
  wire [7:0]dl3_txdataesc;
  wire [7:0]dl3_txdatahs;
  wire dl3_txlpdtesc;
  wire dl3_txrequestesc;
  wire dl3_txrequesths;
  wire [3:0]dl3_txtriggeresc;
  wire dl3_txulpsesc;
  wire dl3_txulpsexit;
  wire dl3_txvalidesc;
  wire dl3_ulpsactivenot;
  wire dl_active_lane_coreclk_sync;
  wire dl_active_lane_div4clk_sync;
  wire [4:0]dl_status_reg;
  wire dl_tx_sm_state0__0;
  wire \dl_tx_sm_state[1]_i_4__2 ;
  wire dl_txreadyesc_reg;
  wire dl_txrequesths_r;
  wire dl_txrequesths_r_reg_0;
  wire en_cal_hs_datapath_i;
  wire esc_abort_i;
  wire esc_ctrl_all_sm_reg;
  wire esc_ctrl_all_sm_reg_0;
  wire esc_ctrl_lane_sm;
  wire esc_start_i;
  wire esc_stopstate_coreclk_sync;
  wire esc_stopstate_i;
  wire esc_ulps_i;
  wire hs_xfer_done_i;
  wire out;
  wire pkt_cnt0;
  wire \pkt_cnt[0]_i_3__1_n_0 ;
  wire \pkt_cnt_reg[0]_0 ;
  wire \pkt_cnt_reg[0]_i_2__1_n_0 ;
  wire \pkt_cnt_reg[0]_i_2__1_n_1 ;
  wire \pkt_cnt_reg[0]_i_2__1_n_2 ;
  wire \pkt_cnt_reg[0]_i_2__1_n_3 ;
  wire \pkt_cnt_reg[0]_i_2__1_n_4 ;
  wire \pkt_cnt_reg[0]_i_2__1_n_5 ;
  wire \pkt_cnt_reg[0]_i_2__1_n_6 ;
  wire \pkt_cnt_reg[0]_i_2__1_n_7 ;
  wire \pkt_cnt_reg[12]_i_1__2_n_1 ;
  wire \pkt_cnt_reg[12]_i_1__2_n_2 ;
  wire \pkt_cnt_reg[12]_i_1__2_n_3 ;
  wire \pkt_cnt_reg[12]_i_1__2_n_4 ;
  wire \pkt_cnt_reg[12]_i_1__2_n_5 ;
  wire \pkt_cnt_reg[12]_i_1__2_n_6 ;
  wire \pkt_cnt_reg[12]_i_1__2_n_7 ;
  wire [15:0]\pkt_cnt_reg[15]_0 ;
  wire \pkt_cnt_reg[4]_i_1__2_n_0 ;
  wire \pkt_cnt_reg[4]_i_1__2_n_1 ;
  wire \pkt_cnt_reg[4]_i_1__2_n_2 ;
  wire \pkt_cnt_reg[4]_i_1__2_n_3 ;
  wire \pkt_cnt_reg[4]_i_1__2_n_4 ;
  wire \pkt_cnt_reg[4]_i_1__2_n_5 ;
  wire \pkt_cnt_reg[4]_i_1__2_n_6 ;
  wire \pkt_cnt_reg[4]_i_1__2_n_7 ;
  wire \pkt_cnt_reg[8]_i_1__2_n_0 ;
  wire \pkt_cnt_reg[8]_i_1__2_n_1 ;
  wire \pkt_cnt_reg[8]_i_1__2_n_2 ;
  wire \pkt_cnt_reg[8]_i_1__2_n_3 ;
  wire \pkt_cnt_reg[8]_i_1__2_n_4 ;
  wire \pkt_cnt_reg[8]_i_1__2_n_5 ;
  wire \pkt_cnt_reg[8]_i_1__2_n_6 ;
  wire \pkt_cnt_reg[8]_i_1__2_n_7 ;
  wire s_level_out_d1_cdc_to_reg;
  wire s_level_out_d3_reg;
  wire timeout_hsexit_all;
  wire [0:0]timeout_hsexit_reg;
  wire timeout_zero_out_i_0;
  wire tx_div4_clk;
  wire [7:0]tx_dl3_hs_dp;
  wire tx_dl3_lp_dn;
  wire tx_dl3_lp_dp;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_reg;
  wire txlpdtesc_r_reg;
  wire u_tx_data_lane_sm_n_7;
  wire [3:3]\NLW_pkt_cnt_reg[12]_i_1__2_CO_UNCONNECTED ;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1 ac_start_in_sync_i
       (.tx_div4_clk(tx_div4_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_8 dl_active_lane_coreclk_sync_i
       (.core_clk(core_clk),
        .out(dl_active_lane_coreclk_sync));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_9 dl_active_lane_div4clk_sync_i
       (.out(dl_active_lane_div4clk_sync),
        .tx_div4_clk(tx_div4_clk));
  FDRE dl_status_reg_bit_2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(esc_ulps_i),
        .Q(dl_status_reg[2]),
        .R(1'b0));
  FDRE dl_status_reg_bit_5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(esc_abort_i),
        .Q(dl_status_reg[3]),
        .R(1'b0));
  FDRE dl_stopstate_coreclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(u_tx_data_lane_sm_n_7),
        .Q(dl3_stopstate),
        .R(1'b0));
  FDRE dl_txrequesths_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl3_txrequesths),
        .Q(dl_txrequesths_r),
        .R(dl_txrequesths_r_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_10 en_cal_hs_datapath_sync_i
       (.en_cal_hs_datapath_i(en_cal_hs_datapath_i),
        .tx_div4_clk(tx_div4_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_11 en_hs_datapath_sync_i
       (.dl_status_reg(dl_status_reg[0]),
        .tx_div4_clk(tx_div4_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_12 esc_stopstate_coreclk_sync_i
       (.core_clk(core_clk),
        .out(esc_stopstate_coreclk_sync),
        .s_level_out_d1_cdc_to_reg_0(esc_stopstate_i));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_13 \gen_tx_dl_en_tst_7s.gen_tx_dl_en_tst_obuf.hs_xfer_done_sync_i 
       (.core_clk(core_clk),
        .core_rst(core_rst),
        .hs_xfer_done_i(hs_xfer_done_i),
        .out(out));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_hs_datapath_7series \gen_tx_hs_datapath_7series.u_tx_hs_datapath_7series 
       (.\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 (\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] ),
        .\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 (\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ),
        .\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 (\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] ),
        .\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 (\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ),
        .dl3_txdatahs(dl3_txdatahs),
        .dl3_txrequesths(dl3_txrequesths),
        .hs_xfer_done_i(hs_xfer_done_i),
        .out(dl_active_lane_div4clk_sync),
        .pkt_cnt0(pkt_cnt0),
        .timeout_zero_out_i_0(timeout_zero_out_i_0),
        .tx_div4_clk(tx_div4_clk),
        .tx_dl3_hs_dp(tx_dl3_hs_dp));
  LUT1 #(
    .INIT(2'h1)) 
    \pkt_cnt[0]_i_3__1 
       (.I0(\pkt_cnt_reg[15]_0 [0]),
        .O(\pkt_cnt[0]_i_3__1_n_0 ));
  FDRE \pkt_cnt_reg[0] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[0]_i_2__1_n_7 ),
        .Q(\pkt_cnt_reg[15]_0 [0]),
        .R(\pkt_cnt_reg[0]_0 ));
  CARRY4 \pkt_cnt_reg[0]_i_2__1 
       (.CI(1'b0),
        .CO({\pkt_cnt_reg[0]_i_2__1_n_0 ,\pkt_cnt_reg[0]_i_2__1_n_1 ,\pkt_cnt_reg[0]_i_2__1_n_2 ,\pkt_cnt_reg[0]_i_2__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\pkt_cnt_reg[0]_i_2__1_n_4 ,\pkt_cnt_reg[0]_i_2__1_n_5 ,\pkt_cnt_reg[0]_i_2__1_n_6 ,\pkt_cnt_reg[0]_i_2__1_n_7 }),
        .S({\pkt_cnt_reg[15]_0 [3:1],\pkt_cnt[0]_i_3__1_n_0 }));
  FDRE \pkt_cnt_reg[10] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[8]_i_1__2_n_5 ),
        .Q(\pkt_cnt_reg[15]_0 [10]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[11] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[8]_i_1__2_n_4 ),
        .Q(\pkt_cnt_reg[15]_0 [11]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[12] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[12]_i_1__2_n_7 ),
        .Q(\pkt_cnt_reg[15]_0 [12]),
        .R(\pkt_cnt_reg[0]_0 ));
  CARRY4 \pkt_cnt_reg[12]_i_1__2 
       (.CI(\pkt_cnt_reg[8]_i_1__2_n_0 ),
        .CO({\NLW_pkt_cnt_reg[12]_i_1__2_CO_UNCONNECTED [3],\pkt_cnt_reg[12]_i_1__2_n_1 ,\pkt_cnt_reg[12]_i_1__2_n_2 ,\pkt_cnt_reg[12]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_reg[12]_i_1__2_n_4 ,\pkt_cnt_reg[12]_i_1__2_n_5 ,\pkt_cnt_reg[12]_i_1__2_n_6 ,\pkt_cnt_reg[12]_i_1__2_n_7 }),
        .S(\pkt_cnt_reg[15]_0 [15:12]));
  FDRE \pkt_cnt_reg[13] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[12]_i_1__2_n_6 ),
        .Q(\pkt_cnt_reg[15]_0 [13]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[14] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[12]_i_1__2_n_5 ),
        .Q(\pkt_cnt_reg[15]_0 [14]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[15] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[12]_i_1__2_n_4 ),
        .Q(\pkt_cnt_reg[15]_0 [15]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[1] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[0]_i_2__1_n_6 ),
        .Q(\pkt_cnt_reg[15]_0 [1]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[2] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[0]_i_2__1_n_5 ),
        .Q(\pkt_cnt_reg[15]_0 [2]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[3] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[0]_i_2__1_n_4 ),
        .Q(\pkt_cnt_reg[15]_0 [3]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[4] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[4]_i_1__2_n_7 ),
        .Q(\pkt_cnt_reg[15]_0 [4]),
        .R(\pkt_cnt_reg[0]_0 ));
  CARRY4 \pkt_cnt_reg[4]_i_1__2 
       (.CI(\pkt_cnt_reg[0]_i_2__1_n_0 ),
        .CO({\pkt_cnt_reg[4]_i_1__2_n_0 ,\pkt_cnt_reg[4]_i_1__2_n_1 ,\pkt_cnt_reg[4]_i_1__2_n_2 ,\pkt_cnt_reg[4]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_reg[4]_i_1__2_n_4 ,\pkt_cnt_reg[4]_i_1__2_n_5 ,\pkt_cnt_reg[4]_i_1__2_n_6 ,\pkt_cnt_reg[4]_i_1__2_n_7 }),
        .S(\pkt_cnt_reg[15]_0 [7:4]));
  FDRE \pkt_cnt_reg[5] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[4]_i_1__2_n_6 ),
        .Q(\pkt_cnt_reg[15]_0 [5]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[6] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[4]_i_1__2_n_5 ),
        .Q(\pkt_cnt_reg[15]_0 [6]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[7] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[4]_i_1__2_n_4 ),
        .Q(\pkt_cnt_reg[15]_0 [7]),
        .R(\pkt_cnt_reg[0]_0 ));
  FDRE \pkt_cnt_reg[8] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[8]_i_1__2_n_7 ),
        .Q(\pkt_cnt_reg[15]_0 [8]),
        .R(\pkt_cnt_reg[0]_0 ));
  CARRY4 \pkt_cnt_reg[8]_i_1__2 
       (.CI(\pkt_cnt_reg[4]_i_1__2_n_0 ),
        .CO({\pkt_cnt_reg[8]_i_1__2_n_0 ,\pkt_cnt_reg[8]_i_1__2_n_1 ,\pkt_cnt_reg[8]_i_1__2_n_2 ,\pkt_cnt_reg[8]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_reg[8]_i_1__2_n_4 ,\pkt_cnt_reg[8]_i_1__2_n_5 ,\pkt_cnt_reg[8]_i_1__2_n_6 ,\pkt_cnt_reg[8]_i_1__2_n_7 }),
        .S(\pkt_cnt_reg[15]_0 [11:8]));
  FDRE \pkt_cnt_reg[9] 
       (.C(tx_div4_clk),
        .CE(pkt_cnt0),
        .D(\pkt_cnt_reg[8]_i_1__2_n_6 ),
        .Q(\pkt_cnt_reg[15]_0 [9]),
        .R(\pkt_cnt_reg[0]_0 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_data_lane_sm u_tx_data_lane_sm
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl3_enable(dl3_enable),
        .dl3_forcetxstopmode(dl3_forcetxstopmode),
        .dl3_txrequestesc(dl3_txrequestesc),
        .dl_status_reg(dl_status_reg[0]),
        .dl_stopstate_coreclk_reg(esc_stopstate_coreclk_sync),
        .dl_stopstate_reg_0(u_tx_data_lane_sm_n_7),
        .dl_tx_sm_state0__0(dl_tx_sm_state0__0),
        .\dl_tx_sm_state[1]_i_4__2 (\dl_tx_sm_state[1]_i_4__2 ),
        .dl_txrequesths_r(dl_txrequesths_r),
        .en_cal_hs_datapath_i(en_cal_hs_datapath_i),
        .esc_start_i(esc_start_i),
        .out(dl_status_reg[4]),
        .s_level_out_d1_cdc_to_reg(esc_ctrl_lane_sm),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_hsexit_reg_0(timeout_hsexit_reg),
        .timeout_hsexit_reg_1(dl_active_lane_coreclk_sync),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i),
        .tx_dl_lp_dp_reg_0(tx_dl_lp_dp_reg));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_esc_datapath u_tx_esc_datapath
       (.dl0_txclkesc(dl0_txclkesc),
        .dl3_forcetxstopmode(dl3_forcetxstopmode),
        .dl3_txdataesc(dl3_txdataesc),
        .dl3_txlpdtesc(dl3_txlpdtesc),
        .dl3_txrequestesc(dl3_txrequestesc),
        .dl3_txtriggeresc(dl3_txtriggeresc),
        .dl3_txulpsesc(dl3_txulpsesc),
        .dl3_txulpsexit(dl3_txulpsexit),
        .dl3_txvalidesc(dl3_txvalidesc),
        .dl3_ulpsactivenot(dl3_ulpsactivenot),
        .dl_status_reg(dl_status_reg[1]),
        .dl_txreadyesc_reg_0(dl_txreadyesc_reg),
        .esc_abort_i(esc_abort_i),
        .esc_ctrl_all_sm_reg_0(esc_ctrl_all_sm_reg),
        .esc_ctrl_all_sm_reg_1(esc_ctrl_all_sm_reg_0),
        .esc_start_i(esc_start_i),
        .esc_stopstate_reg_0(esc_stopstate_i),
        .esc_ulps_i(esc_ulps_i),
        .hs_xfer_done_i(hs_xfer_done_i),
        .out(esc_ctrl_lane_sm),
        .s_level_out_d1_cdc_to_reg(s_level_out_d1_cdc_to_reg),
        .s_level_out_d3_reg(s_level_out_d3_reg),
        .tx_dl3_lp_dn(tx_dl3_lp_dn),
        .tx_dl3_lp_dp(tx_dl3_lp_dp),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i),
        .txlpdtesc_r_reg_0(txlpdtesc_r_reg));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_data_lane_sm
   (out,
    timeout_hsexit_reg_0,
    dl_status_reg,
    en_cal_hs_datapath_i,
    esc_start_i,
    tx_dl_lp_dp_hs_i,
    tx_dl_lp_dn_hs_i,
    dl_stopstate_reg_0,
    core_rst,
    dl3_enable,
    core_clk,
    dl_txrequesths_r,
    dl3_txrequestesc,
    dl3_forcetxstopmode,
    s_level_out_d1_cdc_to_reg,
    cl_init_done_coreclk_i,
    timeout_hsexit_reg_1,
    \dl_tx_sm_state[1]_i_4__2 ,
    cl_txclkactivehs_i,
    dl_tx_sm_state0__0,
    tx_dl_lp_dp_reg_0,
    timeout_hsexit_all,
    dl_stopstate_coreclk_reg);
  output out;
  output timeout_hsexit_reg_0;
  output [0:0]dl_status_reg;
  output en_cal_hs_datapath_i;
  output esc_start_i;
  output tx_dl_lp_dp_hs_i;
  output tx_dl_lp_dn_hs_i;
  output dl_stopstate_reg_0;
  input core_rst;
  input dl3_enable;
  input core_clk;
  input dl_txrequesths_r;
  input dl3_txrequestesc;
  input dl3_forcetxstopmode;
  input s_level_out_d1_cdc_to_reg;
  input cl_init_done_coreclk_i;
  input timeout_hsexit_reg_1;
  input \dl_tx_sm_state[1]_i_4__2 ;
  input cl_txclkactivehs_i;
  input dl_tx_sm_state0__0;
  input tx_dl_lp_dp_reg_0;
  input timeout_hsexit_all;
  input dl_stopstate_coreclk_reg;

  wire PREPARE_TIMEOUT0__0_carry__0_i_1__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_2__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_3__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_4__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_5__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_6__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_7__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_8__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_n_1;
  wire PREPARE_TIMEOUT0__0_carry__0_n_2;
  wire PREPARE_TIMEOUT0__0_carry__0_n_3;
  wire PREPARE_TIMEOUT0__0_carry__1_i_1__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_2__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_3__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_4__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_5__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_6__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_7__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_8__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_n_1;
  wire PREPARE_TIMEOUT0__0_carry__1_n_2;
  wire PREPARE_TIMEOUT0__0_carry__1_n_3;
  wire PREPARE_TIMEOUT0__0_carry__2_i_1__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_2__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_3__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_4__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_5__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_6__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_7__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_8__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_n_1;
  wire PREPARE_TIMEOUT0__0_carry__2_n_2;
  wire PREPARE_TIMEOUT0__0_carry__2_n_3;
  wire PREPARE_TIMEOUT0__0_carry__2_n_4;
  wire PREPARE_TIMEOUT0__0_carry__2_n_5;
  wire PREPARE_TIMEOUT0__0_carry__3_i_1__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_2__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_3__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_4__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_5__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_6__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_7__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_n_1;
  wire PREPARE_TIMEOUT0__0_carry__3_n_2;
  wire PREPARE_TIMEOUT0__0_carry__3_n_3;
  wire PREPARE_TIMEOUT0__0_carry__3_n_4;
  wire PREPARE_TIMEOUT0__0_carry__3_n_5;
  wire PREPARE_TIMEOUT0__0_carry__3_n_6;
  wire PREPARE_TIMEOUT0__0_carry__3_n_7;
  wire PREPARE_TIMEOUT0__0_carry_i_1__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_2__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_3__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_4__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_5__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_6__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_7__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry_n_0;
  wire PREPARE_TIMEOUT0__0_carry_n_1;
  wire PREPARE_TIMEOUT0__0_carry_n_2;
  wire PREPARE_TIMEOUT0__0_carry_n_3;
  wire PREPARE_TIMEOUT0__44_carry__0_i_1__2_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_2__2_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_3__2_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_4__2_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_5__2_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_6__2_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_7__2_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_n_1;
  wire PREPARE_TIMEOUT0__44_carry__0_n_2;
  wire PREPARE_TIMEOUT0__44_carry__0_n_3;
  wire PREPARE_TIMEOUT0__44_carry__0_n_4;
  wire PREPARE_TIMEOUT0__44_carry__0_n_5;
  wire PREPARE_TIMEOUT0__44_carry__0_n_6;
  wire PREPARE_TIMEOUT0__44_carry__0_n_7;
  wire PREPARE_TIMEOUT0__44_carry__1_i_1__2_n_0;
  wire PREPARE_TIMEOUT0__44_carry__1_n_2;
  wire PREPARE_TIMEOUT0__44_carry__1_n_7;
  wire PREPARE_TIMEOUT0__44_carry_i_1__2_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_2__2_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_3__2_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_4__2_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_5__2_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_6__2_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_7__2_n_0;
  wire PREPARE_TIMEOUT0__44_carry_n_0;
  wire PREPARE_TIMEOUT0__44_carry_n_1;
  wire PREPARE_TIMEOUT0__44_carry_n_2;
  wire PREPARE_TIMEOUT0__44_carry_n_3;
  wire PREPARE_TIMEOUT0__44_carry_n_4;
  wire PREPARE_TIMEOUT0__44_carry_n_5;
  wire PREPARE_TIMEOUT0__44_carry_n_6;
  wire PREPARE_TIMEOUT0__44_carry_n_7;
  wire PREPARE_TIMEOUT0__71_carry__0_i_1__2_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_2__2_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_3__2_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_4__2_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_5__2_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_6__2_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_7__2_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_n_1;
  wire PREPARE_TIMEOUT0__71_carry__0_n_2;
  wire PREPARE_TIMEOUT0__71_carry__0_n_3;
  wire PREPARE_TIMEOUT0__71_carry__0_n_4;
  wire PREPARE_TIMEOUT0__71_carry__0_n_5;
  wire PREPARE_TIMEOUT0__71_carry__0_n_6;
  wire PREPARE_TIMEOUT0__71_carry__0_n_7;
  wire PREPARE_TIMEOUT0__71_carry__1_i_1__2_n_0;
  wire PREPARE_TIMEOUT0__71_carry__1_i_2__2_n_0;
  wire PREPARE_TIMEOUT0__71_carry__1_i_3__2_n_0;
  wire PREPARE_TIMEOUT0__71_carry__1_n_3;
  wire PREPARE_TIMEOUT0__71_carry__1_n_6;
  wire PREPARE_TIMEOUT0__71_carry__1_n_7;
  wire PREPARE_TIMEOUT0__71_carry_i_1__2_n_0;
  wire PREPARE_TIMEOUT0__71_carry_i_2__2_n_0;
  wire PREPARE_TIMEOUT0__71_carry_i_3__2_n_0;
  wire PREPARE_TIMEOUT0__71_carry_n_0;
  wire PREPARE_TIMEOUT0__71_carry_n_1;
  wire PREPARE_TIMEOUT0__71_carry_n_2;
  wire PREPARE_TIMEOUT0__71_carry_n_3;
  wire PREPARE_TIMEOUT0__71_carry_n_4;
  wire PREPARE_TIMEOUT0__71_carry_n_5;
  wire PREPARE_TIMEOUT0__71_carry_n_6;
  wire PREPARE_TIMEOUT0__71_carry_n_7;
  wire PREPARE_TIMEOUT0__99_carry__0_i_1__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_2__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_3__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_4__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_5__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_6__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_7__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_8__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_n_1;
  wire PREPARE_TIMEOUT0__99_carry__0_n_2;
  wire PREPARE_TIMEOUT0__99_carry__0_n_3;
  wire PREPARE_TIMEOUT0__99_carry__1_i_1__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_2__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_3__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_4__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_5__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_6__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_7__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_8__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_n_1;
  wire PREPARE_TIMEOUT0__99_carry__1_n_2;
  wire PREPARE_TIMEOUT0__99_carry__1_n_3;
  wire PREPARE_TIMEOUT0__99_carry__2_i_1__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_2__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_3__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_4__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_5__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_6__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_n_1;
  wire PREPARE_TIMEOUT0__99_carry__2_n_2;
  wire PREPARE_TIMEOUT0__99_carry__2_n_3;
  wire PREPARE_TIMEOUT0__99_carry_i_1__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_2__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_3__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_4__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_5__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_6__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_7__2_n_0;
  wire PREPARE_TIMEOUT0__99_carry_n_0;
  wire PREPARE_TIMEOUT0__99_carry_n_1;
  wire PREPARE_TIMEOUT0__99_carry_n_2;
  wire PREPARE_TIMEOUT0__99_carry_n_3;
  wire PREPARE_TIMEOUT1_n_100;
  wire PREPARE_TIMEOUT1_n_101;
  wire PREPARE_TIMEOUT1_n_102;
  wire PREPARE_TIMEOUT1_n_103;
  wire PREPARE_TIMEOUT1_n_104;
  wire PREPARE_TIMEOUT1_n_105;
  wire PREPARE_TIMEOUT1_n_88;
  wire PREPARE_TIMEOUT1_n_89;
  wire PREPARE_TIMEOUT1_n_90;
  wire PREPARE_TIMEOUT1_n_91;
  wire PREPARE_TIMEOUT1_n_92;
  wire PREPARE_TIMEOUT1_n_93;
  wire PREPARE_TIMEOUT1_n_94;
  wire PREPARE_TIMEOUT1_n_95;
  wire PREPARE_TIMEOUT1_n_96;
  wire PREPARE_TIMEOUT1_n_97;
  wire PREPARE_TIMEOUT1_n_98;
  wire PREPARE_TIMEOUT1_n_99;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl3_enable;
  wire dl3_forcetxstopmode;
  wire dl3_txrequestesc;
  wire dl_enable_sync_i_n_0;
  wire dl_enable_sync_i_n_2;
  wire dl_forcetxstopmode_sync_i_n_0;
  wire dl_status_bit_6_i_3__2_n_0;
  wire [0:0]dl_status_reg;
  wire dl_stopstate_coreclk_reg;
  wire dl_stopstate_i;
  wire dl_stopstate_reg_0;
  wire dl_tx_sm_state0__0;
  wire dl_tx_sm_state120_out;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state[1]_i_4__2 ;
  wire \dl_tx_sm_state[2]_i_11__2_n_0 ;
  wire \dl_tx_sm_state_reg_n_0_[0] ;
  wire \dl_tx_sm_state_reg_n_0_[1] ;
  wire \dl_tx_sm_state_reg_n_0_[2] ;
  wire dl_txrequestesc_sync_i_n_0;
  wire dl_txrequestesc_sync_i_n_1;
  wire dl_txrequestesc_sync_i_n_2;
  wire dl_txrequestesc_sync_i_n_3;
  wire dl_txrequestesc_sync_i_n_5;
  wire dl_txrequestesc_sync_i_n_6;
  wire dl_txrequestesc_sync_i_n_7;
  wire dl_txrequestesc_sync_i_n_8;
  wire dl_txrequesths_r;
  wire dl_txrequesths_sync;
  wire dl_txrequesths_sync_i_n_1;
  wire dl_txrequesths_sync_i_n_2;
  wire dl_txrequesths_sync_i_n_4;
  wire dl_txrequesths_sync_i_n_6;
  wire dl_txrequesths_sync_i_n_7;
  wire dl_txskewcalhs_sync_i_n_0;
  wire dl_txskewcalhs_sync_i_n_1;
  wire dl_txskewcalhs_sync_i_n_2;
  wire dl_txskewcalhs_sync_i_n_3;
  wire dl_txskewcalhs_sync_i_n_4;
  wire dl_txskewcalhs_sync_i_n_6;
  wire dl_txskewcalhs_sync_i_n_7;
  wire dl_txskewcalhs_sync_i_n_8;
  wire en_cal_hs_datapath_i;
  wire en_hs_start_w__4;
  wire en_lp_01_cnt__4;
  wire en_lp_01_cnt_reg_n_0;
  wire esc_active_sync;
  wire esc_active_sync_i_n_1;
  wire esc_active_sync_i_n_2;
  wire esc_active_sync_r;
  wire esc_start_i;
  wire \hsexit_count[0]_i_1__2_n_0 ;
  wire \hsexit_count[0]_i_2__2_n_0 ;
  wire \hsexit_count[0]_i_4__2_n_0 ;
  wire [12:0]hsexit_count_reg;
  wire \hsexit_count_reg[0]_i_3__2_n_0 ;
  wire \hsexit_count_reg[0]_i_3__2_n_1 ;
  wire \hsexit_count_reg[0]_i_3__2_n_2 ;
  wire \hsexit_count_reg[0]_i_3__2_n_3 ;
  wire \hsexit_count_reg[0]_i_3__2_n_4 ;
  wire \hsexit_count_reg[0]_i_3__2_n_5 ;
  wire \hsexit_count_reg[0]_i_3__2_n_6 ;
  wire \hsexit_count_reg[0]_i_3__2_n_7 ;
  wire \hsexit_count_reg[12]_i_1__2_n_7 ;
  wire \hsexit_count_reg[4]_i_1__2_n_0 ;
  wire \hsexit_count_reg[4]_i_1__2_n_1 ;
  wire \hsexit_count_reg[4]_i_1__2_n_2 ;
  wire \hsexit_count_reg[4]_i_1__2_n_3 ;
  wire \hsexit_count_reg[4]_i_1__2_n_4 ;
  wire \hsexit_count_reg[4]_i_1__2_n_5 ;
  wire \hsexit_count_reg[4]_i_1__2_n_6 ;
  wire \hsexit_count_reg[4]_i_1__2_n_7 ;
  wire \hsexit_count_reg[8]_i_1__2_n_0 ;
  wire \hsexit_count_reg[8]_i_1__2_n_1 ;
  wire \hsexit_count_reg[8]_i_1__2_n_2 ;
  wire \hsexit_count_reg[8]_i_1__2_n_3 ;
  wire \hsexit_count_reg[8]_i_1__2_n_4 ;
  wire \hsexit_count_reg[8]_i_1__2_n_5 ;
  wire \hsexit_count_reg[8]_i_1__2_n_6 ;
  wire \hsexit_count_reg[8]_i_1__2_n_7 ;
  wire lp_01_r;
  wire lp_01_r_reg_n_0;
  wire [6:0]lp_st01_cnt;
  wire \lp_st01_cnt[1]_i_2__3_n_0 ;
  wire \lp_st01_cnt[3]_i_2__3_n_0 ;
  wire \lp_st01_cnt[5]_i_2__3_n_0 ;
  wire \lp_st01_cnt[6]_i_2__3_n_0 ;
  wire \lp_st01_cnt_reg_n_0_[0] ;
  wire \lp_st01_cnt_reg_n_0_[1] ;
  wire \lp_st01_cnt_reg_n_0_[2] ;
  wire \lp_st01_cnt_reg_n_0_[3] ;
  wire \lp_st01_cnt_reg_n_0_[4] ;
  wire \lp_st01_cnt_reg_n_0_[5] ;
  wire \lp_st01_cnt_reg_n_0_[6] ;
  (* DONT_TOUCH *) wire out;
  wire p_0_in23_out;
  wire [8:0]p_0_in__0;
  wire p_21_in;
  wire prepare_count;
  wire \prepare_count[8]_i_4__2_n_0 ;
  wire [8:0]prepare_count_reg;
  wire s_level_out_d1_cdc_to_reg;
  wire sel;
  wire timeout_hsexit0_carry__0_i_1__2_n_0;
  wire timeout_hsexit0_carry__0_i_2__2_n_0;
  wire timeout_hsexit0_carry__0_i_3__2_n_0;
  wire timeout_hsexit0_carry__0_i_4__2_n_0;
  wire timeout_hsexit0_carry__0_i_5__2_n_0;
  wire timeout_hsexit0_carry__0_n_1;
  wire timeout_hsexit0_carry__0_n_2;
  wire timeout_hsexit0_carry__0_n_3;
  wire timeout_hsexit0_carry_i_1__2_n_0;
  wire timeout_hsexit0_carry_i_2__2_n_0;
  wire timeout_hsexit0_carry_i_3__2_n_0;
  wire timeout_hsexit0_carry_i_4__2_n_0;
  wire timeout_hsexit0_carry_i_5__2_n_0;
  wire timeout_hsexit0_carry_i_6__2_n_0;
  wire timeout_hsexit0_carry_i_7__2_n_0;
  wire timeout_hsexit0_carry_n_0;
  wire timeout_hsexit0_carry_n_1;
  wire timeout_hsexit0_carry_n_2;
  wire timeout_hsexit0_carry_n_3;
  wire timeout_hsexit_all;
  wire timeout_hsexit_i_1__2_n_0;
  wire timeout_hsexit_reg_0;
  wire timeout_hsexit_reg_1;
  wire timeout_prepare;
  wire timeout_prepare0_carry__0_i_1__2_n_0;
  wire timeout_prepare0_carry__0_n_3;
  wire timeout_prepare0_carry_i_10__2_n_0;
  wire timeout_prepare0_carry_i_11__2_n_0;
  wire timeout_prepare0_carry_i_12__2_n_0;
  wire timeout_prepare0_carry_i_13__2_n_0;
  wire timeout_prepare0_carry_i_1__2_n_0;
  wire timeout_prepare0_carry_i_2__2_n_0;
  wire timeout_prepare0_carry_i_3__2_n_0;
  wire timeout_prepare0_carry_i_4__2_n_0;
  wire timeout_prepare0_carry_i_5__2_n_0;
  wire timeout_prepare0_carry_i_6__2_n_0;
  wire timeout_prepare0_carry_i_7__2_n_0;
  wire timeout_prepare0_carry_i_8__2_n_0;
  wire timeout_prepare0_carry_i_9__2_n_0;
  wire timeout_prepare0_carry_n_0;
  wire timeout_prepare0_carry_n_1;
  wire timeout_prepare0_carry_n_2;
  wire timeout_prepare0_carry_n_3;
  wire timeout_prepare_i_1__2_n_0;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dn_i_2__5_n_0;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_i_5__5_n_0;
  wire tx_dl_lp_dp_reg_0;
  wire [3:0]NLW_PREPARE_TIMEOUT0__0_carry_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__0_carry__1_O_UNCONNECTED;
  wire [1:0]NLW_PREPARE_TIMEOUT0__0_carry__2_O_UNCONNECTED;
  wire [3:3]NLW_PREPARE_TIMEOUT0__0_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__44_carry__1_CO_UNCONNECTED;
  wire [3:1]NLW_PREPARE_TIMEOUT0__44_carry__1_O_UNCONNECTED;
  wire [3:1]NLW_PREPARE_TIMEOUT0__71_carry__1_CO_UNCONNECTED;
  wire [3:2]NLW_PREPARE_TIMEOUT0__71_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__99_carry_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__99_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__99_carry__1_O_UNCONNECTED;
  wire [3:3]NLW_PREPARE_TIMEOUT0__99_carry__2_CO_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__99_carry__2_O_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_OVERFLOW_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_PATTERNDETECT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_PREPARE_TIMEOUT1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_PREPARE_TIMEOUT1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT1_CARRYOUT_UNCONNECTED;
  wire [47:18]NLW_PREPARE_TIMEOUT1_P_UNCONNECTED;
  wire [47:0]NLW_PREPARE_TIMEOUT1_PCOUT_UNCONNECTED;
  wire [3:0]\NLW_hsexit_count_reg[12]_i_1__2_CO_UNCONNECTED ;
  wire [3:1]\NLW_hsexit_count_reg[12]_i_1__2_O_UNCONNECTED ;
  wire [3:0]NLW_timeout_hsexit0_carry_O_UNCONNECTED;
  wire [3:3]NLW_timeout_hsexit0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_timeout_hsexit0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_timeout_prepare0_carry_O_UNCONNECTED;
  wire [3:1]NLW_timeout_prepare0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_timeout_prepare0_carry__0_O_UNCONNECTED;

  CARRY4 PREPARE_TIMEOUT0__0_carry
       (.CI(1'b0),
        .CO({PREPARE_TIMEOUT0__0_carry_n_0,PREPARE_TIMEOUT0__0_carry_n_1,PREPARE_TIMEOUT0__0_carry_n_2,PREPARE_TIMEOUT0__0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry_i_1__2_n_0,PREPARE_TIMEOUT0__0_carry_i_2__2_n_0,PREPARE_TIMEOUT0__0_carry_i_3__2_n_0,1'b0}),
        .O(NLW_PREPARE_TIMEOUT0__0_carry_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__0_carry_i_4__2_n_0,PREPARE_TIMEOUT0__0_carry_i_5__2_n_0,PREPARE_TIMEOUT0__0_carry_i_6__2_n_0,PREPARE_TIMEOUT0__0_carry_i_7__2_n_0}));
  CARRY4 PREPARE_TIMEOUT0__0_carry__0
       (.CI(PREPARE_TIMEOUT0__0_carry_n_0),
        .CO({PREPARE_TIMEOUT0__0_carry__0_n_0,PREPARE_TIMEOUT0__0_carry__0_n_1,PREPARE_TIMEOUT0__0_carry__0_n_2,PREPARE_TIMEOUT0__0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__0_i_1__2_n_0,PREPARE_TIMEOUT0__0_carry__0_i_2__2_n_0,PREPARE_TIMEOUT0__0_carry__0_i_3__2_n_0,PREPARE_TIMEOUT0__0_carry__0_i_4__2_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__0_carry__0_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__0_carry__0_i_5__2_n_0,PREPARE_TIMEOUT0__0_carry__0_i_6__2_n_0,PREPARE_TIMEOUT0__0_carry__0_i_7__2_n_0,PREPARE_TIMEOUT0__0_carry__0_i_8__2_n_0}));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__0_i_1__2
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT1_n_97),
        .I2(PREPARE_TIMEOUT1_n_99),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_1__2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__0_i_2__2
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT1_n_98),
        .I2(PREPARE_TIMEOUT1_n_100),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_2__2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__0_i_3__2
       (.I0(PREPARE_TIMEOUT1_n_99),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_101),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_3__2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__0_i_4__2
       (.I0(PREPARE_TIMEOUT1_n_100),
        .I1(PREPARE_TIMEOUT1_n_104),
        .I2(PREPARE_TIMEOUT1_n_102),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_4__2_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__0_i_5__2
       (.I0(PREPARE_TIMEOUT1_n_99),
        .I1(PREPARE_TIMEOUT1_n_97),
        .I2(PREPARE_TIMEOUT1_n_101),
        .I3(PREPARE_TIMEOUT1_n_100),
        .I4(PREPARE_TIMEOUT1_n_98),
        .I5(PREPARE_TIMEOUT1_n_96),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_5__2_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__0_i_6__2
       (.I0(PREPARE_TIMEOUT1_n_100),
        .I1(PREPARE_TIMEOUT1_n_98),
        .I2(PREPARE_TIMEOUT1_n_102),
        .I3(PREPARE_TIMEOUT1_n_101),
        .I4(PREPARE_TIMEOUT1_n_99),
        .I5(PREPARE_TIMEOUT1_n_97),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_6__2_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__0_i_7__2
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_99),
        .I3(PREPARE_TIMEOUT1_n_102),
        .I4(PREPARE_TIMEOUT1_n_100),
        .I5(PREPARE_TIMEOUT1_n_98),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_7__2_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__0_i_8__2
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT1_n_104),
        .I2(PREPARE_TIMEOUT1_n_100),
        .I3(PREPARE_TIMEOUT1_n_103),
        .I4(PREPARE_TIMEOUT1_n_101),
        .I5(PREPARE_TIMEOUT1_n_99),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_8__2_n_0));
  CARRY4 PREPARE_TIMEOUT0__0_carry__1
       (.CI(PREPARE_TIMEOUT0__0_carry__0_n_0),
        .CO({PREPARE_TIMEOUT0__0_carry__1_n_0,PREPARE_TIMEOUT0__0_carry__1_n_1,PREPARE_TIMEOUT0__0_carry__1_n_2,PREPARE_TIMEOUT0__0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__1_i_1__2_n_0,PREPARE_TIMEOUT0__0_carry__1_i_2__2_n_0,PREPARE_TIMEOUT0__0_carry__1_i_3__2_n_0,PREPARE_TIMEOUT0__0_carry__1_i_4__2_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__0_carry__1_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__0_carry__1_i_5__2_n_0,PREPARE_TIMEOUT0__0_carry__1_i_6__2_n_0,PREPARE_TIMEOUT0__0_carry__1_i_7__2_n_0,PREPARE_TIMEOUT0__0_carry__1_i_8__2_n_0}));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__1_i_1__2
       (.I0(PREPARE_TIMEOUT1_n_97),
        .I1(PREPARE_TIMEOUT1_n_93),
        .I2(PREPARE_TIMEOUT1_n_95),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_1__2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__1_i_2__2
       (.I0(PREPARE_TIMEOUT1_n_98),
        .I1(PREPARE_TIMEOUT1_n_94),
        .I2(PREPARE_TIMEOUT1_n_96),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_2__2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__1_i_3__2
       (.I0(PREPARE_TIMEOUT1_n_95),
        .I1(PREPARE_TIMEOUT1_n_99),
        .I2(PREPARE_TIMEOUT1_n_97),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_3__2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__1_i_4__2
       (.I0(PREPARE_TIMEOUT1_n_96),
        .I1(PREPARE_TIMEOUT1_n_100),
        .I2(PREPARE_TIMEOUT1_n_98),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_4__2_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__1_i_5__2
       (.I0(PREPARE_TIMEOUT1_n_95),
        .I1(PREPARE_TIMEOUT1_n_93),
        .I2(PREPARE_TIMEOUT1_n_97),
        .I3(PREPARE_TIMEOUT1_n_96),
        .I4(PREPARE_TIMEOUT1_n_94),
        .I5(PREPARE_TIMEOUT1_n_92),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_5__2_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__1_i_6__2
       (.I0(PREPARE_TIMEOUT1_n_96),
        .I1(PREPARE_TIMEOUT1_n_94),
        .I2(PREPARE_TIMEOUT1_n_98),
        .I3(PREPARE_TIMEOUT1_n_97),
        .I4(PREPARE_TIMEOUT1_n_95),
        .I5(PREPARE_TIMEOUT1_n_93),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_6__2_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__1_i_7__2
       (.I0(PREPARE_TIMEOUT1_n_97),
        .I1(PREPARE_TIMEOUT1_n_99),
        .I2(PREPARE_TIMEOUT1_n_95),
        .I3(PREPARE_TIMEOUT1_n_98),
        .I4(PREPARE_TIMEOUT1_n_96),
        .I5(PREPARE_TIMEOUT1_n_94),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_7__2_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__1_i_8__2
       (.I0(PREPARE_TIMEOUT1_n_98),
        .I1(PREPARE_TIMEOUT1_n_100),
        .I2(PREPARE_TIMEOUT1_n_96),
        .I3(PREPARE_TIMEOUT1_n_99),
        .I4(PREPARE_TIMEOUT1_n_97),
        .I5(PREPARE_TIMEOUT1_n_95),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_8__2_n_0));
  CARRY4 PREPARE_TIMEOUT0__0_carry__2
       (.CI(PREPARE_TIMEOUT0__0_carry__1_n_0),
        .CO({PREPARE_TIMEOUT0__0_carry__2_n_0,PREPARE_TIMEOUT0__0_carry__2_n_1,PREPARE_TIMEOUT0__0_carry__2_n_2,PREPARE_TIMEOUT0__0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__2_i_1__2_n_0,PREPARE_TIMEOUT0__0_carry__2_i_2__2_n_0,PREPARE_TIMEOUT0__0_carry__2_i_3__2_n_0,PREPARE_TIMEOUT0__0_carry__2_i_4__2_n_0}),
        .O({PREPARE_TIMEOUT0__0_carry__2_n_4,PREPARE_TIMEOUT0__0_carry__2_n_5,NLW_PREPARE_TIMEOUT0__0_carry__2_O_UNCONNECTED[1:0]}),
        .S({PREPARE_TIMEOUT0__0_carry__2_i_5__2_n_0,PREPARE_TIMEOUT0__0_carry__2_i_6__2_n_0,PREPARE_TIMEOUT0__0_carry__2_i_7__2_n_0,PREPARE_TIMEOUT0__0_carry__2_i_8__2_n_0}));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__2_i_1__2
       (.I0(PREPARE_TIMEOUT1_n_89),
        .I1(PREPARE_TIMEOUT1_n_93),
        .I2(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_1__2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__2_i_2__2
       (.I0(PREPARE_TIMEOUT1_n_94),
        .I1(PREPARE_TIMEOUT1_n_90),
        .I2(PREPARE_TIMEOUT1_n_92),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_2__2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__2_i_3__2
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT1_n_95),
        .I2(PREPARE_TIMEOUT1_n_93),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_3__2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__2_i_4__2
       (.I0(PREPARE_TIMEOUT1_n_92),
        .I1(PREPARE_TIMEOUT1_n_96),
        .I2(PREPARE_TIMEOUT1_n_94),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_4__2_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__2_i_5__2
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT1_n_93),
        .I2(PREPARE_TIMEOUT1_n_89),
        .I3(PREPARE_TIMEOUT1_n_92),
        .I4(PREPARE_TIMEOUT1_n_90),
        .I5(PREPARE_TIMEOUT1_n_88),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_5__2_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__2_i_6__2
       (.I0(PREPARE_TIMEOUT1_n_92),
        .I1(PREPARE_TIMEOUT1_n_90),
        .I2(PREPARE_TIMEOUT1_n_94),
        .I3(PREPARE_TIMEOUT1_n_91),
        .I4(PREPARE_TIMEOUT1_n_93),
        .I5(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_6__2_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__2_i_7__2
       (.I0(PREPARE_TIMEOUT1_n_93),
        .I1(PREPARE_TIMEOUT1_n_95),
        .I2(PREPARE_TIMEOUT1_n_91),
        .I3(PREPARE_TIMEOUT1_n_94),
        .I4(PREPARE_TIMEOUT1_n_92),
        .I5(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_7__2_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__2_i_8__2
       (.I0(PREPARE_TIMEOUT1_n_94),
        .I1(PREPARE_TIMEOUT1_n_96),
        .I2(PREPARE_TIMEOUT1_n_92),
        .I3(PREPARE_TIMEOUT1_n_95),
        .I4(PREPARE_TIMEOUT1_n_93),
        .I5(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_8__2_n_0));
  CARRY4 PREPARE_TIMEOUT0__0_carry__3
       (.CI(PREPARE_TIMEOUT0__0_carry__2_n_0),
        .CO({NLW_PREPARE_TIMEOUT0__0_carry__3_CO_UNCONNECTED[3],PREPARE_TIMEOUT0__0_carry__3_n_1,PREPARE_TIMEOUT0__0_carry__3_n_2,PREPARE_TIMEOUT0__0_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,PREPARE_TIMEOUT0__0_carry__3_i_1__2_n_0,PREPARE_TIMEOUT0__0_carry__3_i_2__2_n_0,PREPARE_TIMEOUT0__0_carry__3_i_3__2_n_0}),
        .O({PREPARE_TIMEOUT0__0_carry__3_n_4,PREPARE_TIMEOUT0__0_carry__3_n_5,PREPARE_TIMEOUT0__0_carry__3_n_6,PREPARE_TIMEOUT0__0_carry__3_n_7}),
        .S({PREPARE_TIMEOUT0__0_carry__3_i_4__2_n_0,PREPARE_TIMEOUT0__0_carry__3_i_5__2_n_0,PREPARE_TIMEOUT0__0_carry__3_i_6__2_n_0,PREPARE_TIMEOUT0__0_carry__3_i_7__2_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__0_carry__3_i_1__2
       (.I0(PREPARE_TIMEOUT1_n_90),
        .I1(PREPARE_TIMEOUT1_n_88),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__0_carry__3_i_2__2
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_2__2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__3_i_3__2
       (.I0(PREPARE_TIMEOUT1_n_88),
        .I1(PREPARE_TIMEOUT1_n_92),
        .I2(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_3__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    PREPARE_TIMEOUT0__0_carry__3_i_4__2
       (.I0(PREPARE_TIMEOUT1_n_89),
        .I1(PREPARE_TIMEOUT1_n_88),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_4__2_n_0));
  LUT3 #(
    .INIT(8'h4B)) 
    PREPARE_TIMEOUT0__0_carry__3_i_5__2
       (.I0(PREPARE_TIMEOUT1_n_88),
        .I1(PREPARE_TIMEOUT1_n_90),
        .I2(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_5__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__0_carry__3_i_6__2
       (.I0(PREPARE_TIMEOUT1_n_89),
        .I1(PREPARE_TIMEOUT1_n_91),
        .I2(PREPARE_TIMEOUT1_n_88),
        .I3(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_6__2_n_0));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__3_i_7__2
       (.I0(PREPARE_TIMEOUT1_n_90),
        .I1(PREPARE_TIMEOUT1_n_92),
        .I2(PREPARE_TIMEOUT1_n_88),
        .I3(PREPARE_TIMEOUT1_n_89),
        .I4(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_7__2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry_i_1__2
       (.I0(PREPARE_TIMEOUT1_n_105),
        .I1(PREPARE_TIMEOUT1_n_101),
        .I2(PREPARE_TIMEOUT1_n_103),
        .O(PREPARE_TIMEOUT0__0_carry_i_1__2_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    PREPARE_TIMEOUT0__0_carry_i_2__2
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_105),
        .O(PREPARE_TIMEOUT0__0_carry_i_2__2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__0_carry_i_3__2
       (.I0(PREPARE_TIMEOUT1_n_103),
        .I1(PREPARE_TIMEOUT1_n_105),
        .O(PREPARE_TIMEOUT0__0_carry_i_3__2_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry_i_4__2
       (.I0(PREPARE_TIMEOUT1_n_103),
        .I1(PREPARE_TIMEOUT1_n_101),
        .I2(PREPARE_TIMEOUT1_n_105),
        .I3(PREPARE_TIMEOUT1_n_102),
        .I4(PREPARE_TIMEOUT1_n_104),
        .I5(PREPARE_TIMEOUT1_n_100),
        .O(PREPARE_TIMEOUT0__0_carry_i_4__2_n_0));
  LUT5 #(
    .INIT(32'h69699669)) 
    PREPARE_TIMEOUT0__0_carry_i_5__2
       (.I0(PREPARE_TIMEOUT1_n_105),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_101),
        .I3(PREPARE_TIMEOUT1_n_102),
        .I4(PREPARE_TIMEOUT1_n_104),
        .O(PREPARE_TIMEOUT0__0_carry_i_5__2_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__0_carry_i_6__2
       (.I0(PREPARE_TIMEOUT1_n_105),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_104),
        .I3(PREPARE_TIMEOUT1_n_102),
        .O(PREPARE_TIMEOUT0__0_carry_i_6__2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__0_carry_i_7__2
       (.I0(PREPARE_TIMEOUT1_n_103),
        .I1(PREPARE_TIMEOUT1_n_105),
        .O(PREPARE_TIMEOUT0__0_carry_i_7__2_n_0));
  CARRY4 PREPARE_TIMEOUT0__44_carry
       (.CI(1'b0),
        .CO({PREPARE_TIMEOUT0__44_carry_n_0,PREPARE_TIMEOUT0__44_carry_n_1,PREPARE_TIMEOUT0__44_carry_n_2,PREPARE_TIMEOUT0__44_carry_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__44_carry_i_1__2_n_0,PREPARE_TIMEOUT0__44_carry_i_2__2_n_0,PREPARE_TIMEOUT0__44_carry_i_3__2_n_0,1'b0}),
        .O({PREPARE_TIMEOUT0__44_carry_n_4,PREPARE_TIMEOUT0__44_carry_n_5,PREPARE_TIMEOUT0__44_carry_n_6,PREPARE_TIMEOUT0__44_carry_n_7}),
        .S({PREPARE_TIMEOUT0__44_carry_i_4__2_n_0,PREPARE_TIMEOUT0__44_carry_i_5__2_n_0,PREPARE_TIMEOUT0__44_carry_i_6__2_n_0,PREPARE_TIMEOUT0__44_carry_i_7__2_n_0}));
  CARRY4 PREPARE_TIMEOUT0__44_carry__0
       (.CI(PREPARE_TIMEOUT0__44_carry_n_0),
        .CO({PREPARE_TIMEOUT0__44_carry__0_n_0,PREPARE_TIMEOUT0__44_carry__0_n_1,PREPARE_TIMEOUT0__44_carry__0_n_2,PREPARE_TIMEOUT0__44_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__3_n_5,PREPARE_TIMEOUT0__44_carry__0_i_1__2_n_0,PREPARE_TIMEOUT0__44_carry__0_i_2__2_n_0,PREPARE_TIMEOUT0__44_carry__0_i_3__2_n_0}),
        .O({PREPARE_TIMEOUT0__44_carry__0_n_4,PREPARE_TIMEOUT0__44_carry__0_n_5,PREPARE_TIMEOUT0__44_carry__0_n_6,PREPARE_TIMEOUT0__44_carry__0_n_7}),
        .S({PREPARE_TIMEOUT0__44_carry__0_i_4__2_n_0,PREPARE_TIMEOUT0__44_carry__0_i_5__2_n_0,PREPARE_TIMEOUT0__44_carry__0_i_6__2_n_0,PREPARE_TIMEOUT0__44_carry__0_i_7__2_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry__0_i_1__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry__0_i_2__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_2__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry__0_i_3__2
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_3__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    PREPARE_TIMEOUT0__44_carry__0_i_4__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_4__2_n_0));
  LUT3 #(
    .INIT(8'h4B)) 
    PREPARE_TIMEOUT0__44_carry__0_i_5__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_5__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__44_carry__0_i_6__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_6__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__44_carry__0_i_7__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_7__2_n_0));
  CARRY4 PREPARE_TIMEOUT0__44_carry__1
       (.CI(PREPARE_TIMEOUT0__44_carry__0_n_0),
        .CO({NLW_PREPARE_TIMEOUT0__44_carry__1_CO_UNCONNECTED[3:2],PREPARE_TIMEOUT0__44_carry__1_n_2,NLW_PREPARE_TIMEOUT0__44_carry__1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,PREPARE_TIMEOUT0__0_carry__3_n_4}),
        .O({NLW_PREPARE_TIMEOUT0__44_carry__1_O_UNCONNECTED[3:1],PREPARE_TIMEOUT0__44_carry__1_n_7}),
        .S({1'b0,1'b0,1'b1,PREPARE_TIMEOUT0__44_carry__1_i_1__2_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    PREPARE_TIMEOUT0__44_carry__1_i_1__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__44_carry__1_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry_i_1__2
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(PREPARE_TIMEOUT0__44_carry_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry_i_2__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(PREPARE_TIMEOUT0__44_carry_i_2__2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__44_carry_i_3__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .O(PREPARE_TIMEOUT0__44_carry_i_3__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__44_carry_i_4__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(PREPARE_TIMEOUT0__44_carry_i_4__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__44_carry_i_5__2
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .O(PREPARE_TIMEOUT0__44_carry_i_5__2_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__44_carry_i_6__2
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__44_carry_i_6__2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__44_carry_i_7__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .O(PREPARE_TIMEOUT0__44_carry_i_7__2_n_0));
  CARRY4 PREPARE_TIMEOUT0__71_carry
       (.CI(1'b0),
        .CO({PREPARE_TIMEOUT0__71_carry_n_0,PREPARE_TIMEOUT0__71_carry_n_1,PREPARE_TIMEOUT0__71_carry_n_2,PREPARE_TIMEOUT0__71_carry_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__3_n_7,PREPARE_TIMEOUT0__0_carry__2_n_4,PREPARE_TIMEOUT0__0_carry__2_n_5,1'b0}),
        .O({PREPARE_TIMEOUT0__71_carry_n_4,PREPARE_TIMEOUT0__71_carry_n_5,PREPARE_TIMEOUT0__71_carry_n_6,PREPARE_TIMEOUT0__71_carry_n_7}),
        .S({PREPARE_TIMEOUT0__71_carry_i_1__2_n_0,PREPARE_TIMEOUT0__71_carry_i_2__2_n_0,PREPARE_TIMEOUT0__71_carry_i_3__2_n_0,PREPARE_TIMEOUT0__44_carry_n_6}));
  CARRY4 PREPARE_TIMEOUT0__71_carry__0
       (.CI(PREPARE_TIMEOUT0__71_carry_n_0),
        .CO({PREPARE_TIMEOUT0__71_carry__0_n_0,PREPARE_TIMEOUT0__71_carry__0_n_1,PREPARE_TIMEOUT0__71_carry__0_n_2,PREPARE_TIMEOUT0__71_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__71_carry__0_i_1__2_n_0,PREPARE_TIMEOUT0__71_carry__0_i_2__2_n_0,PREPARE_TIMEOUT0__71_carry__0_i_3__2_n_0,PREPARE_TIMEOUT0__0_carry__3_n_6}),
        .O({PREPARE_TIMEOUT0__71_carry__0_n_4,PREPARE_TIMEOUT0__71_carry__0_n_5,PREPARE_TIMEOUT0__71_carry__0_n_6,PREPARE_TIMEOUT0__71_carry__0_n_7}),
        .S({PREPARE_TIMEOUT0__71_carry__0_i_4__2_n_0,PREPARE_TIMEOUT0__71_carry__0_i_5__2_n_0,PREPARE_TIMEOUT0__71_carry__0_i_6__2_n_0,PREPARE_TIMEOUT0__71_carry__0_i_7__2_n_0}));
  LUT3 #(
    .INIT(8'hE8)) 
    PREPARE_TIMEOUT0__71_carry__0_i_1__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_1__2_n_0));
  (* HLUTNM = "lutpair36" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    PREPARE_TIMEOUT0__71_carry__0_i_2__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_2__2_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    PREPARE_TIMEOUT0__71_carry__0_i_3__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_3__2_n_0));
  LUT5 #(
    .INIT(32'hE81717E8)) 
    PREPARE_TIMEOUT0__71_carry__0_i_4__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I3(PREPARE_TIMEOUT0__44_carry__1_n_7),
        .I4(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_4__2_n_0));
  LUT4 #(
    .INIT(16'h6996)) 
    PREPARE_TIMEOUT0__71_carry__0_i_5__2
       (.I0(PREPARE_TIMEOUT0__71_carry__0_i_2__2_n_0),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I2(PREPARE_TIMEOUT0__44_carry__0_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_5__2_n_0));
  (* HLUTNM = "lutpair36" *) 
  LUT5 #(
    .INIT(32'h69969696)) 
    PREPARE_TIMEOUT0__71_carry__0_i_6__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(PREPARE_TIMEOUT0__44_carry__0_n_6),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_6__2_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    PREPARE_TIMEOUT0__71_carry__0_i_7__2
       (.I0(PREPARE_TIMEOUT0__44_carry__0_n_6),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_7__2_n_0));
  CARRY4 PREPARE_TIMEOUT0__71_carry__1
       (.CI(PREPARE_TIMEOUT0__71_carry__0_n_0),
        .CO({NLW_PREPARE_TIMEOUT0__71_carry__1_CO_UNCONNECTED[3:1],PREPARE_TIMEOUT0__71_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,PREPARE_TIMEOUT0__71_carry__1_i_1__2_n_0}),
        .O({NLW_PREPARE_TIMEOUT0__71_carry__1_O_UNCONNECTED[3:2],PREPARE_TIMEOUT0__71_carry__1_n_6,PREPARE_TIMEOUT0__71_carry__1_n_7}),
        .S({1'b0,1'b0,PREPARE_TIMEOUT0__71_carry__1_i_2__2_n_0,PREPARE_TIMEOUT0__71_carry__1_i_3__2_n_0}));
  LUT2 #(
    .INIT(4'h8)) 
    PREPARE_TIMEOUT0__71_carry__1_i_1__2
       (.I0(PREPARE_TIMEOUT0__44_carry__1_n_7),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__71_carry__1_i_1__2_n_0));
  LUT3 #(
    .INIT(8'hE1)) 
    PREPARE_TIMEOUT0__71_carry__1_i_2__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry__1_n_2),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__71_carry__1_i_2__2_n_0));
  LUT4 #(
    .INIT(16'h7887)) 
    PREPARE_TIMEOUT0__71_carry__1_i_3__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(PREPARE_TIMEOUT0__44_carry__1_n_7),
        .I2(PREPARE_TIMEOUT0__44_carry__1_n_2),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .O(PREPARE_TIMEOUT0__71_carry__1_i_3__2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__71_carry_i_1__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_7),
        .O(PREPARE_TIMEOUT0__71_carry_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__71_carry_i_2__2
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I1(PREPARE_TIMEOUT0__44_carry_n_4),
        .O(PREPARE_TIMEOUT0__71_carry_i_2__2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__71_carry_i_3__2
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry_n_5),
        .O(PREPARE_TIMEOUT0__71_carry_i_3__2_n_0));
  CARRY4 PREPARE_TIMEOUT0__99_carry
       (.CI(1'b0),
        .CO({PREPARE_TIMEOUT0__99_carry_n_0,PREPARE_TIMEOUT0__99_carry_n_1,PREPARE_TIMEOUT0__99_carry_n_2,PREPARE_TIMEOUT0__99_carry_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__99_carry_i_1__2_n_0,PREPARE_TIMEOUT0__99_carry_i_2__2_n_0,PREPARE_TIMEOUT0__99_carry_i_3__2_n_0,1'b0}),
        .O(NLW_PREPARE_TIMEOUT0__99_carry_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__99_carry_i_4__2_n_0,PREPARE_TIMEOUT0__99_carry_i_5__2_n_0,PREPARE_TIMEOUT0__99_carry_i_6__2_n_0,PREPARE_TIMEOUT0__99_carry_i_7__2_n_0}));
  CARRY4 PREPARE_TIMEOUT0__99_carry__0
       (.CI(PREPARE_TIMEOUT0__99_carry_n_0),
        .CO({PREPARE_TIMEOUT0__99_carry__0_n_0,PREPARE_TIMEOUT0__99_carry__0_n_1,PREPARE_TIMEOUT0__99_carry__0_n_2,PREPARE_TIMEOUT0__99_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__99_carry__0_i_1__2_n_0,PREPARE_TIMEOUT0__99_carry__0_i_2__2_n_0,PREPARE_TIMEOUT0__99_carry__0_i_3__2_n_0,PREPARE_TIMEOUT0__99_carry__0_i_4__2_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__99_carry__0_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__99_carry__0_i_5__2_n_0,PREPARE_TIMEOUT0__99_carry__0_i_6__2_n_0,PREPARE_TIMEOUT0__99_carry__0_i_7__2_n_0,PREPARE_TIMEOUT0__99_carry__0_i_8__2_n_0}));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry__0_i_1__2
       (.I0(PREPARE_TIMEOUT0__71_carry_n_6),
        .I1(PREPARE_TIMEOUT1_n_96),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_1__2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry__0_i_2__2
       (.I0(PREPARE_TIMEOUT0__71_carry_n_7),
        .I1(PREPARE_TIMEOUT1_n_97),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_2__2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry__0_i_3__2
       (.I0(PREPARE_TIMEOUT0__44_carry_n_7),
        .I1(PREPARE_TIMEOUT1_n_98),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_3__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__0_i_4__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(PREPARE_TIMEOUT1_n_99),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_4__2_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__99_carry__0_i_5__2
       (.I0(PREPARE_TIMEOUT1_n_96),
        .I1(PREPARE_TIMEOUT0__71_carry_n_6),
        .I2(PREPARE_TIMEOUT0__71_carry_n_5),
        .I3(PREPARE_TIMEOUT1_n_95),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_5__2_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    PREPARE_TIMEOUT0__99_carry__0_i_6__2
       (.I0(PREPARE_TIMEOUT1_n_97),
        .I1(PREPARE_TIMEOUT0__71_carry_n_7),
        .I2(PREPARE_TIMEOUT0__71_carry_n_6),
        .I3(PREPARE_TIMEOUT1_n_96),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_6__2_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    PREPARE_TIMEOUT0__99_carry__0_i_7__2
       (.I0(PREPARE_TIMEOUT1_n_98),
        .I1(PREPARE_TIMEOUT0__44_carry_n_7),
        .I2(PREPARE_TIMEOUT0__71_carry_n_7),
        .I3(PREPARE_TIMEOUT1_n_97),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_7__2_n_0));
  LUT4 #(
    .INIT(16'h4BB4)) 
    PREPARE_TIMEOUT0__99_carry__0_i_8__2
       (.I0(PREPARE_TIMEOUT1_n_99),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I2(PREPARE_TIMEOUT0__44_carry_n_7),
        .I3(PREPARE_TIMEOUT1_n_98),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_8__2_n_0));
  CARRY4 PREPARE_TIMEOUT0__99_carry__1
       (.CI(PREPARE_TIMEOUT0__99_carry__0_n_0),
        .CO({PREPARE_TIMEOUT0__99_carry__1_n_0,PREPARE_TIMEOUT0__99_carry__1_n_1,PREPARE_TIMEOUT0__99_carry__1_n_2,PREPARE_TIMEOUT0__99_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__99_carry__1_i_1__2_n_0,PREPARE_TIMEOUT0__99_carry__1_i_2__2_n_0,PREPARE_TIMEOUT0__99_carry__1_i_3__2_n_0,PREPARE_TIMEOUT0__99_carry__1_i_4__2_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__99_carry__1_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__99_carry__1_i_5__2_n_0,PREPARE_TIMEOUT0__99_carry__1_i_6__2_n_0,PREPARE_TIMEOUT0__99_carry__1_i_7__2_n_0,PREPARE_TIMEOUT0__99_carry__1_i_8__2_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__1_i_1__2
       (.I0(PREPARE_TIMEOUT0__71_carry__0_n_6),
        .I1(PREPARE_TIMEOUT1_n_92),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_1__2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry__1_i_2__2
       (.I0(PREPARE_TIMEOUT0__71_carry__0_n_7),
        .I1(PREPARE_TIMEOUT1_n_93),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_2__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__1_i_3__2
       (.I0(PREPARE_TIMEOUT0__71_carry_n_4),
        .I1(PREPARE_TIMEOUT1_n_94),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_3__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__1_i_4__2
       (.I0(PREPARE_TIMEOUT0__71_carry_n_5),
        .I1(PREPARE_TIMEOUT1_n_95),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_4__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__1_i_5__2
       (.I0(PREPARE_TIMEOUT1_n_92),
        .I1(PREPARE_TIMEOUT0__71_carry__0_n_6),
        .I2(PREPARE_TIMEOUT0__71_carry__0_n_5),
        .I3(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_5__2_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__99_carry__1_i_6__2
       (.I0(PREPARE_TIMEOUT1_n_93),
        .I1(PREPARE_TIMEOUT0__71_carry__0_n_7),
        .I2(PREPARE_TIMEOUT0__71_carry__0_n_6),
        .I3(PREPARE_TIMEOUT1_n_92),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_6__2_n_0));
  LUT4 #(
    .INIT(16'h4BB4)) 
    PREPARE_TIMEOUT0__99_carry__1_i_7__2
       (.I0(PREPARE_TIMEOUT1_n_94),
        .I1(PREPARE_TIMEOUT0__71_carry_n_4),
        .I2(PREPARE_TIMEOUT0__71_carry__0_n_7),
        .I3(PREPARE_TIMEOUT1_n_93),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_7__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__1_i_8__2
       (.I0(PREPARE_TIMEOUT1_n_95),
        .I1(PREPARE_TIMEOUT0__71_carry_n_5),
        .I2(PREPARE_TIMEOUT0__71_carry_n_4),
        .I3(PREPARE_TIMEOUT1_n_94),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_8__2_n_0));
  CARRY4 PREPARE_TIMEOUT0__99_carry__2
       (.CI(PREPARE_TIMEOUT0__99_carry__1_n_0),
        .CO({NLW_PREPARE_TIMEOUT0__99_carry__2_CO_UNCONNECTED[3],PREPARE_TIMEOUT0__99_carry__2_n_1,PREPARE_TIMEOUT0__99_carry__2_n_2,PREPARE_TIMEOUT0__99_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,PREPARE_TIMEOUT0__99_carry__2_i_1__2_n_0,PREPARE_TIMEOUT0__99_carry__2_i_2__2_n_0,PREPARE_TIMEOUT0__99_carry__2_i_3__2_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__99_carry__2_O_UNCONNECTED[3:0]),
        .S({1'b0,PREPARE_TIMEOUT0__99_carry__2_i_4__2_n_0,PREPARE_TIMEOUT0__99_carry__2_i_5__2_n_0,PREPARE_TIMEOUT0__99_carry__2_i_6__2_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__2_i_1__2
       (.I0(PREPARE_TIMEOUT0__71_carry__1_n_7),
        .I1(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__2_i_2__2
       (.I0(PREPARE_TIMEOUT0__71_carry__0_n_4),
        .I1(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_2__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__2_i_3__2
       (.I0(PREPARE_TIMEOUT0__71_carry__0_n_5),
        .I1(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_3__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__2_i_4__2
       (.I0(PREPARE_TIMEOUT1_n_89),
        .I1(PREPARE_TIMEOUT0__71_carry__1_n_7),
        .I2(PREPARE_TIMEOUT0__71_carry__1_n_6),
        .I3(PREPARE_TIMEOUT1_n_88),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_4__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__2_i_5__2
       (.I0(PREPARE_TIMEOUT1_n_90),
        .I1(PREPARE_TIMEOUT0__71_carry__0_n_4),
        .I2(PREPARE_TIMEOUT0__71_carry__1_n_7),
        .I3(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_5__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__2_i_6__2
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT0__71_carry__0_n_5),
        .I2(PREPARE_TIMEOUT0__71_carry__0_n_4),
        .I3(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_6__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry_i_1__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT1_n_100),
        .O(PREPARE_TIMEOUT0__99_carry_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry_i_2__2
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I1(PREPARE_TIMEOUT1_n_101),
        .O(PREPARE_TIMEOUT0__99_carry_i_2__2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry_i_3__2
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(PREPARE_TIMEOUT1_n_102),
        .O(PREPARE_TIMEOUT0__99_carry_i_3__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry_i_4__2
       (.I0(PREPARE_TIMEOUT1_n_100),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I3(PREPARE_TIMEOUT1_n_99),
        .O(PREPARE_TIMEOUT0__99_carry_i_4__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry_i_5__2
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I3(PREPARE_TIMEOUT1_n_100),
        .O(PREPARE_TIMEOUT0__99_carry_i_5__2_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__99_carry_i_6__2
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT1_n_101),
        .O(PREPARE_TIMEOUT0__99_carry_i_6__2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__99_carry_i_7__2
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .O(PREPARE_TIMEOUT0__99_carry_i_7__2_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-13 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    PREPARE_TIMEOUT1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_PREPARE_TIMEOUT1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_PREPARE_TIMEOUT1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_PREPARE_TIMEOUT1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_PREPARE_TIMEOUT1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_PREPARE_TIMEOUT1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_PREPARE_TIMEOUT1_OVERFLOW_UNCONNECTED),
        .P({NLW_PREPARE_TIMEOUT1_P_UNCONNECTED[47:18],PREPARE_TIMEOUT1_n_88,PREPARE_TIMEOUT1_n_89,PREPARE_TIMEOUT1_n_90,PREPARE_TIMEOUT1_n_91,PREPARE_TIMEOUT1_n_92,PREPARE_TIMEOUT1_n_93,PREPARE_TIMEOUT1_n_94,PREPARE_TIMEOUT1_n_95,PREPARE_TIMEOUT1_n_96,PREPARE_TIMEOUT1_n_97,PREPARE_TIMEOUT1_n_98,PREPARE_TIMEOUT1_n_99,PREPARE_TIMEOUT1_n_100,PREPARE_TIMEOUT1_n_101,PREPARE_TIMEOUT1_n_102,PREPARE_TIMEOUT1_n_103,PREPARE_TIMEOUT1_n_104,PREPARE_TIMEOUT1_n_105}),
        .PATTERNBDETECT(NLW_PREPARE_TIMEOUT1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_PREPARE_TIMEOUT1_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_PREPARE_TIMEOUT1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_PREPARE_TIMEOUT1_UNDERFLOW_UNCONNECTED));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_17 dl_enable_sync_i
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl3_enable(dl3_enable),
        .dl_tx_sm_state125_out(dl_tx_sm_state125_out),
        .\dl_tx_sm_state_reg[0] (dl_enable_sync_i_n_2),
        .\dl_tx_sm_state_reg[2] (dl_enable_sync_i_n_0),
        .en_cal_hs_datapath_i(en_cal_hs_datapath_i),
        .en_cal_hs_datapath_reg(\dl_tx_sm_state_reg_n_0_[0] ),
        .en_cal_hs_datapath_reg_0(dl_txrequesths_sync_i_n_7),
        .en_cal_hs_datapath_reg_1(dl_txskewcalhs_sync_i_n_4),
        .out(dl_forcetxstopmode_sync_i_n_0),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i),
        .tx_dl_lp_dp_reg(dl_txrequesths_sync_i_n_6),
        .tx_dl_lp_dp_reg_0(\dl_tx_sm_state_reg_n_0_[2] ),
        .tx_dl_lp_dp_reg_1(esc_active_sync_i_n_1),
        .tx_dl_lp_dp_reg_2(dl_txskewcalhs_sync_i_n_7),
        .tx_dl_lp_dp_reg_3(tx_dl_lp_dp_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_18 dl_forcetxstopmode_sync_i
       (.core_clk(core_clk),
        .core_rst(core_rst),
        .dl3_forcetxstopmode(dl3_forcetxstopmode),
        .out(dl_forcetxstopmode_sync_i_n_0));
  LUT4 #(
    .INIT(16'h0F08)) 
    dl_status_bit_6_i_3__2
       (.I0(cl_init_done_coreclk_i),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .I2(\dl_tx_sm_state_reg_n_0_[1] ),
        .I3(out),
        .O(dl_status_bit_6_i_3__2_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE dl_status_bit_6_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_6),
        .Q(out));
  LUT3 #(
    .INIT(8'hC8)) 
    dl_stopstate_coreclk_i_1__2
       (.I0(dl_stopstate_i),
        .I1(cl_init_done_coreclk_i),
        .I2(dl_stopstate_coreclk_reg),
        .O(dl_stopstate_reg_0));
  FDCE dl_stopstate_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_2),
        .Q(dl_stopstate_i));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dl_tx_sm_state[2]_i_11__2 
       (.I0(\dl_tx_sm_state_reg_n_0_[1] ),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .O(\dl_tx_sm_state[2]_i_11__2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \dl_tx_sm_state_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequestesc_sync_i_n_2),
        .Q(\dl_tx_sm_state_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \dl_tx_sm_state_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequesths_sync_i_n_2),
        .Q(\dl_tx_sm_state_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \dl_tx_sm_state_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequestesc_sync_i_n_1),
        .Q(\dl_tx_sm_state_reg_n_0_[2] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_19 dl_txrequestesc_sync_i
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl3_txrequestesc(dl3_txrequestesc),
        .dl_status_bit_6_reg(out),
        .dl_stopstate_i_2__2_0(timeout_hsexit_reg_1),
        .dl_tx_sm_state120_out(dl_tx_sm_state120_out),
        .dl_tx_sm_state125_out(dl_tx_sm_state125_out),
        .\dl_tx_sm_state_reg[0] (dl_txrequestesc_sync_i_n_2),
        .\dl_tx_sm_state_reg[0]_0 (dl_txrequestesc_sync_i_n_3),
        .\dl_tx_sm_state_reg[0]_1 (\dl_tx_sm_state_reg_n_0_[0] ),
        .\dl_tx_sm_state_reg[1] (dl_txrequestesc_sync_i_n_0),
        .\dl_tx_sm_state_reg[1]_0 (dl_txrequestesc_sync_i_n_5),
        .\dl_tx_sm_state_reg[1]_1 (dl_txrequestesc_sync_i_n_8),
        .\dl_tx_sm_state_reg[2] (dl_txrequestesc_sync_i_n_1),
        .\dl_tx_sm_state_reg[2]_0 (dl_txrequesths_sync_i_n_4),
        .\dl_tx_sm_state_reg[2]_1 (dl_txskewcalhs_sync_i_n_8),
        .\dl_tx_sm_state_reg[2]_2 (\dl_tx_sm_state_reg_n_0_[2] ),
        .\dl_tx_sm_state_reg[2]_3 (timeout_hsexit_reg_0),
        .en_hs_start_w__4(en_hs_start_w__4),
        .esc_active_sync_r(esc_active_sync_r),
        .esc_start_i(esc_start_i),
        .esc_start_reg(\dl_tx_sm_state_reg_n_0_[1] ),
        .out(esc_active_sync),
        .p_0_in23_out(p_0_in23_out),
        .p_21_in(p_21_in),
        .s_level_out_d3_reg_0(dl_txrequestesc_sync_i_n_6),
        .s_level_out_d3_reg_1(dl_txrequestesc_sync_i_n_7),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_prepare(timeout_prepare));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_20 dl_txrequesths_sync_i
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_tx_sm_state120_out(dl_tx_sm_state120_out),
        .dl_tx_sm_state125_out(dl_tx_sm_state125_out),
        .\dl_tx_sm_state[1]_i_4__2 (\dl_tx_sm_state[1]_i_4__2 ),
        .\dl_tx_sm_state[1]_i_4__2_0 (timeout_hsexit_reg_1),
        .\dl_tx_sm_state[2]_i_3__2_0 (lp_01_r_reg_n_0),
        .\dl_tx_sm_state_reg[0] (dl_txrequesths_sync_i_n_2),
        .\dl_tx_sm_state_reg[1] (\dl_tx_sm_state_reg_n_0_[0] ),
        .\dl_tx_sm_state_reg[1]_0 (\dl_tx_sm_state_reg_n_0_[2] ),
        .\dl_tx_sm_state_reg[1]_1 (dl_txskewcalhs_sync_i_n_8),
        .\dl_tx_sm_state_reg[1]_2 (\dl_tx_sm_state_reg_n_0_[1] ),
        .\dl_tx_sm_state_reg[2] (dl_txrequesths_sync_i_n_4),
        .\dl_tx_sm_state_reg[2]_0 (dl_txrequesths_sync_i_n_7),
        .dl_txrequesths_r(dl_txrequesths_r),
        .en_cal_hs_datapath_reg(dl_txskewcalhs_sync_i_n_0),
        .\en_cl_init_to_blk.init_done_reg (dl_txrequesths_sync_i_n_6),
        .en_hs_start_w__4(en_hs_start_w__4),
        .en_lp_01_cnt__4(en_lp_01_cnt__4),
        .out(dl_txrequesths_sync),
        .p_0_in23_out(p_0_in23_out),
        .timeout_prepare(timeout_prepare),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dn_reg(dl_txrequesths_sync_i_n_1),
        .tx_dl_lp_dn_reg_0(tx_dl_lp_dn_i_2__5_n_0),
        .tx_dl_lp_dn_reg_1(esc_active_sync_i_n_1),
        .tx_dl_lp_dn_reg_2(dl_txskewcalhs_sync_i_n_7),
        .tx_dl_lp_dn_reg_3(dl_txrequestesc_sync_i_n_6));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_21 dl_txskewcalhs_sync_i
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_status_bit_6_reg(dl_status_bit_6_i_3__2_n_0),
        .dl_status_bit_6_reg_0(dl_txrequestesc_sync_i_n_8),
        .dl_status_bit_6_reg_1(out),
        .dl_status_bit_6_reg_2(dl_txrequestesc_sync_i_n_6),
        .dl_status_reg(dl_status_reg),
        .dl_stopstate_i(dl_stopstate_i),
        .dl_stopstate_reg(dl_txrequestesc_sync_i_n_5),
        .dl_stopstate_reg_0(\dl_tx_sm_state_reg_n_0_[2] ),
        .dl_stopstate_reg_1(esc_active_sync_i_n_2),
        .dl_tx_sm_state0__0(dl_tx_sm_state0__0),
        .dl_tx_sm_state125_out(dl_tx_sm_state125_out),
        .\dl_tx_sm_state_reg[0] (dl_txskewcalhs_sync_i_n_3),
        .\dl_tx_sm_state_reg[1] (dl_txskewcalhs_sync_i_n_4),
        .\dl_tx_sm_state_reg[1]_0 (\dl_tx_sm_state[2]_i_11__2_n_0 ),
        .\dl_tx_sm_state_reg[2] (dl_txskewcalhs_sync_i_n_2),
        .\dl_tx_sm_state_reg[2]_0 (dl_txskewcalhs_sync_i_n_6),
        .\dl_tx_sm_state_reg[2]_1 (dl_txskewcalhs_sync_i_n_7),
        .\dl_tx_sm_state_reg[2]_2 (dl_txskewcalhs_sync_i_n_8),
        .en_hs_datapath_reg(\dl_tx_sm_state_reg_n_0_[0] ),
        .en_hs_datapath_reg_0(dl_txrequesths_sync),
        .en_hs_start_w__4(en_hs_start_w__4),
        .en_lp_01_cnt__4(en_lp_01_cnt__4),
        .en_lp_01_cnt_reg(dl_txskewcalhs_sync_i_n_1),
        .en_lp_01_cnt_reg_0(en_lp_01_cnt_reg_n_0),
        .en_lp_01_cnt_reg_1(lp_01_r_reg_n_0),
        .en_lp_01_cnt_reg_2(\dl_tx_sm_state_reg_n_0_[1] ),
        .out(dl_txskewcalhs_sync_i_n_0),
        .p_21_in(p_21_in),
        .timeout_prepare(timeout_prepare),
        .tx_dl_lp_dn_reg(tx_dl_lp_dp_i_5__5_n_0),
        .tx_dl_lp_dn_reg_0(dl_txrequestesc_sync_i_n_7));
  FDCE en_cal_hs_datapath_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_2),
        .Q(en_cal_hs_datapath_i));
  FDCE en_hs_datapath_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_3),
        .Q(dl_status_reg));
  FDCE en_lp_01_cnt_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_1),
        .Q(en_lp_01_cnt_reg_n_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_22 esc_active_sync_i
       (.core_clk(core_clk),
        .core_rst(core_rst),
        .dl_stopstate_i_4__2(dl_txrequestesc_sync_i_n_3),
        .dl_tx_sm_state0__0(dl_tx_sm_state0__0),
        .\dl_tx_sm_state_reg[0] (esc_active_sync_i_n_1),
        .esc_active_sync_r(esc_active_sync_r),
        .out(esc_active_sync),
        .s_level_out_d1_cdc_to_reg_0(s_level_out_d1_cdc_to_reg),
        .s_level_out_d3_reg_0(esc_active_sync_i_n_2),
        .timeout_hsexit_all(timeout_hsexit_all),
        .tx_dl_lp_dn_reg(\dl_tx_sm_state_reg_n_0_[0] ),
        .tx_dl_lp_dn_reg_0(\dl_tx_sm_state_reg_n_0_[1] ),
        .tx_dl_lp_dn_reg_1(\dl_tx_sm_state_reg_n_0_[2] ));
  FDCE esc_active_sync_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(esc_active_sync),
        .Q(esc_active_sync_r));
  FDCE esc_start_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequestesc_sync_i_n_0),
        .Q(esc_start_i));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \hsexit_count[0]_i_1__2 
       (.I0(\dl_tx_sm_state_reg_n_0_[2] ),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .I2(\dl_tx_sm_state_reg_n_0_[1] ),
        .I3(timeout_hsexit_reg_1),
        .O(\hsexit_count[0]_i_1__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hsexit_count[0]_i_2__2 
       (.I0(timeout_hsexit0_carry__0_n_1),
        .O(\hsexit_count[0]_i_2__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hsexit_count[0]_i_4__2 
       (.I0(hsexit_count_reg[0]),
        .O(\hsexit_count[0]_i_4__2_n_0 ));
  FDRE \hsexit_count_reg[0] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__2_n_0 ),
        .D(\hsexit_count_reg[0]_i_3__2_n_7 ),
        .Q(hsexit_count_reg[0]),
        .R(\hsexit_count[0]_i_1__2_n_0 ));
  CARRY4 \hsexit_count_reg[0]_i_3__2 
       (.CI(1'b0),
        .CO({\hsexit_count_reg[0]_i_3__2_n_0 ,\hsexit_count_reg[0]_i_3__2_n_1 ,\hsexit_count_reg[0]_i_3__2_n_2 ,\hsexit_count_reg[0]_i_3__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\hsexit_count_reg[0]_i_3__2_n_4 ,\hsexit_count_reg[0]_i_3__2_n_5 ,\hsexit_count_reg[0]_i_3__2_n_6 ,\hsexit_count_reg[0]_i_3__2_n_7 }),
        .S({hsexit_count_reg[3:1],\hsexit_count[0]_i_4__2_n_0 }));
  FDRE \hsexit_count_reg[10] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__2_n_0 ),
        .D(\hsexit_count_reg[8]_i_1__2_n_5 ),
        .Q(hsexit_count_reg[10]),
        .R(\hsexit_count[0]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[11] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__2_n_0 ),
        .D(\hsexit_count_reg[8]_i_1__2_n_4 ),
        .Q(hsexit_count_reg[11]),
        .R(\hsexit_count[0]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[12] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__2_n_0 ),
        .D(\hsexit_count_reg[12]_i_1__2_n_7 ),
        .Q(hsexit_count_reg[12]),
        .R(\hsexit_count[0]_i_1__2_n_0 ));
  CARRY4 \hsexit_count_reg[12]_i_1__2 
       (.CI(\hsexit_count_reg[8]_i_1__2_n_0 ),
        .CO(\NLW_hsexit_count_reg[12]_i_1__2_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_hsexit_count_reg[12]_i_1__2_O_UNCONNECTED [3:1],\hsexit_count_reg[12]_i_1__2_n_7 }),
        .S({1'b0,1'b0,1'b0,hsexit_count_reg[12]}));
  FDRE \hsexit_count_reg[1] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__2_n_0 ),
        .D(\hsexit_count_reg[0]_i_3__2_n_6 ),
        .Q(hsexit_count_reg[1]),
        .R(\hsexit_count[0]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[2] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__2_n_0 ),
        .D(\hsexit_count_reg[0]_i_3__2_n_5 ),
        .Q(hsexit_count_reg[2]),
        .R(\hsexit_count[0]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[3] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__2_n_0 ),
        .D(\hsexit_count_reg[0]_i_3__2_n_4 ),
        .Q(hsexit_count_reg[3]),
        .R(\hsexit_count[0]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[4] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__2_n_0 ),
        .D(\hsexit_count_reg[4]_i_1__2_n_7 ),
        .Q(hsexit_count_reg[4]),
        .R(\hsexit_count[0]_i_1__2_n_0 ));
  CARRY4 \hsexit_count_reg[4]_i_1__2 
       (.CI(\hsexit_count_reg[0]_i_3__2_n_0 ),
        .CO({\hsexit_count_reg[4]_i_1__2_n_0 ,\hsexit_count_reg[4]_i_1__2_n_1 ,\hsexit_count_reg[4]_i_1__2_n_2 ,\hsexit_count_reg[4]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\hsexit_count_reg[4]_i_1__2_n_4 ,\hsexit_count_reg[4]_i_1__2_n_5 ,\hsexit_count_reg[4]_i_1__2_n_6 ,\hsexit_count_reg[4]_i_1__2_n_7 }),
        .S(hsexit_count_reg[7:4]));
  FDRE \hsexit_count_reg[5] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__2_n_0 ),
        .D(\hsexit_count_reg[4]_i_1__2_n_6 ),
        .Q(hsexit_count_reg[5]),
        .R(\hsexit_count[0]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[6] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__2_n_0 ),
        .D(\hsexit_count_reg[4]_i_1__2_n_5 ),
        .Q(hsexit_count_reg[6]),
        .R(\hsexit_count[0]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[7] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__2_n_0 ),
        .D(\hsexit_count_reg[4]_i_1__2_n_4 ),
        .Q(hsexit_count_reg[7]),
        .R(\hsexit_count[0]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[8] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__2_n_0 ),
        .D(\hsexit_count_reg[8]_i_1__2_n_7 ),
        .Q(hsexit_count_reg[8]),
        .R(\hsexit_count[0]_i_1__2_n_0 ));
  CARRY4 \hsexit_count_reg[8]_i_1__2 
       (.CI(\hsexit_count_reg[4]_i_1__2_n_0 ),
        .CO({\hsexit_count_reg[8]_i_1__2_n_0 ,\hsexit_count_reg[8]_i_1__2_n_1 ,\hsexit_count_reg[8]_i_1__2_n_2 ,\hsexit_count_reg[8]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\hsexit_count_reg[8]_i_1__2_n_4 ,\hsexit_count_reg[8]_i_1__2_n_5 ,\hsexit_count_reg[8]_i_1__2_n_6 ,\hsexit_count_reg[8]_i_1__2_n_7 }),
        .S(hsexit_count_reg[11:8]));
  FDRE \hsexit_count_reg[9] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__2_n_0 ),
        .D(\hsexit_count_reg[8]_i_1__2_n_6 ),
        .Q(hsexit_count_reg[9]),
        .R(\hsexit_count[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'h04)) 
    lp_01_r_i_1__3
       (.I0(\lp_st01_cnt_reg_n_0_[1] ),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .I2(\lp_st01_cnt[1]_i_2__3_n_0 ),
        .O(lp_01_r));
  FDCE lp_01_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_01_r),
        .Q(lp_01_r_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \lp_st01_cnt[0]_i_1__3 
       (.I0(en_lp_01_cnt_reg_n_0),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT4 #(
    .INIT(16'h20C0)) 
    \lp_st01_cnt[1]_i_1__3 
       (.I0(\lp_st01_cnt[1]_i_2__3_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    \lp_st01_cnt[1]_i_2__3 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .I3(\lp_st01_cnt_reg_n_0_[5] ),
        .I4(\lp_st01_cnt_reg_n_0_[6] ),
        .O(\lp_st01_cnt[1]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7080)) 
    \lp_st01_cnt[2]_i_1__3 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[2] ),
        .O(lp_st01_cnt[2]));
  LUT6 #(
    .INIT(64'h76FF000088000000)) 
    \lp_st01_cnt[3]_i_1__3 
       (.I0(\lp_st01_cnt_reg_n_0_[2] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt[3]_i_2__3_n_0 ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[3] ),
        .O(lp_st01_cnt[3]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \lp_st01_cnt[3]_i_2__3 
       (.I0(\lp_st01_cnt_reg_n_0_[6] ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[3]_i_2__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \lp_st01_cnt[4]_i_1__3 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[1] ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[4] ),
        .O(lp_st01_cnt[4]));
  LUT6 #(
    .INIT(64'hBFFF000040000000)) 
    \lp_st01_cnt[5]_i_1__3 
       (.I0(\lp_st01_cnt[5]_i_2__3_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[3] ),
        .I3(\lp_st01_cnt_reg_n_0_[4] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[5] ),
        .O(lp_st01_cnt[5]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \lp_st01_cnt[5]_i_2__3 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .O(\lp_st01_cnt[5]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT4 #(
    .INIT(16'hB040)) 
    \lp_st01_cnt[6]_i_1__3 
       (.I0(\lp_st01_cnt[6]_i_2__3_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[6] ),
        .O(lp_st01_cnt[6]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \lp_st01_cnt[6]_i_2__3 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt_reg_n_0_[2] ),
        .I3(\lp_st01_cnt_reg_n_0_[3] ),
        .I4(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[6]_i_2__3_n_0 ));
  FDCE \lp_st01_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[0]),
        .Q(\lp_st01_cnt_reg_n_0_[0] ));
  FDCE \lp_st01_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[1]),
        .Q(\lp_st01_cnt_reg_n_0_[1] ));
  FDCE \lp_st01_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[2]),
        .Q(\lp_st01_cnt_reg_n_0_[2] ));
  FDCE \lp_st01_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[3]),
        .Q(\lp_st01_cnt_reg_n_0_[3] ));
  FDCE \lp_st01_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[4]),
        .Q(\lp_st01_cnt_reg_n_0_[4] ));
  FDCE \lp_st01_cnt_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[5]),
        .Q(\lp_st01_cnt_reg_n_0_[5] ));
  FDCE \lp_st01_cnt_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[6]),
        .Q(\lp_st01_cnt_reg_n_0_[6] ));
  LUT1 #(
    .INIT(2'h1)) 
    \prepare_count[0]_i_1__2 
       (.I0(prepare_count_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \prepare_count[1]_i_1__2 
       (.I0(prepare_count_reg[0]),
        .I1(prepare_count_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \prepare_count[2]_i_1__2 
       (.I0(prepare_count_reg[0]),
        .I1(prepare_count_reg[1]),
        .I2(prepare_count_reg[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \prepare_count[3]_i_1__2 
       (.I0(prepare_count_reg[1]),
        .I1(prepare_count_reg[0]),
        .I2(prepare_count_reg[2]),
        .I3(prepare_count_reg[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \prepare_count[4]_i_1__2 
       (.I0(prepare_count_reg[2]),
        .I1(prepare_count_reg[0]),
        .I2(prepare_count_reg[1]),
        .I3(prepare_count_reg[3]),
        .I4(prepare_count_reg[4]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \prepare_count[5]_i_1__2 
       (.I0(prepare_count_reg[3]),
        .I1(prepare_count_reg[1]),
        .I2(prepare_count_reg[0]),
        .I3(prepare_count_reg[2]),
        .I4(prepare_count_reg[4]),
        .I5(prepare_count_reg[5]),
        .O(p_0_in__0[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \prepare_count[6]_i_1__2 
       (.I0(\prepare_count[8]_i_4__2_n_0 ),
        .I1(prepare_count_reg[6]),
        .O(p_0_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \prepare_count[7]_i_1__2 
       (.I0(\prepare_count[8]_i_4__2_n_0 ),
        .I1(prepare_count_reg[6]),
        .I2(prepare_count_reg[7]),
        .O(p_0_in__0[7]));
  LUT3 #(
    .INIT(8'hEF)) 
    \prepare_count[8]_i_1__2 
       (.I0(\dl_tx_sm_state_reg_n_0_[0] ),
        .I1(\dl_tx_sm_state_reg_n_0_[1] ),
        .I2(\dl_tx_sm_state_reg_n_0_[2] ),
        .O(prepare_count));
  LUT1 #(
    .INIT(2'h1)) 
    \prepare_count[8]_i_2__2 
       (.I0(timeout_prepare0_carry__0_n_3),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \prepare_count[8]_i_3__2 
       (.I0(prepare_count_reg[6]),
        .I1(\prepare_count[8]_i_4__2_n_0 ),
        .I2(prepare_count_reg[7]),
        .I3(prepare_count_reg[8]),
        .O(p_0_in__0[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \prepare_count[8]_i_4__2 
       (.I0(prepare_count_reg[5]),
        .I1(prepare_count_reg[3]),
        .I2(prepare_count_reg[1]),
        .I3(prepare_count_reg[0]),
        .I4(prepare_count_reg[2]),
        .I5(prepare_count_reg[4]),
        .O(\prepare_count[8]_i_4__2_n_0 ));
  FDRE \prepare_count_reg[0] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[0]),
        .Q(prepare_count_reg[0]),
        .R(prepare_count));
  FDRE \prepare_count_reg[1] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[1]),
        .Q(prepare_count_reg[1]),
        .R(prepare_count));
  FDRE \prepare_count_reg[2] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[2]),
        .Q(prepare_count_reg[2]),
        .R(prepare_count));
  FDRE \prepare_count_reg[3] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[3]),
        .Q(prepare_count_reg[3]),
        .R(prepare_count));
  FDRE \prepare_count_reg[4] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[4]),
        .Q(prepare_count_reg[4]),
        .R(prepare_count));
  FDRE \prepare_count_reg[5] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[5]),
        .Q(prepare_count_reg[5]),
        .R(prepare_count));
  FDRE \prepare_count_reg[6] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[6]),
        .Q(prepare_count_reg[6]),
        .R(prepare_count));
  FDRE \prepare_count_reg[7] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[7]),
        .Q(prepare_count_reg[7]),
        .R(prepare_count));
  FDRE \prepare_count_reg[8] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[8]),
        .Q(prepare_count_reg[8]),
        .R(prepare_count));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_23 timeout_hs_tx_sync_i
       (.core_clk(core_clk),
        .core_rst(core_rst));
  CARRY4 timeout_hsexit0_carry
       (.CI(1'b0),
        .CO({timeout_hsexit0_carry_n_0,timeout_hsexit0_carry_n_1,timeout_hsexit0_carry_n_2,timeout_hsexit0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({timeout_hsexit0_carry_i_1__2_n_0,hsexit_count_reg[5],timeout_hsexit0_carry_i_2__2_n_0,timeout_hsexit0_carry_i_3__2_n_0}),
        .O(NLW_timeout_hsexit0_carry_O_UNCONNECTED[3:0]),
        .S({timeout_hsexit0_carry_i_4__2_n_0,timeout_hsexit0_carry_i_5__2_n_0,timeout_hsexit0_carry_i_6__2_n_0,timeout_hsexit0_carry_i_7__2_n_0}));
  CARRY4 timeout_hsexit0_carry__0
       (.CI(timeout_hsexit0_carry_n_0),
        .CO({NLW_timeout_hsexit0_carry__0_CO_UNCONNECTED[3],timeout_hsexit0_carry__0_n_1,timeout_hsexit0_carry__0_n_2,timeout_hsexit0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,hsexit_count_reg[12],timeout_hsexit0_carry__0_i_1__2_n_0,timeout_hsexit0_carry__0_i_2__2_n_0}),
        .O(NLW_timeout_hsexit0_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,timeout_hsexit0_carry__0_i_3__2_n_0,timeout_hsexit0_carry__0_i_4__2_n_0,timeout_hsexit0_carry__0_i_5__2_n_0}));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_hsexit0_carry__0_i_1__2
       (.I0(hsexit_count_reg[10]),
        .I1(hsexit_count_reg[11]),
        .O(timeout_hsexit0_carry__0_i_1__2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_hsexit0_carry__0_i_2__2
       (.I0(hsexit_count_reg[8]),
        .I1(hsexit_count_reg[9]),
        .O(timeout_hsexit0_carry__0_i_2__2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    timeout_hsexit0_carry__0_i_3__2
       (.I0(hsexit_count_reg[12]),
        .O(timeout_hsexit0_carry__0_i_3__2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_hsexit0_carry__0_i_4__2
       (.I0(hsexit_count_reg[11]),
        .I1(hsexit_count_reg[10]),
        .O(timeout_hsexit0_carry__0_i_4__2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_hsexit0_carry__0_i_5__2
       (.I0(hsexit_count_reg[9]),
        .I1(hsexit_count_reg[8]),
        .O(timeout_hsexit0_carry__0_i_5__2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_hsexit0_carry_i_1__2
       (.I0(hsexit_count_reg[6]),
        .I1(hsexit_count_reg[7]),
        .O(timeout_hsexit0_carry_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    timeout_hsexit0_carry_i_2__2
       (.I0(hsexit_count_reg[2]),
        .I1(hsexit_count_reg[3]),
        .O(timeout_hsexit0_carry_i_2__2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_hsexit0_carry_i_3__2
       (.I0(hsexit_count_reg[0]),
        .I1(hsexit_count_reg[1]),
        .O(timeout_hsexit0_carry_i_3__2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_hsexit0_carry_i_4__2
       (.I0(hsexit_count_reg[7]),
        .I1(hsexit_count_reg[6]),
        .O(timeout_hsexit0_carry_i_4__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    timeout_hsexit0_carry_i_5__2
       (.I0(hsexit_count_reg[4]),
        .I1(hsexit_count_reg[5]),
        .O(timeout_hsexit0_carry_i_5__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    timeout_hsexit0_carry_i_6__2
       (.I0(hsexit_count_reg[3]),
        .I1(hsexit_count_reg[2]),
        .O(timeout_hsexit0_carry_i_6__2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_hsexit0_carry_i_7__2
       (.I0(hsexit_count_reg[1]),
        .I1(hsexit_count_reg[0]),
        .O(timeout_hsexit0_carry_i_7__2_n_0));
  LUT6 #(
    .INIT(64'h55F5555555D55555)) 
    timeout_hsexit_i_1__2
       (.I0(timeout_hsexit_reg_1),
        .I1(timeout_hsexit_reg_0),
        .I2(\dl_tx_sm_state_reg_n_0_[1] ),
        .I3(\dl_tx_sm_state_reg_n_0_[0] ),
        .I4(\dl_tx_sm_state_reg_n_0_[2] ),
        .I5(timeout_hsexit0_carry__0_n_1),
        .O(timeout_hsexit_i_1__2_n_0));
  FDRE timeout_hsexit_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(timeout_hsexit_i_1__2_n_0),
        .Q(timeout_hsexit_reg_0),
        .R(1'b0));
  CARRY4 timeout_prepare0_carry
       (.CI(1'b0),
        .CO({timeout_prepare0_carry_n_0,timeout_prepare0_carry_n_1,timeout_prepare0_carry_n_2,timeout_prepare0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({timeout_prepare0_carry_i_1__2_n_0,timeout_prepare0_carry_i_2__2_n_0,timeout_prepare0_carry_i_3__2_n_0,timeout_prepare0_carry_i_4__2_n_0}),
        .O(NLW_timeout_prepare0_carry_O_UNCONNECTED[3:0]),
        .S({timeout_prepare0_carry_i_5__2_n_0,timeout_prepare0_carry_i_6__2_n_0,timeout_prepare0_carry_i_7__2_n_0,timeout_prepare0_carry_i_8__2_n_0}));
  CARRY4 timeout_prepare0_carry__0
       (.CI(timeout_prepare0_carry_n_0),
        .CO({NLW_timeout_prepare0_carry__0_CO_UNCONNECTED[3:1],timeout_prepare0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,prepare_count_reg[8]}),
        .O(NLW_timeout_prepare0_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,timeout_prepare0_carry__0_i_1__2_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    timeout_prepare0_carry__0_i_1__2
       (.I0(prepare_count_reg[8]),
        .O(timeout_prepare0_carry__0_i_1__2_n_0));
  LUT6 #(
    .INIT(64'h555599A9AAAAAAAA)) 
    timeout_prepare0_carry_i_10__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__99_carry__2_n_1),
        .I2(PREPARE_TIMEOUT0__71_carry__1_n_6),
        .I3(PREPARE_TIMEOUT1_n_88),
        .I4(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I5(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(timeout_prepare0_carry_i_10__2_n_0));
  LUT5 #(
    .INIT(32'h55555A9A)) 
    timeout_prepare0_carry_i_11__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(timeout_prepare0_carry_i_12__2_n_0),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(timeout_prepare0_carry_i_11__2_n_0));
  LUT3 #(
    .INIT(8'hF4)) 
    timeout_prepare0_carry_i_12__2
       (.I0(PREPARE_TIMEOUT1_n_88),
        .I1(PREPARE_TIMEOUT0__71_carry__1_n_6),
        .I2(PREPARE_TIMEOUT0__99_carry__2_n_1),
        .O(timeout_prepare0_carry_i_12__2_n_0));
  LUT6 #(
    .INIT(64'hA999AA9956665566)) 
    timeout_prepare0_carry_i_13__2
       (.I0(prepare_count_reg[3]),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I4(timeout_prepare0_carry_i_12__2_n_0),
        .I5(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(timeout_prepare0_carry_i_13__2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_prepare0_carry_i_1__2
       (.I0(prepare_count_reg[6]),
        .I1(prepare_count_reg[7]),
        .O(timeout_prepare0_carry_i_1__2_n_0));
  LUT3 #(
    .INIT(8'hF8)) 
    timeout_prepare0_carry_i_2__2
       (.I0(prepare_count_reg[4]),
        .I1(timeout_prepare0_carry_i_9__2_n_0),
        .I2(prepare_count_reg[5]),
        .O(timeout_prepare0_carry_i_2__2_n_0));
  LUT4 #(
    .INIT(16'hF880)) 
    timeout_prepare0_carry_i_3__2
       (.I0(timeout_prepare0_carry_i_10__2_n_0),
        .I1(prepare_count_reg[2]),
        .I2(prepare_count_reg[3]),
        .I3(timeout_prepare0_carry_i_11__2_n_0),
        .O(timeout_prepare0_carry_i_3__2_n_0));
  LUT5 #(
    .INIT(32'hEC3E8008)) 
    timeout_prepare0_carry_i_4__2
       (.I0(prepare_count_reg[0]),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I2(timeout_prepare0_carry_i_12__2_n_0),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(prepare_count_reg[1]),
        .O(timeout_prepare0_carry_i_4__2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_prepare0_carry_i_5__2
       (.I0(prepare_count_reg[7]),
        .I1(prepare_count_reg[6]),
        .O(timeout_prepare0_carry_i_5__2_n_0));
  LUT3 #(
    .INIT(8'h06)) 
    timeout_prepare0_carry_i_6__2
       (.I0(timeout_prepare0_carry_i_9__2_n_0),
        .I1(prepare_count_reg[4]),
        .I2(prepare_count_reg[5]),
        .O(timeout_prepare0_carry_i_6__2_n_0));
  LUT6 #(
    .INIT(64'h8222828228882828)) 
    timeout_prepare0_carry_i_7__2
       (.I0(timeout_prepare0_carry_i_13__2_n_0),
        .I1(prepare_count_reg[2]),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(timeout_prepare0_carry_i_12__2_n_0),
        .I5(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(timeout_prepare0_carry_i_7__2_n_0));
  LUT5 #(
    .INIT(32'h42240990)) 
    timeout_prepare0_carry_i_8__2
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(timeout_prepare0_carry_i_12__2_n_0),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(prepare_count_reg[1]),
        .I4(prepare_count_reg[0]),
        .O(timeout_prepare0_carry_i_8__2_n_0));
  LUT6 #(
    .INIT(64'h5555555555595A5A)) 
    timeout_prepare0_carry_i_9__2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(timeout_prepare0_carry_i_12__2_n_0),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I5(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(timeout_prepare0_carry_i_9__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT5 #(
    .INIT(32'h03000200)) 
    timeout_prepare_i_1__2
       (.I0(timeout_prepare0_carry__0_n_3),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .I2(\dl_tx_sm_state_reg_n_0_[1] ),
        .I3(\dl_tx_sm_state_reg_n_0_[2] ),
        .I4(timeout_prepare),
        .O(timeout_prepare_i_1__2_n_0));
  FDRE timeout_prepare_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(timeout_prepare_i_1__2_n_0),
        .Q(timeout_prepare),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT4 #(
    .INIT(16'h1101)) 
    tx_dl_lp_dn_i_2__5
       (.I0(\dl_tx_sm_state_reg_n_0_[1] ),
        .I1(\dl_tx_sm_state_reg_n_0_[2] ),
        .I2(\dl_tx_sm_state_reg_n_0_[0] ),
        .I3(cl_init_done_coreclk_i),
        .O(tx_dl_lp_dn_i_2__5_n_0));
  FDPE tx_dl_lp_dn_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_txrequesths_sync_i_n_1),
        .PRE(core_rst),
        .Q(tx_dl_lp_dn_hs_i));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'h40)) 
    tx_dl_lp_dp_i_5__5
       (.I0(\dl_tx_sm_state_reg_n_0_[1] ),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .I2(dl_tx_sm_state0__0),
        .O(tx_dl_lp_dp_i_5__5_n_0));
  FDPE tx_dl_lp_dp_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_enable_sync_i_n_0),
        .PRE(core_rst),
        .Q(tx_dl_lp_dp_hs_i));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_data_lane_sm" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_data_lane_sm_32
   (out,
    timeout_hsexit_reg_0,
    en_hs_datapath_reg_0,
    en_cal_hs_datapath_i,
    esc_start_i,
    tx_dl_lp_dp_hs_i,
    tx_dl_lp_dn_hs_i,
    dl_stopstate_reg_0,
    core_rst,
    dl2_enable,
    core_clk,
    dl_txrequesths_r,
    dl2_txrequestesc,
    dl2_forcetxstopmode,
    s_level_out_d1_cdc_to_reg,
    cl_init_done_coreclk_i,
    timeout_hsexit_reg_1,
    \dl_tx_sm_state[1]_i_4__1 ,
    cl_txclkactivehs_i,
    tx_dl_lp_dn_reg_0,
    tx_dl_lp_dp_reg_0,
    timeout_hsexit_all,
    dl_stopstate_coreclk_reg);
  output out;
  output timeout_hsexit_reg_0;
  output en_hs_datapath_reg_0;
  output en_cal_hs_datapath_i;
  output esc_start_i;
  output tx_dl_lp_dp_hs_i;
  output tx_dl_lp_dn_hs_i;
  output dl_stopstate_reg_0;
  input core_rst;
  input dl2_enable;
  input core_clk;
  input dl_txrequesths_r;
  input dl2_txrequestesc;
  input dl2_forcetxstopmode;
  input s_level_out_d1_cdc_to_reg;
  input cl_init_done_coreclk_i;
  input timeout_hsexit_reg_1;
  input \dl_tx_sm_state[1]_i_4__1 ;
  input cl_txclkactivehs_i;
  input tx_dl_lp_dn_reg_0;
  input tx_dl_lp_dp_reg_0;
  input timeout_hsexit_all;
  input dl_stopstate_coreclk_reg;

  wire PREPARE_TIMEOUT0__0_carry__0_i_1__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_2__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_3__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_4__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_5__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_6__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_7__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_8__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_n_1;
  wire PREPARE_TIMEOUT0__0_carry__0_n_2;
  wire PREPARE_TIMEOUT0__0_carry__0_n_3;
  wire PREPARE_TIMEOUT0__0_carry__1_i_1__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_2__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_3__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_4__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_5__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_6__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_7__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_8__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_n_1;
  wire PREPARE_TIMEOUT0__0_carry__1_n_2;
  wire PREPARE_TIMEOUT0__0_carry__1_n_3;
  wire PREPARE_TIMEOUT0__0_carry__2_i_1__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_2__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_3__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_4__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_5__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_6__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_7__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_8__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_n_1;
  wire PREPARE_TIMEOUT0__0_carry__2_n_2;
  wire PREPARE_TIMEOUT0__0_carry__2_n_3;
  wire PREPARE_TIMEOUT0__0_carry__2_n_4;
  wire PREPARE_TIMEOUT0__0_carry__2_n_5;
  wire PREPARE_TIMEOUT0__0_carry__3_i_1__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_2__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_3__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_4__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_5__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_6__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_7__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_n_1;
  wire PREPARE_TIMEOUT0__0_carry__3_n_2;
  wire PREPARE_TIMEOUT0__0_carry__3_n_3;
  wire PREPARE_TIMEOUT0__0_carry__3_n_4;
  wire PREPARE_TIMEOUT0__0_carry__3_n_5;
  wire PREPARE_TIMEOUT0__0_carry__3_n_6;
  wire PREPARE_TIMEOUT0__0_carry__3_n_7;
  wire PREPARE_TIMEOUT0__0_carry_i_1__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_2__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_3__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_4__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_5__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_6__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_7__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry_n_0;
  wire PREPARE_TIMEOUT0__0_carry_n_1;
  wire PREPARE_TIMEOUT0__0_carry_n_2;
  wire PREPARE_TIMEOUT0__0_carry_n_3;
  wire PREPARE_TIMEOUT0__44_carry__0_i_1__1_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_2__1_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_3__1_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_4__1_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_5__1_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_6__1_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_7__1_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_n_1;
  wire PREPARE_TIMEOUT0__44_carry__0_n_2;
  wire PREPARE_TIMEOUT0__44_carry__0_n_3;
  wire PREPARE_TIMEOUT0__44_carry__0_n_4;
  wire PREPARE_TIMEOUT0__44_carry__0_n_5;
  wire PREPARE_TIMEOUT0__44_carry__0_n_6;
  wire PREPARE_TIMEOUT0__44_carry__0_n_7;
  wire PREPARE_TIMEOUT0__44_carry__1_i_1__1_n_0;
  wire PREPARE_TIMEOUT0__44_carry__1_n_2;
  wire PREPARE_TIMEOUT0__44_carry__1_n_7;
  wire PREPARE_TIMEOUT0__44_carry_i_1__1_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_2__1_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_3__1_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_4__1_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_5__1_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_6__1_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_7__1_n_0;
  wire PREPARE_TIMEOUT0__44_carry_n_0;
  wire PREPARE_TIMEOUT0__44_carry_n_1;
  wire PREPARE_TIMEOUT0__44_carry_n_2;
  wire PREPARE_TIMEOUT0__44_carry_n_3;
  wire PREPARE_TIMEOUT0__44_carry_n_4;
  wire PREPARE_TIMEOUT0__44_carry_n_5;
  wire PREPARE_TIMEOUT0__44_carry_n_6;
  wire PREPARE_TIMEOUT0__44_carry_n_7;
  wire PREPARE_TIMEOUT0__71_carry__0_i_1__1_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_2__1_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_3__1_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_4__1_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_5__1_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_6__1_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_7__1_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_n_1;
  wire PREPARE_TIMEOUT0__71_carry__0_n_2;
  wire PREPARE_TIMEOUT0__71_carry__0_n_3;
  wire PREPARE_TIMEOUT0__71_carry__0_n_4;
  wire PREPARE_TIMEOUT0__71_carry__0_n_5;
  wire PREPARE_TIMEOUT0__71_carry__0_n_6;
  wire PREPARE_TIMEOUT0__71_carry__0_n_7;
  wire PREPARE_TIMEOUT0__71_carry__1_i_1__1_n_0;
  wire PREPARE_TIMEOUT0__71_carry__1_i_2__1_n_0;
  wire PREPARE_TIMEOUT0__71_carry__1_i_3__1_n_0;
  wire PREPARE_TIMEOUT0__71_carry__1_n_3;
  wire PREPARE_TIMEOUT0__71_carry__1_n_6;
  wire PREPARE_TIMEOUT0__71_carry__1_n_7;
  wire PREPARE_TIMEOUT0__71_carry_i_1__1_n_0;
  wire PREPARE_TIMEOUT0__71_carry_i_2__1_n_0;
  wire PREPARE_TIMEOUT0__71_carry_i_3__1_n_0;
  wire PREPARE_TIMEOUT0__71_carry_n_0;
  wire PREPARE_TIMEOUT0__71_carry_n_1;
  wire PREPARE_TIMEOUT0__71_carry_n_2;
  wire PREPARE_TIMEOUT0__71_carry_n_3;
  wire PREPARE_TIMEOUT0__71_carry_n_4;
  wire PREPARE_TIMEOUT0__71_carry_n_5;
  wire PREPARE_TIMEOUT0__71_carry_n_6;
  wire PREPARE_TIMEOUT0__71_carry_n_7;
  wire PREPARE_TIMEOUT0__99_carry__0_i_1__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_2__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_3__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_4__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_5__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_6__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_7__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_8__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_n_1;
  wire PREPARE_TIMEOUT0__99_carry__0_n_2;
  wire PREPARE_TIMEOUT0__99_carry__0_n_3;
  wire PREPARE_TIMEOUT0__99_carry__1_i_1__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_2__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_3__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_4__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_5__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_6__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_7__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_8__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_n_1;
  wire PREPARE_TIMEOUT0__99_carry__1_n_2;
  wire PREPARE_TIMEOUT0__99_carry__1_n_3;
  wire PREPARE_TIMEOUT0__99_carry__2_i_1__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_2__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_3__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_4__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_5__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_6__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_n_1;
  wire PREPARE_TIMEOUT0__99_carry__2_n_2;
  wire PREPARE_TIMEOUT0__99_carry__2_n_3;
  wire PREPARE_TIMEOUT0__99_carry_i_1__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_2__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_3__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_4__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_5__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_6__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_7__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry_n_0;
  wire PREPARE_TIMEOUT0__99_carry_n_1;
  wire PREPARE_TIMEOUT0__99_carry_n_2;
  wire PREPARE_TIMEOUT0__99_carry_n_3;
  wire PREPARE_TIMEOUT1_n_100;
  wire PREPARE_TIMEOUT1_n_101;
  wire PREPARE_TIMEOUT1_n_102;
  wire PREPARE_TIMEOUT1_n_103;
  wire PREPARE_TIMEOUT1_n_104;
  wire PREPARE_TIMEOUT1_n_105;
  wire PREPARE_TIMEOUT1_n_88;
  wire PREPARE_TIMEOUT1_n_89;
  wire PREPARE_TIMEOUT1_n_90;
  wire PREPARE_TIMEOUT1_n_91;
  wire PREPARE_TIMEOUT1_n_92;
  wire PREPARE_TIMEOUT1_n_93;
  wire PREPARE_TIMEOUT1_n_94;
  wire PREPARE_TIMEOUT1_n_95;
  wire PREPARE_TIMEOUT1_n_96;
  wire PREPARE_TIMEOUT1_n_97;
  wire PREPARE_TIMEOUT1_n_98;
  wire PREPARE_TIMEOUT1_n_99;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl2_enable;
  wire dl2_forcetxstopmode;
  wire dl2_txrequestesc;
  wire dl_enable_sync_i_n_0;
  wire dl_enable_sync_i_n_2;
  wire dl_forcetxstopmode_sync_i_n_0;
  wire dl_status_bit_6_i_3__1_n_0;
  wire dl_stopstate_coreclk_reg;
  wire dl_stopstate_i;
  wire dl_stopstate_reg_0;
  wire dl_tx_sm_state120_out;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state[1]_i_4__1 ;
  wire \dl_tx_sm_state[2]_i_11__1_n_0 ;
  wire \dl_tx_sm_state_reg_n_0_[0] ;
  wire \dl_tx_sm_state_reg_n_0_[1] ;
  wire \dl_tx_sm_state_reg_n_0_[2] ;
  wire dl_txrequestesc_sync_i_n_0;
  wire dl_txrequestesc_sync_i_n_1;
  wire dl_txrequestesc_sync_i_n_2;
  wire dl_txrequestesc_sync_i_n_3;
  wire dl_txrequestesc_sync_i_n_5;
  wire dl_txrequestesc_sync_i_n_6;
  wire dl_txrequestesc_sync_i_n_7;
  wire dl_txrequestesc_sync_i_n_8;
  wire dl_txrequesths_r;
  wire dl_txrequesths_sync;
  wire dl_txrequesths_sync_i_n_1;
  wire dl_txrequesths_sync_i_n_2;
  wire dl_txrequesths_sync_i_n_4;
  wire dl_txrequesths_sync_i_n_6;
  wire dl_txrequesths_sync_i_n_7;
  wire dl_txskewcalhs_sync_i_n_0;
  wire dl_txskewcalhs_sync_i_n_1;
  wire dl_txskewcalhs_sync_i_n_2;
  wire dl_txskewcalhs_sync_i_n_3;
  wire dl_txskewcalhs_sync_i_n_4;
  wire dl_txskewcalhs_sync_i_n_6;
  wire dl_txskewcalhs_sync_i_n_7;
  wire dl_txskewcalhs_sync_i_n_8;
  wire en_cal_hs_datapath_i;
  wire en_hs_datapath_reg_0;
  wire en_hs_start_w__4;
  wire en_lp_01_cnt__4;
  wire en_lp_01_cnt_reg_n_0;
  wire esc_active_sync;
  wire esc_active_sync_i_n_1;
  wire esc_active_sync_i_n_2;
  wire esc_active_sync_r;
  wire esc_start_i;
  wire \hsexit_count[0]_i_1__1_n_0 ;
  wire \hsexit_count[0]_i_2__1_n_0 ;
  wire \hsexit_count[0]_i_4__1_n_0 ;
  wire [12:0]hsexit_count_reg;
  wire \hsexit_count_reg[0]_i_3__1_n_0 ;
  wire \hsexit_count_reg[0]_i_3__1_n_1 ;
  wire \hsexit_count_reg[0]_i_3__1_n_2 ;
  wire \hsexit_count_reg[0]_i_3__1_n_3 ;
  wire \hsexit_count_reg[0]_i_3__1_n_4 ;
  wire \hsexit_count_reg[0]_i_3__1_n_5 ;
  wire \hsexit_count_reg[0]_i_3__1_n_6 ;
  wire \hsexit_count_reg[0]_i_3__1_n_7 ;
  wire \hsexit_count_reg[12]_i_1__1_n_7 ;
  wire \hsexit_count_reg[4]_i_1__1_n_0 ;
  wire \hsexit_count_reg[4]_i_1__1_n_1 ;
  wire \hsexit_count_reg[4]_i_1__1_n_2 ;
  wire \hsexit_count_reg[4]_i_1__1_n_3 ;
  wire \hsexit_count_reg[4]_i_1__1_n_4 ;
  wire \hsexit_count_reg[4]_i_1__1_n_5 ;
  wire \hsexit_count_reg[4]_i_1__1_n_6 ;
  wire \hsexit_count_reg[4]_i_1__1_n_7 ;
  wire \hsexit_count_reg[8]_i_1__1_n_0 ;
  wire \hsexit_count_reg[8]_i_1__1_n_1 ;
  wire \hsexit_count_reg[8]_i_1__1_n_2 ;
  wire \hsexit_count_reg[8]_i_1__1_n_3 ;
  wire \hsexit_count_reg[8]_i_1__1_n_4 ;
  wire \hsexit_count_reg[8]_i_1__1_n_5 ;
  wire \hsexit_count_reg[8]_i_1__1_n_6 ;
  wire \hsexit_count_reg[8]_i_1__1_n_7 ;
  wire lp_01_r;
  wire lp_01_r_reg_n_0;
  wire [6:0]lp_st01_cnt;
  wire \lp_st01_cnt[1]_i_2__2_n_0 ;
  wire \lp_st01_cnt[3]_i_2__2_n_0 ;
  wire \lp_st01_cnt[5]_i_2__2_n_0 ;
  wire \lp_st01_cnt[6]_i_2__2_n_0 ;
  wire \lp_st01_cnt_reg_n_0_[0] ;
  wire \lp_st01_cnt_reg_n_0_[1] ;
  wire \lp_st01_cnt_reg_n_0_[2] ;
  wire \lp_st01_cnt_reg_n_0_[3] ;
  wire \lp_st01_cnt_reg_n_0_[4] ;
  wire \lp_st01_cnt_reg_n_0_[5] ;
  wire \lp_st01_cnt_reg_n_0_[6] ;
  (* DONT_TOUCH *) wire out;
  wire p_0_in23_out;
  wire [8:0]p_0_in__0;
  wire p_21_in;
  wire prepare_count;
  wire \prepare_count[8]_i_4__1_n_0 ;
  wire [8:0]prepare_count_reg;
  wire s_level_out_d1_cdc_to_reg;
  wire sel;
  wire timeout_hsexit0_carry__0_i_1__1_n_0;
  wire timeout_hsexit0_carry__0_i_2__1_n_0;
  wire timeout_hsexit0_carry__0_i_3__1_n_0;
  wire timeout_hsexit0_carry__0_i_4__1_n_0;
  wire timeout_hsexit0_carry__0_i_5__1_n_0;
  wire timeout_hsexit0_carry__0_n_1;
  wire timeout_hsexit0_carry__0_n_2;
  wire timeout_hsexit0_carry__0_n_3;
  wire timeout_hsexit0_carry_i_1__1_n_0;
  wire timeout_hsexit0_carry_i_2__1_n_0;
  wire timeout_hsexit0_carry_i_3__1_n_0;
  wire timeout_hsexit0_carry_i_4__1_n_0;
  wire timeout_hsexit0_carry_i_5__1_n_0;
  wire timeout_hsexit0_carry_i_6__1_n_0;
  wire timeout_hsexit0_carry_i_7__1_n_0;
  wire timeout_hsexit0_carry_n_0;
  wire timeout_hsexit0_carry_n_1;
  wire timeout_hsexit0_carry_n_2;
  wire timeout_hsexit0_carry_n_3;
  wire timeout_hsexit_all;
  wire timeout_hsexit_i_1__1_n_0;
  wire timeout_hsexit_reg_0;
  wire timeout_hsexit_reg_1;
  wire timeout_prepare;
  wire timeout_prepare0_carry__0_i_1__1_n_0;
  wire timeout_prepare0_carry__0_n_3;
  wire timeout_prepare0_carry_i_10__1_n_0;
  wire timeout_prepare0_carry_i_11__1_n_0;
  wire timeout_prepare0_carry_i_12__1_n_0;
  wire timeout_prepare0_carry_i_13__1_n_0;
  wire timeout_prepare0_carry_i_1__1_n_0;
  wire timeout_prepare0_carry_i_2__1_n_0;
  wire timeout_prepare0_carry_i_3__1_n_0;
  wire timeout_prepare0_carry_i_4__1_n_0;
  wire timeout_prepare0_carry_i_5__1_n_0;
  wire timeout_prepare0_carry_i_6__1_n_0;
  wire timeout_prepare0_carry_i_7__1_n_0;
  wire timeout_prepare0_carry_i_8__1_n_0;
  wire timeout_prepare0_carry_i_9__1_n_0;
  wire timeout_prepare0_carry_n_0;
  wire timeout_prepare0_carry_n_1;
  wire timeout_prepare0_carry_n_2;
  wire timeout_prepare0_carry_n_3;
  wire timeout_prepare_i_1__1_n_0;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dn_i_2__3_n_0;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_i_5__3_n_0;
  wire tx_dl_lp_dp_reg_0;
  wire [3:0]NLW_PREPARE_TIMEOUT0__0_carry_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__0_carry__1_O_UNCONNECTED;
  wire [1:0]NLW_PREPARE_TIMEOUT0__0_carry__2_O_UNCONNECTED;
  wire [3:3]NLW_PREPARE_TIMEOUT0__0_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__44_carry__1_CO_UNCONNECTED;
  wire [3:1]NLW_PREPARE_TIMEOUT0__44_carry__1_O_UNCONNECTED;
  wire [3:1]NLW_PREPARE_TIMEOUT0__71_carry__1_CO_UNCONNECTED;
  wire [3:2]NLW_PREPARE_TIMEOUT0__71_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__99_carry_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__99_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__99_carry__1_O_UNCONNECTED;
  wire [3:3]NLW_PREPARE_TIMEOUT0__99_carry__2_CO_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__99_carry__2_O_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_OVERFLOW_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_PATTERNDETECT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_PREPARE_TIMEOUT1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_PREPARE_TIMEOUT1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT1_CARRYOUT_UNCONNECTED;
  wire [47:18]NLW_PREPARE_TIMEOUT1_P_UNCONNECTED;
  wire [47:0]NLW_PREPARE_TIMEOUT1_PCOUT_UNCONNECTED;
  wire [3:0]\NLW_hsexit_count_reg[12]_i_1__1_CO_UNCONNECTED ;
  wire [3:1]\NLW_hsexit_count_reg[12]_i_1__1_O_UNCONNECTED ;
  wire [3:0]NLW_timeout_hsexit0_carry_O_UNCONNECTED;
  wire [3:3]NLW_timeout_hsexit0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_timeout_hsexit0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_timeout_prepare0_carry_O_UNCONNECTED;
  wire [3:1]NLW_timeout_prepare0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_timeout_prepare0_carry__0_O_UNCONNECTED;

  CARRY4 PREPARE_TIMEOUT0__0_carry
       (.CI(1'b0),
        .CO({PREPARE_TIMEOUT0__0_carry_n_0,PREPARE_TIMEOUT0__0_carry_n_1,PREPARE_TIMEOUT0__0_carry_n_2,PREPARE_TIMEOUT0__0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry_i_1__1_n_0,PREPARE_TIMEOUT0__0_carry_i_2__1_n_0,PREPARE_TIMEOUT0__0_carry_i_3__1_n_0,1'b0}),
        .O(NLW_PREPARE_TIMEOUT0__0_carry_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__0_carry_i_4__1_n_0,PREPARE_TIMEOUT0__0_carry_i_5__1_n_0,PREPARE_TIMEOUT0__0_carry_i_6__1_n_0,PREPARE_TIMEOUT0__0_carry_i_7__1_n_0}));
  CARRY4 PREPARE_TIMEOUT0__0_carry__0
       (.CI(PREPARE_TIMEOUT0__0_carry_n_0),
        .CO({PREPARE_TIMEOUT0__0_carry__0_n_0,PREPARE_TIMEOUT0__0_carry__0_n_1,PREPARE_TIMEOUT0__0_carry__0_n_2,PREPARE_TIMEOUT0__0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__0_i_1__1_n_0,PREPARE_TIMEOUT0__0_carry__0_i_2__1_n_0,PREPARE_TIMEOUT0__0_carry__0_i_3__1_n_0,PREPARE_TIMEOUT0__0_carry__0_i_4__1_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__0_carry__0_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__0_carry__0_i_5__1_n_0,PREPARE_TIMEOUT0__0_carry__0_i_6__1_n_0,PREPARE_TIMEOUT0__0_carry__0_i_7__1_n_0,PREPARE_TIMEOUT0__0_carry__0_i_8__1_n_0}));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__0_i_1__1
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT1_n_97),
        .I2(PREPARE_TIMEOUT1_n_99),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_1__1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__0_i_2__1
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT1_n_98),
        .I2(PREPARE_TIMEOUT1_n_100),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_2__1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__0_i_3__1
       (.I0(PREPARE_TIMEOUT1_n_99),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_101),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_3__1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__0_i_4__1
       (.I0(PREPARE_TIMEOUT1_n_100),
        .I1(PREPARE_TIMEOUT1_n_104),
        .I2(PREPARE_TIMEOUT1_n_102),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_4__1_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__0_i_5__1
       (.I0(PREPARE_TIMEOUT1_n_99),
        .I1(PREPARE_TIMEOUT1_n_97),
        .I2(PREPARE_TIMEOUT1_n_101),
        .I3(PREPARE_TIMEOUT1_n_100),
        .I4(PREPARE_TIMEOUT1_n_98),
        .I5(PREPARE_TIMEOUT1_n_96),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_5__1_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__0_i_6__1
       (.I0(PREPARE_TIMEOUT1_n_100),
        .I1(PREPARE_TIMEOUT1_n_98),
        .I2(PREPARE_TIMEOUT1_n_102),
        .I3(PREPARE_TIMEOUT1_n_101),
        .I4(PREPARE_TIMEOUT1_n_99),
        .I5(PREPARE_TIMEOUT1_n_97),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_6__1_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__0_i_7__1
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_99),
        .I3(PREPARE_TIMEOUT1_n_102),
        .I4(PREPARE_TIMEOUT1_n_100),
        .I5(PREPARE_TIMEOUT1_n_98),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_7__1_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__0_i_8__1
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT1_n_104),
        .I2(PREPARE_TIMEOUT1_n_100),
        .I3(PREPARE_TIMEOUT1_n_103),
        .I4(PREPARE_TIMEOUT1_n_101),
        .I5(PREPARE_TIMEOUT1_n_99),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_8__1_n_0));
  CARRY4 PREPARE_TIMEOUT0__0_carry__1
       (.CI(PREPARE_TIMEOUT0__0_carry__0_n_0),
        .CO({PREPARE_TIMEOUT0__0_carry__1_n_0,PREPARE_TIMEOUT0__0_carry__1_n_1,PREPARE_TIMEOUT0__0_carry__1_n_2,PREPARE_TIMEOUT0__0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__1_i_1__1_n_0,PREPARE_TIMEOUT0__0_carry__1_i_2__1_n_0,PREPARE_TIMEOUT0__0_carry__1_i_3__1_n_0,PREPARE_TIMEOUT0__0_carry__1_i_4__1_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__0_carry__1_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__0_carry__1_i_5__1_n_0,PREPARE_TIMEOUT0__0_carry__1_i_6__1_n_0,PREPARE_TIMEOUT0__0_carry__1_i_7__1_n_0,PREPARE_TIMEOUT0__0_carry__1_i_8__1_n_0}));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__1_i_1__1
       (.I0(PREPARE_TIMEOUT1_n_97),
        .I1(PREPARE_TIMEOUT1_n_93),
        .I2(PREPARE_TIMEOUT1_n_95),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_1__1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__1_i_2__1
       (.I0(PREPARE_TIMEOUT1_n_98),
        .I1(PREPARE_TIMEOUT1_n_94),
        .I2(PREPARE_TIMEOUT1_n_96),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_2__1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__1_i_3__1
       (.I0(PREPARE_TIMEOUT1_n_95),
        .I1(PREPARE_TIMEOUT1_n_99),
        .I2(PREPARE_TIMEOUT1_n_97),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_3__1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__1_i_4__1
       (.I0(PREPARE_TIMEOUT1_n_96),
        .I1(PREPARE_TIMEOUT1_n_100),
        .I2(PREPARE_TIMEOUT1_n_98),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_4__1_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__1_i_5__1
       (.I0(PREPARE_TIMEOUT1_n_95),
        .I1(PREPARE_TIMEOUT1_n_93),
        .I2(PREPARE_TIMEOUT1_n_97),
        .I3(PREPARE_TIMEOUT1_n_96),
        .I4(PREPARE_TIMEOUT1_n_94),
        .I5(PREPARE_TIMEOUT1_n_92),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_5__1_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__1_i_6__1
       (.I0(PREPARE_TIMEOUT1_n_96),
        .I1(PREPARE_TIMEOUT1_n_94),
        .I2(PREPARE_TIMEOUT1_n_98),
        .I3(PREPARE_TIMEOUT1_n_97),
        .I4(PREPARE_TIMEOUT1_n_95),
        .I5(PREPARE_TIMEOUT1_n_93),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_6__1_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__1_i_7__1
       (.I0(PREPARE_TIMEOUT1_n_97),
        .I1(PREPARE_TIMEOUT1_n_99),
        .I2(PREPARE_TIMEOUT1_n_95),
        .I3(PREPARE_TIMEOUT1_n_98),
        .I4(PREPARE_TIMEOUT1_n_96),
        .I5(PREPARE_TIMEOUT1_n_94),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_7__1_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__1_i_8__1
       (.I0(PREPARE_TIMEOUT1_n_98),
        .I1(PREPARE_TIMEOUT1_n_100),
        .I2(PREPARE_TIMEOUT1_n_96),
        .I3(PREPARE_TIMEOUT1_n_99),
        .I4(PREPARE_TIMEOUT1_n_97),
        .I5(PREPARE_TIMEOUT1_n_95),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_8__1_n_0));
  CARRY4 PREPARE_TIMEOUT0__0_carry__2
       (.CI(PREPARE_TIMEOUT0__0_carry__1_n_0),
        .CO({PREPARE_TIMEOUT0__0_carry__2_n_0,PREPARE_TIMEOUT0__0_carry__2_n_1,PREPARE_TIMEOUT0__0_carry__2_n_2,PREPARE_TIMEOUT0__0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__2_i_1__1_n_0,PREPARE_TIMEOUT0__0_carry__2_i_2__1_n_0,PREPARE_TIMEOUT0__0_carry__2_i_3__1_n_0,PREPARE_TIMEOUT0__0_carry__2_i_4__1_n_0}),
        .O({PREPARE_TIMEOUT0__0_carry__2_n_4,PREPARE_TIMEOUT0__0_carry__2_n_5,NLW_PREPARE_TIMEOUT0__0_carry__2_O_UNCONNECTED[1:0]}),
        .S({PREPARE_TIMEOUT0__0_carry__2_i_5__1_n_0,PREPARE_TIMEOUT0__0_carry__2_i_6__1_n_0,PREPARE_TIMEOUT0__0_carry__2_i_7__1_n_0,PREPARE_TIMEOUT0__0_carry__2_i_8__1_n_0}));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__2_i_1__1
       (.I0(PREPARE_TIMEOUT1_n_89),
        .I1(PREPARE_TIMEOUT1_n_93),
        .I2(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_1__1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__2_i_2__1
       (.I0(PREPARE_TIMEOUT1_n_94),
        .I1(PREPARE_TIMEOUT1_n_90),
        .I2(PREPARE_TIMEOUT1_n_92),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_2__1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__2_i_3__1
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT1_n_95),
        .I2(PREPARE_TIMEOUT1_n_93),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_3__1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__2_i_4__1
       (.I0(PREPARE_TIMEOUT1_n_92),
        .I1(PREPARE_TIMEOUT1_n_96),
        .I2(PREPARE_TIMEOUT1_n_94),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_4__1_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__2_i_5__1
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT1_n_93),
        .I2(PREPARE_TIMEOUT1_n_89),
        .I3(PREPARE_TIMEOUT1_n_92),
        .I4(PREPARE_TIMEOUT1_n_90),
        .I5(PREPARE_TIMEOUT1_n_88),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_5__1_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__2_i_6__1
       (.I0(PREPARE_TIMEOUT1_n_92),
        .I1(PREPARE_TIMEOUT1_n_90),
        .I2(PREPARE_TIMEOUT1_n_94),
        .I3(PREPARE_TIMEOUT1_n_91),
        .I4(PREPARE_TIMEOUT1_n_93),
        .I5(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_6__1_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__2_i_7__1
       (.I0(PREPARE_TIMEOUT1_n_93),
        .I1(PREPARE_TIMEOUT1_n_95),
        .I2(PREPARE_TIMEOUT1_n_91),
        .I3(PREPARE_TIMEOUT1_n_94),
        .I4(PREPARE_TIMEOUT1_n_92),
        .I5(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_7__1_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__2_i_8__1
       (.I0(PREPARE_TIMEOUT1_n_94),
        .I1(PREPARE_TIMEOUT1_n_96),
        .I2(PREPARE_TIMEOUT1_n_92),
        .I3(PREPARE_TIMEOUT1_n_95),
        .I4(PREPARE_TIMEOUT1_n_93),
        .I5(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_8__1_n_0));
  CARRY4 PREPARE_TIMEOUT0__0_carry__3
       (.CI(PREPARE_TIMEOUT0__0_carry__2_n_0),
        .CO({NLW_PREPARE_TIMEOUT0__0_carry__3_CO_UNCONNECTED[3],PREPARE_TIMEOUT0__0_carry__3_n_1,PREPARE_TIMEOUT0__0_carry__3_n_2,PREPARE_TIMEOUT0__0_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,PREPARE_TIMEOUT0__0_carry__3_i_1__1_n_0,PREPARE_TIMEOUT0__0_carry__3_i_2__1_n_0,PREPARE_TIMEOUT0__0_carry__3_i_3__1_n_0}),
        .O({PREPARE_TIMEOUT0__0_carry__3_n_4,PREPARE_TIMEOUT0__0_carry__3_n_5,PREPARE_TIMEOUT0__0_carry__3_n_6,PREPARE_TIMEOUT0__0_carry__3_n_7}),
        .S({PREPARE_TIMEOUT0__0_carry__3_i_4__1_n_0,PREPARE_TIMEOUT0__0_carry__3_i_5__1_n_0,PREPARE_TIMEOUT0__0_carry__3_i_6__1_n_0,PREPARE_TIMEOUT0__0_carry__3_i_7__1_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__0_carry__3_i_1__1
       (.I0(PREPARE_TIMEOUT1_n_90),
        .I1(PREPARE_TIMEOUT1_n_88),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__0_carry__3_i_2__1
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_2__1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__3_i_3__1
       (.I0(PREPARE_TIMEOUT1_n_88),
        .I1(PREPARE_TIMEOUT1_n_92),
        .I2(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    PREPARE_TIMEOUT0__0_carry__3_i_4__1
       (.I0(PREPARE_TIMEOUT1_n_89),
        .I1(PREPARE_TIMEOUT1_n_88),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_4__1_n_0));
  LUT3 #(
    .INIT(8'h4B)) 
    PREPARE_TIMEOUT0__0_carry__3_i_5__1
       (.I0(PREPARE_TIMEOUT1_n_88),
        .I1(PREPARE_TIMEOUT1_n_90),
        .I2(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_5__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__0_carry__3_i_6__1
       (.I0(PREPARE_TIMEOUT1_n_89),
        .I1(PREPARE_TIMEOUT1_n_91),
        .I2(PREPARE_TIMEOUT1_n_88),
        .I3(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_6__1_n_0));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__3_i_7__1
       (.I0(PREPARE_TIMEOUT1_n_90),
        .I1(PREPARE_TIMEOUT1_n_92),
        .I2(PREPARE_TIMEOUT1_n_88),
        .I3(PREPARE_TIMEOUT1_n_89),
        .I4(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_7__1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry_i_1__1
       (.I0(PREPARE_TIMEOUT1_n_105),
        .I1(PREPARE_TIMEOUT1_n_101),
        .I2(PREPARE_TIMEOUT1_n_103),
        .O(PREPARE_TIMEOUT0__0_carry_i_1__1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    PREPARE_TIMEOUT0__0_carry_i_2__1
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_105),
        .O(PREPARE_TIMEOUT0__0_carry_i_2__1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__0_carry_i_3__1
       (.I0(PREPARE_TIMEOUT1_n_103),
        .I1(PREPARE_TIMEOUT1_n_105),
        .O(PREPARE_TIMEOUT0__0_carry_i_3__1_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry_i_4__1
       (.I0(PREPARE_TIMEOUT1_n_103),
        .I1(PREPARE_TIMEOUT1_n_101),
        .I2(PREPARE_TIMEOUT1_n_105),
        .I3(PREPARE_TIMEOUT1_n_102),
        .I4(PREPARE_TIMEOUT1_n_104),
        .I5(PREPARE_TIMEOUT1_n_100),
        .O(PREPARE_TIMEOUT0__0_carry_i_4__1_n_0));
  LUT5 #(
    .INIT(32'h69699669)) 
    PREPARE_TIMEOUT0__0_carry_i_5__1
       (.I0(PREPARE_TIMEOUT1_n_105),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_101),
        .I3(PREPARE_TIMEOUT1_n_102),
        .I4(PREPARE_TIMEOUT1_n_104),
        .O(PREPARE_TIMEOUT0__0_carry_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__0_carry_i_6__1
       (.I0(PREPARE_TIMEOUT1_n_105),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_104),
        .I3(PREPARE_TIMEOUT1_n_102),
        .O(PREPARE_TIMEOUT0__0_carry_i_6__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__0_carry_i_7__1
       (.I0(PREPARE_TIMEOUT1_n_103),
        .I1(PREPARE_TIMEOUT1_n_105),
        .O(PREPARE_TIMEOUT0__0_carry_i_7__1_n_0));
  CARRY4 PREPARE_TIMEOUT0__44_carry
       (.CI(1'b0),
        .CO({PREPARE_TIMEOUT0__44_carry_n_0,PREPARE_TIMEOUT0__44_carry_n_1,PREPARE_TIMEOUT0__44_carry_n_2,PREPARE_TIMEOUT0__44_carry_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__44_carry_i_1__1_n_0,PREPARE_TIMEOUT0__44_carry_i_2__1_n_0,PREPARE_TIMEOUT0__44_carry_i_3__1_n_0,1'b0}),
        .O({PREPARE_TIMEOUT0__44_carry_n_4,PREPARE_TIMEOUT0__44_carry_n_5,PREPARE_TIMEOUT0__44_carry_n_6,PREPARE_TIMEOUT0__44_carry_n_7}),
        .S({PREPARE_TIMEOUT0__44_carry_i_4__1_n_0,PREPARE_TIMEOUT0__44_carry_i_5__1_n_0,PREPARE_TIMEOUT0__44_carry_i_6__1_n_0,PREPARE_TIMEOUT0__44_carry_i_7__1_n_0}));
  CARRY4 PREPARE_TIMEOUT0__44_carry__0
       (.CI(PREPARE_TIMEOUT0__44_carry_n_0),
        .CO({PREPARE_TIMEOUT0__44_carry__0_n_0,PREPARE_TIMEOUT0__44_carry__0_n_1,PREPARE_TIMEOUT0__44_carry__0_n_2,PREPARE_TIMEOUT0__44_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__3_n_5,PREPARE_TIMEOUT0__44_carry__0_i_1__1_n_0,PREPARE_TIMEOUT0__44_carry__0_i_2__1_n_0,PREPARE_TIMEOUT0__44_carry__0_i_3__1_n_0}),
        .O({PREPARE_TIMEOUT0__44_carry__0_n_4,PREPARE_TIMEOUT0__44_carry__0_n_5,PREPARE_TIMEOUT0__44_carry__0_n_6,PREPARE_TIMEOUT0__44_carry__0_n_7}),
        .S({PREPARE_TIMEOUT0__44_carry__0_i_4__1_n_0,PREPARE_TIMEOUT0__44_carry__0_i_5__1_n_0,PREPARE_TIMEOUT0__44_carry__0_i_6__1_n_0,PREPARE_TIMEOUT0__44_carry__0_i_7__1_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry__0_i_1__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry__0_i_2__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry__0_i_3__1
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    PREPARE_TIMEOUT0__44_carry__0_i_4__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_4__1_n_0));
  LUT3 #(
    .INIT(8'h4B)) 
    PREPARE_TIMEOUT0__44_carry__0_i_5__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_5__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__44_carry__0_i_6__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_6__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__44_carry__0_i_7__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_7__1_n_0));
  CARRY4 PREPARE_TIMEOUT0__44_carry__1
       (.CI(PREPARE_TIMEOUT0__44_carry__0_n_0),
        .CO({NLW_PREPARE_TIMEOUT0__44_carry__1_CO_UNCONNECTED[3:2],PREPARE_TIMEOUT0__44_carry__1_n_2,NLW_PREPARE_TIMEOUT0__44_carry__1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,PREPARE_TIMEOUT0__0_carry__3_n_4}),
        .O({NLW_PREPARE_TIMEOUT0__44_carry__1_O_UNCONNECTED[3:1],PREPARE_TIMEOUT0__44_carry__1_n_7}),
        .S({1'b0,1'b0,1'b1,PREPARE_TIMEOUT0__44_carry__1_i_1__1_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    PREPARE_TIMEOUT0__44_carry__1_i_1__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__44_carry__1_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry_i_1__1
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(PREPARE_TIMEOUT0__44_carry_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry_i_2__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(PREPARE_TIMEOUT0__44_carry_i_2__1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__44_carry_i_3__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .O(PREPARE_TIMEOUT0__44_carry_i_3__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__44_carry_i_4__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(PREPARE_TIMEOUT0__44_carry_i_4__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__44_carry_i_5__1
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .O(PREPARE_TIMEOUT0__44_carry_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__44_carry_i_6__1
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__44_carry_i_6__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__44_carry_i_7__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .O(PREPARE_TIMEOUT0__44_carry_i_7__1_n_0));
  CARRY4 PREPARE_TIMEOUT0__71_carry
       (.CI(1'b0),
        .CO({PREPARE_TIMEOUT0__71_carry_n_0,PREPARE_TIMEOUT0__71_carry_n_1,PREPARE_TIMEOUT0__71_carry_n_2,PREPARE_TIMEOUT0__71_carry_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__3_n_7,PREPARE_TIMEOUT0__0_carry__2_n_4,PREPARE_TIMEOUT0__0_carry__2_n_5,1'b0}),
        .O({PREPARE_TIMEOUT0__71_carry_n_4,PREPARE_TIMEOUT0__71_carry_n_5,PREPARE_TIMEOUT0__71_carry_n_6,PREPARE_TIMEOUT0__71_carry_n_7}),
        .S({PREPARE_TIMEOUT0__71_carry_i_1__1_n_0,PREPARE_TIMEOUT0__71_carry_i_2__1_n_0,PREPARE_TIMEOUT0__71_carry_i_3__1_n_0,PREPARE_TIMEOUT0__44_carry_n_6}));
  CARRY4 PREPARE_TIMEOUT0__71_carry__0
       (.CI(PREPARE_TIMEOUT0__71_carry_n_0),
        .CO({PREPARE_TIMEOUT0__71_carry__0_n_0,PREPARE_TIMEOUT0__71_carry__0_n_1,PREPARE_TIMEOUT0__71_carry__0_n_2,PREPARE_TIMEOUT0__71_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__71_carry__0_i_1__1_n_0,PREPARE_TIMEOUT0__71_carry__0_i_2__1_n_0,PREPARE_TIMEOUT0__71_carry__0_i_3__1_n_0,PREPARE_TIMEOUT0__0_carry__3_n_6}),
        .O({PREPARE_TIMEOUT0__71_carry__0_n_4,PREPARE_TIMEOUT0__71_carry__0_n_5,PREPARE_TIMEOUT0__71_carry__0_n_6,PREPARE_TIMEOUT0__71_carry__0_n_7}),
        .S({PREPARE_TIMEOUT0__71_carry__0_i_4__1_n_0,PREPARE_TIMEOUT0__71_carry__0_i_5__1_n_0,PREPARE_TIMEOUT0__71_carry__0_i_6__1_n_0,PREPARE_TIMEOUT0__71_carry__0_i_7__1_n_0}));
  LUT3 #(
    .INIT(8'hE8)) 
    PREPARE_TIMEOUT0__71_carry__0_i_1__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_1__1_n_0));
  (* HLUTNM = "lutpair24" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    PREPARE_TIMEOUT0__71_carry__0_i_2__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_2__1_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    PREPARE_TIMEOUT0__71_carry__0_i_3__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_3__1_n_0));
  LUT5 #(
    .INIT(32'hE81717E8)) 
    PREPARE_TIMEOUT0__71_carry__0_i_4__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I3(PREPARE_TIMEOUT0__44_carry__1_n_7),
        .I4(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_4__1_n_0));
  LUT4 #(
    .INIT(16'h6996)) 
    PREPARE_TIMEOUT0__71_carry__0_i_5__1
       (.I0(PREPARE_TIMEOUT0__71_carry__0_i_2__1_n_0),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I2(PREPARE_TIMEOUT0__44_carry__0_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_5__1_n_0));
  (* HLUTNM = "lutpair24" *) 
  LUT5 #(
    .INIT(32'h69969696)) 
    PREPARE_TIMEOUT0__71_carry__0_i_6__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(PREPARE_TIMEOUT0__44_carry__0_n_6),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_6__1_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    PREPARE_TIMEOUT0__71_carry__0_i_7__1
       (.I0(PREPARE_TIMEOUT0__44_carry__0_n_6),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_7__1_n_0));
  CARRY4 PREPARE_TIMEOUT0__71_carry__1
       (.CI(PREPARE_TIMEOUT0__71_carry__0_n_0),
        .CO({NLW_PREPARE_TIMEOUT0__71_carry__1_CO_UNCONNECTED[3:1],PREPARE_TIMEOUT0__71_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,PREPARE_TIMEOUT0__71_carry__1_i_1__1_n_0}),
        .O({NLW_PREPARE_TIMEOUT0__71_carry__1_O_UNCONNECTED[3:2],PREPARE_TIMEOUT0__71_carry__1_n_6,PREPARE_TIMEOUT0__71_carry__1_n_7}),
        .S({1'b0,1'b0,PREPARE_TIMEOUT0__71_carry__1_i_2__1_n_0,PREPARE_TIMEOUT0__71_carry__1_i_3__1_n_0}));
  LUT2 #(
    .INIT(4'h8)) 
    PREPARE_TIMEOUT0__71_carry__1_i_1__1
       (.I0(PREPARE_TIMEOUT0__44_carry__1_n_7),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__71_carry__1_i_1__1_n_0));
  LUT3 #(
    .INIT(8'hE1)) 
    PREPARE_TIMEOUT0__71_carry__1_i_2__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry__1_n_2),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__71_carry__1_i_2__1_n_0));
  LUT4 #(
    .INIT(16'h7887)) 
    PREPARE_TIMEOUT0__71_carry__1_i_3__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(PREPARE_TIMEOUT0__44_carry__1_n_7),
        .I2(PREPARE_TIMEOUT0__44_carry__1_n_2),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .O(PREPARE_TIMEOUT0__71_carry__1_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__71_carry_i_1__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_7),
        .O(PREPARE_TIMEOUT0__71_carry_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__71_carry_i_2__1
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I1(PREPARE_TIMEOUT0__44_carry_n_4),
        .O(PREPARE_TIMEOUT0__71_carry_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__71_carry_i_3__1
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry_n_5),
        .O(PREPARE_TIMEOUT0__71_carry_i_3__1_n_0));
  CARRY4 PREPARE_TIMEOUT0__99_carry
       (.CI(1'b0),
        .CO({PREPARE_TIMEOUT0__99_carry_n_0,PREPARE_TIMEOUT0__99_carry_n_1,PREPARE_TIMEOUT0__99_carry_n_2,PREPARE_TIMEOUT0__99_carry_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__99_carry_i_1__1_n_0,PREPARE_TIMEOUT0__99_carry_i_2__1_n_0,PREPARE_TIMEOUT0__99_carry_i_3__1_n_0,1'b0}),
        .O(NLW_PREPARE_TIMEOUT0__99_carry_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__99_carry_i_4__1_n_0,PREPARE_TIMEOUT0__99_carry_i_5__1_n_0,PREPARE_TIMEOUT0__99_carry_i_6__1_n_0,PREPARE_TIMEOUT0__99_carry_i_7__1_n_0}));
  CARRY4 PREPARE_TIMEOUT0__99_carry__0
       (.CI(PREPARE_TIMEOUT0__99_carry_n_0),
        .CO({PREPARE_TIMEOUT0__99_carry__0_n_0,PREPARE_TIMEOUT0__99_carry__0_n_1,PREPARE_TIMEOUT0__99_carry__0_n_2,PREPARE_TIMEOUT0__99_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__99_carry__0_i_1__1_n_0,PREPARE_TIMEOUT0__99_carry__0_i_2__1_n_0,PREPARE_TIMEOUT0__99_carry__0_i_3__1_n_0,PREPARE_TIMEOUT0__99_carry__0_i_4__1_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__99_carry__0_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__99_carry__0_i_5__1_n_0,PREPARE_TIMEOUT0__99_carry__0_i_6__1_n_0,PREPARE_TIMEOUT0__99_carry__0_i_7__1_n_0,PREPARE_TIMEOUT0__99_carry__0_i_8__1_n_0}));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry__0_i_1__1
       (.I0(PREPARE_TIMEOUT0__71_carry_n_6),
        .I1(PREPARE_TIMEOUT1_n_96),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_1__1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry__0_i_2__1
       (.I0(PREPARE_TIMEOUT0__71_carry_n_7),
        .I1(PREPARE_TIMEOUT1_n_97),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_2__1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry__0_i_3__1
       (.I0(PREPARE_TIMEOUT0__44_carry_n_7),
        .I1(PREPARE_TIMEOUT1_n_98),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__0_i_4__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(PREPARE_TIMEOUT1_n_99),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_4__1_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__99_carry__0_i_5__1
       (.I0(PREPARE_TIMEOUT1_n_96),
        .I1(PREPARE_TIMEOUT0__71_carry_n_6),
        .I2(PREPARE_TIMEOUT0__71_carry_n_5),
        .I3(PREPARE_TIMEOUT1_n_95),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_5__1_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    PREPARE_TIMEOUT0__99_carry__0_i_6__1
       (.I0(PREPARE_TIMEOUT1_n_97),
        .I1(PREPARE_TIMEOUT0__71_carry_n_7),
        .I2(PREPARE_TIMEOUT0__71_carry_n_6),
        .I3(PREPARE_TIMEOUT1_n_96),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_6__1_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    PREPARE_TIMEOUT0__99_carry__0_i_7__1
       (.I0(PREPARE_TIMEOUT1_n_98),
        .I1(PREPARE_TIMEOUT0__44_carry_n_7),
        .I2(PREPARE_TIMEOUT0__71_carry_n_7),
        .I3(PREPARE_TIMEOUT1_n_97),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_7__1_n_0));
  LUT4 #(
    .INIT(16'h4BB4)) 
    PREPARE_TIMEOUT0__99_carry__0_i_8__1
       (.I0(PREPARE_TIMEOUT1_n_99),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I2(PREPARE_TIMEOUT0__44_carry_n_7),
        .I3(PREPARE_TIMEOUT1_n_98),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_8__1_n_0));
  CARRY4 PREPARE_TIMEOUT0__99_carry__1
       (.CI(PREPARE_TIMEOUT0__99_carry__0_n_0),
        .CO({PREPARE_TIMEOUT0__99_carry__1_n_0,PREPARE_TIMEOUT0__99_carry__1_n_1,PREPARE_TIMEOUT0__99_carry__1_n_2,PREPARE_TIMEOUT0__99_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__99_carry__1_i_1__1_n_0,PREPARE_TIMEOUT0__99_carry__1_i_2__1_n_0,PREPARE_TIMEOUT0__99_carry__1_i_3__1_n_0,PREPARE_TIMEOUT0__99_carry__1_i_4__1_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__99_carry__1_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__99_carry__1_i_5__1_n_0,PREPARE_TIMEOUT0__99_carry__1_i_6__1_n_0,PREPARE_TIMEOUT0__99_carry__1_i_7__1_n_0,PREPARE_TIMEOUT0__99_carry__1_i_8__1_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__1_i_1__1
       (.I0(PREPARE_TIMEOUT0__71_carry__0_n_6),
        .I1(PREPARE_TIMEOUT1_n_92),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_1__1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry__1_i_2__1
       (.I0(PREPARE_TIMEOUT0__71_carry__0_n_7),
        .I1(PREPARE_TIMEOUT1_n_93),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__1_i_3__1
       (.I0(PREPARE_TIMEOUT0__71_carry_n_4),
        .I1(PREPARE_TIMEOUT1_n_94),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__1_i_4__1
       (.I0(PREPARE_TIMEOUT0__71_carry_n_5),
        .I1(PREPARE_TIMEOUT1_n_95),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_4__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__1_i_5__1
       (.I0(PREPARE_TIMEOUT1_n_92),
        .I1(PREPARE_TIMEOUT0__71_carry__0_n_6),
        .I2(PREPARE_TIMEOUT0__71_carry__0_n_5),
        .I3(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__99_carry__1_i_6__1
       (.I0(PREPARE_TIMEOUT1_n_93),
        .I1(PREPARE_TIMEOUT0__71_carry__0_n_7),
        .I2(PREPARE_TIMEOUT0__71_carry__0_n_6),
        .I3(PREPARE_TIMEOUT1_n_92),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_6__1_n_0));
  LUT4 #(
    .INIT(16'h4BB4)) 
    PREPARE_TIMEOUT0__99_carry__1_i_7__1
       (.I0(PREPARE_TIMEOUT1_n_94),
        .I1(PREPARE_TIMEOUT0__71_carry_n_4),
        .I2(PREPARE_TIMEOUT0__71_carry__0_n_7),
        .I3(PREPARE_TIMEOUT1_n_93),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_7__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__1_i_8__1
       (.I0(PREPARE_TIMEOUT1_n_95),
        .I1(PREPARE_TIMEOUT0__71_carry_n_5),
        .I2(PREPARE_TIMEOUT0__71_carry_n_4),
        .I3(PREPARE_TIMEOUT1_n_94),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_8__1_n_0));
  CARRY4 PREPARE_TIMEOUT0__99_carry__2
       (.CI(PREPARE_TIMEOUT0__99_carry__1_n_0),
        .CO({NLW_PREPARE_TIMEOUT0__99_carry__2_CO_UNCONNECTED[3],PREPARE_TIMEOUT0__99_carry__2_n_1,PREPARE_TIMEOUT0__99_carry__2_n_2,PREPARE_TIMEOUT0__99_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,PREPARE_TIMEOUT0__99_carry__2_i_1__1_n_0,PREPARE_TIMEOUT0__99_carry__2_i_2__1_n_0,PREPARE_TIMEOUT0__99_carry__2_i_3__1_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__99_carry__2_O_UNCONNECTED[3:0]),
        .S({1'b0,PREPARE_TIMEOUT0__99_carry__2_i_4__1_n_0,PREPARE_TIMEOUT0__99_carry__2_i_5__1_n_0,PREPARE_TIMEOUT0__99_carry__2_i_6__1_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__2_i_1__1
       (.I0(PREPARE_TIMEOUT0__71_carry__1_n_7),
        .I1(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__2_i_2__1
       (.I0(PREPARE_TIMEOUT0__71_carry__0_n_4),
        .I1(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__2_i_3__1
       (.I0(PREPARE_TIMEOUT0__71_carry__0_n_5),
        .I1(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_3__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__2_i_4__1
       (.I0(PREPARE_TIMEOUT1_n_89),
        .I1(PREPARE_TIMEOUT0__71_carry__1_n_7),
        .I2(PREPARE_TIMEOUT0__71_carry__1_n_6),
        .I3(PREPARE_TIMEOUT1_n_88),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_4__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__2_i_5__1
       (.I0(PREPARE_TIMEOUT1_n_90),
        .I1(PREPARE_TIMEOUT0__71_carry__0_n_4),
        .I2(PREPARE_TIMEOUT0__71_carry__1_n_7),
        .I3(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_5__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__2_i_6__1
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT0__71_carry__0_n_5),
        .I2(PREPARE_TIMEOUT0__71_carry__0_n_4),
        .I3(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_6__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry_i_1__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT1_n_100),
        .O(PREPARE_TIMEOUT0__99_carry_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry_i_2__1
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I1(PREPARE_TIMEOUT1_n_101),
        .O(PREPARE_TIMEOUT0__99_carry_i_2__1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry_i_3__1
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(PREPARE_TIMEOUT1_n_102),
        .O(PREPARE_TIMEOUT0__99_carry_i_3__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry_i_4__1
       (.I0(PREPARE_TIMEOUT1_n_100),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I3(PREPARE_TIMEOUT1_n_99),
        .O(PREPARE_TIMEOUT0__99_carry_i_4__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry_i_5__1
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I3(PREPARE_TIMEOUT1_n_100),
        .O(PREPARE_TIMEOUT0__99_carry_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__99_carry_i_6__1
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT1_n_101),
        .O(PREPARE_TIMEOUT0__99_carry_i_6__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__99_carry_i_7__1
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .O(PREPARE_TIMEOUT0__99_carry_i_7__1_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-13 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    PREPARE_TIMEOUT1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_PREPARE_TIMEOUT1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_PREPARE_TIMEOUT1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_PREPARE_TIMEOUT1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_PREPARE_TIMEOUT1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_PREPARE_TIMEOUT1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_PREPARE_TIMEOUT1_OVERFLOW_UNCONNECTED),
        .P({NLW_PREPARE_TIMEOUT1_P_UNCONNECTED[47:18],PREPARE_TIMEOUT1_n_88,PREPARE_TIMEOUT1_n_89,PREPARE_TIMEOUT1_n_90,PREPARE_TIMEOUT1_n_91,PREPARE_TIMEOUT1_n_92,PREPARE_TIMEOUT1_n_93,PREPARE_TIMEOUT1_n_94,PREPARE_TIMEOUT1_n_95,PREPARE_TIMEOUT1_n_96,PREPARE_TIMEOUT1_n_97,PREPARE_TIMEOUT1_n_98,PREPARE_TIMEOUT1_n_99,PREPARE_TIMEOUT1_n_100,PREPARE_TIMEOUT1_n_101,PREPARE_TIMEOUT1_n_102,PREPARE_TIMEOUT1_n_103,PREPARE_TIMEOUT1_n_104,PREPARE_TIMEOUT1_n_105}),
        .PATTERNBDETECT(NLW_PREPARE_TIMEOUT1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_PREPARE_TIMEOUT1_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_PREPARE_TIMEOUT1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_PREPARE_TIMEOUT1_UNDERFLOW_UNCONNECTED));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_37 dl_enable_sync_i
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl2_enable(dl2_enable),
        .dl_tx_sm_state125_out(dl_tx_sm_state125_out),
        .\dl_tx_sm_state_reg[0] (dl_enable_sync_i_n_2),
        .\dl_tx_sm_state_reg[2] (dl_enable_sync_i_n_0),
        .en_cal_hs_datapath_i(en_cal_hs_datapath_i),
        .en_cal_hs_datapath_reg(\dl_tx_sm_state_reg_n_0_[0] ),
        .en_cal_hs_datapath_reg_0(dl_txrequesths_sync_i_n_7),
        .en_cal_hs_datapath_reg_1(dl_txskewcalhs_sync_i_n_4),
        .out(dl_forcetxstopmode_sync_i_n_0),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i),
        .tx_dl_lp_dp_reg(dl_txrequesths_sync_i_n_6),
        .tx_dl_lp_dp_reg_0(\dl_tx_sm_state_reg_n_0_[2] ),
        .tx_dl_lp_dp_reg_1(esc_active_sync_i_n_1),
        .tx_dl_lp_dp_reg_2(dl_txskewcalhs_sync_i_n_7),
        .tx_dl_lp_dp_reg_3(tx_dl_lp_dp_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_38 dl_forcetxstopmode_sync_i
       (.core_clk(core_clk),
        .core_rst(core_rst),
        .dl2_forcetxstopmode(dl2_forcetxstopmode),
        .out(dl_forcetxstopmode_sync_i_n_0));
  LUT4 #(
    .INIT(16'h0F08)) 
    dl_status_bit_6_i_3__1
       (.I0(cl_init_done_coreclk_i),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .I2(\dl_tx_sm_state_reg_n_0_[1] ),
        .I3(out),
        .O(dl_status_bit_6_i_3__1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE dl_status_bit_6_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_6),
        .Q(out));
  LUT3 #(
    .INIT(8'hC8)) 
    dl_stopstate_coreclk_i_1__1
       (.I0(dl_stopstate_i),
        .I1(cl_init_done_coreclk_i),
        .I2(dl_stopstate_coreclk_reg),
        .O(dl_stopstate_reg_0));
  FDCE dl_stopstate_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_2),
        .Q(dl_stopstate_i));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dl_tx_sm_state[2]_i_11__1 
       (.I0(\dl_tx_sm_state_reg_n_0_[1] ),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .O(\dl_tx_sm_state[2]_i_11__1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \dl_tx_sm_state_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequestesc_sync_i_n_2),
        .Q(\dl_tx_sm_state_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \dl_tx_sm_state_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequesths_sync_i_n_2),
        .Q(\dl_tx_sm_state_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \dl_tx_sm_state_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequestesc_sync_i_n_1),
        .Q(\dl_tx_sm_state_reg_n_0_[2] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_39 dl_txrequestesc_sync_i
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl2_txrequestesc(dl2_txrequestesc),
        .dl_status_bit_6_reg(out),
        .dl_stopstate_i_2__1_0(timeout_hsexit_reg_1),
        .dl_tx_sm_state120_out(dl_tx_sm_state120_out),
        .dl_tx_sm_state125_out(dl_tx_sm_state125_out),
        .\dl_tx_sm_state_reg[0] (dl_txrequestesc_sync_i_n_2),
        .\dl_tx_sm_state_reg[0]_0 (dl_txrequestesc_sync_i_n_3),
        .\dl_tx_sm_state_reg[0]_1 (\dl_tx_sm_state_reg_n_0_[0] ),
        .\dl_tx_sm_state_reg[1] (dl_txrequestesc_sync_i_n_0),
        .\dl_tx_sm_state_reg[1]_0 (dl_txrequestesc_sync_i_n_5),
        .\dl_tx_sm_state_reg[1]_1 (dl_txrequestesc_sync_i_n_8),
        .\dl_tx_sm_state_reg[2] (dl_txrequestesc_sync_i_n_1),
        .\dl_tx_sm_state_reg[2]_0 (dl_txrequesths_sync_i_n_4),
        .\dl_tx_sm_state_reg[2]_1 (dl_txskewcalhs_sync_i_n_8),
        .\dl_tx_sm_state_reg[2]_2 (\dl_tx_sm_state_reg_n_0_[2] ),
        .\dl_tx_sm_state_reg[2]_3 (timeout_hsexit_reg_0),
        .en_hs_start_w__4(en_hs_start_w__4),
        .esc_active_sync_r(esc_active_sync_r),
        .esc_start_i(esc_start_i),
        .esc_start_reg(\dl_tx_sm_state_reg_n_0_[1] ),
        .out(esc_active_sync),
        .p_0_in23_out(p_0_in23_out),
        .p_21_in(p_21_in),
        .s_level_out_d3_reg_0(dl_txrequestesc_sync_i_n_6),
        .s_level_out_d3_reg_1(dl_txrequestesc_sync_i_n_7),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_prepare(timeout_prepare));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_40 dl_txrequesths_sync_i
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_tx_sm_state120_out(dl_tx_sm_state120_out),
        .dl_tx_sm_state125_out(dl_tx_sm_state125_out),
        .\dl_tx_sm_state[1]_i_4__1 (\dl_tx_sm_state[1]_i_4__1 ),
        .\dl_tx_sm_state[1]_i_4__1_0 (timeout_hsexit_reg_1),
        .\dl_tx_sm_state[2]_i_3__1_0 (lp_01_r_reg_n_0),
        .\dl_tx_sm_state_reg[0] (dl_txrequesths_sync_i_n_2),
        .\dl_tx_sm_state_reg[1] (\dl_tx_sm_state_reg_n_0_[0] ),
        .\dl_tx_sm_state_reg[1]_0 (\dl_tx_sm_state_reg_n_0_[2] ),
        .\dl_tx_sm_state_reg[1]_1 (dl_txskewcalhs_sync_i_n_8),
        .\dl_tx_sm_state_reg[1]_2 (\dl_tx_sm_state_reg_n_0_[1] ),
        .\dl_tx_sm_state_reg[2] (dl_txrequesths_sync_i_n_4),
        .\dl_tx_sm_state_reg[2]_0 (dl_txrequesths_sync_i_n_7),
        .dl_txrequesths_r(dl_txrequesths_r),
        .en_cal_hs_datapath_reg(dl_txskewcalhs_sync_i_n_0),
        .\en_cl_init_to_blk.init_done_reg (dl_txrequesths_sync_i_n_6),
        .en_hs_start_w__4(en_hs_start_w__4),
        .en_lp_01_cnt__4(en_lp_01_cnt__4),
        .out(dl_txrequesths_sync),
        .p_0_in23_out(p_0_in23_out),
        .timeout_prepare(timeout_prepare),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dn_reg(dl_txrequesths_sync_i_n_1),
        .tx_dl_lp_dn_reg_0(tx_dl_lp_dn_i_2__3_n_0),
        .tx_dl_lp_dn_reg_1(esc_active_sync_i_n_1),
        .tx_dl_lp_dn_reg_2(dl_txskewcalhs_sync_i_n_7),
        .tx_dl_lp_dn_reg_3(dl_txrequestesc_sync_i_n_6));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_41 dl_txskewcalhs_sync_i
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_status_bit_6_reg(dl_status_bit_6_i_3__1_n_0),
        .dl_status_bit_6_reg_0(dl_txrequestesc_sync_i_n_8),
        .dl_status_bit_6_reg_1(out),
        .dl_status_bit_6_reg_2(dl_txrequestesc_sync_i_n_6),
        .dl_stopstate_i(dl_stopstate_i),
        .dl_stopstate_reg(dl_txrequestesc_sync_i_n_5),
        .dl_stopstate_reg_0(\dl_tx_sm_state_reg_n_0_[2] ),
        .dl_stopstate_reg_1(esc_active_sync_i_n_2),
        .dl_tx_sm_state125_out(dl_tx_sm_state125_out),
        .\dl_tx_sm_state_reg[0] (dl_txskewcalhs_sync_i_n_3),
        .\dl_tx_sm_state_reg[1] (dl_txskewcalhs_sync_i_n_4),
        .\dl_tx_sm_state_reg[1]_0 (\dl_tx_sm_state[2]_i_11__1_n_0 ),
        .\dl_tx_sm_state_reg[2] (dl_txskewcalhs_sync_i_n_2),
        .\dl_tx_sm_state_reg[2]_0 (dl_txskewcalhs_sync_i_n_6),
        .\dl_tx_sm_state_reg[2]_1 (dl_txskewcalhs_sync_i_n_7),
        .\dl_tx_sm_state_reg[2]_2 (dl_txskewcalhs_sync_i_n_8),
        .en_hs_datapath_reg(\dl_tx_sm_state_reg_n_0_[0] ),
        .en_hs_datapath_reg_0(en_hs_datapath_reg_0),
        .en_hs_datapath_reg_1(tx_dl_lp_dn_reg_0),
        .en_hs_datapath_reg_2(dl_txrequesths_sync),
        .en_hs_start_w__4(en_hs_start_w__4),
        .en_lp_01_cnt__4(en_lp_01_cnt__4),
        .en_lp_01_cnt_reg(dl_txskewcalhs_sync_i_n_1),
        .en_lp_01_cnt_reg_0(en_lp_01_cnt_reg_n_0),
        .en_lp_01_cnt_reg_1(lp_01_r_reg_n_0),
        .en_lp_01_cnt_reg_2(\dl_tx_sm_state_reg_n_0_[1] ),
        .out(dl_txskewcalhs_sync_i_n_0),
        .p_21_in(p_21_in),
        .timeout_prepare(timeout_prepare),
        .tx_dl_lp_dn_reg(tx_dl_lp_dp_i_5__3_n_0),
        .tx_dl_lp_dn_reg_0(dl_txrequestesc_sync_i_n_7));
  FDCE en_cal_hs_datapath_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_2),
        .Q(en_cal_hs_datapath_i));
  FDCE en_hs_datapath_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_3),
        .Q(en_hs_datapath_reg_0));
  FDCE en_lp_01_cnt_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_1),
        .Q(en_lp_01_cnt_reg_n_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_42 esc_active_sync_i
       (.core_clk(core_clk),
        .core_rst(core_rst),
        .dl_stopstate_i_4__1(dl_txrequestesc_sync_i_n_3),
        .\dl_tx_sm_state_reg[0] (esc_active_sync_i_n_1),
        .esc_active_sync_r(esc_active_sync_r),
        .out(esc_active_sync),
        .s_level_out_d1_cdc_to_reg_0(s_level_out_d1_cdc_to_reg),
        .s_level_out_d3_reg_0(esc_active_sync_i_n_2),
        .timeout_hsexit_all(timeout_hsexit_all),
        .tx_dl_lp_dn_reg(tx_dl_lp_dn_reg_0),
        .tx_dl_lp_dn_reg_0(\dl_tx_sm_state_reg_n_0_[0] ),
        .tx_dl_lp_dn_reg_1(\dl_tx_sm_state_reg_n_0_[1] ),
        .tx_dl_lp_dn_reg_2(\dl_tx_sm_state_reg_n_0_[2] ));
  FDCE esc_active_sync_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(esc_active_sync),
        .Q(esc_active_sync_r));
  FDCE esc_start_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequestesc_sync_i_n_0),
        .Q(esc_start_i));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \hsexit_count[0]_i_1__1 
       (.I0(\dl_tx_sm_state_reg_n_0_[2] ),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .I2(\dl_tx_sm_state_reg_n_0_[1] ),
        .I3(timeout_hsexit_reg_1),
        .O(\hsexit_count[0]_i_1__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hsexit_count[0]_i_2__1 
       (.I0(timeout_hsexit0_carry__0_n_1),
        .O(\hsexit_count[0]_i_2__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hsexit_count[0]_i_4__1 
       (.I0(hsexit_count_reg[0]),
        .O(\hsexit_count[0]_i_4__1_n_0 ));
  FDRE \hsexit_count_reg[0] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__1_n_0 ),
        .D(\hsexit_count_reg[0]_i_3__1_n_7 ),
        .Q(hsexit_count_reg[0]),
        .R(\hsexit_count[0]_i_1__1_n_0 ));
  CARRY4 \hsexit_count_reg[0]_i_3__1 
       (.CI(1'b0),
        .CO({\hsexit_count_reg[0]_i_3__1_n_0 ,\hsexit_count_reg[0]_i_3__1_n_1 ,\hsexit_count_reg[0]_i_3__1_n_2 ,\hsexit_count_reg[0]_i_3__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\hsexit_count_reg[0]_i_3__1_n_4 ,\hsexit_count_reg[0]_i_3__1_n_5 ,\hsexit_count_reg[0]_i_3__1_n_6 ,\hsexit_count_reg[0]_i_3__1_n_7 }),
        .S({hsexit_count_reg[3:1],\hsexit_count[0]_i_4__1_n_0 }));
  FDRE \hsexit_count_reg[10] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__1_n_0 ),
        .D(\hsexit_count_reg[8]_i_1__1_n_5 ),
        .Q(hsexit_count_reg[10]),
        .R(\hsexit_count[0]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[11] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__1_n_0 ),
        .D(\hsexit_count_reg[8]_i_1__1_n_4 ),
        .Q(hsexit_count_reg[11]),
        .R(\hsexit_count[0]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[12] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__1_n_0 ),
        .D(\hsexit_count_reg[12]_i_1__1_n_7 ),
        .Q(hsexit_count_reg[12]),
        .R(\hsexit_count[0]_i_1__1_n_0 ));
  CARRY4 \hsexit_count_reg[12]_i_1__1 
       (.CI(\hsexit_count_reg[8]_i_1__1_n_0 ),
        .CO(\NLW_hsexit_count_reg[12]_i_1__1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_hsexit_count_reg[12]_i_1__1_O_UNCONNECTED [3:1],\hsexit_count_reg[12]_i_1__1_n_7 }),
        .S({1'b0,1'b0,1'b0,hsexit_count_reg[12]}));
  FDRE \hsexit_count_reg[1] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__1_n_0 ),
        .D(\hsexit_count_reg[0]_i_3__1_n_6 ),
        .Q(hsexit_count_reg[1]),
        .R(\hsexit_count[0]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[2] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__1_n_0 ),
        .D(\hsexit_count_reg[0]_i_3__1_n_5 ),
        .Q(hsexit_count_reg[2]),
        .R(\hsexit_count[0]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[3] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__1_n_0 ),
        .D(\hsexit_count_reg[0]_i_3__1_n_4 ),
        .Q(hsexit_count_reg[3]),
        .R(\hsexit_count[0]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[4] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__1_n_0 ),
        .D(\hsexit_count_reg[4]_i_1__1_n_7 ),
        .Q(hsexit_count_reg[4]),
        .R(\hsexit_count[0]_i_1__1_n_0 ));
  CARRY4 \hsexit_count_reg[4]_i_1__1 
       (.CI(\hsexit_count_reg[0]_i_3__1_n_0 ),
        .CO({\hsexit_count_reg[4]_i_1__1_n_0 ,\hsexit_count_reg[4]_i_1__1_n_1 ,\hsexit_count_reg[4]_i_1__1_n_2 ,\hsexit_count_reg[4]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\hsexit_count_reg[4]_i_1__1_n_4 ,\hsexit_count_reg[4]_i_1__1_n_5 ,\hsexit_count_reg[4]_i_1__1_n_6 ,\hsexit_count_reg[4]_i_1__1_n_7 }),
        .S(hsexit_count_reg[7:4]));
  FDRE \hsexit_count_reg[5] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__1_n_0 ),
        .D(\hsexit_count_reg[4]_i_1__1_n_6 ),
        .Q(hsexit_count_reg[5]),
        .R(\hsexit_count[0]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[6] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__1_n_0 ),
        .D(\hsexit_count_reg[4]_i_1__1_n_5 ),
        .Q(hsexit_count_reg[6]),
        .R(\hsexit_count[0]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[7] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__1_n_0 ),
        .D(\hsexit_count_reg[4]_i_1__1_n_4 ),
        .Q(hsexit_count_reg[7]),
        .R(\hsexit_count[0]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[8] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__1_n_0 ),
        .D(\hsexit_count_reg[8]_i_1__1_n_7 ),
        .Q(hsexit_count_reg[8]),
        .R(\hsexit_count[0]_i_1__1_n_0 ));
  CARRY4 \hsexit_count_reg[8]_i_1__1 
       (.CI(\hsexit_count_reg[4]_i_1__1_n_0 ),
        .CO({\hsexit_count_reg[8]_i_1__1_n_0 ,\hsexit_count_reg[8]_i_1__1_n_1 ,\hsexit_count_reg[8]_i_1__1_n_2 ,\hsexit_count_reg[8]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\hsexit_count_reg[8]_i_1__1_n_4 ,\hsexit_count_reg[8]_i_1__1_n_5 ,\hsexit_count_reg[8]_i_1__1_n_6 ,\hsexit_count_reg[8]_i_1__1_n_7 }),
        .S(hsexit_count_reg[11:8]));
  FDRE \hsexit_count_reg[9] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__1_n_0 ),
        .D(\hsexit_count_reg[8]_i_1__1_n_6 ),
        .Q(hsexit_count_reg[9]),
        .R(\hsexit_count[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'h04)) 
    lp_01_r_i_1__2
       (.I0(\lp_st01_cnt_reg_n_0_[1] ),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .I2(\lp_st01_cnt[1]_i_2__2_n_0 ),
        .O(lp_01_r));
  FDCE lp_01_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_01_r),
        .Q(lp_01_r_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \lp_st01_cnt[0]_i_1__2 
       (.I0(en_lp_01_cnt_reg_n_0),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT4 #(
    .INIT(16'h20C0)) 
    \lp_st01_cnt[1]_i_1__2 
       (.I0(\lp_st01_cnt[1]_i_2__2_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    \lp_st01_cnt[1]_i_2__2 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .I3(\lp_st01_cnt_reg_n_0_[5] ),
        .I4(\lp_st01_cnt_reg_n_0_[6] ),
        .O(\lp_st01_cnt[1]_i_2__2_n_0 ));
  LUT4 #(
    .INIT(16'h7080)) 
    \lp_st01_cnt[2]_i_1__2 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[2] ),
        .O(lp_st01_cnt[2]));
  LUT6 #(
    .INIT(64'h76FF000088000000)) 
    \lp_st01_cnt[3]_i_1__2 
       (.I0(\lp_st01_cnt_reg_n_0_[2] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt[3]_i_2__2_n_0 ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[3] ),
        .O(lp_st01_cnt[3]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \lp_st01_cnt[3]_i_2__2 
       (.I0(\lp_st01_cnt_reg_n_0_[6] ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[3]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \lp_st01_cnt[4]_i_1__2 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[1] ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[4] ),
        .O(lp_st01_cnt[4]));
  LUT6 #(
    .INIT(64'hBFFF000040000000)) 
    \lp_st01_cnt[5]_i_1__2 
       (.I0(\lp_st01_cnt[5]_i_2__2_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[3] ),
        .I3(\lp_st01_cnt_reg_n_0_[4] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[5] ),
        .O(lp_st01_cnt[5]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \lp_st01_cnt[5]_i_2__2 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .O(\lp_st01_cnt[5]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT4 #(
    .INIT(16'hB040)) 
    \lp_st01_cnt[6]_i_1__2 
       (.I0(\lp_st01_cnt[6]_i_2__2_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[6] ),
        .O(lp_st01_cnt[6]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \lp_st01_cnt[6]_i_2__2 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt_reg_n_0_[2] ),
        .I3(\lp_st01_cnt_reg_n_0_[3] ),
        .I4(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[6]_i_2__2_n_0 ));
  FDCE \lp_st01_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[0]),
        .Q(\lp_st01_cnt_reg_n_0_[0] ));
  FDCE \lp_st01_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[1]),
        .Q(\lp_st01_cnt_reg_n_0_[1] ));
  FDCE \lp_st01_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[2]),
        .Q(\lp_st01_cnt_reg_n_0_[2] ));
  FDCE \lp_st01_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[3]),
        .Q(\lp_st01_cnt_reg_n_0_[3] ));
  FDCE \lp_st01_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[4]),
        .Q(\lp_st01_cnt_reg_n_0_[4] ));
  FDCE \lp_st01_cnt_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[5]),
        .Q(\lp_st01_cnt_reg_n_0_[5] ));
  FDCE \lp_st01_cnt_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[6]),
        .Q(\lp_st01_cnt_reg_n_0_[6] ));
  LUT1 #(
    .INIT(2'h1)) 
    \prepare_count[0]_i_1__1 
       (.I0(prepare_count_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \prepare_count[1]_i_1__1 
       (.I0(prepare_count_reg[0]),
        .I1(prepare_count_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \prepare_count[2]_i_1__1 
       (.I0(prepare_count_reg[0]),
        .I1(prepare_count_reg[1]),
        .I2(prepare_count_reg[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \prepare_count[3]_i_1__1 
       (.I0(prepare_count_reg[1]),
        .I1(prepare_count_reg[0]),
        .I2(prepare_count_reg[2]),
        .I3(prepare_count_reg[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \prepare_count[4]_i_1__1 
       (.I0(prepare_count_reg[2]),
        .I1(prepare_count_reg[0]),
        .I2(prepare_count_reg[1]),
        .I3(prepare_count_reg[3]),
        .I4(prepare_count_reg[4]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \prepare_count[5]_i_1__1 
       (.I0(prepare_count_reg[3]),
        .I1(prepare_count_reg[1]),
        .I2(prepare_count_reg[0]),
        .I3(prepare_count_reg[2]),
        .I4(prepare_count_reg[4]),
        .I5(prepare_count_reg[5]),
        .O(p_0_in__0[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \prepare_count[6]_i_1__1 
       (.I0(\prepare_count[8]_i_4__1_n_0 ),
        .I1(prepare_count_reg[6]),
        .O(p_0_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \prepare_count[7]_i_1__1 
       (.I0(\prepare_count[8]_i_4__1_n_0 ),
        .I1(prepare_count_reg[6]),
        .I2(prepare_count_reg[7]),
        .O(p_0_in__0[7]));
  LUT3 #(
    .INIT(8'hEF)) 
    \prepare_count[8]_i_1__1 
       (.I0(\dl_tx_sm_state_reg_n_0_[0] ),
        .I1(\dl_tx_sm_state_reg_n_0_[1] ),
        .I2(\dl_tx_sm_state_reg_n_0_[2] ),
        .O(prepare_count));
  LUT1 #(
    .INIT(2'h1)) 
    \prepare_count[8]_i_2__1 
       (.I0(timeout_prepare0_carry__0_n_3),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \prepare_count[8]_i_3__1 
       (.I0(prepare_count_reg[6]),
        .I1(\prepare_count[8]_i_4__1_n_0 ),
        .I2(prepare_count_reg[7]),
        .I3(prepare_count_reg[8]),
        .O(p_0_in__0[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \prepare_count[8]_i_4__1 
       (.I0(prepare_count_reg[5]),
        .I1(prepare_count_reg[3]),
        .I2(prepare_count_reg[1]),
        .I3(prepare_count_reg[0]),
        .I4(prepare_count_reg[2]),
        .I5(prepare_count_reg[4]),
        .O(\prepare_count[8]_i_4__1_n_0 ));
  FDRE \prepare_count_reg[0] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[0]),
        .Q(prepare_count_reg[0]),
        .R(prepare_count));
  FDRE \prepare_count_reg[1] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[1]),
        .Q(prepare_count_reg[1]),
        .R(prepare_count));
  FDRE \prepare_count_reg[2] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[2]),
        .Q(prepare_count_reg[2]),
        .R(prepare_count));
  FDRE \prepare_count_reg[3] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[3]),
        .Q(prepare_count_reg[3]),
        .R(prepare_count));
  FDRE \prepare_count_reg[4] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[4]),
        .Q(prepare_count_reg[4]),
        .R(prepare_count));
  FDRE \prepare_count_reg[5] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[5]),
        .Q(prepare_count_reg[5]),
        .R(prepare_count));
  FDRE \prepare_count_reg[6] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[6]),
        .Q(prepare_count_reg[6]),
        .R(prepare_count));
  FDRE \prepare_count_reg[7] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[7]),
        .Q(prepare_count_reg[7]),
        .R(prepare_count));
  FDRE \prepare_count_reg[8] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[8]),
        .Q(prepare_count_reg[8]),
        .R(prepare_count));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_43 timeout_hs_tx_sync_i
       (.core_clk(core_clk),
        .core_rst(core_rst));
  CARRY4 timeout_hsexit0_carry
       (.CI(1'b0),
        .CO({timeout_hsexit0_carry_n_0,timeout_hsexit0_carry_n_1,timeout_hsexit0_carry_n_2,timeout_hsexit0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({timeout_hsexit0_carry_i_1__1_n_0,hsexit_count_reg[5],timeout_hsexit0_carry_i_2__1_n_0,timeout_hsexit0_carry_i_3__1_n_0}),
        .O(NLW_timeout_hsexit0_carry_O_UNCONNECTED[3:0]),
        .S({timeout_hsexit0_carry_i_4__1_n_0,timeout_hsexit0_carry_i_5__1_n_0,timeout_hsexit0_carry_i_6__1_n_0,timeout_hsexit0_carry_i_7__1_n_0}));
  CARRY4 timeout_hsexit0_carry__0
       (.CI(timeout_hsexit0_carry_n_0),
        .CO({NLW_timeout_hsexit0_carry__0_CO_UNCONNECTED[3],timeout_hsexit0_carry__0_n_1,timeout_hsexit0_carry__0_n_2,timeout_hsexit0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,hsexit_count_reg[12],timeout_hsexit0_carry__0_i_1__1_n_0,timeout_hsexit0_carry__0_i_2__1_n_0}),
        .O(NLW_timeout_hsexit0_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,timeout_hsexit0_carry__0_i_3__1_n_0,timeout_hsexit0_carry__0_i_4__1_n_0,timeout_hsexit0_carry__0_i_5__1_n_0}));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_hsexit0_carry__0_i_1__1
       (.I0(hsexit_count_reg[10]),
        .I1(hsexit_count_reg[11]),
        .O(timeout_hsexit0_carry__0_i_1__1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_hsexit0_carry__0_i_2__1
       (.I0(hsexit_count_reg[8]),
        .I1(hsexit_count_reg[9]),
        .O(timeout_hsexit0_carry__0_i_2__1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    timeout_hsexit0_carry__0_i_3__1
       (.I0(hsexit_count_reg[12]),
        .O(timeout_hsexit0_carry__0_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_hsexit0_carry__0_i_4__1
       (.I0(hsexit_count_reg[11]),
        .I1(hsexit_count_reg[10]),
        .O(timeout_hsexit0_carry__0_i_4__1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_hsexit0_carry__0_i_5__1
       (.I0(hsexit_count_reg[9]),
        .I1(hsexit_count_reg[8]),
        .O(timeout_hsexit0_carry__0_i_5__1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_hsexit0_carry_i_1__1
       (.I0(hsexit_count_reg[6]),
        .I1(hsexit_count_reg[7]),
        .O(timeout_hsexit0_carry_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    timeout_hsexit0_carry_i_2__1
       (.I0(hsexit_count_reg[2]),
        .I1(hsexit_count_reg[3]),
        .O(timeout_hsexit0_carry_i_2__1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_hsexit0_carry_i_3__1
       (.I0(hsexit_count_reg[0]),
        .I1(hsexit_count_reg[1]),
        .O(timeout_hsexit0_carry_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_hsexit0_carry_i_4__1
       (.I0(hsexit_count_reg[7]),
        .I1(hsexit_count_reg[6]),
        .O(timeout_hsexit0_carry_i_4__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    timeout_hsexit0_carry_i_5__1
       (.I0(hsexit_count_reg[4]),
        .I1(hsexit_count_reg[5]),
        .O(timeout_hsexit0_carry_i_5__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    timeout_hsexit0_carry_i_6__1
       (.I0(hsexit_count_reg[3]),
        .I1(hsexit_count_reg[2]),
        .O(timeout_hsexit0_carry_i_6__1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_hsexit0_carry_i_7__1
       (.I0(hsexit_count_reg[1]),
        .I1(hsexit_count_reg[0]),
        .O(timeout_hsexit0_carry_i_7__1_n_0));
  LUT6 #(
    .INIT(64'h55F5555555D55555)) 
    timeout_hsexit_i_1__1
       (.I0(timeout_hsexit_reg_1),
        .I1(timeout_hsexit_reg_0),
        .I2(\dl_tx_sm_state_reg_n_0_[1] ),
        .I3(\dl_tx_sm_state_reg_n_0_[0] ),
        .I4(\dl_tx_sm_state_reg_n_0_[2] ),
        .I5(timeout_hsexit0_carry__0_n_1),
        .O(timeout_hsexit_i_1__1_n_0));
  FDRE timeout_hsexit_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(timeout_hsexit_i_1__1_n_0),
        .Q(timeout_hsexit_reg_0),
        .R(1'b0));
  CARRY4 timeout_prepare0_carry
       (.CI(1'b0),
        .CO({timeout_prepare0_carry_n_0,timeout_prepare0_carry_n_1,timeout_prepare0_carry_n_2,timeout_prepare0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({timeout_prepare0_carry_i_1__1_n_0,timeout_prepare0_carry_i_2__1_n_0,timeout_prepare0_carry_i_3__1_n_0,timeout_prepare0_carry_i_4__1_n_0}),
        .O(NLW_timeout_prepare0_carry_O_UNCONNECTED[3:0]),
        .S({timeout_prepare0_carry_i_5__1_n_0,timeout_prepare0_carry_i_6__1_n_0,timeout_prepare0_carry_i_7__1_n_0,timeout_prepare0_carry_i_8__1_n_0}));
  CARRY4 timeout_prepare0_carry__0
       (.CI(timeout_prepare0_carry_n_0),
        .CO({NLW_timeout_prepare0_carry__0_CO_UNCONNECTED[3:1],timeout_prepare0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,prepare_count_reg[8]}),
        .O(NLW_timeout_prepare0_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,timeout_prepare0_carry__0_i_1__1_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    timeout_prepare0_carry__0_i_1__1
       (.I0(prepare_count_reg[8]),
        .O(timeout_prepare0_carry__0_i_1__1_n_0));
  LUT6 #(
    .INIT(64'h555599A9AAAAAAAA)) 
    timeout_prepare0_carry_i_10__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__99_carry__2_n_1),
        .I2(PREPARE_TIMEOUT0__71_carry__1_n_6),
        .I3(PREPARE_TIMEOUT1_n_88),
        .I4(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I5(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(timeout_prepare0_carry_i_10__1_n_0));
  LUT5 #(
    .INIT(32'h55555A9A)) 
    timeout_prepare0_carry_i_11__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(timeout_prepare0_carry_i_12__1_n_0),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(timeout_prepare0_carry_i_11__1_n_0));
  LUT3 #(
    .INIT(8'hF4)) 
    timeout_prepare0_carry_i_12__1
       (.I0(PREPARE_TIMEOUT1_n_88),
        .I1(PREPARE_TIMEOUT0__71_carry__1_n_6),
        .I2(PREPARE_TIMEOUT0__99_carry__2_n_1),
        .O(timeout_prepare0_carry_i_12__1_n_0));
  LUT6 #(
    .INIT(64'hA999AA9956665566)) 
    timeout_prepare0_carry_i_13__1
       (.I0(prepare_count_reg[3]),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I4(timeout_prepare0_carry_i_12__1_n_0),
        .I5(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(timeout_prepare0_carry_i_13__1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_prepare0_carry_i_1__1
       (.I0(prepare_count_reg[6]),
        .I1(prepare_count_reg[7]),
        .O(timeout_prepare0_carry_i_1__1_n_0));
  LUT3 #(
    .INIT(8'hF8)) 
    timeout_prepare0_carry_i_2__1
       (.I0(prepare_count_reg[4]),
        .I1(timeout_prepare0_carry_i_9__1_n_0),
        .I2(prepare_count_reg[5]),
        .O(timeout_prepare0_carry_i_2__1_n_0));
  LUT4 #(
    .INIT(16'hF880)) 
    timeout_prepare0_carry_i_3__1
       (.I0(timeout_prepare0_carry_i_10__1_n_0),
        .I1(prepare_count_reg[2]),
        .I2(prepare_count_reg[3]),
        .I3(timeout_prepare0_carry_i_11__1_n_0),
        .O(timeout_prepare0_carry_i_3__1_n_0));
  LUT5 #(
    .INIT(32'hEC3E8008)) 
    timeout_prepare0_carry_i_4__1
       (.I0(prepare_count_reg[0]),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I2(timeout_prepare0_carry_i_12__1_n_0),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(prepare_count_reg[1]),
        .O(timeout_prepare0_carry_i_4__1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_prepare0_carry_i_5__1
       (.I0(prepare_count_reg[7]),
        .I1(prepare_count_reg[6]),
        .O(timeout_prepare0_carry_i_5__1_n_0));
  LUT3 #(
    .INIT(8'h06)) 
    timeout_prepare0_carry_i_6__1
       (.I0(timeout_prepare0_carry_i_9__1_n_0),
        .I1(prepare_count_reg[4]),
        .I2(prepare_count_reg[5]),
        .O(timeout_prepare0_carry_i_6__1_n_0));
  LUT6 #(
    .INIT(64'h8222828228882828)) 
    timeout_prepare0_carry_i_7__1
       (.I0(timeout_prepare0_carry_i_13__1_n_0),
        .I1(prepare_count_reg[2]),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(timeout_prepare0_carry_i_12__1_n_0),
        .I5(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(timeout_prepare0_carry_i_7__1_n_0));
  LUT5 #(
    .INIT(32'h42240990)) 
    timeout_prepare0_carry_i_8__1
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(timeout_prepare0_carry_i_12__1_n_0),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(prepare_count_reg[1]),
        .I4(prepare_count_reg[0]),
        .O(timeout_prepare0_carry_i_8__1_n_0));
  LUT6 #(
    .INIT(64'h5555555555595A5A)) 
    timeout_prepare0_carry_i_9__1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(timeout_prepare0_carry_i_12__1_n_0),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I5(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(timeout_prepare0_carry_i_9__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT5 #(
    .INIT(32'h03000200)) 
    timeout_prepare_i_1__1
       (.I0(timeout_prepare0_carry__0_n_3),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .I2(\dl_tx_sm_state_reg_n_0_[1] ),
        .I3(\dl_tx_sm_state_reg_n_0_[2] ),
        .I4(timeout_prepare),
        .O(timeout_prepare_i_1__1_n_0));
  FDRE timeout_prepare_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(timeout_prepare_i_1__1_n_0),
        .Q(timeout_prepare),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT4 #(
    .INIT(16'h1101)) 
    tx_dl_lp_dn_i_2__3
       (.I0(\dl_tx_sm_state_reg_n_0_[1] ),
        .I1(\dl_tx_sm_state_reg_n_0_[2] ),
        .I2(\dl_tx_sm_state_reg_n_0_[0] ),
        .I3(cl_init_done_coreclk_i),
        .O(tx_dl_lp_dn_i_2__3_n_0));
  FDPE tx_dl_lp_dn_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_txrequesths_sync_i_n_1),
        .PRE(core_rst),
        .Q(tx_dl_lp_dn_hs_i));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'h40)) 
    tx_dl_lp_dp_i_5__3
       (.I0(\dl_tx_sm_state_reg_n_0_[1] ),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .I2(tx_dl_lp_dn_reg_0),
        .O(tx_dl_lp_dp_i_5__3_n_0));
  FDPE tx_dl_lp_dp_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_enable_sync_i_n_0),
        .PRE(core_rst),
        .Q(tx_dl_lp_dp_hs_i));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_data_lane_sm" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_data_lane_sm_52
   (out,
    dl_status_reg,
    en_cal_hs_datapath_i,
    esc_start_i,
    tx_dl_lp_dp_hs_i,
    tx_dl_lp_dn_hs_i,
    timeout_hsexit_all,
    dl_stopstate_reg_0,
    core_rst,
    dl1_enable,
    core_clk,
    dl_txrequesths_r,
    dl1_txrequestesc,
    dl1_forcetxstopmode,
    s_level_out_d1_cdc_to_reg,
    dl_status_bit_6_i_6,
    cl_init_done_coreclk_i,
    timeout_hsexit_reg_0,
    \dl_tx_sm_state[1]_i_4__0 ,
    cl_txclkactivehs_i,
    dl_tx_sm_state0__0,
    tx_dl_lp_dp_reg_0,
    dl_stopstate_coreclk_reg);
  output out;
  output [0:0]dl_status_reg;
  output en_cal_hs_datapath_i;
  output esc_start_i;
  output tx_dl_lp_dp_hs_i;
  output tx_dl_lp_dn_hs_i;
  output timeout_hsexit_all;
  output dl_stopstate_reg_0;
  input core_rst;
  input dl1_enable;
  input core_clk;
  input dl_txrequesths_r;
  input dl1_txrequestesc;
  input dl1_forcetxstopmode;
  input s_level_out_d1_cdc_to_reg;
  input [2:0]dl_status_bit_6_i_6;
  input cl_init_done_coreclk_i;
  input timeout_hsexit_reg_0;
  input \dl_tx_sm_state[1]_i_4__0 ;
  input cl_txclkactivehs_i;
  input dl_tx_sm_state0__0;
  input tx_dl_lp_dp_reg_0;
  input dl_stopstate_coreclk_reg;

  wire PREPARE_TIMEOUT0__0_carry__0_i_1__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_2__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_3__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_4__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_5__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_6__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_7__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_8__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_n_1;
  wire PREPARE_TIMEOUT0__0_carry__0_n_2;
  wire PREPARE_TIMEOUT0__0_carry__0_n_3;
  wire PREPARE_TIMEOUT0__0_carry__1_i_1__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_2__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_3__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_4__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_5__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_6__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_7__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_8__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_n_1;
  wire PREPARE_TIMEOUT0__0_carry__1_n_2;
  wire PREPARE_TIMEOUT0__0_carry__1_n_3;
  wire PREPARE_TIMEOUT0__0_carry__2_i_1__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_2__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_3__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_4__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_5__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_6__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_7__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_8__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_n_1;
  wire PREPARE_TIMEOUT0__0_carry__2_n_2;
  wire PREPARE_TIMEOUT0__0_carry__2_n_3;
  wire PREPARE_TIMEOUT0__0_carry__2_n_4;
  wire PREPARE_TIMEOUT0__0_carry__2_n_5;
  wire PREPARE_TIMEOUT0__0_carry__3_i_1__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_2__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_3__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_4__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_5__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_6__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_7__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_n_1;
  wire PREPARE_TIMEOUT0__0_carry__3_n_2;
  wire PREPARE_TIMEOUT0__0_carry__3_n_3;
  wire PREPARE_TIMEOUT0__0_carry__3_n_4;
  wire PREPARE_TIMEOUT0__0_carry__3_n_5;
  wire PREPARE_TIMEOUT0__0_carry__3_n_6;
  wire PREPARE_TIMEOUT0__0_carry__3_n_7;
  wire PREPARE_TIMEOUT0__0_carry_i_1__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_2__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_3__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_4__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_5__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_6__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_7__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry_n_0;
  wire PREPARE_TIMEOUT0__0_carry_n_1;
  wire PREPARE_TIMEOUT0__0_carry_n_2;
  wire PREPARE_TIMEOUT0__0_carry_n_3;
  wire PREPARE_TIMEOUT0__44_carry__0_i_1__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_2__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_3__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_4__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_5__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_6__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_7__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_n_1;
  wire PREPARE_TIMEOUT0__44_carry__0_n_2;
  wire PREPARE_TIMEOUT0__44_carry__0_n_3;
  wire PREPARE_TIMEOUT0__44_carry__0_n_4;
  wire PREPARE_TIMEOUT0__44_carry__0_n_5;
  wire PREPARE_TIMEOUT0__44_carry__0_n_6;
  wire PREPARE_TIMEOUT0__44_carry__0_n_7;
  wire PREPARE_TIMEOUT0__44_carry__1_i_1__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry__1_n_2;
  wire PREPARE_TIMEOUT0__44_carry__1_n_7;
  wire PREPARE_TIMEOUT0__44_carry_i_1__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_2__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_3__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_4__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_5__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_6__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_7__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry_n_0;
  wire PREPARE_TIMEOUT0__44_carry_n_1;
  wire PREPARE_TIMEOUT0__44_carry_n_2;
  wire PREPARE_TIMEOUT0__44_carry_n_3;
  wire PREPARE_TIMEOUT0__44_carry_n_4;
  wire PREPARE_TIMEOUT0__44_carry_n_5;
  wire PREPARE_TIMEOUT0__44_carry_n_6;
  wire PREPARE_TIMEOUT0__44_carry_n_7;
  wire PREPARE_TIMEOUT0__71_carry__0_i_1__0_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_2__0_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_3__0_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_4__0_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_5__0_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_6__0_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_7__0_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_n_1;
  wire PREPARE_TIMEOUT0__71_carry__0_n_2;
  wire PREPARE_TIMEOUT0__71_carry__0_n_3;
  wire PREPARE_TIMEOUT0__71_carry__0_n_4;
  wire PREPARE_TIMEOUT0__71_carry__0_n_5;
  wire PREPARE_TIMEOUT0__71_carry__0_n_6;
  wire PREPARE_TIMEOUT0__71_carry__0_n_7;
  wire PREPARE_TIMEOUT0__71_carry__1_i_1__0_n_0;
  wire PREPARE_TIMEOUT0__71_carry__1_i_2__0_n_0;
  wire PREPARE_TIMEOUT0__71_carry__1_i_3__0_n_0;
  wire PREPARE_TIMEOUT0__71_carry__1_n_3;
  wire PREPARE_TIMEOUT0__71_carry__1_n_6;
  wire PREPARE_TIMEOUT0__71_carry__1_n_7;
  wire PREPARE_TIMEOUT0__71_carry_i_1__0_n_0;
  wire PREPARE_TIMEOUT0__71_carry_i_2__0_n_0;
  wire PREPARE_TIMEOUT0__71_carry_i_3__0_n_0;
  wire PREPARE_TIMEOUT0__71_carry_n_0;
  wire PREPARE_TIMEOUT0__71_carry_n_1;
  wire PREPARE_TIMEOUT0__71_carry_n_2;
  wire PREPARE_TIMEOUT0__71_carry_n_3;
  wire PREPARE_TIMEOUT0__71_carry_n_4;
  wire PREPARE_TIMEOUT0__71_carry_n_5;
  wire PREPARE_TIMEOUT0__71_carry_n_6;
  wire PREPARE_TIMEOUT0__71_carry_n_7;
  wire PREPARE_TIMEOUT0__99_carry__0_i_1__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_2__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_3__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_4__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_5__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_6__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_7__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_8__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_n_1;
  wire PREPARE_TIMEOUT0__99_carry__0_n_2;
  wire PREPARE_TIMEOUT0__99_carry__0_n_3;
  wire PREPARE_TIMEOUT0__99_carry__1_i_1__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_2__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_3__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_4__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_5__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_6__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_7__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_8__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_n_1;
  wire PREPARE_TIMEOUT0__99_carry__1_n_2;
  wire PREPARE_TIMEOUT0__99_carry__1_n_3;
  wire PREPARE_TIMEOUT0__99_carry__2_i_1__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_2__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_3__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_4__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_5__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_6__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_n_1;
  wire PREPARE_TIMEOUT0__99_carry__2_n_2;
  wire PREPARE_TIMEOUT0__99_carry__2_n_3;
  wire PREPARE_TIMEOUT0__99_carry_i_1__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_2__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_3__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_4__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_5__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_6__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_7__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry_n_0;
  wire PREPARE_TIMEOUT0__99_carry_n_1;
  wire PREPARE_TIMEOUT0__99_carry_n_2;
  wire PREPARE_TIMEOUT0__99_carry_n_3;
  wire PREPARE_TIMEOUT1_n_100;
  wire PREPARE_TIMEOUT1_n_101;
  wire PREPARE_TIMEOUT1_n_102;
  wire PREPARE_TIMEOUT1_n_103;
  wire PREPARE_TIMEOUT1_n_104;
  wire PREPARE_TIMEOUT1_n_105;
  wire PREPARE_TIMEOUT1_n_88;
  wire PREPARE_TIMEOUT1_n_89;
  wire PREPARE_TIMEOUT1_n_90;
  wire PREPARE_TIMEOUT1_n_91;
  wire PREPARE_TIMEOUT1_n_92;
  wire PREPARE_TIMEOUT1_n_93;
  wire PREPARE_TIMEOUT1_n_94;
  wire PREPARE_TIMEOUT1_n_95;
  wire PREPARE_TIMEOUT1_n_96;
  wire PREPARE_TIMEOUT1_n_97;
  wire PREPARE_TIMEOUT1_n_98;
  wire PREPARE_TIMEOUT1_n_99;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl1_enable;
  wire dl1_forcetxstopmode;
  wire dl1_txrequestesc;
  wire dl_enable_sync_i_n_0;
  wire dl_enable_sync_i_n_2;
  wire dl_forcetxstopmode_sync_i_n_0;
  wire dl_status_bit_6_i_3__0_n_0;
  wire [2:0]dl_status_bit_6_i_6;
  wire [0:0]dl_status_reg;
  wire dl_stopstate_coreclk_reg;
  wire dl_stopstate_i;
  wire dl_stopstate_reg_0;
  wire dl_tx_sm_state0__0;
  wire dl_tx_sm_state120_out;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state[1]_i_4__0 ;
  wire \dl_tx_sm_state[2]_i_11__0_n_0 ;
  wire \dl_tx_sm_state_reg_n_0_[0] ;
  wire \dl_tx_sm_state_reg_n_0_[1] ;
  wire \dl_tx_sm_state_reg_n_0_[2] ;
  wire dl_txrequestesc_sync_i_n_0;
  wire dl_txrequestesc_sync_i_n_1;
  wire dl_txrequestesc_sync_i_n_2;
  wire dl_txrequestesc_sync_i_n_3;
  wire dl_txrequestesc_sync_i_n_5;
  wire dl_txrequestesc_sync_i_n_6;
  wire dl_txrequestesc_sync_i_n_7;
  wire dl_txrequestesc_sync_i_n_8;
  wire dl_txrequesths_r;
  wire dl_txrequesths_sync;
  wire dl_txrequesths_sync_i_n_1;
  wire dl_txrequesths_sync_i_n_2;
  wire dl_txrequesths_sync_i_n_4;
  wire dl_txrequesths_sync_i_n_6;
  wire dl_txrequesths_sync_i_n_7;
  wire dl_txskewcalhs_sync_i_n_0;
  wire dl_txskewcalhs_sync_i_n_1;
  wire dl_txskewcalhs_sync_i_n_2;
  wire dl_txskewcalhs_sync_i_n_3;
  wire dl_txskewcalhs_sync_i_n_4;
  wire dl_txskewcalhs_sync_i_n_6;
  wire dl_txskewcalhs_sync_i_n_7;
  wire dl_txskewcalhs_sync_i_n_8;
  wire en_cal_hs_datapath_i;
  wire en_hs_start_w__4;
  wire en_lp_01_cnt__4;
  wire en_lp_01_cnt_reg_n_0;
  wire esc_active_sync;
  wire esc_active_sync_i_n_1;
  wire esc_active_sync_i_n_2;
  wire esc_active_sync_r;
  wire esc_start_i;
  wire \hsexit_count[0]_i_1__0_n_0 ;
  wire \hsexit_count[0]_i_2__0_n_0 ;
  wire \hsexit_count[0]_i_4__0_n_0 ;
  wire [12:0]hsexit_count_reg;
  wire \hsexit_count_reg[0]_i_3__0_n_0 ;
  wire \hsexit_count_reg[0]_i_3__0_n_1 ;
  wire \hsexit_count_reg[0]_i_3__0_n_2 ;
  wire \hsexit_count_reg[0]_i_3__0_n_3 ;
  wire \hsexit_count_reg[0]_i_3__0_n_4 ;
  wire \hsexit_count_reg[0]_i_3__0_n_5 ;
  wire \hsexit_count_reg[0]_i_3__0_n_6 ;
  wire \hsexit_count_reg[0]_i_3__0_n_7 ;
  wire \hsexit_count_reg[12]_i_1__0_n_7 ;
  wire \hsexit_count_reg[4]_i_1__0_n_0 ;
  wire \hsexit_count_reg[4]_i_1__0_n_1 ;
  wire \hsexit_count_reg[4]_i_1__0_n_2 ;
  wire \hsexit_count_reg[4]_i_1__0_n_3 ;
  wire \hsexit_count_reg[4]_i_1__0_n_4 ;
  wire \hsexit_count_reg[4]_i_1__0_n_5 ;
  wire \hsexit_count_reg[4]_i_1__0_n_6 ;
  wire \hsexit_count_reg[4]_i_1__0_n_7 ;
  wire \hsexit_count_reg[8]_i_1__0_n_0 ;
  wire \hsexit_count_reg[8]_i_1__0_n_1 ;
  wire \hsexit_count_reg[8]_i_1__0_n_2 ;
  wire \hsexit_count_reg[8]_i_1__0_n_3 ;
  wire \hsexit_count_reg[8]_i_1__0_n_4 ;
  wire \hsexit_count_reg[8]_i_1__0_n_5 ;
  wire \hsexit_count_reg[8]_i_1__0_n_6 ;
  wire \hsexit_count_reg[8]_i_1__0_n_7 ;
  wire lp_01_r;
  wire lp_01_r_reg_n_0;
  wire [6:0]lp_st01_cnt;
  wire \lp_st01_cnt[1]_i_2__1_n_0 ;
  wire \lp_st01_cnt[3]_i_2__1_n_0 ;
  wire \lp_st01_cnt[5]_i_2__1_n_0 ;
  wire \lp_st01_cnt[6]_i_2__1_n_0 ;
  wire \lp_st01_cnt_reg_n_0_[0] ;
  wire \lp_st01_cnt_reg_n_0_[1] ;
  wire \lp_st01_cnt_reg_n_0_[2] ;
  wire \lp_st01_cnt_reg_n_0_[3] ;
  wire \lp_st01_cnt_reg_n_0_[4] ;
  wire \lp_st01_cnt_reg_n_0_[5] ;
  wire \lp_st01_cnt_reg_n_0_[6] ;
  (* DONT_TOUCH *) wire out;
  wire p_0_in23_out;
  wire [8:0]p_0_in__0;
  wire p_21_in;
  wire prepare_count;
  wire \prepare_count[8]_i_4__0_n_0 ;
  wire [8:0]prepare_count_reg;
  wire s_level_out_d1_cdc_to_reg;
  wire sel;
  wire [1:1]timeout_hsexit;
  wire timeout_hsexit0_carry__0_i_1__0_n_0;
  wire timeout_hsexit0_carry__0_i_2__0_n_0;
  wire timeout_hsexit0_carry__0_i_3__0_n_0;
  wire timeout_hsexit0_carry__0_i_4__0_n_0;
  wire timeout_hsexit0_carry__0_i_5__0_n_0;
  wire timeout_hsexit0_carry__0_n_1;
  wire timeout_hsexit0_carry__0_n_2;
  wire timeout_hsexit0_carry__0_n_3;
  wire timeout_hsexit0_carry_i_1__0_n_0;
  wire timeout_hsexit0_carry_i_2__0_n_0;
  wire timeout_hsexit0_carry_i_3__0_n_0;
  wire timeout_hsexit0_carry_i_4__0_n_0;
  wire timeout_hsexit0_carry_i_5__0_n_0;
  wire timeout_hsexit0_carry_i_6__0_n_0;
  wire timeout_hsexit0_carry_i_7__0_n_0;
  wire timeout_hsexit0_carry_n_0;
  wire timeout_hsexit0_carry_n_1;
  wire timeout_hsexit0_carry_n_2;
  wire timeout_hsexit0_carry_n_3;
  wire timeout_hsexit_all;
  wire timeout_hsexit_i_1__0_n_0;
  wire timeout_hsexit_reg_0;
  wire timeout_prepare;
  wire timeout_prepare0_carry__0_i_1__0_n_0;
  wire timeout_prepare0_carry__0_n_3;
  wire timeout_prepare0_carry_i_10__0_n_0;
  wire timeout_prepare0_carry_i_11__0_n_0;
  wire timeout_prepare0_carry_i_12__0_n_0;
  wire timeout_prepare0_carry_i_13__0_n_0;
  wire timeout_prepare0_carry_i_1__0_n_0;
  wire timeout_prepare0_carry_i_2__0_n_0;
  wire timeout_prepare0_carry_i_3__0_n_0;
  wire timeout_prepare0_carry_i_4__0_n_0;
  wire timeout_prepare0_carry_i_5__0_n_0;
  wire timeout_prepare0_carry_i_6__0_n_0;
  wire timeout_prepare0_carry_i_7__0_n_0;
  wire timeout_prepare0_carry_i_8__0_n_0;
  wire timeout_prepare0_carry_i_9__0_n_0;
  wire timeout_prepare0_carry_n_0;
  wire timeout_prepare0_carry_n_1;
  wire timeout_prepare0_carry_n_2;
  wire timeout_prepare0_carry_n_3;
  wire timeout_prepare_i_1__0_n_0;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dn_i_2__1_n_0;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_i_5__1_n_0;
  wire tx_dl_lp_dp_reg_0;
  wire [3:0]NLW_PREPARE_TIMEOUT0__0_carry_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__0_carry__1_O_UNCONNECTED;
  wire [1:0]NLW_PREPARE_TIMEOUT0__0_carry__2_O_UNCONNECTED;
  wire [3:3]NLW_PREPARE_TIMEOUT0__0_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__44_carry__1_CO_UNCONNECTED;
  wire [3:1]NLW_PREPARE_TIMEOUT0__44_carry__1_O_UNCONNECTED;
  wire [3:1]NLW_PREPARE_TIMEOUT0__71_carry__1_CO_UNCONNECTED;
  wire [3:2]NLW_PREPARE_TIMEOUT0__71_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__99_carry_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__99_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__99_carry__1_O_UNCONNECTED;
  wire [3:3]NLW_PREPARE_TIMEOUT0__99_carry__2_CO_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__99_carry__2_O_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_OVERFLOW_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_PATTERNDETECT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_PREPARE_TIMEOUT1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_PREPARE_TIMEOUT1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT1_CARRYOUT_UNCONNECTED;
  wire [47:18]NLW_PREPARE_TIMEOUT1_P_UNCONNECTED;
  wire [47:0]NLW_PREPARE_TIMEOUT1_PCOUT_UNCONNECTED;
  wire [3:0]\NLW_hsexit_count_reg[12]_i_1__0_CO_UNCONNECTED ;
  wire [3:1]\NLW_hsexit_count_reg[12]_i_1__0_O_UNCONNECTED ;
  wire [3:0]NLW_timeout_hsexit0_carry_O_UNCONNECTED;
  wire [3:3]NLW_timeout_hsexit0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_timeout_hsexit0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_timeout_prepare0_carry_O_UNCONNECTED;
  wire [3:1]NLW_timeout_prepare0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_timeout_prepare0_carry__0_O_UNCONNECTED;

  CARRY4 PREPARE_TIMEOUT0__0_carry
       (.CI(1'b0),
        .CO({PREPARE_TIMEOUT0__0_carry_n_0,PREPARE_TIMEOUT0__0_carry_n_1,PREPARE_TIMEOUT0__0_carry_n_2,PREPARE_TIMEOUT0__0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry_i_1__0_n_0,PREPARE_TIMEOUT0__0_carry_i_2__0_n_0,PREPARE_TIMEOUT0__0_carry_i_3__0_n_0,1'b0}),
        .O(NLW_PREPARE_TIMEOUT0__0_carry_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__0_carry_i_4__0_n_0,PREPARE_TIMEOUT0__0_carry_i_5__0_n_0,PREPARE_TIMEOUT0__0_carry_i_6__0_n_0,PREPARE_TIMEOUT0__0_carry_i_7__0_n_0}));
  CARRY4 PREPARE_TIMEOUT0__0_carry__0
       (.CI(PREPARE_TIMEOUT0__0_carry_n_0),
        .CO({PREPARE_TIMEOUT0__0_carry__0_n_0,PREPARE_TIMEOUT0__0_carry__0_n_1,PREPARE_TIMEOUT0__0_carry__0_n_2,PREPARE_TIMEOUT0__0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__0_i_1__0_n_0,PREPARE_TIMEOUT0__0_carry__0_i_2__0_n_0,PREPARE_TIMEOUT0__0_carry__0_i_3__0_n_0,PREPARE_TIMEOUT0__0_carry__0_i_4__0_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__0_carry__0_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__0_carry__0_i_5__0_n_0,PREPARE_TIMEOUT0__0_carry__0_i_6__0_n_0,PREPARE_TIMEOUT0__0_carry__0_i_7__0_n_0,PREPARE_TIMEOUT0__0_carry__0_i_8__0_n_0}));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__0_i_1__0
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT1_n_97),
        .I2(PREPARE_TIMEOUT1_n_99),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_1__0_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__0_i_2__0
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT1_n_98),
        .I2(PREPARE_TIMEOUT1_n_100),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_2__0_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__0_i_3__0
       (.I0(PREPARE_TIMEOUT1_n_99),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_101),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_3__0_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__0_i_4__0
       (.I0(PREPARE_TIMEOUT1_n_100),
        .I1(PREPARE_TIMEOUT1_n_104),
        .I2(PREPARE_TIMEOUT1_n_102),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_4__0_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__0_i_5__0
       (.I0(PREPARE_TIMEOUT1_n_99),
        .I1(PREPARE_TIMEOUT1_n_97),
        .I2(PREPARE_TIMEOUT1_n_101),
        .I3(PREPARE_TIMEOUT1_n_100),
        .I4(PREPARE_TIMEOUT1_n_98),
        .I5(PREPARE_TIMEOUT1_n_96),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_5__0_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__0_i_6__0
       (.I0(PREPARE_TIMEOUT1_n_100),
        .I1(PREPARE_TIMEOUT1_n_98),
        .I2(PREPARE_TIMEOUT1_n_102),
        .I3(PREPARE_TIMEOUT1_n_101),
        .I4(PREPARE_TIMEOUT1_n_99),
        .I5(PREPARE_TIMEOUT1_n_97),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_6__0_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__0_i_7__0
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_99),
        .I3(PREPARE_TIMEOUT1_n_102),
        .I4(PREPARE_TIMEOUT1_n_100),
        .I5(PREPARE_TIMEOUT1_n_98),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_7__0_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__0_i_8__0
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT1_n_104),
        .I2(PREPARE_TIMEOUT1_n_100),
        .I3(PREPARE_TIMEOUT1_n_103),
        .I4(PREPARE_TIMEOUT1_n_101),
        .I5(PREPARE_TIMEOUT1_n_99),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_8__0_n_0));
  CARRY4 PREPARE_TIMEOUT0__0_carry__1
       (.CI(PREPARE_TIMEOUT0__0_carry__0_n_0),
        .CO({PREPARE_TIMEOUT0__0_carry__1_n_0,PREPARE_TIMEOUT0__0_carry__1_n_1,PREPARE_TIMEOUT0__0_carry__1_n_2,PREPARE_TIMEOUT0__0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__1_i_1__0_n_0,PREPARE_TIMEOUT0__0_carry__1_i_2__0_n_0,PREPARE_TIMEOUT0__0_carry__1_i_3__0_n_0,PREPARE_TIMEOUT0__0_carry__1_i_4__0_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__0_carry__1_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__0_carry__1_i_5__0_n_0,PREPARE_TIMEOUT0__0_carry__1_i_6__0_n_0,PREPARE_TIMEOUT0__0_carry__1_i_7__0_n_0,PREPARE_TIMEOUT0__0_carry__1_i_8__0_n_0}));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__1_i_1__0
       (.I0(PREPARE_TIMEOUT1_n_97),
        .I1(PREPARE_TIMEOUT1_n_93),
        .I2(PREPARE_TIMEOUT1_n_95),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_1__0_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__1_i_2__0
       (.I0(PREPARE_TIMEOUT1_n_98),
        .I1(PREPARE_TIMEOUT1_n_94),
        .I2(PREPARE_TIMEOUT1_n_96),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_2__0_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__1_i_3__0
       (.I0(PREPARE_TIMEOUT1_n_95),
        .I1(PREPARE_TIMEOUT1_n_99),
        .I2(PREPARE_TIMEOUT1_n_97),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_3__0_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__1_i_4__0
       (.I0(PREPARE_TIMEOUT1_n_96),
        .I1(PREPARE_TIMEOUT1_n_100),
        .I2(PREPARE_TIMEOUT1_n_98),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_4__0_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__1_i_5__0
       (.I0(PREPARE_TIMEOUT1_n_95),
        .I1(PREPARE_TIMEOUT1_n_93),
        .I2(PREPARE_TIMEOUT1_n_97),
        .I3(PREPARE_TIMEOUT1_n_96),
        .I4(PREPARE_TIMEOUT1_n_94),
        .I5(PREPARE_TIMEOUT1_n_92),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_5__0_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__1_i_6__0
       (.I0(PREPARE_TIMEOUT1_n_96),
        .I1(PREPARE_TIMEOUT1_n_94),
        .I2(PREPARE_TIMEOUT1_n_98),
        .I3(PREPARE_TIMEOUT1_n_97),
        .I4(PREPARE_TIMEOUT1_n_95),
        .I5(PREPARE_TIMEOUT1_n_93),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_6__0_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__1_i_7__0
       (.I0(PREPARE_TIMEOUT1_n_97),
        .I1(PREPARE_TIMEOUT1_n_99),
        .I2(PREPARE_TIMEOUT1_n_95),
        .I3(PREPARE_TIMEOUT1_n_98),
        .I4(PREPARE_TIMEOUT1_n_96),
        .I5(PREPARE_TIMEOUT1_n_94),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_7__0_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__1_i_8__0
       (.I0(PREPARE_TIMEOUT1_n_98),
        .I1(PREPARE_TIMEOUT1_n_100),
        .I2(PREPARE_TIMEOUT1_n_96),
        .I3(PREPARE_TIMEOUT1_n_99),
        .I4(PREPARE_TIMEOUT1_n_97),
        .I5(PREPARE_TIMEOUT1_n_95),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_8__0_n_0));
  CARRY4 PREPARE_TIMEOUT0__0_carry__2
       (.CI(PREPARE_TIMEOUT0__0_carry__1_n_0),
        .CO({PREPARE_TIMEOUT0__0_carry__2_n_0,PREPARE_TIMEOUT0__0_carry__2_n_1,PREPARE_TIMEOUT0__0_carry__2_n_2,PREPARE_TIMEOUT0__0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__2_i_1__0_n_0,PREPARE_TIMEOUT0__0_carry__2_i_2__0_n_0,PREPARE_TIMEOUT0__0_carry__2_i_3__0_n_0,PREPARE_TIMEOUT0__0_carry__2_i_4__0_n_0}),
        .O({PREPARE_TIMEOUT0__0_carry__2_n_4,PREPARE_TIMEOUT0__0_carry__2_n_5,NLW_PREPARE_TIMEOUT0__0_carry__2_O_UNCONNECTED[1:0]}),
        .S({PREPARE_TIMEOUT0__0_carry__2_i_5__0_n_0,PREPARE_TIMEOUT0__0_carry__2_i_6__0_n_0,PREPARE_TIMEOUT0__0_carry__2_i_7__0_n_0,PREPARE_TIMEOUT0__0_carry__2_i_8__0_n_0}));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__2_i_1__0
       (.I0(PREPARE_TIMEOUT1_n_89),
        .I1(PREPARE_TIMEOUT1_n_93),
        .I2(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_1__0_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__2_i_2__0
       (.I0(PREPARE_TIMEOUT1_n_94),
        .I1(PREPARE_TIMEOUT1_n_90),
        .I2(PREPARE_TIMEOUT1_n_92),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_2__0_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__2_i_3__0
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT1_n_95),
        .I2(PREPARE_TIMEOUT1_n_93),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_3__0_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__2_i_4__0
       (.I0(PREPARE_TIMEOUT1_n_92),
        .I1(PREPARE_TIMEOUT1_n_96),
        .I2(PREPARE_TIMEOUT1_n_94),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_4__0_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__2_i_5__0
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT1_n_93),
        .I2(PREPARE_TIMEOUT1_n_89),
        .I3(PREPARE_TIMEOUT1_n_92),
        .I4(PREPARE_TIMEOUT1_n_90),
        .I5(PREPARE_TIMEOUT1_n_88),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_5__0_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__2_i_6__0
       (.I0(PREPARE_TIMEOUT1_n_92),
        .I1(PREPARE_TIMEOUT1_n_90),
        .I2(PREPARE_TIMEOUT1_n_94),
        .I3(PREPARE_TIMEOUT1_n_91),
        .I4(PREPARE_TIMEOUT1_n_93),
        .I5(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_6__0_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__2_i_7__0
       (.I0(PREPARE_TIMEOUT1_n_93),
        .I1(PREPARE_TIMEOUT1_n_95),
        .I2(PREPARE_TIMEOUT1_n_91),
        .I3(PREPARE_TIMEOUT1_n_94),
        .I4(PREPARE_TIMEOUT1_n_92),
        .I5(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_7__0_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__2_i_8__0
       (.I0(PREPARE_TIMEOUT1_n_94),
        .I1(PREPARE_TIMEOUT1_n_96),
        .I2(PREPARE_TIMEOUT1_n_92),
        .I3(PREPARE_TIMEOUT1_n_95),
        .I4(PREPARE_TIMEOUT1_n_93),
        .I5(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_8__0_n_0));
  CARRY4 PREPARE_TIMEOUT0__0_carry__3
       (.CI(PREPARE_TIMEOUT0__0_carry__2_n_0),
        .CO({NLW_PREPARE_TIMEOUT0__0_carry__3_CO_UNCONNECTED[3],PREPARE_TIMEOUT0__0_carry__3_n_1,PREPARE_TIMEOUT0__0_carry__3_n_2,PREPARE_TIMEOUT0__0_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,PREPARE_TIMEOUT0__0_carry__3_i_1__0_n_0,PREPARE_TIMEOUT0__0_carry__3_i_2__0_n_0,PREPARE_TIMEOUT0__0_carry__3_i_3__0_n_0}),
        .O({PREPARE_TIMEOUT0__0_carry__3_n_4,PREPARE_TIMEOUT0__0_carry__3_n_5,PREPARE_TIMEOUT0__0_carry__3_n_6,PREPARE_TIMEOUT0__0_carry__3_n_7}),
        .S({PREPARE_TIMEOUT0__0_carry__3_i_4__0_n_0,PREPARE_TIMEOUT0__0_carry__3_i_5__0_n_0,PREPARE_TIMEOUT0__0_carry__3_i_6__0_n_0,PREPARE_TIMEOUT0__0_carry__3_i_7__0_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__0_carry__3_i_1__0
       (.I0(PREPARE_TIMEOUT1_n_90),
        .I1(PREPARE_TIMEOUT1_n_88),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__0_carry__3_i_2__0
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_2__0_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__3_i_3__0
       (.I0(PREPARE_TIMEOUT1_n_88),
        .I1(PREPARE_TIMEOUT1_n_92),
        .I2(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    PREPARE_TIMEOUT0__0_carry__3_i_4__0
       (.I0(PREPARE_TIMEOUT1_n_89),
        .I1(PREPARE_TIMEOUT1_n_88),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_4__0_n_0));
  LUT3 #(
    .INIT(8'h4B)) 
    PREPARE_TIMEOUT0__0_carry__3_i_5__0
       (.I0(PREPARE_TIMEOUT1_n_88),
        .I1(PREPARE_TIMEOUT1_n_90),
        .I2(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_5__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__0_carry__3_i_6__0
       (.I0(PREPARE_TIMEOUT1_n_89),
        .I1(PREPARE_TIMEOUT1_n_91),
        .I2(PREPARE_TIMEOUT1_n_88),
        .I3(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_6__0_n_0));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__3_i_7__0
       (.I0(PREPARE_TIMEOUT1_n_90),
        .I1(PREPARE_TIMEOUT1_n_92),
        .I2(PREPARE_TIMEOUT1_n_88),
        .I3(PREPARE_TIMEOUT1_n_89),
        .I4(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_7__0_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry_i_1__0
       (.I0(PREPARE_TIMEOUT1_n_105),
        .I1(PREPARE_TIMEOUT1_n_101),
        .I2(PREPARE_TIMEOUT1_n_103),
        .O(PREPARE_TIMEOUT0__0_carry_i_1__0_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    PREPARE_TIMEOUT0__0_carry_i_2__0
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_105),
        .O(PREPARE_TIMEOUT0__0_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__0_carry_i_3__0
       (.I0(PREPARE_TIMEOUT1_n_103),
        .I1(PREPARE_TIMEOUT1_n_105),
        .O(PREPARE_TIMEOUT0__0_carry_i_3__0_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry_i_4__0
       (.I0(PREPARE_TIMEOUT1_n_103),
        .I1(PREPARE_TIMEOUT1_n_101),
        .I2(PREPARE_TIMEOUT1_n_105),
        .I3(PREPARE_TIMEOUT1_n_102),
        .I4(PREPARE_TIMEOUT1_n_104),
        .I5(PREPARE_TIMEOUT1_n_100),
        .O(PREPARE_TIMEOUT0__0_carry_i_4__0_n_0));
  LUT5 #(
    .INIT(32'h69699669)) 
    PREPARE_TIMEOUT0__0_carry_i_5__0
       (.I0(PREPARE_TIMEOUT1_n_105),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_101),
        .I3(PREPARE_TIMEOUT1_n_102),
        .I4(PREPARE_TIMEOUT1_n_104),
        .O(PREPARE_TIMEOUT0__0_carry_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__0_carry_i_6__0
       (.I0(PREPARE_TIMEOUT1_n_105),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_104),
        .I3(PREPARE_TIMEOUT1_n_102),
        .O(PREPARE_TIMEOUT0__0_carry_i_6__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__0_carry_i_7__0
       (.I0(PREPARE_TIMEOUT1_n_103),
        .I1(PREPARE_TIMEOUT1_n_105),
        .O(PREPARE_TIMEOUT0__0_carry_i_7__0_n_0));
  CARRY4 PREPARE_TIMEOUT0__44_carry
       (.CI(1'b0),
        .CO({PREPARE_TIMEOUT0__44_carry_n_0,PREPARE_TIMEOUT0__44_carry_n_1,PREPARE_TIMEOUT0__44_carry_n_2,PREPARE_TIMEOUT0__44_carry_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__44_carry_i_1__0_n_0,PREPARE_TIMEOUT0__44_carry_i_2__0_n_0,PREPARE_TIMEOUT0__44_carry_i_3__0_n_0,1'b0}),
        .O({PREPARE_TIMEOUT0__44_carry_n_4,PREPARE_TIMEOUT0__44_carry_n_5,PREPARE_TIMEOUT0__44_carry_n_6,PREPARE_TIMEOUT0__44_carry_n_7}),
        .S({PREPARE_TIMEOUT0__44_carry_i_4__0_n_0,PREPARE_TIMEOUT0__44_carry_i_5__0_n_0,PREPARE_TIMEOUT0__44_carry_i_6__0_n_0,PREPARE_TIMEOUT0__44_carry_i_7__0_n_0}));
  CARRY4 PREPARE_TIMEOUT0__44_carry__0
       (.CI(PREPARE_TIMEOUT0__44_carry_n_0),
        .CO({PREPARE_TIMEOUT0__44_carry__0_n_0,PREPARE_TIMEOUT0__44_carry__0_n_1,PREPARE_TIMEOUT0__44_carry__0_n_2,PREPARE_TIMEOUT0__44_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__3_n_5,PREPARE_TIMEOUT0__44_carry__0_i_1__0_n_0,PREPARE_TIMEOUT0__44_carry__0_i_2__0_n_0,PREPARE_TIMEOUT0__44_carry__0_i_3__0_n_0}),
        .O({PREPARE_TIMEOUT0__44_carry__0_n_4,PREPARE_TIMEOUT0__44_carry__0_n_5,PREPARE_TIMEOUT0__44_carry__0_n_6,PREPARE_TIMEOUT0__44_carry__0_n_7}),
        .S({PREPARE_TIMEOUT0__44_carry__0_i_4__0_n_0,PREPARE_TIMEOUT0__44_carry__0_i_5__0_n_0,PREPARE_TIMEOUT0__44_carry__0_i_6__0_n_0,PREPARE_TIMEOUT0__44_carry__0_i_7__0_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry__0_i_1__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry__0_i_2__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry__0_i_3__0
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    PREPARE_TIMEOUT0__44_carry__0_i_4__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_4__0_n_0));
  LUT3 #(
    .INIT(8'h4B)) 
    PREPARE_TIMEOUT0__44_carry__0_i_5__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_5__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__44_carry__0_i_6__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_6__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__44_carry__0_i_7__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_7__0_n_0));
  CARRY4 PREPARE_TIMEOUT0__44_carry__1
       (.CI(PREPARE_TIMEOUT0__44_carry__0_n_0),
        .CO({NLW_PREPARE_TIMEOUT0__44_carry__1_CO_UNCONNECTED[3:2],PREPARE_TIMEOUT0__44_carry__1_n_2,NLW_PREPARE_TIMEOUT0__44_carry__1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,PREPARE_TIMEOUT0__0_carry__3_n_4}),
        .O({NLW_PREPARE_TIMEOUT0__44_carry__1_O_UNCONNECTED[3:1],PREPARE_TIMEOUT0__44_carry__1_n_7}),
        .S({1'b0,1'b0,1'b1,PREPARE_TIMEOUT0__44_carry__1_i_1__0_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    PREPARE_TIMEOUT0__44_carry__1_i_1__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__44_carry__1_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry_i_1__0
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(PREPARE_TIMEOUT0__44_carry_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry_i_2__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(PREPARE_TIMEOUT0__44_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__44_carry_i_3__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .O(PREPARE_TIMEOUT0__44_carry_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__44_carry_i_4__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(PREPARE_TIMEOUT0__44_carry_i_4__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__44_carry_i_5__0
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .O(PREPARE_TIMEOUT0__44_carry_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__44_carry_i_6__0
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__44_carry_i_6__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__44_carry_i_7__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .O(PREPARE_TIMEOUT0__44_carry_i_7__0_n_0));
  CARRY4 PREPARE_TIMEOUT0__71_carry
       (.CI(1'b0),
        .CO({PREPARE_TIMEOUT0__71_carry_n_0,PREPARE_TIMEOUT0__71_carry_n_1,PREPARE_TIMEOUT0__71_carry_n_2,PREPARE_TIMEOUT0__71_carry_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__3_n_7,PREPARE_TIMEOUT0__0_carry__2_n_4,PREPARE_TIMEOUT0__0_carry__2_n_5,1'b0}),
        .O({PREPARE_TIMEOUT0__71_carry_n_4,PREPARE_TIMEOUT0__71_carry_n_5,PREPARE_TIMEOUT0__71_carry_n_6,PREPARE_TIMEOUT0__71_carry_n_7}),
        .S({PREPARE_TIMEOUT0__71_carry_i_1__0_n_0,PREPARE_TIMEOUT0__71_carry_i_2__0_n_0,PREPARE_TIMEOUT0__71_carry_i_3__0_n_0,PREPARE_TIMEOUT0__44_carry_n_6}));
  CARRY4 PREPARE_TIMEOUT0__71_carry__0
       (.CI(PREPARE_TIMEOUT0__71_carry_n_0),
        .CO({PREPARE_TIMEOUT0__71_carry__0_n_0,PREPARE_TIMEOUT0__71_carry__0_n_1,PREPARE_TIMEOUT0__71_carry__0_n_2,PREPARE_TIMEOUT0__71_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__71_carry__0_i_1__0_n_0,PREPARE_TIMEOUT0__71_carry__0_i_2__0_n_0,PREPARE_TIMEOUT0__71_carry__0_i_3__0_n_0,PREPARE_TIMEOUT0__0_carry__3_n_6}),
        .O({PREPARE_TIMEOUT0__71_carry__0_n_4,PREPARE_TIMEOUT0__71_carry__0_n_5,PREPARE_TIMEOUT0__71_carry__0_n_6,PREPARE_TIMEOUT0__71_carry__0_n_7}),
        .S({PREPARE_TIMEOUT0__71_carry__0_i_4__0_n_0,PREPARE_TIMEOUT0__71_carry__0_i_5__0_n_0,PREPARE_TIMEOUT0__71_carry__0_i_6__0_n_0,PREPARE_TIMEOUT0__71_carry__0_i_7__0_n_0}));
  LUT3 #(
    .INIT(8'hE8)) 
    PREPARE_TIMEOUT0__71_carry__0_i_1__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_1__0_n_0));
  (* HLUTNM = "lutpair12" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    PREPARE_TIMEOUT0__71_carry__0_i_2__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_2__0_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    PREPARE_TIMEOUT0__71_carry__0_i_3__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_3__0_n_0));
  LUT5 #(
    .INIT(32'hE81717E8)) 
    PREPARE_TIMEOUT0__71_carry__0_i_4__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I3(PREPARE_TIMEOUT0__44_carry__1_n_7),
        .I4(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h6996)) 
    PREPARE_TIMEOUT0__71_carry__0_i_5__0
       (.I0(PREPARE_TIMEOUT0__71_carry__0_i_2__0_n_0),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I2(PREPARE_TIMEOUT0__44_carry__0_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_5__0_n_0));
  (* HLUTNM = "lutpair12" *) 
  LUT5 #(
    .INIT(32'h69969696)) 
    PREPARE_TIMEOUT0__71_carry__0_i_6__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(PREPARE_TIMEOUT0__44_carry__0_n_6),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_6__0_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    PREPARE_TIMEOUT0__71_carry__0_i_7__0
       (.I0(PREPARE_TIMEOUT0__44_carry__0_n_6),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_7__0_n_0));
  CARRY4 PREPARE_TIMEOUT0__71_carry__1
       (.CI(PREPARE_TIMEOUT0__71_carry__0_n_0),
        .CO({NLW_PREPARE_TIMEOUT0__71_carry__1_CO_UNCONNECTED[3:1],PREPARE_TIMEOUT0__71_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,PREPARE_TIMEOUT0__71_carry__1_i_1__0_n_0}),
        .O({NLW_PREPARE_TIMEOUT0__71_carry__1_O_UNCONNECTED[3:2],PREPARE_TIMEOUT0__71_carry__1_n_6,PREPARE_TIMEOUT0__71_carry__1_n_7}),
        .S({1'b0,1'b0,PREPARE_TIMEOUT0__71_carry__1_i_2__0_n_0,PREPARE_TIMEOUT0__71_carry__1_i_3__0_n_0}));
  LUT2 #(
    .INIT(4'h8)) 
    PREPARE_TIMEOUT0__71_carry__1_i_1__0
       (.I0(PREPARE_TIMEOUT0__44_carry__1_n_7),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__71_carry__1_i_1__0_n_0));
  LUT3 #(
    .INIT(8'hE1)) 
    PREPARE_TIMEOUT0__71_carry__1_i_2__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry__1_n_2),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__71_carry__1_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h7887)) 
    PREPARE_TIMEOUT0__71_carry__1_i_3__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(PREPARE_TIMEOUT0__44_carry__1_n_7),
        .I2(PREPARE_TIMEOUT0__44_carry__1_n_2),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .O(PREPARE_TIMEOUT0__71_carry__1_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__71_carry_i_1__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_7),
        .O(PREPARE_TIMEOUT0__71_carry_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__71_carry_i_2__0
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I1(PREPARE_TIMEOUT0__44_carry_n_4),
        .O(PREPARE_TIMEOUT0__71_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__71_carry_i_3__0
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry_n_5),
        .O(PREPARE_TIMEOUT0__71_carry_i_3__0_n_0));
  CARRY4 PREPARE_TIMEOUT0__99_carry
       (.CI(1'b0),
        .CO({PREPARE_TIMEOUT0__99_carry_n_0,PREPARE_TIMEOUT0__99_carry_n_1,PREPARE_TIMEOUT0__99_carry_n_2,PREPARE_TIMEOUT0__99_carry_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__99_carry_i_1__0_n_0,PREPARE_TIMEOUT0__99_carry_i_2__0_n_0,PREPARE_TIMEOUT0__99_carry_i_3__0_n_0,1'b0}),
        .O(NLW_PREPARE_TIMEOUT0__99_carry_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__99_carry_i_4__0_n_0,PREPARE_TIMEOUT0__99_carry_i_5__0_n_0,PREPARE_TIMEOUT0__99_carry_i_6__0_n_0,PREPARE_TIMEOUT0__99_carry_i_7__0_n_0}));
  CARRY4 PREPARE_TIMEOUT0__99_carry__0
       (.CI(PREPARE_TIMEOUT0__99_carry_n_0),
        .CO({PREPARE_TIMEOUT0__99_carry__0_n_0,PREPARE_TIMEOUT0__99_carry__0_n_1,PREPARE_TIMEOUT0__99_carry__0_n_2,PREPARE_TIMEOUT0__99_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__99_carry__0_i_1__0_n_0,PREPARE_TIMEOUT0__99_carry__0_i_2__0_n_0,PREPARE_TIMEOUT0__99_carry__0_i_3__0_n_0,PREPARE_TIMEOUT0__99_carry__0_i_4__0_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__99_carry__0_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__99_carry__0_i_5__0_n_0,PREPARE_TIMEOUT0__99_carry__0_i_6__0_n_0,PREPARE_TIMEOUT0__99_carry__0_i_7__0_n_0,PREPARE_TIMEOUT0__99_carry__0_i_8__0_n_0}));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry__0_i_1__0
       (.I0(PREPARE_TIMEOUT0__71_carry_n_6),
        .I1(PREPARE_TIMEOUT1_n_96),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_1__0_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry__0_i_2__0
       (.I0(PREPARE_TIMEOUT0__71_carry_n_7),
        .I1(PREPARE_TIMEOUT1_n_97),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_2__0_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry__0_i_3__0
       (.I0(PREPARE_TIMEOUT0__44_carry_n_7),
        .I1(PREPARE_TIMEOUT1_n_98),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__0_i_4__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(PREPARE_TIMEOUT1_n_99),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__99_carry__0_i_5__0
       (.I0(PREPARE_TIMEOUT1_n_96),
        .I1(PREPARE_TIMEOUT0__71_carry_n_6),
        .I2(PREPARE_TIMEOUT0__71_carry_n_5),
        .I3(PREPARE_TIMEOUT1_n_95),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_5__0_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    PREPARE_TIMEOUT0__99_carry__0_i_6__0
       (.I0(PREPARE_TIMEOUT1_n_97),
        .I1(PREPARE_TIMEOUT0__71_carry_n_7),
        .I2(PREPARE_TIMEOUT0__71_carry_n_6),
        .I3(PREPARE_TIMEOUT1_n_96),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_6__0_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    PREPARE_TIMEOUT0__99_carry__0_i_7__0
       (.I0(PREPARE_TIMEOUT1_n_98),
        .I1(PREPARE_TIMEOUT0__44_carry_n_7),
        .I2(PREPARE_TIMEOUT0__71_carry_n_7),
        .I3(PREPARE_TIMEOUT1_n_97),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h4BB4)) 
    PREPARE_TIMEOUT0__99_carry__0_i_8__0
       (.I0(PREPARE_TIMEOUT1_n_99),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I2(PREPARE_TIMEOUT0__44_carry_n_7),
        .I3(PREPARE_TIMEOUT1_n_98),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_8__0_n_0));
  CARRY4 PREPARE_TIMEOUT0__99_carry__1
       (.CI(PREPARE_TIMEOUT0__99_carry__0_n_0),
        .CO({PREPARE_TIMEOUT0__99_carry__1_n_0,PREPARE_TIMEOUT0__99_carry__1_n_1,PREPARE_TIMEOUT0__99_carry__1_n_2,PREPARE_TIMEOUT0__99_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__99_carry__1_i_1__0_n_0,PREPARE_TIMEOUT0__99_carry__1_i_2__0_n_0,PREPARE_TIMEOUT0__99_carry__1_i_3__0_n_0,PREPARE_TIMEOUT0__99_carry__1_i_4__0_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__99_carry__1_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__99_carry__1_i_5__0_n_0,PREPARE_TIMEOUT0__99_carry__1_i_6__0_n_0,PREPARE_TIMEOUT0__99_carry__1_i_7__0_n_0,PREPARE_TIMEOUT0__99_carry__1_i_8__0_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__1_i_1__0
       (.I0(PREPARE_TIMEOUT0__71_carry__0_n_6),
        .I1(PREPARE_TIMEOUT1_n_92),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_1__0_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry__1_i_2__0
       (.I0(PREPARE_TIMEOUT0__71_carry__0_n_7),
        .I1(PREPARE_TIMEOUT1_n_93),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__1_i_3__0
       (.I0(PREPARE_TIMEOUT0__71_carry_n_4),
        .I1(PREPARE_TIMEOUT1_n_94),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__1_i_4__0
       (.I0(PREPARE_TIMEOUT0__71_carry_n_5),
        .I1(PREPARE_TIMEOUT1_n_95),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_4__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__1_i_5__0
       (.I0(PREPARE_TIMEOUT1_n_92),
        .I1(PREPARE_TIMEOUT0__71_carry__0_n_6),
        .I2(PREPARE_TIMEOUT0__71_carry__0_n_5),
        .I3(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__99_carry__1_i_6__0
       (.I0(PREPARE_TIMEOUT1_n_93),
        .I1(PREPARE_TIMEOUT0__71_carry__0_n_7),
        .I2(PREPARE_TIMEOUT0__71_carry__0_n_6),
        .I3(PREPARE_TIMEOUT1_n_92),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h4BB4)) 
    PREPARE_TIMEOUT0__99_carry__1_i_7__0
       (.I0(PREPARE_TIMEOUT1_n_94),
        .I1(PREPARE_TIMEOUT0__71_carry_n_4),
        .I2(PREPARE_TIMEOUT0__71_carry__0_n_7),
        .I3(PREPARE_TIMEOUT1_n_93),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_7__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__1_i_8__0
       (.I0(PREPARE_TIMEOUT1_n_95),
        .I1(PREPARE_TIMEOUT0__71_carry_n_5),
        .I2(PREPARE_TIMEOUT0__71_carry_n_4),
        .I3(PREPARE_TIMEOUT1_n_94),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_8__0_n_0));
  CARRY4 PREPARE_TIMEOUT0__99_carry__2
       (.CI(PREPARE_TIMEOUT0__99_carry__1_n_0),
        .CO({NLW_PREPARE_TIMEOUT0__99_carry__2_CO_UNCONNECTED[3],PREPARE_TIMEOUT0__99_carry__2_n_1,PREPARE_TIMEOUT0__99_carry__2_n_2,PREPARE_TIMEOUT0__99_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,PREPARE_TIMEOUT0__99_carry__2_i_1__0_n_0,PREPARE_TIMEOUT0__99_carry__2_i_2__0_n_0,PREPARE_TIMEOUT0__99_carry__2_i_3__0_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__99_carry__2_O_UNCONNECTED[3:0]),
        .S({1'b0,PREPARE_TIMEOUT0__99_carry__2_i_4__0_n_0,PREPARE_TIMEOUT0__99_carry__2_i_5__0_n_0,PREPARE_TIMEOUT0__99_carry__2_i_6__0_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__2_i_1__0
       (.I0(PREPARE_TIMEOUT0__71_carry__1_n_7),
        .I1(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__2_i_2__0
       (.I0(PREPARE_TIMEOUT0__71_carry__0_n_4),
        .I1(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__2_i_3__0
       (.I0(PREPARE_TIMEOUT0__71_carry__0_n_5),
        .I1(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__2_i_4__0
       (.I0(PREPARE_TIMEOUT1_n_89),
        .I1(PREPARE_TIMEOUT0__71_carry__1_n_7),
        .I2(PREPARE_TIMEOUT0__71_carry__1_n_6),
        .I3(PREPARE_TIMEOUT1_n_88),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_4__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__2_i_5__0
       (.I0(PREPARE_TIMEOUT1_n_90),
        .I1(PREPARE_TIMEOUT0__71_carry__0_n_4),
        .I2(PREPARE_TIMEOUT0__71_carry__1_n_7),
        .I3(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_5__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__2_i_6__0
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT0__71_carry__0_n_5),
        .I2(PREPARE_TIMEOUT0__71_carry__0_n_4),
        .I3(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_6__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry_i_1__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT1_n_100),
        .O(PREPARE_TIMEOUT0__99_carry_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry_i_2__0
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I1(PREPARE_TIMEOUT1_n_101),
        .O(PREPARE_TIMEOUT0__99_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry_i_3__0
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(PREPARE_TIMEOUT1_n_102),
        .O(PREPARE_TIMEOUT0__99_carry_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry_i_4__0
       (.I0(PREPARE_TIMEOUT1_n_100),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I3(PREPARE_TIMEOUT1_n_99),
        .O(PREPARE_TIMEOUT0__99_carry_i_4__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry_i_5__0
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I3(PREPARE_TIMEOUT1_n_100),
        .O(PREPARE_TIMEOUT0__99_carry_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__99_carry_i_6__0
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT1_n_101),
        .O(PREPARE_TIMEOUT0__99_carry_i_6__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__99_carry_i_7__0
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .O(PREPARE_TIMEOUT0__99_carry_i_7__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-13 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    PREPARE_TIMEOUT1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_PREPARE_TIMEOUT1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_PREPARE_TIMEOUT1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_PREPARE_TIMEOUT1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_PREPARE_TIMEOUT1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_PREPARE_TIMEOUT1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_PREPARE_TIMEOUT1_OVERFLOW_UNCONNECTED),
        .P({NLW_PREPARE_TIMEOUT1_P_UNCONNECTED[47:18],PREPARE_TIMEOUT1_n_88,PREPARE_TIMEOUT1_n_89,PREPARE_TIMEOUT1_n_90,PREPARE_TIMEOUT1_n_91,PREPARE_TIMEOUT1_n_92,PREPARE_TIMEOUT1_n_93,PREPARE_TIMEOUT1_n_94,PREPARE_TIMEOUT1_n_95,PREPARE_TIMEOUT1_n_96,PREPARE_TIMEOUT1_n_97,PREPARE_TIMEOUT1_n_98,PREPARE_TIMEOUT1_n_99,PREPARE_TIMEOUT1_n_100,PREPARE_TIMEOUT1_n_101,PREPARE_TIMEOUT1_n_102,PREPARE_TIMEOUT1_n_103,PREPARE_TIMEOUT1_n_104,PREPARE_TIMEOUT1_n_105}),
        .PATTERNBDETECT(NLW_PREPARE_TIMEOUT1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_PREPARE_TIMEOUT1_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_PREPARE_TIMEOUT1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_PREPARE_TIMEOUT1_UNDERFLOW_UNCONNECTED));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_57 dl_enable_sync_i
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl1_enable(dl1_enable),
        .dl_tx_sm_state125_out(dl_tx_sm_state125_out),
        .\dl_tx_sm_state_reg[0] (dl_enable_sync_i_n_2),
        .\dl_tx_sm_state_reg[2] (dl_enable_sync_i_n_0),
        .en_cal_hs_datapath_i(en_cal_hs_datapath_i),
        .en_cal_hs_datapath_reg(\dl_tx_sm_state_reg_n_0_[0] ),
        .en_cal_hs_datapath_reg_0(dl_txrequesths_sync_i_n_7),
        .en_cal_hs_datapath_reg_1(dl_txskewcalhs_sync_i_n_4),
        .out(dl_forcetxstopmode_sync_i_n_0),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i),
        .tx_dl_lp_dp_reg(dl_txrequesths_sync_i_n_6),
        .tx_dl_lp_dp_reg_0(\dl_tx_sm_state_reg_n_0_[2] ),
        .tx_dl_lp_dp_reg_1(esc_active_sync_i_n_1),
        .tx_dl_lp_dp_reg_2(dl_txskewcalhs_sync_i_n_7),
        .tx_dl_lp_dp_reg_3(tx_dl_lp_dp_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_58 dl_forcetxstopmode_sync_i
       (.core_clk(core_clk),
        .core_rst(core_rst),
        .dl1_forcetxstopmode(dl1_forcetxstopmode),
        .out(dl_forcetxstopmode_sync_i_n_0));
  LUT4 #(
    .INIT(16'h0F08)) 
    dl_status_bit_6_i_3__0
       (.I0(cl_init_done_coreclk_i),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .I2(\dl_tx_sm_state_reg_n_0_[1] ),
        .I3(out),
        .O(dl_status_bit_6_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    dl_status_bit_6_i_8
       (.I0(timeout_hsexit),
        .I1(dl_status_bit_6_i_6[0]),
        .I2(dl_status_bit_6_i_6[2]),
        .I3(dl_status_bit_6_i_6[1]),
        .O(timeout_hsexit_all));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE dl_status_bit_6_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_6),
        .Q(out));
  LUT3 #(
    .INIT(8'hC8)) 
    dl_stopstate_coreclk_i_1__0
       (.I0(dl_stopstate_i),
        .I1(cl_init_done_coreclk_i),
        .I2(dl_stopstate_coreclk_reg),
        .O(dl_stopstate_reg_0));
  FDCE dl_stopstate_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_2),
        .Q(dl_stopstate_i));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dl_tx_sm_state[2]_i_11__0 
       (.I0(\dl_tx_sm_state_reg_n_0_[1] ),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .O(\dl_tx_sm_state[2]_i_11__0_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \dl_tx_sm_state_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequestesc_sync_i_n_2),
        .Q(\dl_tx_sm_state_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \dl_tx_sm_state_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequesths_sync_i_n_2),
        .Q(\dl_tx_sm_state_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \dl_tx_sm_state_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequestesc_sync_i_n_1),
        .Q(\dl_tx_sm_state_reg_n_0_[2] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_59 dl_txrequestesc_sync_i
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl1_txrequestesc(dl1_txrequestesc),
        .dl_status_bit_6_reg(out),
        .dl_stopstate_i_2__0_0(timeout_hsexit_reg_0),
        .dl_tx_sm_state120_out(dl_tx_sm_state120_out),
        .dl_tx_sm_state125_out(dl_tx_sm_state125_out),
        .\dl_tx_sm_state_reg[0] (dl_txrequestesc_sync_i_n_2),
        .\dl_tx_sm_state_reg[0]_0 (dl_txrequestesc_sync_i_n_3),
        .\dl_tx_sm_state_reg[0]_1 (\dl_tx_sm_state_reg_n_0_[0] ),
        .\dl_tx_sm_state_reg[1] (dl_txrequestesc_sync_i_n_0),
        .\dl_tx_sm_state_reg[1]_0 (dl_txrequestesc_sync_i_n_5),
        .\dl_tx_sm_state_reg[1]_1 (dl_txrequestesc_sync_i_n_8),
        .\dl_tx_sm_state_reg[2] (dl_txrequestesc_sync_i_n_1),
        .\dl_tx_sm_state_reg[2]_0 (dl_txrequesths_sync_i_n_4),
        .\dl_tx_sm_state_reg[2]_1 (dl_txskewcalhs_sync_i_n_8),
        .\dl_tx_sm_state_reg[2]_2 (\dl_tx_sm_state_reg_n_0_[2] ),
        .en_hs_start_w__4(en_hs_start_w__4),
        .esc_active_sync_r(esc_active_sync_r),
        .esc_start_i(esc_start_i),
        .esc_start_reg(\dl_tx_sm_state_reg_n_0_[1] ),
        .out(esc_active_sync),
        .p_0_in23_out(p_0_in23_out),
        .p_21_in(p_21_in),
        .s_level_out_d3_reg_0(dl_txrequestesc_sync_i_n_6),
        .s_level_out_d3_reg_1(dl_txrequestesc_sync_i_n_7),
        .timeout_hsexit(timeout_hsexit),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_prepare(timeout_prepare));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_60 dl_txrequesths_sync_i
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_tx_sm_state120_out(dl_tx_sm_state120_out),
        .dl_tx_sm_state125_out(dl_tx_sm_state125_out),
        .\dl_tx_sm_state[1]_i_4__0 (\dl_tx_sm_state[1]_i_4__0 ),
        .\dl_tx_sm_state[1]_i_4__0_0 (timeout_hsexit_reg_0),
        .\dl_tx_sm_state[2]_i_3__0_0 (lp_01_r_reg_n_0),
        .\dl_tx_sm_state_reg[0] (dl_txrequesths_sync_i_n_2),
        .\dl_tx_sm_state_reg[1] (\dl_tx_sm_state_reg_n_0_[0] ),
        .\dl_tx_sm_state_reg[1]_0 (\dl_tx_sm_state_reg_n_0_[2] ),
        .\dl_tx_sm_state_reg[1]_1 (dl_txskewcalhs_sync_i_n_8),
        .\dl_tx_sm_state_reg[1]_2 (\dl_tx_sm_state_reg_n_0_[1] ),
        .\dl_tx_sm_state_reg[2] (dl_txrequesths_sync_i_n_4),
        .\dl_tx_sm_state_reg[2]_0 (dl_txrequesths_sync_i_n_7),
        .dl_txrequesths_r(dl_txrequesths_r),
        .en_cal_hs_datapath_reg(dl_txskewcalhs_sync_i_n_0),
        .\en_cl_init_to_blk.init_done_reg (dl_txrequesths_sync_i_n_6),
        .en_hs_start_w__4(en_hs_start_w__4),
        .en_lp_01_cnt__4(en_lp_01_cnt__4),
        .out(dl_txrequesths_sync),
        .p_0_in23_out(p_0_in23_out),
        .timeout_prepare(timeout_prepare),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dn_reg(dl_txrequesths_sync_i_n_1),
        .tx_dl_lp_dn_reg_0(tx_dl_lp_dn_i_2__1_n_0),
        .tx_dl_lp_dn_reg_1(esc_active_sync_i_n_1),
        .tx_dl_lp_dn_reg_2(dl_txskewcalhs_sync_i_n_7),
        .tx_dl_lp_dn_reg_3(dl_txrequestesc_sync_i_n_6));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_61 dl_txskewcalhs_sync_i
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_status_bit_6_reg(dl_status_bit_6_i_3__0_n_0),
        .dl_status_bit_6_reg_0(dl_txrequestesc_sync_i_n_8),
        .dl_status_bit_6_reg_1(out),
        .dl_status_bit_6_reg_2(dl_txrequestesc_sync_i_n_6),
        .dl_status_reg(dl_status_reg),
        .dl_stopstate_i(dl_stopstate_i),
        .dl_stopstate_reg(dl_txrequestesc_sync_i_n_5),
        .dl_stopstate_reg_0(\dl_tx_sm_state_reg_n_0_[2] ),
        .dl_stopstate_reg_1(esc_active_sync_i_n_2),
        .dl_tx_sm_state0__0(dl_tx_sm_state0__0),
        .dl_tx_sm_state125_out(dl_tx_sm_state125_out),
        .\dl_tx_sm_state_reg[0] (dl_txskewcalhs_sync_i_n_3),
        .\dl_tx_sm_state_reg[1] (dl_txskewcalhs_sync_i_n_4),
        .\dl_tx_sm_state_reg[1]_0 (\dl_tx_sm_state[2]_i_11__0_n_0 ),
        .\dl_tx_sm_state_reg[2] (dl_txskewcalhs_sync_i_n_2),
        .\dl_tx_sm_state_reg[2]_0 (dl_txskewcalhs_sync_i_n_6),
        .\dl_tx_sm_state_reg[2]_1 (dl_txskewcalhs_sync_i_n_7),
        .\dl_tx_sm_state_reg[2]_2 (dl_txskewcalhs_sync_i_n_8),
        .en_hs_datapath_reg(\dl_tx_sm_state_reg_n_0_[0] ),
        .en_hs_datapath_reg_0(dl_txrequesths_sync),
        .en_hs_start_w__4(en_hs_start_w__4),
        .en_lp_01_cnt__4(en_lp_01_cnt__4),
        .en_lp_01_cnt_reg(dl_txskewcalhs_sync_i_n_1),
        .en_lp_01_cnt_reg_0(en_lp_01_cnt_reg_n_0),
        .en_lp_01_cnt_reg_1(lp_01_r_reg_n_0),
        .en_lp_01_cnt_reg_2(\dl_tx_sm_state_reg_n_0_[1] ),
        .out(dl_txskewcalhs_sync_i_n_0),
        .p_21_in(p_21_in),
        .timeout_prepare(timeout_prepare),
        .tx_dl_lp_dn_reg(tx_dl_lp_dp_i_5__1_n_0),
        .tx_dl_lp_dn_reg_0(dl_txrequestesc_sync_i_n_7));
  FDCE en_cal_hs_datapath_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_2),
        .Q(en_cal_hs_datapath_i));
  FDCE en_hs_datapath_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_3),
        .Q(dl_status_reg));
  FDCE en_lp_01_cnt_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_1),
        .Q(en_lp_01_cnt_reg_n_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_62 esc_active_sync_i
       (.core_clk(core_clk),
        .core_rst(core_rst),
        .dl_stopstate_i_4__0(dl_txrequestesc_sync_i_n_3),
        .dl_tx_sm_state0__0(dl_tx_sm_state0__0),
        .\dl_tx_sm_state_reg[0] (esc_active_sync_i_n_1),
        .esc_active_sync_r(esc_active_sync_r),
        .out(esc_active_sync),
        .s_level_out_d1_cdc_to_reg_0(s_level_out_d1_cdc_to_reg),
        .s_level_out_d3_reg_0(esc_active_sync_i_n_2),
        .timeout_hsexit_all(timeout_hsexit_all),
        .tx_dl_lp_dn_reg(\dl_tx_sm_state_reg_n_0_[0] ),
        .tx_dl_lp_dn_reg_0(\dl_tx_sm_state_reg_n_0_[1] ),
        .tx_dl_lp_dn_reg_1(\dl_tx_sm_state_reg_n_0_[2] ));
  FDCE esc_active_sync_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(esc_active_sync),
        .Q(esc_active_sync_r));
  FDCE esc_start_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequestesc_sync_i_n_0),
        .Q(esc_start_i));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \hsexit_count[0]_i_1__0 
       (.I0(\dl_tx_sm_state_reg_n_0_[2] ),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .I2(\dl_tx_sm_state_reg_n_0_[1] ),
        .I3(timeout_hsexit_reg_0),
        .O(\hsexit_count[0]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hsexit_count[0]_i_2__0 
       (.I0(timeout_hsexit0_carry__0_n_1),
        .O(\hsexit_count[0]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hsexit_count[0]_i_4__0 
       (.I0(hsexit_count_reg[0]),
        .O(\hsexit_count[0]_i_4__0_n_0 ));
  FDRE \hsexit_count_reg[0] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__0_n_0 ),
        .D(\hsexit_count_reg[0]_i_3__0_n_7 ),
        .Q(hsexit_count_reg[0]),
        .R(\hsexit_count[0]_i_1__0_n_0 ));
  CARRY4 \hsexit_count_reg[0]_i_3__0 
       (.CI(1'b0),
        .CO({\hsexit_count_reg[0]_i_3__0_n_0 ,\hsexit_count_reg[0]_i_3__0_n_1 ,\hsexit_count_reg[0]_i_3__0_n_2 ,\hsexit_count_reg[0]_i_3__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\hsexit_count_reg[0]_i_3__0_n_4 ,\hsexit_count_reg[0]_i_3__0_n_5 ,\hsexit_count_reg[0]_i_3__0_n_6 ,\hsexit_count_reg[0]_i_3__0_n_7 }),
        .S({hsexit_count_reg[3:1],\hsexit_count[0]_i_4__0_n_0 }));
  FDRE \hsexit_count_reg[10] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__0_n_0 ),
        .D(\hsexit_count_reg[8]_i_1__0_n_5 ),
        .Q(hsexit_count_reg[10]),
        .R(\hsexit_count[0]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[11] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__0_n_0 ),
        .D(\hsexit_count_reg[8]_i_1__0_n_4 ),
        .Q(hsexit_count_reg[11]),
        .R(\hsexit_count[0]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[12] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__0_n_0 ),
        .D(\hsexit_count_reg[12]_i_1__0_n_7 ),
        .Q(hsexit_count_reg[12]),
        .R(\hsexit_count[0]_i_1__0_n_0 ));
  CARRY4 \hsexit_count_reg[12]_i_1__0 
       (.CI(\hsexit_count_reg[8]_i_1__0_n_0 ),
        .CO(\NLW_hsexit_count_reg[12]_i_1__0_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_hsexit_count_reg[12]_i_1__0_O_UNCONNECTED [3:1],\hsexit_count_reg[12]_i_1__0_n_7 }),
        .S({1'b0,1'b0,1'b0,hsexit_count_reg[12]}));
  FDRE \hsexit_count_reg[1] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__0_n_0 ),
        .D(\hsexit_count_reg[0]_i_3__0_n_6 ),
        .Q(hsexit_count_reg[1]),
        .R(\hsexit_count[0]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[2] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__0_n_0 ),
        .D(\hsexit_count_reg[0]_i_3__0_n_5 ),
        .Q(hsexit_count_reg[2]),
        .R(\hsexit_count[0]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[3] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__0_n_0 ),
        .D(\hsexit_count_reg[0]_i_3__0_n_4 ),
        .Q(hsexit_count_reg[3]),
        .R(\hsexit_count[0]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[4] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__0_n_0 ),
        .D(\hsexit_count_reg[4]_i_1__0_n_7 ),
        .Q(hsexit_count_reg[4]),
        .R(\hsexit_count[0]_i_1__0_n_0 ));
  CARRY4 \hsexit_count_reg[4]_i_1__0 
       (.CI(\hsexit_count_reg[0]_i_3__0_n_0 ),
        .CO({\hsexit_count_reg[4]_i_1__0_n_0 ,\hsexit_count_reg[4]_i_1__0_n_1 ,\hsexit_count_reg[4]_i_1__0_n_2 ,\hsexit_count_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\hsexit_count_reg[4]_i_1__0_n_4 ,\hsexit_count_reg[4]_i_1__0_n_5 ,\hsexit_count_reg[4]_i_1__0_n_6 ,\hsexit_count_reg[4]_i_1__0_n_7 }),
        .S(hsexit_count_reg[7:4]));
  FDRE \hsexit_count_reg[5] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__0_n_0 ),
        .D(\hsexit_count_reg[4]_i_1__0_n_6 ),
        .Q(hsexit_count_reg[5]),
        .R(\hsexit_count[0]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[6] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__0_n_0 ),
        .D(\hsexit_count_reg[4]_i_1__0_n_5 ),
        .Q(hsexit_count_reg[6]),
        .R(\hsexit_count[0]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[7] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__0_n_0 ),
        .D(\hsexit_count_reg[4]_i_1__0_n_4 ),
        .Q(hsexit_count_reg[7]),
        .R(\hsexit_count[0]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[8] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__0_n_0 ),
        .D(\hsexit_count_reg[8]_i_1__0_n_7 ),
        .Q(hsexit_count_reg[8]),
        .R(\hsexit_count[0]_i_1__0_n_0 ));
  CARRY4 \hsexit_count_reg[8]_i_1__0 
       (.CI(\hsexit_count_reg[4]_i_1__0_n_0 ),
        .CO({\hsexit_count_reg[8]_i_1__0_n_0 ,\hsexit_count_reg[8]_i_1__0_n_1 ,\hsexit_count_reg[8]_i_1__0_n_2 ,\hsexit_count_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\hsexit_count_reg[8]_i_1__0_n_4 ,\hsexit_count_reg[8]_i_1__0_n_5 ,\hsexit_count_reg[8]_i_1__0_n_6 ,\hsexit_count_reg[8]_i_1__0_n_7 }),
        .S(hsexit_count_reg[11:8]));
  FDRE \hsexit_count_reg[9] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2__0_n_0 ),
        .D(\hsexit_count_reg[8]_i_1__0_n_6 ),
        .Q(hsexit_count_reg[9]),
        .R(\hsexit_count[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h04)) 
    lp_01_r_i_1__1
       (.I0(\lp_st01_cnt_reg_n_0_[1] ),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .I2(\lp_st01_cnt[1]_i_2__1_n_0 ),
        .O(lp_01_r));
  FDCE lp_01_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_01_r),
        .Q(lp_01_r_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \lp_st01_cnt[0]_i_1__1 
       (.I0(en_lp_01_cnt_reg_n_0),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT4 #(
    .INIT(16'h20C0)) 
    \lp_st01_cnt[1]_i_1__1 
       (.I0(\lp_st01_cnt[1]_i_2__1_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    \lp_st01_cnt[1]_i_2__1 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .I3(\lp_st01_cnt_reg_n_0_[5] ),
        .I4(\lp_st01_cnt_reg_n_0_[6] ),
        .O(\lp_st01_cnt[1]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'h7080)) 
    \lp_st01_cnt[2]_i_1__1 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[2] ),
        .O(lp_st01_cnt[2]));
  LUT6 #(
    .INIT(64'h76FF000088000000)) 
    \lp_st01_cnt[3]_i_1__1 
       (.I0(\lp_st01_cnt_reg_n_0_[2] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt[3]_i_2__1_n_0 ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[3] ),
        .O(lp_st01_cnt[3]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \lp_st01_cnt[3]_i_2__1 
       (.I0(\lp_st01_cnt_reg_n_0_[6] ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[3]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \lp_st01_cnt[4]_i_1__1 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[1] ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[4] ),
        .O(lp_st01_cnt[4]));
  LUT6 #(
    .INIT(64'hBFFF000040000000)) 
    \lp_st01_cnt[5]_i_1__1 
       (.I0(\lp_st01_cnt[5]_i_2__1_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[3] ),
        .I3(\lp_st01_cnt_reg_n_0_[4] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[5] ),
        .O(lp_st01_cnt[5]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \lp_st01_cnt[5]_i_2__1 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .O(\lp_st01_cnt[5]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT4 #(
    .INIT(16'hB040)) 
    \lp_st01_cnt[6]_i_1__1 
       (.I0(\lp_st01_cnt[6]_i_2__1_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[6] ),
        .O(lp_st01_cnt[6]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \lp_st01_cnt[6]_i_2__1 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt_reg_n_0_[2] ),
        .I3(\lp_st01_cnt_reg_n_0_[3] ),
        .I4(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[6]_i_2__1_n_0 ));
  FDCE \lp_st01_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[0]),
        .Q(\lp_st01_cnt_reg_n_0_[0] ));
  FDCE \lp_st01_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[1]),
        .Q(\lp_st01_cnt_reg_n_0_[1] ));
  FDCE \lp_st01_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[2]),
        .Q(\lp_st01_cnt_reg_n_0_[2] ));
  FDCE \lp_st01_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[3]),
        .Q(\lp_st01_cnt_reg_n_0_[3] ));
  FDCE \lp_st01_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[4]),
        .Q(\lp_st01_cnt_reg_n_0_[4] ));
  FDCE \lp_st01_cnt_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[5]),
        .Q(\lp_st01_cnt_reg_n_0_[5] ));
  FDCE \lp_st01_cnt_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[6]),
        .Q(\lp_st01_cnt_reg_n_0_[6] ));
  LUT1 #(
    .INIT(2'h1)) 
    \prepare_count[0]_i_1__0 
       (.I0(prepare_count_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \prepare_count[1]_i_1__0 
       (.I0(prepare_count_reg[0]),
        .I1(prepare_count_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \prepare_count[2]_i_1__0 
       (.I0(prepare_count_reg[0]),
        .I1(prepare_count_reg[1]),
        .I2(prepare_count_reg[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \prepare_count[3]_i_1__0 
       (.I0(prepare_count_reg[1]),
        .I1(prepare_count_reg[0]),
        .I2(prepare_count_reg[2]),
        .I3(prepare_count_reg[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \prepare_count[4]_i_1__0 
       (.I0(prepare_count_reg[2]),
        .I1(prepare_count_reg[0]),
        .I2(prepare_count_reg[1]),
        .I3(prepare_count_reg[3]),
        .I4(prepare_count_reg[4]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \prepare_count[5]_i_1__0 
       (.I0(prepare_count_reg[3]),
        .I1(prepare_count_reg[1]),
        .I2(prepare_count_reg[0]),
        .I3(prepare_count_reg[2]),
        .I4(prepare_count_reg[4]),
        .I5(prepare_count_reg[5]),
        .O(p_0_in__0[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \prepare_count[6]_i_1__0 
       (.I0(\prepare_count[8]_i_4__0_n_0 ),
        .I1(prepare_count_reg[6]),
        .O(p_0_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \prepare_count[7]_i_1__0 
       (.I0(\prepare_count[8]_i_4__0_n_0 ),
        .I1(prepare_count_reg[6]),
        .I2(prepare_count_reg[7]),
        .O(p_0_in__0[7]));
  LUT3 #(
    .INIT(8'hEF)) 
    \prepare_count[8]_i_1__0 
       (.I0(\dl_tx_sm_state_reg_n_0_[0] ),
        .I1(\dl_tx_sm_state_reg_n_0_[1] ),
        .I2(\dl_tx_sm_state_reg_n_0_[2] ),
        .O(prepare_count));
  LUT1 #(
    .INIT(2'h1)) 
    \prepare_count[8]_i_2__0 
       (.I0(timeout_prepare0_carry__0_n_3),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \prepare_count[8]_i_3__0 
       (.I0(prepare_count_reg[6]),
        .I1(\prepare_count[8]_i_4__0_n_0 ),
        .I2(prepare_count_reg[7]),
        .I3(prepare_count_reg[8]),
        .O(p_0_in__0[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \prepare_count[8]_i_4__0 
       (.I0(prepare_count_reg[5]),
        .I1(prepare_count_reg[3]),
        .I2(prepare_count_reg[1]),
        .I3(prepare_count_reg[0]),
        .I4(prepare_count_reg[2]),
        .I5(prepare_count_reg[4]),
        .O(\prepare_count[8]_i_4__0_n_0 ));
  FDRE \prepare_count_reg[0] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[0]),
        .Q(prepare_count_reg[0]),
        .R(prepare_count));
  FDRE \prepare_count_reg[1] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[1]),
        .Q(prepare_count_reg[1]),
        .R(prepare_count));
  FDRE \prepare_count_reg[2] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[2]),
        .Q(prepare_count_reg[2]),
        .R(prepare_count));
  FDRE \prepare_count_reg[3] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[3]),
        .Q(prepare_count_reg[3]),
        .R(prepare_count));
  FDRE \prepare_count_reg[4] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[4]),
        .Q(prepare_count_reg[4]),
        .R(prepare_count));
  FDRE \prepare_count_reg[5] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[5]),
        .Q(prepare_count_reg[5]),
        .R(prepare_count));
  FDRE \prepare_count_reg[6] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[6]),
        .Q(prepare_count_reg[6]),
        .R(prepare_count));
  FDRE \prepare_count_reg[7] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[7]),
        .Q(prepare_count_reg[7]),
        .R(prepare_count));
  FDRE \prepare_count_reg[8] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[8]),
        .Q(prepare_count_reg[8]),
        .R(prepare_count));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_63 timeout_hs_tx_sync_i
       (.core_clk(core_clk),
        .core_rst(core_rst));
  CARRY4 timeout_hsexit0_carry
       (.CI(1'b0),
        .CO({timeout_hsexit0_carry_n_0,timeout_hsexit0_carry_n_1,timeout_hsexit0_carry_n_2,timeout_hsexit0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({timeout_hsexit0_carry_i_1__0_n_0,hsexit_count_reg[5],timeout_hsexit0_carry_i_2__0_n_0,timeout_hsexit0_carry_i_3__0_n_0}),
        .O(NLW_timeout_hsexit0_carry_O_UNCONNECTED[3:0]),
        .S({timeout_hsexit0_carry_i_4__0_n_0,timeout_hsexit0_carry_i_5__0_n_0,timeout_hsexit0_carry_i_6__0_n_0,timeout_hsexit0_carry_i_7__0_n_0}));
  CARRY4 timeout_hsexit0_carry__0
       (.CI(timeout_hsexit0_carry_n_0),
        .CO({NLW_timeout_hsexit0_carry__0_CO_UNCONNECTED[3],timeout_hsexit0_carry__0_n_1,timeout_hsexit0_carry__0_n_2,timeout_hsexit0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,hsexit_count_reg[12],timeout_hsexit0_carry__0_i_1__0_n_0,timeout_hsexit0_carry__0_i_2__0_n_0}),
        .O(NLW_timeout_hsexit0_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,timeout_hsexit0_carry__0_i_3__0_n_0,timeout_hsexit0_carry__0_i_4__0_n_0,timeout_hsexit0_carry__0_i_5__0_n_0}));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_hsexit0_carry__0_i_1__0
       (.I0(hsexit_count_reg[10]),
        .I1(hsexit_count_reg[11]),
        .O(timeout_hsexit0_carry__0_i_1__0_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_hsexit0_carry__0_i_2__0
       (.I0(hsexit_count_reg[8]),
        .I1(hsexit_count_reg[9]),
        .O(timeout_hsexit0_carry__0_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    timeout_hsexit0_carry__0_i_3__0
       (.I0(hsexit_count_reg[12]),
        .O(timeout_hsexit0_carry__0_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_hsexit0_carry__0_i_4__0
       (.I0(hsexit_count_reg[11]),
        .I1(hsexit_count_reg[10]),
        .O(timeout_hsexit0_carry__0_i_4__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_hsexit0_carry__0_i_5__0
       (.I0(hsexit_count_reg[9]),
        .I1(hsexit_count_reg[8]),
        .O(timeout_hsexit0_carry__0_i_5__0_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_hsexit0_carry_i_1__0
       (.I0(hsexit_count_reg[6]),
        .I1(hsexit_count_reg[7]),
        .O(timeout_hsexit0_carry_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    timeout_hsexit0_carry_i_2__0
       (.I0(hsexit_count_reg[2]),
        .I1(hsexit_count_reg[3]),
        .O(timeout_hsexit0_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_hsexit0_carry_i_3__0
       (.I0(hsexit_count_reg[0]),
        .I1(hsexit_count_reg[1]),
        .O(timeout_hsexit0_carry_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_hsexit0_carry_i_4__0
       (.I0(hsexit_count_reg[7]),
        .I1(hsexit_count_reg[6]),
        .O(timeout_hsexit0_carry_i_4__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    timeout_hsexit0_carry_i_5__0
       (.I0(hsexit_count_reg[4]),
        .I1(hsexit_count_reg[5]),
        .O(timeout_hsexit0_carry_i_5__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    timeout_hsexit0_carry_i_6__0
       (.I0(hsexit_count_reg[3]),
        .I1(hsexit_count_reg[2]),
        .O(timeout_hsexit0_carry_i_6__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_hsexit0_carry_i_7__0
       (.I0(hsexit_count_reg[1]),
        .I1(hsexit_count_reg[0]),
        .O(timeout_hsexit0_carry_i_7__0_n_0));
  LUT6 #(
    .INIT(64'h55F5555555D55555)) 
    timeout_hsexit_i_1__0
       (.I0(timeout_hsexit_reg_0),
        .I1(timeout_hsexit),
        .I2(\dl_tx_sm_state_reg_n_0_[1] ),
        .I3(\dl_tx_sm_state_reg_n_0_[0] ),
        .I4(\dl_tx_sm_state_reg_n_0_[2] ),
        .I5(timeout_hsexit0_carry__0_n_1),
        .O(timeout_hsexit_i_1__0_n_0));
  FDRE timeout_hsexit_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(timeout_hsexit_i_1__0_n_0),
        .Q(timeout_hsexit),
        .R(1'b0));
  CARRY4 timeout_prepare0_carry
       (.CI(1'b0),
        .CO({timeout_prepare0_carry_n_0,timeout_prepare0_carry_n_1,timeout_prepare0_carry_n_2,timeout_prepare0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({timeout_prepare0_carry_i_1__0_n_0,timeout_prepare0_carry_i_2__0_n_0,timeout_prepare0_carry_i_3__0_n_0,timeout_prepare0_carry_i_4__0_n_0}),
        .O(NLW_timeout_prepare0_carry_O_UNCONNECTED[3:0]),
        .S({timeout_prepare0_carry_i_5__0_n_0,timeout_prepare0_carry_i_6__0_n_0,timeout_prepare0_carry_i_7__0_n_0,timeout_prepare0_carry_i_8__0_n_0}));
  CARRY4 timeout_prepare0_carry__0
       (.CI(timeout_prepare0_carry_n_0),
        .CO({NLW_timeout_prepare0_carry__0_CO_UNCONNECTED[3:1],timeout_prepare0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,prepare_count_reg[8]}),
        .O(NLW_timeout_prepare0_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,timeout_prepare0_carry__0_i_1__0_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    timeout_prepare0_carry__0_i_1__0
       (.I0(prepare_count_reg[8]),
        .O(timeout_prepare0_carry__0_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h555599A9AAAAAAAA)) 
    timeout_prepare0_carry_i_10__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__99_carry__2_n_1),
        .I2(PREPARE_TIMEOUT0__71_carry__1_n_6),
        .I3(PREPARE_TIMEOUT1_n_88),
        .I4(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I5(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(timeout_prepare0_carry_i_10__0_n_0));
  LUT5 #(
    .INIT(32'h55555A9A)) 
    timeout_prepare0_carry_i_11__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(timeout_prepare0_carry_i_12__0_n_0),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(timeout_prepare0_carry_i_11__0_n_0));
  LUT3 #(
    .INIT(8'hF4)) 
    timeout_prepare0_carry_i_12__0
       (.I0(PREPARE_TIMEOUT1_n_88),
        .I1(PREPARE_TIMEOUT0__71_carry__1_n_6),
        .I2(PREPARE_TIMEOUT0__99_carry__2_n_1),
        .O(timeout_prepare0_carry_i_12__0_n_0));
  LUT6 #(
    .INIT(64'hA999AA9956665566)) 
    timeout_prepare0_carry_i_13__0
       (.I0(prepare_count_reg[3]),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I4(timeout_prepare0_carry_i_12__0_n_0),
        .I5(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(timeout_prepare0_carry_i_13__0_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_prepare0_carry_i_1__0
       (.I0(prepare_count_reg[6]),
        .I1(prepare_count_reg[7]),
        .O(timeout_prepare0_carry_i_1__0_n_0));
  LUT3 #(
    .INIT(8'hF8)) 
    timeout_prepare0_carry_i_2__0
       (.I0(prepare_count_reg[4]),
        .I1(timeout_prepare0_carry_i_9__0_n_0),
        .I2(prepare_count_reg[5]),
        .O(timeout_prepare0_carry_i_2__0_n_0));
  LUT4 #(
    .INIT(16'hF880)) 
    timeout_prepare0_carry_i_3__0
       (.I0(timeout_prepare0_carry_i_10__0_n_0),
        .I1(prepare_count_reg[2]),
        .I2(prepare_count_reg[3]),
        .I3(timeout_prepare0_carry_i_11__0_n_0),
        .O(timeout_prepare0_carry_i_3__0_n_0));
  LUT5 #(
    .INIT(32'hEC3E8008)) 
    timeout_prepare0_carry_i_4__0
       (.I0(prepare_count_reg[0]),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I2(timeout_prepare0_carry_i_12__0_n_0),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(prepare_count_reg[1]),
        .O(timeout_prepare0_carry_i_4__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_prepare0_carry_i_5__0
       (.I0(prepare_count_reg[7]),
        .I1(prepare_count_reg[6]),
        .O(timeout_prepare0_carry_i_5__0_n_0));
  LUT3 #(
    .INIT(8'h06)) 
    timeout_prepare0_carry_i_6__0
       (.I0(timeout_prepare0_carry_i_9__0_n_0),
        .I1(prepare_count_reg[4]),
        .I2(prepare_count_reg[5]),
        .O(timeout_prepare0_carry_i_6__0_n_0));
  LUT6 #(
    .INIT(64'h8222828228882828)) 
    timeout_prepare0_carry_i_7__0
       (.I0(timeout_prepare0_carry_i_13__0_n_0),
        .I1(prepare_count_reg[2]),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(timeout_prepare0_carry_i_12__0_n_0),
        .I5(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(timeout_prepare0_carry_i_7__0_n_0));
  LUT5 #(
    .INIT(32'h42240990)) 
    timeout_prepare0_carry_i_8__0
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(timeout_prepare0_carry_i_12__0_n_0),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(prepare_count_reg[1]),
        .I4(prepare_count_reg[0]),
        .O(timeout_prepare0_carry_i_8__0_n_0));
  LUT6 #(
    .INIT(64'h5555555555595A5A)) 
    timeout_prepare0_carry_i_9__0
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(timeout_prepare0_carry_i_12__0_n_0),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I5(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(timeout_prepare0_carry_i_9__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT5 #(
    .INIT(32'h03000200)) 
    timeout_prepare_i_1__0
       (.I0(timeout_prepare0_carry__0_n_3),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .I2(\dl_tx_sm_state_reg_n_0_[1] ),
        .I3(\dl_tx_sm_state_reg_n_0_[2] ),
        .I4(timeout_prepare),
        .O(timeout_prepare_i_1__0_n_0));
  FDRE timeout_prepare_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(timeout_prepare_i_1__0_n_0),
        .Q(timeout_prepare),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT4 #(
    .INIT(16'h1101)) 
    tx_dl_lp_dn_i_2__1
       (.I0(\dl_tx_sm_state_reg_n_0_[1] ),
        .I1(\dl_tx_sm_state_reg_n_0_[2] ),
        .I2(\dl_tx_sm_state_reg_n_0_[0] ),
        .I3(cl_init_done_coreclk_i),
        .O(tx_dl_lp_dn_i_2__1_n_0));
  FDPE tx_dl_lp_dn_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_txrequesths_sync_i_n_1),
        .PRE(core_rst),
        .Q(tx_dl_lp_dn_hs_i));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'h40)) 
    tx_dl_lp_dp_i_5__1
       (.I0(\dl_tx_sm_state_reg_n_0_[1] ),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .I2(dl_tx_sm_state0__0),
        .O(tx_dl_lp_dp_i_5__1_n_0));
  FDPE tx_dl_lp_dp_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_enable_sync_i_n_0),
        .PRE(core_rst),
        .Q(tx_dl_lp_dp_hs_i));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_data_lane_sm" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_data_lane_sm_72
   (out,
    timeout_hsexit_reg_0,
    dl_status_reg,
    en_cal_hs_datapath_i,
    esc_start_i,
    tx_dl_lp_dp_hs_i,
    tx_dl_lp_dn_hs_i,
    dl_stopstate_reg_0,
    core_rst,
    dl0_enable,
    core_clk,
    dl_txrequesths_r,
    dl0_txrequestesc,
    dl0_forcetxstopmode,
    s_level_out_d1_cdc_to_reg,
    cl_init_done_coreclk_i,
    timeout_hsexit_reg_1,
    \dl_tx_sm_state[1]_i_4 ,
    cl_txclkactivehs_i,
    dl_tx_sm_state0__0,
    tx_dl_lp_dp_reg_0,
    timeout_hsexit_all,
    dl_stopstate_coreclk_reg);
  output out;
  output timeout_hsexit_reg_0;
  output [0:0]dl_status_reg;
  output en_cal_hs_datapath_i;
  output esc_start_i;
  output tx_dl_lp_dp_hs_i;
  output tx_dl_lp_dn_hs_i;
  output dl_stopstate_reg_0;
  input core_rst;
  input dl0_enable;
  input core_clk;
  input dl_txrequesths_r;
  input dl0_txrequestesc;
  input dl0_forcetxstopmode;
  input s_level_out_d1_cdc_to_reg;
  input cl_init_done_coreclk_i;
  input timeout_hsexit_reg_1;
  input \dl_tx_sm_state[1]_i_4 ;
  input cl_txclkactivehs_i;
  input dl_tx_sm_state0__0;
  input tx_dl_lp_dp_reg_0;
  input timeout_hsexit_all;
  input dl_stopstate_coreclk_reg;

  wire PREPARE_TIMEOUT0__0_carry__0_i_1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_3_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_4_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_5_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_6_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_7_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_i_8_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_n_0;
  wire PREPARE_TIMEOUT0__0_carry__0_n_1;
  wire PREPARE_TIMEOUT0__0_carry__0_n_2;
  wire PREPARE_TIMEOUT0__0_carry__0_n_3;
  wire PREPARE_TIMEOUT0__0_carry__1_i_1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_3_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_4_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_5_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_6_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_7_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_i_8_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__1_n_1;
  wire PREPARE_TIMEOUT0__0_carry__1_n_2;
  wire PREPARE_TIMEOUT0__0_carry__1_n_3;
  wire PREPARE_TIMEOUT0__0_carry__2_i_1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_3_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_4_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_5_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_6_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_7_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_i_8_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__2_n_1;
  wire PREPARE_TIMEOUT0__0_carry__2_n_2;
  wire PREPARE_TIMEOUT0__0_carry__2_n_3;
  wire PREPARE_TIMEOUT0__0_carry__2_n_4;
  wire PREPARE_TIMEOUT0__0_carry__2_n_5;
  wire PREPARE_TIMEOUT0__0_carry__3_i_1_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_2_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_3_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_4_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_5_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_6_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_i_7_n_0;
  wire PREPARE_TIMEOUT0__0_carry__3_n_1;
  wire PREPARE_TIMEOUT0__0_carry__3_n_2;
  wire PREPARE_TIMEOUT0__0_carry__3_n_3;
  wire PREPARE_TIMEOUT0__0_carry__3_n_4;
  wire PREPARE_TIMEOUT0__0_carry__3_n_5;
  wire PREPARE_TIMEOUT0__0_carry__3_n_6;
  wire PREPARE_TIMEOUT0__0_carry__3_n_7;
  wire PREPARE_TIMEOUT0__0_carry_i_1_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_2_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_3_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_4_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_5_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_6_n_0;
  wire PREPARE_TIMEOUT0__0_carry_i_7_n_0;
  wire PREPARE_TIMEOUT0__0_carry_n_0;
  wire PREPARE_TIMEOUT0__0_carry_n_1;
  wire PREPARE_TIMEOUT0__0_carry_n_2;
  wire PREPARE_TIMEOUT0__0_carry_n_3;
  wire PREPARE_TIMEOUT0__44_carry__0_i_1_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_2_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_3_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_4_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_5_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_6_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_i_7_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_n_0;
  wire PREPARE_TIMEOUT0__44_carry__0_n_1;
  wire PREPARE_TIMEOUT0__44_carry__0_n_2;
  wire PREPARE_TIMEOUT0__44_carry__0_n_3;
  wire PREPARE_TIMEOUT0__44_carry__0_n_4;
  wire PREPARE_TIMEOUT0__44_carry__0_n_5;
  wire PREPARE_TIMEOUT0__44_carry__0_n_6;
  wire PREPARE_TIMEOUT0__44_carry__0_n_7;
  wire PREPARE_TIMEOUT0__44_carry__1_i_1_n_0;
  wire PREPARE_TIMEOUT0__44_carry__1_n_2;
  wire PREPARE_TIMEOUT0__44_carry__1_n_7;
  wire PREPARE_TIMEOUT0__44_carry_i_1_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_2_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_3_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_4_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_5_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_6_n_0;
  wire PREPARE_TIMEOUT0__44_carry_i_7_n_0;
  wire PREPARE_TIMEOUT0__44_carry_n_0;
  wire PREPARE_TIMEOUT0__44_carry_n_1;
  wire PREPARE_TIMEOUT0__44_carry_n_2;
  wire PREPARE_TIMEOUT0__44_carry_n_3;
  wire PREPARE_TIMEOUT0__44_carry_n_4;
  wire PREPARE_TIMEOUT0__44_carry_n_5;
  wire PREPARE_TIMEOUT0__44_carry_n_6;
  wire PREPARE_TIMEOUT0__44_carry_n_7;
  wire PREPARE_TIMEOUT0__71_carry__0_i_1_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_2_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_3_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_4_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_5_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_6_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_i_7_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_n_0;
  wire PREPARE_TIMEOUT0__71_carry__0_n_1;
  wire PREPARE_TIMEOUT0__71_carry__0_n_2;
  wire PREPARE_TIMEOUT0__71_carry__0_n_3;
  wire PREPARE_TIMEOUT0__71_carry__0_n_4;
  wire PREPARE_TIMEOUT0__71_carry__0_n_5;
  wire PREPARE_TIMEOUT0__71_carry__0_n_6;
  wire PREPARE_TIMEOUT0__71_carry__0_n_7;
  wire PREPARE_TIMEOUT0__71_carry__1_i_1_n_0;
  wire PREPARE_TIMEOUT0__71_carry__1_i_2_n_0;
  wire PREPARE_TIMEOUT0__71_carry__1_i_3_n_0;
  wire PREPARE_TIMEOUT0__71_carry__1_n_3;
  wire PREPARE_TIMEOUT0__71_carry__1_n_6;
  wire PREPARE_TIMEOUT0__71_carry__1_n_7;
  wire PREPARE_TIMEOUT0__71_carry_i_1_n_0;
  wire PREPARE_TIMEOUT0__71_carry_i_2_n_0;
  wire PREPARE_TIMEOUT0__71_carry_i_3_n_0;
  wire PREPARE_TIMEOUT0__71_carry_n_0;
  wire PREPARE_TIMEOUT0__71_carry_n_1;
  wire PREPARE_TIMEOUT0__71_carry_n_2;
  wire PREPARE_TIMEOUT0__71_carry_n_3;
  wire PREPARE_TIMEOUT0__71_carry_n_4;
  wire PREPARE_TIMEOUT0__71_carry_n_5;
  wire PREPARE_TIMEOUT0__71_carry_n_6;
  wire PREPARE_TIMEOUT0__71_carry_n_7;
  wire PREPARE_TIMEOUT0__99_carry__0_i_1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_3_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_4_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_5_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_6_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_7_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_i_8_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_n_0;
  wire PREPARE_TIMEOUT0__99_carry__0_n_1;
  wire PREPARE_TIMEOUT0__99_carry__0_n_2;
  wire PREPARE_TIMEOUT0__99_carry__0_n_3;
  wire PREPARE_TIMEOUT0__99_carry__1_i_1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_3_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_4_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_5_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_6_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_7_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_i_8_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__1_n_1;
  wire PREPARE_TIMEOUT0__99_carry__1_n_2;
  wire PREPARE_TIMEOUT0__99_carry__1_n_3;
  wire PREPARE_TIMEOUT0__99_carry__2_i_1_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_2_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_3_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_4_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_5_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_i_6_n_0;
  wire PREPARE_TIMEOUT0__99_carry__2_n_1;
  wire PREPARE_TIMEOUT0__99_carry__2_n_2;
  wire PREPARE_TIMEOUT0__99_carry__2_n_3;
  wire PREPARE_TIMEOUT0__99_carry_i_1_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_2_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_3_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_4_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_5_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_6_n_0;
  wire PREPARE_TIMEOUT0__99_carry_i_7_n_0;
  wire PREPARE_TIMEOUT0__99_carry_n_0;
  wire PREPARE_TIMEOUT0__99_carry_n_1;
  wire PREPARE_TIMEOUT0__99_carry_n_2;
  wire PREPARE_TIMEOUT0__99_carry_n_3;
  wire PREPARE_TIMEOUT1_n_100;
  wire PREPARE_TIMEOUT1_n_101;
  wire PREPARE_TIMEOUT1_n_102;
  wire PREPARE_TIMEOUT1_n_103;
  wire PREPARE_TIMEOUT1_n_104;
  wire PREPARE_TIMEOUT1_n_105;
  wire PREPARE_TIMEOUT1_n_88;
  wire PREPARE_TIMEOUT1_n_89;
  wire PREPARE_TIMEOUT1_n_90;
  wire PREPARE_TIMEOUT1_n_91;
  wire PREPARE_TIMEOUT1_n_92;
  wire PREPARE_TIMEOUT1_n_93;
  wire PREPARE_TIMEOUT1_n_94;
  wire PREPARE_TIMEOUT1_n_95;
  wire PREPARE_TIMEOUT1_n_96;
  wire PREPARE_TIMEOUT1_n_97;
  wire PREPARE_TIMEOUT1_n_98;
  wire PREPARE_TIMEOUT1_n_99;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl0_enable;
  wire dl0_forcetxstopmode;
  wire dl0_txrequestesc;
  wire dl_enable_sync_i_n_0;
  wire dl_enable_sync_i_n_2;
  wire dl_forcetxstopmode_sync_i_n_0;
  wire dl_status_bit_6_i_3_n_0;
  wire [0:0]dl_status_reg;
  wire dl_stopstate_coreclk_reg;
  wire dl_stopstate_i;
  wire dl_stopstate_reg_0;
  wire dl_tx_sm_state0__0;
  wire dl_tx_sm_state120_out;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state[1]_i_4 ;
  wire \dl_tx_sm_state[2]_i_11_n_0 ;
  wire \dl_tx_sm_state_reg_n_0_[0] ;
  wire \dl_tx_sm_state_reg_n_0_[1] ;
  wire \dl_tx_sm_state_reg_n_0_[2] ;
  wire dl_txrequestesc_sync_i_n_0;
  wire dl_txrequestesc_sync_i_n_1;
  wire dl_txrequestesc_sync_i_n_2;
  wire dl_txrequestesc_sync_i_n_3;
  wire dl_txrequestesc_sync_i_n_5;
  wire dl_txrequestesc_sync_i_n_6;
  wire dl_txrequestesc_sync_i_n_7;
  wire dl_txrequestesc_sync_i_n_8;
  wire dl_txrequesths_r;
  wire dl_txrequesths_sync;
  wire dl_txrequesths_sync_i_n_1;
  wire dl_txrequesths_sync_i_n_2;
  wire dl_txrequesths_sync_i_n_4;
  wire dl_txrequesths_sync_i_n_6;
  wire dl_txrequesths_sync_i_n_7;
  wire dl_txskewcalhs_sync_i_n_0;
  wire dl_txskewcalhs_sync_i_n_1;
  wire dl_txskewcalhs_sync_i_n_2;
  wire dl_txskewcalhs_sync_i_n_3;
  wire dl_txskewcalhs_sync_i_n_4;
  wire dl_txskewcalhs_sync_i_n_6;
  wire dl_txskewcalhs_sync_i_n_7;
  wire dl_txskewcalhs_sync_i_n_8;
  wire en_cal_hs_datapath_i;
  wire en_hs_start_w__4;
  wire en_lp_01_cnt__4;
  wire en_lp_01_cnt_reg_n_0;
  wire esc_active_sync;
  wire esc_active_sync_i_n_1;
  wire esc_active_sync_i_n_2;
  wire esc_active_sync_r;
  wire esc_start_i;
  wire \hsexit_count[0]_i_1_n_0 ;
  wire \hsexit_count[0]_i_2_n_0 ;
  wire \hsexit_count[0]_i_4_n_0 ;
  wire [12:0]hsexit_count_reg;
  wire \hsexit_count_reg[0]_i_3_n_0 ;
  wire \hsexit_count_reg[0]_i_3_n_1 ;
  wire \hsexit_count_reg[0]_i_3_n_2 ;
  wire \hsexit_count_reg[0]_i_3_n_3 ;
  wire \hsexit_count_reg[0]_i_3_n_4 ;
  wire \hsexit_count_reg[0]_i_3_n_5 ;
  wire \hsexit_count_reg[0]_i_3_n_6 ;
  wire \hsexit_count_reg[0]_i_3_n_7 ;
  wire \hsexit_count_reg[12]_i_1_n_7 ;
  wire \hsexit_count_reg[4]_i_1_n_0 ;
  wire \hsexit_count_reg[4]_i_1_n_1 ;
  wire \hsexit_count_reg[4]_i_1_n_2 ;
  wire \hsexit_count_reg[4]_i_1_n_3 ;
  wire \hsexit_count_reg[4]_i_1_n_4 ;
  wire \hsexit_count_reg[4]_i_1_n_5 ;
  wire \hsexit_count_reg[4]_i_1_n_6 ;
  wire \hsexit_count_reg[4]_i_1_n_7 ;
  wire \hsexit_count_reg[8]_i_1_n_0 ;
  wire \hsexit_count_reg[8]_i_1_n_1 ;
  wire \hsexit_count_reg[8]_i_1_n_2 ;
  wire \hsexit_count_reg[8]_i_1_n_3 ;
  wire \hsexit_count_reg[8]_i_1_n_4 ;
  wire \hsexit_count_reg[8]_i_1_n_5 ;
  wire \hsexit_count_reg[8]_i_1_n_6 ;
  wire \hsexit_count_reg[8]_i_1_n_7 ;
  wire lp_01_r;
  wire lp_01_r_reg_n_0;
  wire [6:0]lp_st01_cnt;
  wire \lp_st01_cnt[1]_i_2__0_n_0 ;
  wire \lp_st01_cnt[3]_i_2__0_n_0 ;
  wire \lp_st01_cnt[5]_i_2__0_n_0 ;
  wire \lp_st01_cnt[6]_i_2__0_n_0 ;
  wire \lp_st01_cnt_reg_n_0_[0] ;
  wire \lp_st01_cnt_reg_n_0_[1] ;
  wire \lp_st01_cnt_reg_n_0_[2] ;
  wire \lp_st01_cnt_reg_n_0_[3] ;
  wire \lp_st01_cnt_reg_n_0_[4] ;
  wire \lp_st01_cnt_reg_n_0_[5] ;
  wire \lp_st01_cnt_reg_n_0_[6] ;
  (* DONT_TOUCH *) wire out;
  wire p_0_in23_out;
  wire [8:0]p_0_in__0;
  wire p_21_in;
  wire prepare_count;
  wire \prepare_count[8]_i_4_n_0 ;
  wire [8:0]prepare_count_reg;
  wire s_level_out_d1_cdc_to_reg;
  wire sel;
  wire timeout_hsexit0_carry__0_i_1_n_0;
  wire timeout_hsexit0_carry__0_i_2_n_0;
  wire timeout_hsexit0_carry__0_i_3_n_0;
  wire timeout_hsexit0_carry__0_i_4_n_0;
  wire timeout_hsexit0_carry__0_i_5_n_0;
  wire timeout_hsexit0_carry__0_n_1;
  wire timeout_hsexit0_carry__0_n_2;
  wire timeout_hsexit0_carry__0_n_3;
  wire timeout_hsexit0_carry_i_1_n_0;
  wire timeout_hsexit0_carry_i_2_n_0;
  wire timeout_hsexit0_carry_i_3_n_0;
  wire timeout_hsexit0_carry_i_4_n_0;
  wire timeout_hsexit0_carry_i_5_n_0;
  wire timeout_hsexit0_carry_i_6_n_0;
  wire timeout_hsexit0_carry_i_7_n_0;
  wire timeout_hsexit0_carry_n_0;
  wire timeout_hsexit0_carry_n_1;
  wire timeout_hsexit0_carry_n_2;
  wire timeout_hsexit0_carry_n_3;
  wire timeout_hsexit_all;
  wire timeout_hsexit_i_1_n_0;
  wire timeout_hsexit_reg_0;
  wire timeout_hsexit_reg_1;
  wire timeout_prepare;
  wire timeout_prepare0_carry__0_i_1_n_0;
  wire timeout_prepare0_carry__0_n_3;
  wire timeout_prepare0_carry_i_10_n_0;
  wire timeout_prepare0_carry_i_11_n_0;
  wire timeout_prepare0_carry_i_12_n_0;
  wire timeout_prepare0_carry_i_13_n_0;
  wire timeout_prepare0_carry_i_1_n_0;
  wire timeout_prepare0_carry_i_2_n_0;
  wire timeout_prepare0_carry_i_3_n_0;
  wire timeout_prepare0_carry_i_4_n_0;
  wire timeout_prepare0_carry_i_5_n_0;
  wire timeout_prepare0_carry_i_6_n_0;
  wire timeout_prepare0_carry_i_7_n_0;
  wire timeout_prepare0_carry_i_8_n_0;
  wire timeout_prepare0_carry_i_9_n_0;
  wire timeout_prepare0_carry_n_0;
  wire timeout_prepare0_carry_n_1;
  wire timeout_prepare0_carry_n_2;
  wire timeout_prepare0_carry_n_3;
  wire timeout_prepare_i_1_n_0;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dn_i_2_n_0;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_i_5_n_0;
  wire tx_dl_lp_dp_reg_0;
  wire [3:0]NLW_PREPARE_TIMEOUT0__0_carry_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__0_carry__1_O_UNCONNECTED;
  wire [1:0]NLW_PREPARE_TIMEOUT0__0_carry__2_O_UNCONNECTED;
  wire [3:3]NLW_PREPARE_TIMEOUT0__0_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__44_carry__1_CO_UNCONNECTED;
  wire [3:1]NLW_PREPARE_TIMEOUT0__44_carry__1_O_UNCONNECTED;
  wire [3:1]NLW_PREPARE_TIMEOUT0__71_carry__1_CO_UNCONNECTED;
  wire [3:2]NLW_PREPARE_TIMEOUT0__71_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__99_carry_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__99_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__99_carry__1_O_UNCONNECTED;
  wire [3:3]NLW_PREPARE_TIMEOUT0__99_carry__2_CO_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT0__99_carry__2_O_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_OVERFLOW_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_PATTERNDETECT_UNCONNECTED;
  wire NLW_PREPARE_TIMEOUT1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_PREPARE_TIMEOUT1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_PREPARE_TIMEOUT1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_PREPARE_TIMEOUT1_CARRYOUT_UNCONNECTED;
  wire [47:18]NLW_PREPARE_TIMEOUT1_P_UNCONNECTED;
  wire [47:0]NLW_PREPARE_TIMEOUT1_PCOUT_UNCONNECTED;
  wire [3:0]\NLW_hsexit_count_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_hsexit_count_reg[12]_i_1_O_UNCONNECTED ;
  wire [3:0]NLW_timeout_hsexit0_carry_O_UNCONNECTED;
  wire [3:3]NLW_timeout_hsexit0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_timeout_hsexit0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_timeout_prepare0_carry_O_UNCONNECTED;
  wire [3:1]NLW_timeout_prepare0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_timeout_prepare0_carry__0_O_UNCONNECTED;

  CARRY4 PREPARE_TIMEOUT0__0_carry
       (.CI(1'b0),
        .CO({PREPARE_TIMEOUT0__0_carry_n_0,PREPARE_TIMEOUT0__0_carry_n_1,PREPARE_TIMEOUT0__0_carry_n_2,PREPARE_TIMEOUT0__0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry_i_1_n_0,PREPARE_TIMEOUT0__0_carry_i_2_n_0,PREPARE_TIMEOUT0__0_carry_i_3_n_0,1'b0}),
        .O(NLW_PREPARE_TIMEOUT0__0_carry_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__0_carry_i_4_n_0,PREPARE_TIMEOUT0__0_carry_i_5_n_0,PREPARE_TIMEOUT0__0_carry_i_6_n_0,PREPARE_TIMEOUT0__0_carry_i_7_n_0}));
  CARRY4 PREPARE_TIMEOUT0__0_carry__0
       (.CI(PREPARE_TIMEOUT0__0_carry_n_0),
        .CO({PREPARE_TIMEOUT0__0_carry__0_n_0,PREPARE_TIMEOUT0__0_carry__0_n_1,PREPARE_TIMEOUT0__0_carry__0_n_2,PREPARE_TIMEOUT0__0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__0_i_1_n_0,PREPARE_TIMEOUT0__0_carry__0_i_2_n_0,PREPARE_TIMEOUT0__0_carry__0_i_3_n_0,PREPARE_TIMEOUT0__0_carry__0_i_4_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__0_carry__0_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__0_carry__0_i_5_n_0,PREPARE_TIMEOUT0__0_carry__0_i_6_n_0,PREPARE_TIMEOUT0__0_carry__0_i_7_n_0,PREPARE_TIMEOUT0__0_carry__0_i_8_n_0}));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__0_i_1
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT1_n_97),
        .I2(PREPARE_TIMEOUT1_n_99),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__0_i_2
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT1_n_98),
        .I2(PREPARE_TIMEOUT1_n_100),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__0_i_3
       (.I0(PREPARE_TIMEOUT1_n_99),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_101),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_3_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__0_i_4
       (.I0(PREPARE_TIMEOUT1_n_100),
        .I1(PREPARE_TIMEOUT1_n_104),
        .I2(PREPARE_TIMEOUT1_n_102),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_4_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__0_i_5
       (.I0(PREPARE_TIMEOUT1_n_99),
        .I1(PREPARE_TIMEOUT1_n_97),
        .I2(PREPARE_TIMEOUT1_n_101),
        .I3(PREPARE_TIMEOUT1_n_100),
        .I4(PREPARE_TIMEOUT1_n_98),
        .I5(PREPARE_TIMEOUT1_n_96),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_5_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__0_i_6
       (.I0(PREPARE_TIMEOUT1_n_100),
        .I1(PREPARE_TIMEOUT1_n_98),
        .I2(PREPARE_TIMEOUT1_n_102),
        .I3(PREPARE_TIMEOUT1_n_101),
        .I4(PREPARE_TIMEOUT1_n_99),
        .I5(PREPARE_TIMEOUT1_n_97),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_6_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__0_i_7
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_99),
        .I3(PREPARE_TIMEOUT1_n_102),
        .I4(PREPARE_TIMEOUT1_n_100),
        .I5(PREPARE_TIMEOUT1_n_98),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_7_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__0_i_8
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT1_n_104),
        .I2(PREPARE_TIMEOUT1_n_100),
        .I3(PREPARE_TIMEOUT1_n_103),
        .I4(PREPARE_TIMEOUT1_n_101),
        .I5(PREPARE_TIMEOUT1_n_99),
        .O(PREPARE_TIMEOUT0__0_carry__0_i_8_n_0));
  CARRY4 PREPARE_TIMEOUT0__0_carry__1
       (.CI(PREPARE_TIMEOUT0__0_carry__0_n_0),
        .CO({PREPARE_TIMEOUT0__0_carry__1_n_0,PREPARE_TIMEOUT0__0_carry__1_n_1,PREPARE_TIMEOUT0__0_carry__1_n_2,PREPARE_TIMEOUT0__0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__1_i_1_n_0,PREPARE_TIMEOUT0__0_carry__1_i_2_n_0,PREPARE_TIMEOUT0__0_carry__1_i_3_n_0,PREPARE_TIMEOUT0__0_carry__1_i_4_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__0_carry__1_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__0_carry__1_i_5_n_0,PREPARE_TIMEOUT0__0_carry__1_i_6_n_0,PREPARE_TIMEOUT0__0_carry__1_i_7_n_0,PREPARE_TIMEOUT0__0_carry__1_i_8_n_0}));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__1_i_1
       (.I0(PREPARE_TIMEOUT1_n_97),
        .I1(PREPARE_TIMEOUT1_n_93),
        .I2(PREPARE_TIMEOUT1_n_95),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__1_i_2
       (.I0(PREPARE_TIMEOUT1_n_98),
        .I1(PREPARE_TIMEOUT1_n_94),
        .I2(PREPARE_TIMEOUT1_n_96),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__1_i_3
       (.I0(PREPARE_TIMEOUT1_n_95),
        .I1(PREPARE_TIMEOUT1_n_99),
        .I2(PREPARE_TIMEOUT1_n_97),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_3_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__1_i_4
       (.I0(PREPARE_TIMEOUT1_n_96),
        .I1(PREPARE_TIMEOUT1_n_100),
        .I2(PREPARE_TIMEOUT1_n_98),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_4_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__1_i_5
       (.I0(PREPARE_TIMEOUT1_n_95),
        .I1(PREPARE_TIMEOUT1_n_93),
        .I2(PREPARE_TIMEOUT1_n_97),
        .I3(PREPARE_TIMEOUT1_n_96),
        .I4(PREPARE_TIMEOUT1_n_94),
        .I5(PREPARE_TIMEOUT1_n_92),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_5_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__1_i_6
       (.I0(PREPARE_TIMEOUT1_n_96),
        .I1(PREPARE_TIMEOUT1_n_94),
        .I2(PREPARE_TIMEOUT1_n_98),
        .I3(PREPARE_TIMEOUT1_n_97),
        .I4(PREPARE_TIMEOUT1_n_95),
        .I5(PREPARE_TIMEOUT1_n_93),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_6_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__1_i_7
       (.I0(PREPARE_TIMEOUT1_n_97),
        .I1(PREPARE_TIMEOUT1_n_99),
        .I2(PREPARE_TIMEOUT1_n_95),
        .I3(PREPARE_TIMEOUT1_n_98),
        .I4(PREPARE_TIMEOUT1_n_96),
        .I5(PREPARE_TIMEOUT1_n_94),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_7_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__1_i_8
       (.I0(PREPARE_TIMEOUT1_n_98),
        .I1(PREPARE_TIMEOUT1_n_100),
        .I2(PREPARE_TIMEOUT1_n_96),
        .I3(PREPARE_TIMEOUT1_n_99),
        .I4(PREPARE_TIMEOUT1_n_97),
        .I5(PREPARE_TIMEOUT1_n_95),
        .O(PREPARE_TIMEOUT0__0_carry__1_i_8_n_0));
  CARRY4 PREPARE_TIMEOUT0__0_carry__2
       (.CI(PREPARE_TIMEOUT0__0_carry__1_n_0),
        .CO({PREPARE_TIMEOUT0__0_carry__2_n_0,PREPARE_TIMEOUT0__0_carry__2_n_1,PREPARE_TIMEOUT0__0_carry__2_n_2,PREPARE_TIMEOUT0__0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__2_i_1_n_0,PREPARE_TIMEOUT0__0_carry__2_i_2_n_0,PREPARE_TIMEOUT0__0_carry__2_i_3_n_0,PREPARE_TIMEOUT0__0_carry__2_i_4_n_0}),
        .O({PREPARE_TIMEOUT0__0_carry__2_n_4,PREPARE_TIMEOUT0__0_carry__2_n_5,NLW_PREPARE_TIMEOUT0__0_carry__2_O_UNCONNECTED[1:0]}),
        .S({PREPARE_TIMEOUT0__0_carry__2_i_5_n_0,PREPARE_TIMEOUT0__0_carry__2_i_6_n_0,PREPARE_TIMEOUT0__0_carry__2_i_7_n_0,PREPARE_TIMEOUT0__0_carry__2_i_8_n_0}));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__2_i_1
       (.I0(PREPARE_TIMEOUT1_n_89),
        .I1(PREPARE_TIMEOUT1_n_93),
        .I2(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__2_i_2
       (.I0(PREPARE_TIMEOUT1_n_94),
        .I1(PREPARE_TIMEOUT1_n_90),
        .I2(PREPARE_TIMEOUT1_n_92),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__2_i_3
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT1_n_95),
        .I2(PREPARE_TIMEOUT1_n_93),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_3_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__2_i_4
       (.I0(PREPARE_TIMEOUT1_n_92),
        .I1(PREPARE_TIMEOUT1_n_96),
        .I2(PREPARE_TIMEOUT1_n_94),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_4_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__2_i_5
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT1_n_93),
        .I2(PREPARE_TIMEOUT1_n_89),
        .I3(PREPARE_TIMEOUT1_n_92),
        .I4(PREPARE_TIMEOUT1_n_90),
        .I5(PREPARE_TIMEOUT1_n_88),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_5_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__2_i_6
       (.I0(PREPARE_TIMEOUT1_n_92),
        .I1(PREPARE_TIMEOUT1_n_90),
        .I2(PREPARE_TIMEOUT1_n_94),
        .I3(PREPARE_TIMEOUT1_n_91),
        .I4(PREPARE_TIMEOUT1_n_93),
        .I5(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_6_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__2_i_7
       (.I0(PREPARE_TIMEOUT1_n_93),
        .I1(PREPARE_TIMEOUT1_n_95),
        .I2(PREPARE_TIMEOUT1_n_91),
        .I3(PREPARE_TIMEOUT1_n_94),
        .I4(PREPARE_TIMEOUT1_n_92),
        .I5(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_7_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__2_i_8
       (.I0(PREPARE_TIMEOUT1_n_94),
        .I1(PREPARE_TIMEOUT1_n_96),
        .I2(PREPARE_TIMEOUT1_n_92),
        .I3(PREPARE_TIMEOUT1_n_95),
        .I4(PREPARE_TIMEOUT1_n_93),
        .I5(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__0_carry__2_i_8_n_0));
  CARRY4 PREPARE_TIMEOUT0__0_carry__3
       (.CI(PREPARE_TIMEOUT0__0_carry__2_n_0),
        .CO({NLW_PREPARE_TIMEOUT0__0_carry__3_CO_UNCONNECTED[3],PREPARE_TIMEOUT0__0_carry__3_n_1,PREPARE_TIMEOUT0__0_carry__3_n_2,PREPARE_TIMEOUT0__0_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,PREPARE_TIMEOUT0__0_carry__3_i_1_n_0,PREPARE_TIMEOUT0__0_carry__3_i_2_n_0,PREPARE_TIMEOUT0__0_carry__3_i_3_n_0}),
        .O({PREPARE_TIMEOUT0__0_carry__3_n_4,PREPARE_TIMEOUT0__0_carry__3_n_5,PREPARE_TIMEOUT0__0_carry__3_n_6,PREPARE_TIMEOUT0__0_carry__3_n_7}),
        .S({PREPARE_TIMEOUT0__0_carry__3_i_4_n_0,PREPARE_TIMEOUT0__0_carry__3_i_5_n_0,PREPARE_TIMEOUT0__0_carry__3_i_6_n_0,PREPARE_TIMEOUT0__0_carry__3_i_7_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__0_carry__3_i_1
       (.I0(PREPARE_TIMEOUT1_n_90),
        .I1(PREPARE_TIMEOUT1_n_88),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__0_carry__3_i_2
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry__3_i_3
       (.I0(PREPARE_TIMEOUT1_n_88),
        .I1(PREPARE_TIMEOUT1_n_92),
        .I2(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    PREPARE_TIMEOUT0__0_carry__3_i_4
       (.I0(PREPARE_TIMEOUT1_n_89),
        .I1(PREPARE_TIMEOUT1_n_88),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_4_n_0));
  LUT3 #(
    .INIT(8'h4B)) 
    PREPARE_TIMEOUT0__0_carry__3_i_5
       (.I0(PREPARE_TIMEOUT1_n_88),
        .I1(PREPARE_TIMEOUT1_n_90),
        .I2(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_5_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__0_carry__3_i_6
       (.I0(PREPARE_TIMEOUT1_n_89),
        .I1(PREPARE_TIMEOUT1_n_91),
        .I2(PREPARE_TIMEOUT1_n_88),
        .I3(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_6_n_0));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry__3_i_7
       (.I0(PREPARE_TIMEOUT1_n_90),
        .I1(PREPARE_TIMEOUT1_n_92),
        .I2(PREPARE_TIMEOUT1_n_88),
        .I3(PREPARE_TIMEOUT1_n_89),
        .I4(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__0_carry__3_i_7_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    PREPARE_TIMEOUT0__0_carry_i_1
       (.I0(PREPARE_TIMEOUT1_n_105),
        .I1(PREPARE_TIMEOUT1_n_101),
        .I2(PREPARE_TIMEOUT1_n_103),
        .O(PREPARE_TIMEOUT0__0_carry_i_1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    PREPARE_TIMEOUT0__0_carry_i_2
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_105),
        .O(PREPARE_TIMEOUT0__0_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__0_carry_i_3
       (.I0(PREPARE_TIMEOUT1_n_103),
        .I1(PREPARE_TIMEOUT1_n_105),
        .O(PREPARE_TIMEOUT0__0_carry_i_3_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    PREPARE_TIMEOUT0__0_carry_i_4
       (.I0(PREPARE_TIMEOUT1_n_103),
        .I1(PREPARE_TIMEOUT1_n_101),
        .I2(PREPARE_TIMEOUT1_n_105),
        .I3(PREPARE_TIMEOUT1_n_102),
        .I4(PREPARE_TIMEOUT1_n_104),
        .I5(PREPARE_TIMEOUT1_n_100),
        .O(PREPARE_TIMEOUT0__0_carry_i_4_n_0));
  LUT5 #(
    .INIT(32'h69699669)) 
    PREPARE_TIMEOUT0__0_carry_i_5
       (.I0(PREPARE_TIMEOUT1_n_105),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_101),
        .I3(PREPARE_TIMEOUT1_n_102),
        .I4(PREPARE_TIMEOUT1_n_104),
        .O(PREPARE_TIMEOUT0__0_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__0_carry_i_6
       (.I0(PREPARE_TIMEOUT1_n_105),
        .I1(PREPARE_TIMEOUT1_n_103),
        .I2(PREPARE_TIMEOUT1_n_104),
        .I3(PREPARE_TIMEOUT1_n_102),
        .O(PREPARE_TIMEOUT0__0_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__0_carry_i_7
       (.I0(PREPARE_TIMEOUT1_n_103),
        .I1(PREPARE_TIMEOUT1_n_105),
        .O(PREPARE_TIMEOUT0__0_carry_i_7_n_0));
  CARRY4 PREPARE_TIMEOUT0__44_carry
       (.CI(1'b0),
        .CO({PREPARE_TIMEOUT0__44_carry_n_0,PREPARE_TIMEOUT0__44_carry_n_1,PREPARE_TIMEOUT0__44_carry_n_2,PREPARE_TIMEOUT0__44_carry_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__44_carry_i_1_n_0,PREPARE_TIMEOUT0__44_carry_i_2_n_0,PREPARE_TIMEOUT0__44_carry_i_3_n_0,1'b0}),
        .O({PREPARE_TIMEOUT0__44_carry_n_4,PREPARE_TIMEOUT0__44_carry_n_5,PREPARE_TIMEOUT0__44_carry_n_6,PREPARE_TIMEOUT0__44_carry_n_7}),
        .S({PREPARE_TIMEOUT0__44_carry_i_4_n_0,PREPARE_TIMEOUT0__44_carry_i_5_n_0,PREPARE_TIMEOUT0__44_carry_i_6_n_0,PREPARE_TIMEOUT0__44_carry_i_7_n_0}));
  CARRY4 PREPARE_TIMEOUT0__44_carry__0
       (.CI(PREPARE_TIMEOUT0__44_carry_n_0),
        .CO({PREPARE_TIMEOUT0__44_carry__0_n_0,PREPARE_TIMEOUT0__44_carry__0_n_1,PREPARE_TIMEOUT0__44_carry__0_n_2,PREPARE_TIMEOUT0__44_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__3_n_5,PREPARE_TIMEOUT0__44_carry__0_i_1_n_0,PREPARE_TIMEOUT0__44_carry__0_i_2_n_0,PREPARE_TIMEOUT0__44_carry__0_i_3_n_0}),
        .O({PREPARE_TIMEOUT0__44_carry__0_n_4,PREPARE_TIMEOUT0__44_carry__0_n_5,PREPARE_TIMEOUT0__44_carry__0_n_6,PREPARE_TIMEOUT0__44_carry__0_n_7}),
        .S({PREPARE_TIMEOUT0__44_carry__0_i_4_n_0,PREPARE_TIMEOUT0__44_carry__0_i_5_n_0,PREPARE_TIMEOUT0__44_carry__0_i_6_n_0,PREPARE_TIMEOUT0__44_carry__0_i_7_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry__0_i_1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry__0_i_2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry__0_i_3
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    PREPARE_TIMEOUT0__44_carry__0_i_4
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_4_n_0));
  LUT3 #(
    .INIT(8'h4B)) 
    PREPARE_TIMEOUT0__44_carry__0_i_5
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__44_carry__0_i_6
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_6_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__44_carry__0_i_7
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(PREPARE_TIMEOUT0__44_carry__0_i_7_n_0));
  CARRY4 PREPARE_TIMEOUT0__44_carry__1
       (.CI(PREPARE_TIMEOUT0__44_carry__0_n_0),
        .CO({NLW_PREPARE_TIMEOUT0__44_carry__1_CO_UNCONNECTED[3:2],PREPARE_TIMEOUT0__44_carry__1_n_2,NLW_PREPARE_TIMEOUT0__44_carry__1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,PREPARE_TIMEOUT0__0_carry__3_n_4}),
        .O({NLW_PREPARE_TIMEOUT0__44_carry__1_O_UNCONNECTED[3:1],PREPARE_TIMEOUT0__44_carry__1_n_7}),
        .S({1'b0,1'b0,1'b1,PREPARE_TIMEOUT0__44_carry__1_i_1_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    PREPARE_TIMEOUT0__44_carry__1_i_1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__44_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry_i_1
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(PREPARE_TIMEOUT0__44_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__44_carry_i_2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(PREPARE_TIMEOUT0__44_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__44_carry_i_3
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .O(PREPARE_TIMEOUT0__44_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__44_carry_i_4
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(PREPARE_TIMEOUT0__44_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__44_carry_i_5
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .O(PREPARE_TIMEOUT0__44_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__44_carry_i_6
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__44_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__44_carry_i_7
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .O(PREPARE_TIMEOUT0__44_carry_i_7_n_0));
  CARRY4 PREPARE_TIMEOUT0__71_carry
       (.CI(1'b0),
        .CO({PREPARE_TIMEOUT0__71_carry_n_0,PREPARE_TIMEOUT0__71_carry_n_1,PREPARE_TIMEOUT0__71_carry_n_2,PREPARE_TIMEOUT0__71_carry_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__0_carry__3_n_7,PREPARE_TIMEOUT0__0_carry__2_n_4,PREPARE_TIMEOUT0__0_carry__2_n_5,1'b0}),
        .O({PREPARE_TIMEOUT0__71_carry_n_4,PREPARE_TIMEOUT0__71_carry_n_5,PREPARE_TIMEOUT0__71_carry_n_6,PREPARE_TIMEOUT0__71_carry_n_7}),
        .S({PREPARE_TIMEOUT0__71_carry_i_1_n_0,PREPARE_TIMEOUT0__71_carry_i_2_n_0,PREPARE_TIMEOUT0__71_carry_i_3_n_0,PREPARE_TIMEOUT0__44_carry_n_6}));
  CARRY4 PREPARE_TIMEOUT0__71_carry__0
       (.CI(PREPARE_TIMEOUT0__71_carry_n_0),
        .CO({PREPARE_TIMEOUT0__71_carry__0_n_0,PREPARE_TIMEOUT0__71_carry__0_n_1,PREPARE_TIMEOUT0__71_carry__0_n_2,PREPARE_TIMEOUT0__71_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__71_carry__0_i_1_n_0,PREPARE_TIMEOUT0__71_carry__0_i_2_n_0,PREPARE_TIMEOUT0__71_carry__0_i_3_n_0,PREPARE_TIMEOUT0__0_carry__3_n_6}),
        .O({PREPARE_TIMEOUT0__71_carry__0_n_4,PREPARE_TIMEOUT0__71_carry__0_n_5,PREPARE_TIMEOUT0__71_carry__0_n_6,PREPARE_TIMEOUT0__71_carry__0_n_7}),
        .S({PREPARE_TIMEOUT0__71_carry__0_i_4_n_0,PREPARE_TIMEOUT0__71_carry__0_i_5_n_0,PREPARE_TIMEOUT0__71_carry__0_i_6_n_0,PREPARE_TIMEOUT0__71_carry__0_i_7_n_0}));
  LUT3 #(
    .INIT(8'hE8)) 
    PREPARE_TIMEOUT0__71_carry__0_i_1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_1_n_0));
  (* HLUTNM = "lutpair0" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    PREPARE_TIMEOUT0__71_carry__0_i_2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_2_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    PREPARE_TIMEOUT0__71_carry__0_i_3
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_3_n_0));
  LUT5 #(
    .INIT(32'hE81717E8)) 
    PREPARE_TIMEOUT0__71_carry__0_i_4
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .I3(PREPARE_TIMEOUT0__44_carry__1_n_7),
        .I4(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h6996)) 
    PREPARE_TIMEOUT0__71_carry__0_i_5
       (.I0(PREPARE_TIMEOUT0__71_carry__0_i_2_n_0),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I2(PREPARE_TIMEOUT0__44_carry__0_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_5_n_0));
  (* HLUTNM = "lutpair0" *) 
  LUT5 #(
    .INIT(32'h69969696)) 
    PREPARE_TIMEOUT0__71_carry__0_i_6
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(PREPARE_TIMEOUT0__44_carry__0_n_6),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_6_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    PREPARE_TIMEOUT0__71_carry__0_i_7
       (.I0(PREPARE_TIMEOUT0__44_carry__0_n_6),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__71_carry__0_i_7_n_0));
  CARRY4 PREPARE_TIMEOUT0__71_carry__1
       (.CI(PREPARE_TIMEOUT0__71_carry__0_n_0),
        .CO({NLW_PREPARE_TIMEOUT0__71_carry__1_CO_UNCONNECTED[3:1],PREPARE_TIMEOUT0__71_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,PREPARE_TIMEOUT0__71_carry__1_i_1_n_0}),
        .O({NLW_PREPARE_TIMEOUT0__71_carry__1_O_UNCONNECTED[3:2],PREPARE_TIMEOUT0__71_carry__1_n_6,PREPARE_TIMEOUT0__71_carry__1_n_7}),
        .S({1'b0,1'b0,PREPARE_TIMEOUT0__71_carry__1_i_2_n_0,PREPARE_TIMEOUT0__71_carry__1_i_3_n_0}));
  LUT2 #(
    .INIT(4'h8)) 
    PREPARE_TIMEOUT0__71_carry__1_i_1
       (.I0(PREPARE_TIMEOUT0__44_carry__1_n_7),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(PREPARE_TIMEOUT0__71_carry__1_i_1_n_0));
  LUT3 #(
    .INIT(8'hE1)) 
    PREPARE_TIMEOUT0__71_carry__1_i_2
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry__1_n_2),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_4),
        .O(PREPARE_TIMEOUT0__71_carry__1_i_2_n_0));
  LUT4 #(
    .INIT(16'h7887)) 
    PREPARE_TIMEOUT0__71_carry__1_i_3
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(PREPARE_TIMEOUT0__44_carry__1_n_7),
        .I2(PREPARE_TIMEOUT0__44_carry__1_n_2),
        .I3(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .O(PREPARE_TIMEOUT0__71_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__71_carry_i_1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__44_carry__0_n_7),
        .O(PREPARE_TIMEOUT0__71_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__71_carry_i_2
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I1(PREPARE_TIMEOUT0__44_carry_n_4),
        .O(PREPARE_TIMEOUT0__71_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__71_carry_i_3
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(PREPARE_TIMEOUT0__44_carry_n_5),
        .O(PREPARE_TIMEOUT0__71_carry_i_3_n_0));
  CARRY4 PREPARE_TIMEOUT0__99_carry
       (.CI(1'b0),
        .CO({PREPARE_TIMEOUT0__99_carry_n_0,PREPARE_TIMEOUT0__99_carry_n_1,PREPARE_TIMEOUT0__99_carry_n_2,PREPARE_TIMEOUT0__99_carry_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__99_carry_i_1_n_0,PREPARE_TIMEOUT0__99_carry_i_2_n_0,PREPARE_TIMEOUT0__99_carry_i_3_n_0,1'b0}),
        .O(NLW_PREPARE_TIMEOUT0__99_carry_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__99_carry_i_4_n_0,PREPARE_TIMEOUT0__99_carry_i_5_n_0,PREPARE_TIMEOUT0__99_carry_i_6_n_0,PREPARE_TIMEOUT0__99_carry_i_7_n_0}));
  CARRY4 PREPARE_TIMEOUT0__99_carry__0
       (.CI(PREPARE_TIMEOUT0__99_carry_n_0),
        .CO({PREPARE_TIMEOUT0__99_carry__0_n_0,PREPARE_TIMEOUT0__99_carry__0_n_1,PREPARE_TIMEOUT0__99_carry__0_n_2,PREPARE_TIMEOUT0__99_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__99_carry__0_i_1_n_0,PREPARE_TIMEOUT0__99_carry__0_i_2_n_0,PREPARE_TIMEOUT0__99_carry__0_i_3_n_0,PREPARE_TIMEOUT0__99_carry__0_i_4_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__99_carry__0_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__99_carry__0_i_5_n_0,PREPARE_TIMEOUT0__99_carry__0_i_6_n_0,PREPARE_TIMEOUT0__99_carry__0_i_7_n_0,PREPARE_TIMEOUT0__99_carry__0_i_8_n_0}));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry__0_i_1
       (.I0(PREPARE_TIMEOUT0__71_carry_n_6),
        .I1(PREPARE_TIMEOUT1_n_96),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry__0_i_2
       (.I0(PREPARE_TIMEOUT0__71_carry_n_7),
        .I1(PREPARE_TIMEOUT1_n_97),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry__0_i_3
       (.I0(PREPARE_TIMEOUT0__44_carry_n_7),
        .I1(PREPARE_TIMEOUT1_n_98),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__0_i_4
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(PREPARE_TIMEOUT1_n_99),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__99_carry__0_i_5
       (.I0(PREPARE_TIMEOUT1_n_96),
        .I1(PREPARE_TIMEOUT0__71_carry_n_6),
        .I2(PREPARE_TIMEOUT0__71_carry_n_5),
        .I3(PREPARE_TIMEOUT1_n_95),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    PREPARE_TIMEOUT0__99_carry__0_i_6
       (.I0(PREPARE_TIMEOUT1_n_97),
        .I1(PREPARE_TIMEOUT0__71_carry_n_7),
        .I2(PREPARE_TIMEOUT0__71_carry_n_6),
        .I3(PREPARE_TIMEOUT1_n_96),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_6_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    PREPARE_TIMEOUT0__99_carry__0_i_7
       (.I0(PREPARE_TIMEOUT1_n_98),
        .I1(PREPARE_TIMEOUT0__44_carry_n_7),
        .I2(PREPARE_TIMEOUT0__71_carry_n_7),
        .I3(PREPARE_TIMEOUT1_n_97),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_7_n_0));
  LUT4 #(
    .INIT(16'h4BB4)) 
    PREPARE_TIMEOUT0__99_carry__0_i_8
       (.I0(PREPARE_TIMEOUT1_n_99),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I2(PREPARE_TIMEOUT0__44_carry_n_7),
        .I3(PREPARE_TIMEOUT1_n_98),
        .O(PREPARE_TIMEOUT0__99_carry__0_i_8_n_0));
  CARRY4 PREPARE_TIMEOUT0__99_carry__1
       (.CI(PREPARE_TIMEOUT0__99_carry__0_n_0),
        .CO({PREPARE_TIMEOUT0__99_carry__1_n_0,PREPARE_TIMEOUT0__99_carry__1_n_1,PREPARE_TIMEOUT0__99_carry__1_n_2,PREPARE_TIMEOUT0__99_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({PREPARE_TIMEOUT0__99_carry__1_i_1_n_0,PREPARE_TIMEOUT0__99_carry__1_i_2_n_0,PREPARE_TIMEOUT0__99_carry__1_i_3_n_0,PREPARE_TIMEOUT0__99_carry__1_i_4_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__99_carry__1_O_UNCONNECTED[3:0]),
        .S({PREPARE_TIMEOUT0__99_carry__1_i_5_n_0,PREPARE_TIMEOUT0__99_carry__1_i_6_n_0,PREPARE_TIMEOUT0__99_carry__1_i_7_n_0,PREPARE_TIMEOUT0__99_carry__1_i_8_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__1_i_1
       (.I0(PREPARE_TIMEOUT0__71_carry__0_n_6),
        .I1(PREPARE_TIMEOUT1_n_92),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry__1_i_2
       (.I0(PREPARE_TIMEOUT0__71_carry__0_n_7),
        .I1(PREPARE_TIMEOUT1_n_93),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__1_i_3
       (.I0(PREPARE_TIMEOUT0__71_carry_n_4),
        .I1(PREPARE_TIMEOUT1_n_94),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__1_i_4
       (.I0(PREPARE_TIMEOUT0__71_carry_n_5),
        .I1(PREPARE_TIMEOUT1_n_95),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_4_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__1_i_5
       (.I0(PREPARE_TIMEOUT1_n_92),
        .I1(PREPARE_TIMEOUT0__71_carry__0_n_6),
        .I2(PREPARE_TIMEOUT0__71_carry__0_n_5),
        .I3(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_5_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__99_carry__1_i_6
       (.I0(PREPARE_TIMEOUT1_n_93),
        .I1(PREPARE_TIMEOUT0__71_carry__0_n_7),
        .I2(PREPARE_TIMEOUT0__71_carry__0_n_6),
        .I3(PREPARE_TIMEOUT1_n_92),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_6_n_0));
  LUT4 #(
    .INIT(16'h4BB4)) 
    PREPARE_TIMEOUT0__99_carry__1_i_7
       (.I0(PREPARE_TIMEOUT1_n_94),
        .I1(PREPARE_TIMEOUT0__71_carry_n_4),
        .I2(PREPARE_TIMEOUT0__71_carry__0_n_7),
        .I3(PREPARE_TIMEOUT1_n_93),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_7_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__1_i_8
       (.I0(PREPARE_TIMEOUT1_n_95),
        .I1(PREPARE_TIMEOUT0__71_carry_n_5),
        .I2(PREPARE_TIMEOUT0__71_carry_n_4),
        .I3(PREPARE_TIMEOUT1_n_94),
        .O(PREPARE_TIMEOUT0__99_carry__1_i_8_n_0));
  CARRY4 PREPARE_TIMEOUT0__99_carry__2
       (.CI(PREPARE_TIMEOUT0__99_carry__1_n_0),
        .CO({NLW_PREPARE_TIMEOUT0__99_carry__2_CO_UNCONNECTED[3],PREPARE_TIMEOUT0__99_carry__2_n_1,PREPARE_TIMEOUT0__99_carry__2_n_2,PREPARE_TIMEOUT0__99_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,PREPARE_TIMEOUT0__99_carry__2_i_1_n_0,PREPARE_TIMEOUT0__99_carry__2_i_2_n_0,PREPARE_TIMEOUT0__99_carry__2_i_3_n_0}),
        .O(NLW_PREPARE_TIMEOUT0__99_carry__2_O_UNCONNECTED[3:0]),
        .S({1'b0,PREPARE_TIMEOUT0__99_carry__2_i_4_n_0,PREPARE_TIMEOUT0__99_carry__2_i_5_n_0,PREPARE_TIMEOUT0__99_carry__2_i_6_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__2_i_1
       (.I0(PREPARE_TIMEOUT0__71_carry__1_n_7),
        .I1(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__2_i_2
       (.I0(PREPARE_TIMEOUT0__71_carry__0_n_4),
        .I1(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry__2_i_3
       (.I0(PREPARE_TIMEOUT0__71_carry__0_n_5),
        .I1(PREPARE_TIMEOUT1_n_91),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_3_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__2_i_4
       (.I0(PREPARE_TIMEOUT1_n_89),
        .I1(PREPARE_TIMEOUT0__71_carry__1_n_7),
        .I2(PREPARE_TIMEOUT0__71_carry__1_n_6),
        .I3(PREPARE_TIMEOUT1_n_88),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_4_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__2_i_5
       (.I0(PREPARE_TIMEOUT1_n_90),
        .I1(PREPARE_TIMEOUT0__71_carry__0_n_4),
        .I2(PREPARE_TIMEOUT0__71_carry__1_n_7),
        .I3(PREPARE_TIMEOUT1_n_89),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_5_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry__2_i_6
       (.I0(PREPARE_TIMEOUT1_n_91),
        .I1(PREPARE_TIMEOUT0__71_carry__0_n_5),
        .I2(PREPARE_TIMEOUT0__71_carry__0_n_4),
        .I3(PREPARE_TIMEOUT1_n_90),
        .O(PREPARE_TIMEOUT0__99_carry__2_i_6_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry_i_1
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT1_n_100),
        .O(PREPARE_TIMEOUT0__99_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    PREPARE_TIMEOUT0__99_carry_i_2
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I1(PREPARE_TIMEOUT1_n_101),
        .O(PREPARE_TIMEOUT0__99_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    PREPARE_TIMEOUT0__99_carry_i_3
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(PREPARE_TIMEOUT1_n_102),
        .O(PREPARE_TIMEOUT0__99_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry_i_4
       (.I0(PREPARE_TIMEOUT1_n_100),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I3(PREPARE_TIMEOUT1_n_99),
        .O(PREPARE_TIMEOUT0__99_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    PREPARE_TIMEOUT0__99_carry_i_5
       (.I0(PREPARE_TIMEOUT1_n_101),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I3(PREPARE_TIMEOUT1_n_100),
        .O(PREPARE_TIMEOUT0__99_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    PREPARE_TIMEOUT0__99_carry_i_6
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT1_n_101),
        .O(PREPARE_TIMEOUT0__99_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    PREPARE_TIMEOUT0__99_carry_i_7
       (.I0(PREPARE_TIMEOUT1_n_102),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .O(PREPARE_TIMEOUT0__99_carry_i_7_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-13 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    PREPARE_TIMEOUT1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_PREPARE_TIMEOUT1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_PREPARE_TIMEOUT1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_PREPARE_TIMEOUT1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_PREPARE_TIMEOUT1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_PREPARE_TIMEOUT1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_PREPARE_TIMEOUT1_OVERFLOW_UNCONNECTED),
        .P({NLW_PREPARE_TIMEOUT1_P_UNCONNECTED[47:18],PREPARE_TIMEOUT1_n_88,PREPARE_TIMEOUT1_n_89,PREPARE_TIMEOUT1_n_90,PREPARE_TIMEOUT1_n_91,PREPARE_TIMEOUT1_n_92,PREPARE_TIMEOUT1_n_93,PREPARE_TIMEOUT1_n_94,PREPARE_TIMEOUT1_n_95,PREPARE_TIMEOUT1_n_96,PREPARE_TIMEOUT1_n_97,PREPARE_TIMEOUT1_n_98,PREPARE_TIMEOUT1_n_99,PREPARE_TIMEOUT1_n_100,PREPARE_TIMEOUT1_n_101,PREPARE_TIMEOUT1_n_102,PREPARE_TIMEOUT1_n_103,PREPARE_TIMEOUT1_n_104,PREPARE_TIMEOUT1_n_105}),
        .PATTERNBDETECT(NLW_PREPARE_TIMEOUT1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_PREPARE_TIMEOUT1_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_PREPARE_TIMEOUT1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_PREPARE_TIMEOUT1_UNDERFLOW_UNCONNECTED));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_77 dl_enable_sync_i
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_enable(dl0_enable),
        .dl_tx_sm_state125_out(dl_tx_sm_state125_out),
        .\dl_tx_sm_state_reg[0] (dl_enable_sync_i_n_2),
        .\dl_tx_sm_state_reg[2] (dl_enable_sync_i_n_0),
        .en_cal_hs_datapath_i(en_cal_hs_datapath_i),
        .en_cal_hs_datapath_reg(\dl_tx_sm_state_reg_n_0_[0] ),
        .en_cal_hs_datapath_reg_0(dl_txrequesths_sync_i_n_7),
        .en_cal_hs_datapath_reg_1(dl_txskewcalhs_sync_i_n_4),
        .out(dl_forcetxstopmode_sync_i_n_0),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i),
        .tx_dl_lp_dp_reg(dl_txrequesths_sync_i_n_6),
        .tx_dl_lp_dp_reg_0(\dl_tx_sm_state_reg_n_0_[2] ),
        .tx_dl_lp_dp_reg_1(esc_active_sync_i_n_1),
        .tx_dl_lp_dp_reg_2(dl_txskewcalhs_sync_i_n_7),
        .tx_dl_lp_dp_reg_3(tx_dl_lp_dp_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_78 dl_forcetxstopmode_sync_i
       (.core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_forcetxstopmode(dl0_forcetxstopmode),
        .out(dl_forcetxstopmode_sync_i_n_0));
  LUT4 #(
    .INIT(16'h0F08)) 
    dl_status_bit_6_i_3
       (.I0(cl_init_done_coreclk_i),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .I2(\dl_tx_sm_state_reg_n_0_[1] ),
        .I3(out),
        .O(dl_status_bit_6_i_3_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE dl_status_bit_6_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_6),
        .Q(out));
  LUT3 #(
    .INIT(8'hC8)) 
    dl_stopstate_coreclk_i_1
       (.I0(dl_stopstate_i),
        .I1(cl_init_done_coreclk_i),
        .I2(dl_stopstate_coreclk_reg),
        .O(dl_stopstate_reg_0));
  FDCE dl_stopstate_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_2),
        .Q(dl_stopstate_i));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dl_tx_sm_state[2]_i_11 
       (.I0(\dl_tx_sm_state_reg_n_0_[1] ),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .O(\dl_tx_sm_state[2]_i_11_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \dl_tx_sm_state_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequestesc_sync_i_n_2),
        .Q(\dl_tx_sm_state_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \dl_tx_sm_state_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequesths_sync_i_n_2),
        .Q(\dl_tx_sm_state_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \dl_tx_sm_state_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequestesc_sync_i_n_1),
        .Q(\dl_tx_sm_state_reg_n_0_[2] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_79 dl_txrequestesc_sync_i
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_txrequestesc(dl0_txrequestesc),
        .dl_status_bit_6_reg(out),
        .dl_stopstate_i_2_0(timeout_hsexit_reg_1),
        .dl_tx_sm_state120_out(dl_tx_sm_state120_out),
        .dl_tx_sm_state125_out(dl_tx_sm_state125_out),
        .\dl_tx_sm_state_reg[0] (dl_txrequestesc_sync_i_n_2),
        .\dl_tx_sm_state_reg[0]_0 (dl_txrequestesc_sync_i_n_3),
        .\dl_tx_sm_state_reg[0]_1 (\dl_tx_sm_state_reg_n_0_[0] ),
        .\dl_tx_sm_state_reg[1] (dl_txrequestesc_sync_i_n_0),
        .\dl_tx_sm_state_reg[1]_0 (dl_txrequestesc_sync_i_n_5),
        .\dl_tx_sm_state_reg[1]_1 (dl_txrequestesc_sync_i_n_8),
        .\dl_tx_sm_state_reg[2] (dl_txrequestesc_sync_i_n_1),
        .\dl_tx_sm_state_reg[2]_0 (dl_txrequesths_sync_i_n_4),
        .\dl_tx_sm_state_reg[2]_1 (dl_txskewcalhs_sync_i_n_8),
        .\dl_tx_sm_state_reg[2]_2 (\dl_tx_sm_state_reg_n_0_[2] ),
        .\dl_tx_sm_state_reg[2]_3 (timeout_hsexit_reg_0),
        .en_hs_start_w__4(en_hs_start_w__4),
        .esc_active_sync_r(esc_active_sync_r),
        .esc_start_i(esc_start_i),
        .esc_start_reg(\dl_tx_sm_state_reg_n_0_[1] ),
        .out(esc_active_sync),
        .p_0_in23_out(p_0_in23_out),
        .p_21_in(p_21_in),
        .s_level_out_d3_reg_0(dl_txrequestesc_sync_i_n_6),
        .s_level_out_d3_reg_1(dl_txrequestesc_sync_i_n_7),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_prepare(timeout_prepare));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_80 dl_txrequesths_sync_i
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_tx_sm_state120_out(dl_tx_sm_state120_out),
        .dl_tx_sm_state125_out(dl_tx_sm_state125_out),
        .\dl_tx_sm_state[1]_i_4 (\dl_tx_sm_state[1]_i_4 ),
        .\dl_tx_sm_state[1]_i_4_0 (timeout_hsexit_reg_1),
        .\dl_tx_sm_state[2]_i_3_0 (lp_01_r_reg_n_0),
        .\dl_tx_sm_state_reg[0] (dl_txrequesths_sync_i_n_2),
        .\dl_tx_sm_state_reg[1] (\dl_tx_sm_state_reg_n_0_[0] ),
        .\dl_tx_sm_state_reg[1]_0 (\dl_tx_sm_state_reg_n_0_[2] ),
        .\dl_tx_sm_state_reg[1]_1 (dl_txskewcalhs_sync_i_n_8),
        .\dl_tx_sm_state_reg[1]_2 (\dl_tx_sm_state_reg_n_0_[1] ),
        .\dl_tx_sm_state_reg[2] (dl_txrequesths_sync_i_n_4),
        .\dl_tx_sm_state_reg[2]_0 (dl_txrequesths_sync_i_n_7),
        .dl_txrequesths_r(dl_txrequesths_r),
        .en_cal_hs_datapath_reg(dl_txskewcalhs_sync_i_n_0),
        .\en_cl_init_to_blk.init_done_reg (dl_txrequesths_sync_i_n_6),
        .en_hs_start_w__4(en_hs_start_w__4),
        .en_lp_01_cnt__4(en_lp_01_cnt__4),
        .out(dl_txrequesths_sync),
        .p_0_in23_out(p_0_in23_out),
        .timeout_prepare(timeout_prepare),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dn_reg(dl_txrequesths_sync_i_n_1),
        .tx_dl_lp_dn_reg_0(tx_dl_lp_dn_i_2_n_0),
        .tx_dl_lp_dn_reg_1(esc_active_sync_i_n_1),
        .tx_dl_lp_dn_reg_2(dl_txskewcalhs_sync_i_n_7),
        .tx_dl_lp_dn_reg_3(dl_txrequestesc_sync_i_n_6));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_81 dl_txskewcalhs_sync_i
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_status_bit_6_reg(dl_status_bit_6_i_3_n_0),
        .dl_status_bit_6_reg_0(dl_txrequestesc_sync_i_n_8),
        .dl_status_bit_6_reg_1(out),
        .dl_status_bit_6_reg_2(dl_txrequestesc_sync_i_n_6),
        .dl_status_reg(dl_status_reg),
        .dl_stopstate_i(dl_stopstate_i),
        .dl_stopstate_reg(dl_txrequestesc_sync_i_n_5),
        .dl_stopstate_reg_0(\dl_tx_sm_state_reg_n_0_[2] ),
        .dl_stopstate_reg_1(esc_active_sync_i_n_2),
        .dl_tx_sm_state0__0(dl_tx_sm_state0__0),
        .dl_tx_sm_state125_out(dl_tx_sm_state125_out),
        .\dl_tx_sm_state_reg[0] (dl_txskewcalhs_sync_i_n_3),
        .\dl_tx_sm_state_reg[1] (dl_txskewcalhs_sync_i_n_4),
        .\dl_tx_sm_state_reg[1]_0 (\dl_tx_sm_state[2]_i_11_n_0 ),
        .\dl_tx_sm_state_reg[2] (dl_txskewcalhs_sync_i_n_2),
        .\dl_tx_sm_state_reg[2]_0 (dl_txskewcalhs_sync_i_n_6),
        .\dl_tx_sm_state_reg[2]_1 (dl_txskewcalhs_sync_i_n_7),
        .\dl_tx_sm_state_reg[2]_2 (dl_txskewcalhs_sync_i_n_8),
        .en_hs_datapath_reg(\dl_tx_sm_state_reg_n_0_[0] ),
        .en_hs_datapath_reg_0(dl_txrequesths_sync),
        .en_hs_start_w__4(en_hs_start_w__4),
        .en_lp_01_cnt__4(en_lp_01_cnt__4),
        .en_lp_01_cnt_reg(dl_txskewcalhs_sync_i_n_1),
        .en_lp_01_cnt_reg_0(en_lp_01_cnt_reg_n_0),
        .en_lp_01_cnt_reg_1(lp_01_r_reg_n_0),
        .en_lp_01_cnt_reg_2(\dl_tx_sm_state_reg_n_0_[1] ),
        .out(dl_txskewcalhs_sync_i_n_0),
        .p_21_in(p_21_in),
        .timeout_prepare(timeout_prepare),
        .tx_dl_lp_dn_reg(tx_dl_lp_dp_i_5_n_0),
        .tx_dl_lp_dn_reg_0(dl_txrequestesc_sync_i_n_7));
  FDCE en_cal_hs_datapath_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_2),
        .Q(en_cal_hs_datapath_i));
  FDCE en_hs_datapath_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_3),
        .Q(dl_status_reg));
  FDCE en_lp_01_cnt_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_1),
        .Q(en_lp_01_cnt_reg_n_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_82 esc_active_sync_i
       (.core_clk(core_clk),
        .core_rst(core_rst),
        .dl_stopstate_i_4(dl_txrequestesc_sync_i_n_3),
        .dl_tx_sm_state0__0(dl_tx_sm_state0__0),
        .\dl_tx_sm_state_reg[0] (esc_active_sync_i_n_1),
        .esc_active_sync_r(esc_active_sync_r),
        .out(esc_active_sync),
        .s_level_out_d1_cdc_to_reg_0(s_level_out_d1_cdc_to_reg),
        .s_level_out_d3_reg_0(esc_active_sync_i_n_2),
        .timeout_hsexit_all(timeout_hsexit_all),
        .tx_dl_lp_dn_reg(\dl_tx_sm_state_reg_n_0_[0] ),
        .tx_dl_lp_dn_reg_0(\dl_tx_sm_state_reg_n_0_[1] ),
        .tx_dl_lp_dn_reg_1(\dl_tx_sm_state_reg_n_0_[2] ));
  FDCE esc_active_sync_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(esc_active_sync),
        .Q(esc_active_sync_r));
  FDCE esc_start_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequestesc_sync_i_n_0),
        .Q(esc_start_i));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \hsexit_count[0]_i_1 
       (.I0(\dl_tx_sm_state_reg_n_0_[2] ),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .I2(\dl_tx_sm_state_reg_n_0_[1] ),
        .I3(timeout_hsexit_reg_1),
        .O(\hsexit_count[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hsexit_count[0]_i_2 
       (.I0(timeout_hsexit0_carry__0_n_1),
        .O(\hsexit_count[0]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hsexit_count[0]_i_4 
       (.I0(hsexit_count_reg[0]),
        .O(\hsexit_count[0]_i_4_n_0 ));
  FDRE \hsexit_count_reg[0] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2_n_0 ),
        .D(\hsexit_count_reg[0]_i_3_n_7 ),
        .Q(hsexit_count_reg[0]),
        .R(\hsexit_count[0]_i_1_n_0 ));
  CARRY4 \hsexit_count_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\hsexit_count_reg[0]_i_3_n_0 ,\hsexit_count_reg[0]_i_3_n_1 ,\hsexit_count_reg[0]_i_3_n_2 ,\hsexit_count_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\hsexit_count_reg[0]_i_3_n_4 ,\hsexit_count_reg[0]_i_3_n_5 ,\hsexit_count_reg[0]_i_3_n_6 ,\hsexit_count_reg[0]_i_3_n_7 }),
        .S({hsexit_count_reg[3:1],\hsexit_count[0]_i_4_n_0 }));
  FDRE \hsexit_count_reg[10] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2_n_0 ),
        .D(\hsexit_count_reg[8]_i_1_n_5 ),
        .Q(hsexit_count_reg[10]),
        .R(\hsexit_count[0]_i_1_n_0 ));
  FDRE \hsexit_count_reg[11] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2_n_0 ),
        .D(\hsexit_count_reg[8]_i_1_n_4 ),
        .Q(hsexit_count_reg[11]),
        .R(\hsexit_count[0]_i_1_n_0 ));
  FDRE \hsexit_count_reg[12] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2_n_0 ),
        .D(\hsexit_count_reg[12]_i_1_n_7 ),
        .Q(hsexit_count_reg[12]),
        .R(\hsexit_count[0]_i_1_n_0 ));
  CARRY4 \hsexit_count_reg[12]_i_1 
       (.CI(\hsexit_count_reg[8]_i_1_n_0 ),
        .CO(\NLW_hsexit_count_reg[12]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_hsexit_count_reg[12]_i_1_O_UNCONNECTED [3:1],\hsexit_count_reg[12]_i_1_n_7 }),
        .S({1'b0,1'b0,1'b0,hsexit_count_reg[12]}));
  FDRE \hsexit_count_reg[1] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2_n_0 ),
        .D(\hsexit_count_reg[0]_i_3_n_6 ),
        .Q(hsexit_count_reg[1]),
        .R(\hsexit_count[0]_i_1_n_0 ));
  FDRE \hsexit_count_reg[2] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2_n_0 ),
        .D(\hsexit_count_reg[0]_i_3_n_5 ),
        .Q(hsexit_count_reg[2]),
        .R(\hsexit_count[0]_i_1_n_0 ));
  FDRE \hsexit_count_reg[3] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2_n_0 ),
        .D(\hsexit_count_reg[0]_i_3_n_4 ),
        .Q(hsexit_count_reg[3]),
        .R(\hsexit_count[0]_i_1_n_0 ));
  FDRE \hsexit_count_reg[4] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2_n_0 ),
        .D(\hsexit_count_reg[4]_i_1_n_7 ),
        .Q(hsexit_count_reg[4]),
        .R(\hsexit_count[0]_i_1_n_0 ));
  CARRY4 \hsexit_count_reg[4]_i_1 
       (.CI(\hsexit_count_reg[0]_i_3_n_0 ),
        .CO({\hsexit_count_reg[4]_i_1_n_0 ,\hsexit_count_reg[4]_i_1_n_1 ,\hsexit_count_reg[4]_i_1_n_2 ,\hsexit_count_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\hsexit_count_reg[4]_i_1_n_4 ,\hsexit_count_reg[4]_i_1_n_5 ,\hsexit_count_reg[4]_i_1_n_6 ,\hsexit_count_reg[4]_i_1_n_7 }),
        .S(hsexit_count_reg[7:4]));
  FDRE \hsexit_count_reg[5] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2_n_0 ),
        .D(\hsexit_count_reg[4]_i_1_n_6 ),
        .Q(hsexit_count_reg[5]),
        .R(\hsexit_count[0]_i_1_n_0 ));
  FDRE \hsexit_count_reg[6] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2_n_0 ),
        .D(\hsexit_count_reg[4]_i_1_n_5 ),
        .Q(hsexit_count_reg[6]),
        .R(\hsexit_count[0]_i_1_n_0 ));
  FDRE \hsexit_count_reg[7] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2_n_0 ),
        .D(\hsexit_count_reg[4]_i_1_n_4 ),
        .Q(hsexit_count_reg[7]),
        .R(\hsexit_count[0]_i_1_n_0 ));
  FDRE \hsexit_count_reg[8] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2_n_0 ),
        .D(\hsexit_count_reg[8]_i_1_n_7 ),
        .Q(hsexit_count_reg[8]),
        .R(\hsexit_count[0]_i_1_n_0 ));
  CARRY4 \hsexit_count_reg[8]_i_1 
       (.CI(\hsexit_count_reg[4]_i_1_n_0 ),
        .CO({\hsexit_count_reg[8]_i_1_n_0 ,\hsexit_count_reg[8]_i_1_n_1 ,\hsexit_count_reg[8]_i_1_n_2 ,\hsexit_count_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\hsexit_count_reg[8]_i_1_n_4 ,\hsexit_count_reg[8]_i_1_n_5 ,\hsexit_count_reg[8]_i_1_n_6 ,\hsexit_count_reg[8]_i_1_n_7 }),
        .S(hsexit_count_reg[11:8]));
  FDRE \hsexit_count_reg[9] 
       (.C(core_clk),
        .CE(\hsexit_count[0]_i_2_n_0 ),
        .D(\hsexit_count_reg[8]_i_1_n_6 ),
        .Q(hsexit_count_reg[9]),
        .R(\hsexit_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'h04)) 
    lp_01_r_i_1__0
       (.I0(\lp_st01_cnt_reg_n_0_[1] ),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .I2(\lp_st01_cnt[1]_i_2__0_n_0 ),
        .O(lp_01_r));
  FDCE lp_01_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_01_r),
        .Q(lp_01_r_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \lp_st01_cnt[0]_i_1__0 
       (.I0(en_lp_01_cnt_reg_n_0),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'h20C0)) 
    \lp_st01_cnt[1]_i_1__0 
       (.I0(\lp_st01_cnt[1]_i_2__0_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    \lp_st01_cnt[1]_i_2__0 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .I3(\lp_st01_cnt_reg_n_0_[5] ),
        .I4(\lp_st01_cnt_reg_n_0_[6] ),
        .O(\lp_st01_cnt[1]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7080)) 
    \lp_st01_cnt[2]_i_1__0 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[2] ),
        .O(lp_st01_cnt[2]));
  LUT6 #(
    .INIT(64'h76FF000088000000)) 
    \lp_st01_cnt[3]_i_1__0 
       (.I0(\lp_st01_cnt_reg_n_0_[2] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt[3]_i_2__0_n_0 ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[3] ),
        .O(lp_st01_cnt[3]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \lp_st01_cnt[3]_i_2__0 
       (.I0(\lp_st01_cnt_reg_n_0_[6] ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[3]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \lp_st01_cnt[4]_i_1__0 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[1] ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[4] ),
        .O(lp_st01_cnt[4]));
  LUT6 #(
    .INIT(64'hBFFF000040000000)) 
    \lp_st01_cnt[5]_i_1__0 
       (.I0(\lp_st01_cnt[5]_i_2__0_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[3] ),
        .I3(\lp_st01_cnt_reg_n_0_[4] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[5] ),
        .O(lp_st01_cnt[5]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \lp_st01_cnt[5]_i_2__0 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .O(\lp_st01_cnt[5]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT4 #(
    .INIT(16'hB040)) 
    \lp_st01_cnt[6]_i_1__0 
       (.I0(\lp_st01_cnt[6]_i_2__0_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[6] ),
        .O(lp_st01_cnt[6]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \lp_st01_cnt[6]_i_2__0 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt_reg_n_0_[2] ),
        .I3(\lp_st01_cnt_reg_n_0_[3] ),
        .I4(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[6]_i_2__0_n_0 ));
  FDCE \lp_st01_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[0]),
        .Q(\lp_st01_cnt_reg_n_0_[0] ));
  FDCE \lp_st01_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[1]),
        .Q(\lp_st01_cnt_reg_n_0_[1] ));
  FDCE \lp_st01_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[2]),
        .Q(\lp_st01_cnt_reg_n_0_[2] ));
  FDCE \lp_st01_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[3]),
        .Q(\lp_st01_cnt_reg_n_0_[3] ));
  FDCE \lp_st01_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[4]),
        .Q(\lp_st01_cnt_reg_n_0_[4] ));
  FDCE \lp_st01_cnt_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[5]),
        .Q(\lp_st01_cnt_reg_n_0_[5] ));
  FDCE \lp_st01_cnt_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[6]),
        .Q(\lp_st01_cnt_reg_n_0_[6] ));
  LUT1 #(
    .INIT(2'h1)) 
    \prepare_count[0]_i_1 
       (.I0(prepare_count_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \prepare_count[1]_i_1 
       (.I0(prepare_count_reg[0]),
        .I1(prepare_count_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \prepare_count[2]_i_1 
       (.I0(prepare_count_reg[0]),
        .I1(prepare_count_reg[1]),
        .I2(prepare_count_reg[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \prepare_count[3]_i_1 
       (.I0(prepare_count_reg[1]),
        .I1(prepare_count_reg[0]),
        .I2(prepare_count_reg[2]),
        .I3(prepare_count_reg[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \prepare_count[4]_i_1 
       (.I0(prepare_count_reg[2]),
        .I1(prepare_count_reg[0]),
        .I2(prepare_count_reg[1]),
        .I3(prepare_count_reg[3]),
        .I4(prepare_count_reg[4]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \prepare_count[5]_i_1 
       (.I0(prepare_count_reg[3]),
        .I1(prepare_count_reg[1]),
        .I2(prepare_count_reg[0]),
        .I3(prepare_count_reg[2]),
        .I4(prepare_count_reg[4]),
        .I5(prepare_count_reg[5]),
        .O(p_0_in__0[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \prepare_count[6]_i_1 
       (.I0(\prepare_count[8]_i_4_n_0 ),
        .I1(prepare_count_reg[6]),
        .O(p_0_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \prepare_count[7]_i_1 
       (.I0(\prepare_count[8]_i_4_n_0 ),
        .I1(prepare_count_reg[6]),
        .I2(prepare_count_reg[7]),
        .O(p_0_in__0[7]));
  LUT3 #(
    .INIT(8'hEF)) 
    \prepare_count[8]_i_1 
       (.I0(\dl_tx_sm_state_reg_n_0_[0] ),
        .I1(\dl_tx_sm_state_reg_n_0_[1] ),
        .I2(\dl_tx_sm_state_reg_n_0_[2] ),
        .O(prepare_count));
  LUT1 #(
    .INIT(2'h1)) 
    \prepare_count[8]_i_2 
       (.I0(timeout_prepare0_carry__0_n_3),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \prepare_count[8]_i_3 
       (.I0(prepare_count_reg[6]),
        .I1(\prepare_count[8]_i_4_n_0 ),
        .I2(prepare_count_reg[7]),
        .I3(prepare_count_reg[8]),
        .O(p_0_in__0[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \prepare_count[8]_i_4 
       (.I0(prepare_count_reg[5]),
        .I1(prepare_count_reg[3]),
        .I2(prepare_count_reg[1]),
        .I3(prepare_count_reg[0]),
        .I4(prepare_count_reg[2]),
        .I5(prepare_count_reg[4]),
        .O(\prepare_count[8]_i_4_n_0 ));
  FDRE \prepare_count_reg[0] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[0]),
        .Q(prepare_count_reg[0]),
        .R(prepare_count));
  FDRE \prepare_count_reg[1] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[1]),
        .Q(prepare_count_reg[1]),
        .R(prepare_count));
  FDRE \prepare_count_reg[2] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[2]),
        .Q(prepare_count_reg[2]),
        .R(prepare_count));
  FDRE \prepare_count_reg[3] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[3]),
        .Q(prepare_count_reg[3]),
        .R(prepare_count));
  FDRE \prepare_count_reg[4] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[4]),
        .Q(prepare_count_reg[4]),
        .R(prepare_count));
  FDRE \prepare_count_reg[5] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[5]),
        .Q(prepare_count_reg[5]),
        .R(prepare_count));
  FDRE \prepare_count_reg[6] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[6]),
        .Q(prepare_count_reg[6]),
        .R(prepare_count));
  FDRE \prepare_count_reg[7] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[7]),
        .Q(prepare_count_reg[7]),
        .R(prepare_count));
  FDRE \prepare_count_reg[8] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in__0[8]),
        .Q(prepare_count_reg[8]),
        .R(prepare_count));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_83 timeout_hs_tx_sync_i
       (.core_clk(core_clk),
        .core_rst(core_rst));
  CARRY4 timeout_hsexit0_carry
       (.CI(1'b0),
        .CO({timeout_hsexit0_carry_n_0,timeout_hsexit0_carry_n_1,timeout_hsexit0_carry_n_2,timeout_hsexit0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({timeout_hsexit0_carry_i_1_n_0,hsexit_count_reg[5],timeout_hsexit0_carry_i_2_n_0,timeout_hsexit0_carry_i_3_n_0}),
        .O(NLW_timeout_hsexit0_carry_O_UNCONNECTED[3:0]),
        .S({timeout_hsexit0_carry_i_4_n_0,timeout_hsexit0_carry_i_5_n_0,timeout_hsexit0_carry_i_6_n_0,timeout_hsexit0_carry_i_7_n_0}));
  CARRY4 timeout_hsexit0_carry__0
       (.CI(timeout_hsexit0_carry_n_0),
        .CO({NLW_timeout_hsexit0_carry__0_CO_UNCONNECTED[3],timeout_hsexit0_carry__0_n_1,timeout_hsexit0_carry__0_n_2,timeout_hsexit0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,hsexit_count_reg[12],timeout_hsexit0_carry__0_i_1_n_0,timeout_hsexit0_carry__0_i_2_n_0}),
        .O(NLW_timeout_hsexit0_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,timeout_hsexit0_carry__0_i_3_n_0,timeout_hsexit0_carry__0_i_4_n_0,timeout_hsexit0_carry__0_i_5_n_0}));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_hsexit0_carry__0_i_1
       (.I0(hsexit_count_reg[10]),
        .I1(hsexit_count_reg[11]),
        .O(timeout_hsexit0_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_hsexit0_carry__0_i_2
       (.I0(hsexit_count_reg[8]),
        .I1(hsexit_count_reg[9]),
        .O(timeout_hsexit0_carry__0_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    timeout_hsexit0_carry__0_i_3
       (.I0(hsexit_count_reg[12]),
        .O(timeout_hsexit0_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_hsexit0_carry__0_i_4
       (.I0(hsexit_count_reg[11]),
        .I1(hsexit_count_reg[10]),
        .O(timeout_hsexit0_carry__0_i_4_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_hsexit0_carry__0_i_5
       (.I0(hsexit_count_reg[9]),
        .I1(hsexit_count_reg[8]),
        .O(timeout_hsexit0_carry__0_i_5_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_hsexit0_carry_i_1
       (.I0(hsexit_count_reg[6]),
        .I1(hsexit_count_reg[7]),
        .O(timeout_hsexit0_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    timeout_hsexit0_carry_i_2
       (.I0(hsexit_count_reg[2]),
        .I1(hsexit_count_reg[3]),
        .O(timeout_hsexit0_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_hsexit0_carry_i_3
       (.I0(hsexit_count_reg[0]),
        .I1(hsexit_count_reg[1]),
        .O(timeout_hsexit0_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_hsexit0_carry_i_4
       (.I0(hsexit_count_reg[7]),
        .I1(hsexit_count_reg[6]),
        .O(timeout_hsexit0_carry_i_4_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    timeout_hsexit0_carry_i_5
       (.I0(hsexit_count_reg[4]),
        .I1(hsexit_count_reg[5]),
        .O(timeout_hsexit0_carry_i_5_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    timeout_hsexit0_carry_i_6
       (.I0(hsexit_count_reg[3]),
        .I1(hsexit_count_reg[2]),
        .O(timeout_hsexit0_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_hsexit0_carry_i_7
       (.I0(hsexit_count_reg[1]),
        .I1(hsexit_count_reg[0]),
        .O(timeout_hsexit0_carry_i_7_n_0));
  LUT6 #(
    .INIT(64'h55F5555555D55555)) 
    timeout_hsexit_i_1
       (.I0(timeout_hsexit_reg_1),
        .I1(timeout_hsexit_reg_0),
        .I2(\dl_tx_sm_state_reg_n_0_[1] ),
        .I3(\dl_tx_sm_state_reg_n_0_[0] ),
        .I4(\dl_tx_sm_state_reg_n_0_[2] ),
        .I5(timeout_hsexit0_carry__0_n_1),
        .O(timeout_hsexit_i_1_n_0));
  FDRE timeout_hsexit_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(timeout_hsexit_i_1_n_0),
        .Q(timeout_hsexit_reg_0),
        .R(1'b0));
  CARRY4 timeout_prepare0_carry
       (.CI(1'b0),
        .CO({timeout_prepare0_carry_n_0,timeout_prepare0_carry_n_1,timeout_prepare0_carry_n_2,timeout_prepare0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({timeout_prepare0_carry_i_1_n_0,timeout_prepare0_carry_i_2_n_0,timeout_prepare0_carry_i_3_n_0,timeout_prepare0_carry_i_4_n_0}),
        .O(NLW_timeout_prepare0_carry_O_UNCONNECTED[3:0]),
        .S({timeout_prepare0_carry_i_5_n_0,timeout_prepare0_carry_i_6_n_0,timeout_prepare0_carry_i_7_n_0,timeout_prepare0_carry_i_8_n_0}));
  CARRY4 timeout_prepare0_carry__0
       (.CI(timeout_prepare0_carry_n_0),
        .CO({NLW_timeout_prepare0_carry__0_CO_UNCONNECTED[3:1],timeout_prepare0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,prepare_count_reg[8]}),
        .O(NLW_timeout_prepare0_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,timeout_prepare0_carry__0_i_1_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    timeout_prepare0_carry__0_i_1
       (.I0(prepare_count_reg[8]),
        .O(timeout_prepare0_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    timeout_prepare0_carry_i_1
       (.I0(prepare_count_reg[6]),
        .I1(prepare_count_reg[7]),
        .O(timeout_prepare0_carry_i_1_n_0));
  LUT6 #(
    .INIT(64'h555599A9AAAAAAAA)) 
    timeout_prepare0_carry_i_10
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I1(PREPARE_TIMEOUT0__99_carry__2_n_1),
        .I2(PREPARE_TIMEOUT0__71_carry__1_n_6),
        .I3(PREPARE_TIMEOUT1_n_88),
        .I4(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I5(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .O(timeout_prepare0_carry_i_10_n_0));
  LUT5 #(
    .INIT(32'h55555A9A)) 
    timeout_prepare0_carry_i_11
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .I1(timeout_prepare0_carry_i_12_n_0),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(timeout_prepare0_carry_i_11_n_0));
  LUT3 #(
    .INIT(8'hF4)) 
    timeout_prepare0_carry_i_12
       (.I0(PREPARE_TIMEOUT1_n_88),
        .I1(PREPARE_TIMEOUT0__71_carry__1_n_6),
        .I2(PREPARE_TIMEOUT0__99_carry__2_n_1),
        .O(timeout_prepare0_carry_i_12_n_0));
  LUT6 #(
    .INIT(64'hA999AA9956665566)) 
    timeout_prepare0_carry_i_13
       (.I0(prepare_count_reg[3]),
        .I1(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I4(timeout_prepare0_carry_i_12_n_0),
        .I5(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(timeout_prepare0_carry_i_13_n_0));
  LUT3 #(
    .INIT(8'hF8)) 
    timeout_prepare0_carry_i_2
       (.I0(prepare_count_reg[4]),
        .I1(timeout_prepare0_carry_i_9_n_0),
        .I2(prepare_count_reg[5]),
        .O(timeout_prepare0_carry_i_2_n_0));
  LUT4 #(
    .INIT(16'hF880)) 
    timeout_prepare0_carry_i_3
       (.I0(timeout_prepare0_carry_i_10_n_0),
        .I1(prepare_count_reg[2]),
        .I2(prepare_count_reg[3]),
        .I3(timeout_prepare0_carry_i_11_n_0),
        .O(timeout_prepare0_carry_i_3_n_0));
  LUT5 #(
    .INIT(32'hEC3E8008)) 
    timeout_prepare0_carry_i_4
       (.I0(prepare_count_reg[0]),
        .I1(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I2(timeout_prepare0_carry_i_12_n_0),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(prepare_count_reg[1]),
        .O(timeout_prepare0_carry_i_4_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    timeout_prepare0_carry_i_5
       (.I0(prepare_count_reg[7]),
        .I1(prepare_count_reg[6]),
        .O(timeout_prepare0_carry_i_5_n_0));
  LUT3 #(
    .INIT(8'h06)) 
    timeout_prepare0_carry_i_6
       (.I0(timeout_prepare0_carry_i_9_n_0),
        .I1(prepare_count_reg[4]),
        .I2(prepare_count_reg[5]),
        .O(timeout_prepare0_carry_i_6_n_0));
  LUT6 #(
    .INIT(64'h8222828228882828)) 
    timeout_prepare0_carry_i_7
       (.I0(timeout_prepare0_carry_i_13_n_0),
        .I1(prepare_count_reg[2]),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(timeout_prepare0_carry_i_12_n_0),
        .I5(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .O(timeout_prepare0_carry_i_7_n_0));
  LUT5 #(
    .INIT(32'h42240990)) 
    timeout_prepare0_carry_i_8
       (.I0(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I1(timeout_prepare0_carry_i_12_n_0),
        .I2(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I3(prepare_count_reg[1]),
        .I4(prepare_count_reg[0]),
        .O(timeout_prepare0_carry_i_8_n_0));
  LUT6 #(
    .INIT(64'h5555555555595A5A)) 
    timeout_prepare0_carry_i_9
       (.I0(PREPARE_TIMEOUT0__0_carry__3_n_5),
        .I1(timeout_prepare0_carry_i_12_n_0),
        .I2(PREPARE_TIMEOUT0__0_carry__3_n_7),
        .I3(PREPARE_TIMEOUT0__0_carry__2_n_5),
        .I4(PREPARE_TIMEOUT0__0_carry__2_n_4),
        .I5(PREPARE_TIMEOUT0__0_carry__3_n_6),
        .O(timeout_prepare0_carry_i_9_n_0));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT5 #(
    .INIT(32'h03000200)) 
    timeout_prepare_i_1
       (.I0(timeout_prepare0_carry__0_n_3),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .I2(\dl_tx_sm_state_reg_n_0_[1] ),
        .I3(\dl_tx_sm_state_reg_n_0_[2] ),
        .I4(timeout_prepare),
        .O(timeout_prepare_i_1_n_0));
  FDRE timeout_prepare_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(timeout_prepare_i_1_n_0),
        .Q(timeout_prepare),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT4 #(
    .INIT(16'h1101)) 
    tx_dl_lp_dn_i_2
       (.I0(\dl_tx_sm_state_reg_n_0_[1] ),
        .I1(\dl_tx_sm_state_reg_n_0_[2] ),
        .I2(\dl_tx_sm_state_reg_n_0_[0] ),
        .I3(cl_init_done_coreclk_i),
        .O(tx_dl_lp_dn_i_2_n_0));
  FDPE tx_dl_lp_dn_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_txrequesths_sync_i_n_1),
        .PRE(core_rst),
        .Q(tx_dl_lp_dn_hs_i));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'h40)) 
    tx_dl_lp_dp_i_5
       (.I0(\dl_tx_sm_state_reg_n_0_[1] ),
        .I1(\dl_tx_sm_state_reg_n_0_[0] ),
        .I2(dl_tx_sm_state0__0),
        .O(tx_dl_lp_dp_i_5_n_0));
  FDPE tx_dl_lp_dp_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_enable_sync_i_n_0),
        .PRE(core_rst),
        .Q(tx_dl_lp_dp_hs_i));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_dphy_reg
   (out,
    D,
    \gen_regs.gen_timeout_debug_regs.axi_rvalid_reg_0 ,
    \s_level_out_bus_d3_reg[1] ,
    axi_bvalid_reg_0,
    s_axi_rdata,
    s_axi_wready,
    s_axi_arready,
    s_axi_awready,
    cl_status_reg_w,
    s_axi_aclk,
    core_rst,
    \s_level_out_bus_d3_reg[0] ,
    tx_cl_lp_cn_r_reg,
    s_axi_aresetn,
    s_axi_wdata,
    s_axi_wvalid,
    pkt_cnt,
    \s_level_out_bus_d1_cdc_to_reg[15] ,
    \s_level_out_bus_d1_cdc_to_reg[15]_0 ,
    \s_level_out_bus_d1_cdc_to_reg[15]_1 ,
    dl_status_reg,
    core_clk,
    tx_div4_clk,
    oserdes_clkdiv_in,
    dl0_txclkesc,
    s_axi_bready,
    s_axi_arvalid,
    s_axi_rready,
    s_axi_araddr,
    s_axi_awvalid,
    s_axi_awaddr);
  output [1:0]out;
  output [11:0]D;
  output \gen_regs.gen_timeout_debug_regs.axi_rvalid_reg_0 ;
  output \s_level_out_bus_d3_reg[1] ;
  output axi_bvalid_reg_0;
  output [31:0]s_axi_rdata;
  output s_axi_wready;
  output s_axi_arready;
  output s_axi_awready;
  input [4:0]cl_status_reg_w;
  input s_axi_aclk;
  input core_rst;
  input \s_level_out_bus_d3_reg[0] ;
  input tx_cl_lp_cn_r_reg;
  input s_axi_aresetn;
  input [31:0]s_axi_wdata;
  input s_axi_wvalid;
  input [15:0]pkt_cnt;
  input [15:0]\s_level_out_bus_d1_cdc_to_reg[15] ;
  input [15:0]\s_level_out_bus_d1_cdc_to_reg[15]_0 ;
  input [15:0]\s_level_out_bus_d1_cdc_to_reg[15]_1 ;
  input [19:0]dl_status_reg;
  input core_clk;
  input tx_div4_clk;
  input oserdes_clkdiv_in;
  input dl0_txclkesc;
  input s_axi_bready;
  input s_axi_arvalid;
  input s_axi_rready;
  input [4:0]s_axi_araddr;
  input s_axi_awvalid;
  input [4:0]s_axi_awaddr;

  wire [11:0]D;
  wire axi_bvalid_i_1_n_0;
  wire axi_bvalid_reg_0;
  wire axi_rvalid21_out;
  wire [4:0]cl_status_reg_w;
  wire [31:0]clk_post_reg_axi;
  wire clk_post_reg_axi_9;
  wire [31:0]clk_pre_reg_axi;
  wire clk_pre_reg_axi_2;
  wire [31:0]clk_prepare_reg_axi;
  wire clk_prepare_reg_axi_1;
  wire [31:0]clk_trail_reg_axi;
  wire clk_trail_reg_axi_0;
  wire [31:0]clk_zero_reg_axi;
  wire clk_zero_reg_axi_10;
  wire core_clk;
  wire core_rst;
  wire [1:1]data0;
  wire dl0_esc_abort_axi;
  wire dl0_esc_abort_r_axi;
  wire dl0_esc_abort_r_axi_i_1_n_0;
  wire dl0_hs_abort_axi;
  wire dl0_hs_abort_r_axi;
  wire dl0_hs_abort_r_axi_i_1_n_0;
  wire dl0_pkt_cnt_sync_n_0;
  wire dl0_pkt_cnt_sync_n_1;
  wire dl0_pkt_cnt_sync_n_10;
  wire dl0_pkt_cnt_sync_n_11;
  wire dl0_pkt_cnt_sync_n_12;
  wire dl0_pkt_cnt_sync_n_13;
  wire dl0_pkt_cnt_sync_n_14;
  wire dl0_pkt_cnt_sync_n_15;
  wire dl0_pkt_cnt_sync_n_2;
  wire dl0_pkt_cnt_sync_n_3;
  wire dl0_pkt_cnt_sync_n_4;
  wire dl0_pkt_cnt_sync_n_5;
  wire dl0_pkt_cnt_sync_n_6;
  wire dl0_pkt_cnt_sync_n_7;
  wire dl0_pkt_cnt_sync_n_8;
  wire dl0_pkt_cnt_sync_n_9;
  wire dl0_txclkesc;
  wire dl1_esc_abort_axi;
  wire dl1_esc_abort_clr_axi;
  wire dl1_esc_abort_r_axi;
  wire dl1_esc_abort_r_axi_i_1_n_0;
  wire dl1_hs_abort_clr_axi;
  wire dl1_hs_abort_r_axi;
  wire dl1_hs_abort_r_axi_i_1_n_0;
  wire [15:0]dl1_pkt_cnt_axi;
  wire dl2_esc_abort_axi;
  wire dl2_esc_abort_clr_axi;
  wire dl2_esc_abort_r_axi;
  wire dl2_esc_abort_r_axi_i_1_n_0;
  wire dl2_hs_abort_clr_axi;
  wire dl2_hs_abort_r_axi;
  wire dl2_hs_abort_r_axi_i_1_n_0;
  wire [15:0]dl2_pkt_cnt_axi;
  wire dl3_esc_abort_axi;
  wire dl3_esc_abort_clr_axi;
  wire dl3_esc_abort_r_axi;
  wire dl3_esc_abort_r_axi_i_1_n_0;
  wire dl3_hs_abort_clr_axi;
  wire dl3_hs_abort_r_axi;
  wire dl3_hs_abort_r_axi_i_1_n_0;
  wire dl3_pkt_cnt_sync_n_0;
  wire dl3_pkt_cnt_sync_n_1;
  wire dl3_pkt_cnt_sync_n_10;
  wire dl3_pkt_cnt_sync_n_11;
  wire dl3_pkt_cnt_sync_n_12;
  wire dl3_pkt_cnt_sync_n_13;
  wire dl3_pkt_cnt_sync_n_14;
  wire dl3_pkt_cnt_sync_n_15;
  wire dl3_pkt_cnt_sync_n_2;
  wire dl3_pkt_cnt_sync_n_3;
  wire dl3_pkt_cnt_sync_n_4;
  wire dl3_pkt_cnt_sync_n_5;
  wire dl3_pkt_cnt_sync_n_6;
  wire dl3_pkt_cnt_sync_n_7;
  wire dl3_pkt_cnt_sync_n_8;
  wire dl3_pkt_cnt_sync_n_9;
  wire dl4_esc_abort_axi;
  wire dl4_esc_abort_clr_axi;
  wire dl4_esc_abort_r_axi;
  wire dl4_esc_abort_r_axi_i_1_n_0;
  wire dl4_hs_abort_clr_axi;
  wire dl4_hs_abort_r_axi;
  wire dl4_hs_abort_r_axi_i_1_n_0;
  wire dl4_pkt_cnt_sync_n_0;
  wire dl4_pkt_cnt_sync_n_1;
  wire dl4_pkt_cnt_sync_n_10;
  wire dl4_pkt_cnt_sync_n_11;
  wire dl4_pkt_cnt_sync_n_12;
  wire dl4_pkt_cnt_sync_n_13;
  wire dl4_pkt_cnt_sync_n_14;
  wire dl4_pkt_cnt_sync_n_15;
  wire dl4_pkt_cnt_sync_n_2;
  wire dl4_pkt_cnt_sync_n_3;
  wire dl4_pkt_cnt_sync_n_4;
  wire dl4_pkt_cnt_sync_n_5;
  wire dl4_pkt_cnt_sync_n_6;
  wire dl4_pkt_cnt_sync_n_7;
  wire dl4_pkt_cnt_sync_n_8;
  wire dl4_pkt_cnt_sync_n_9;
  wire dl5_esc_abort_axi;
  wire dl5_esc_abort_clr_axi;
  wire dl5_esc_abort_r_axi;
  wire dl5_esc_abort_r_axi_i_1_n_0;
  wire dl5_hs_abort_clr_axi;
  wire dl5_hs_abort_r_axi;
  wire dl5_hs_abort_r_axi_i_1_n_0;
  wire [15:0]dl5_pkt_cnt_axi;
  wire dl6_esc_abort_axi;
  wire dl6_esc_abort_clr_axi;
  wire dl6_esc_abort_r_axi;
  wire dl6_esc_abort_r_axi_i_1_n_0;
  wire dl6_hs_abort_clr_axi;
  wire dl6_hs_abort_r_axi;
  wire dl6_hs_abort_r_axi_i_1_n_0;
  wire [15:0]dl6_pkt_cnt_axi;
  wire dl7_esc_abort_axi;
  wire dl7_esc_abort_clr_axi;
  wire dl7_esc_abort_r_axi;
  wire dl7_esc_abort_r_axi_i_1_n_0;
  wire dl7_hs_abort_clr_axi;
  wire dl7_hs_abort_r_axi;
  wire dl7_hs_abort_r_axi_i_1_n_0;
  wire dl7_pkt_cnt_sync_n_0;
  wire dl7_pkt_cnt_sync_n_1;
  wire dl7_pkt_cnt_sync_n_10;
  wire dl7_pkt_cnt_sync_n_11;
  wire dl7_pkt_cnt_sync_n_12;
  wire dl7_pkt_cnt_sync_n_13;
  wire dl7_pkt_cnt_sync_n_14;
  wire dl7_pkt_cnt_sync_n_15;
  wire dl7_pkt_cnt_sync_n_2;
  wire dl7_pkt_cnt_sync_n_3;
  wire dl7_pkt_cnt_sync_n_4;
  wire dl7_pkt_cnt_sync_n_5;
  wire dl7_pkt_cnt_sync_n_6;
  wire dl7_pkt_cnt_sync_n_7;
  wire dl7_pkt_cnt_sync_n_8;
  wire dl7_pkt_cnt_sync_n_9;
  wire [19:0]dl_status_reg;
  wire dphy_en_axi;
  wire dphy_en_axi1;
  wire [31:0]esc_timeout_axi;
  wire esc_timeout_axi_4;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_10_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_7_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_4_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_7_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_4_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_7_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_4_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_7_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_4_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_7_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_4_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_7_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_4_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_7_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_10_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_7_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_12_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_7_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_9_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_3_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_3_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_4_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_7_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_4_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_7_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_4_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_7_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_4_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_7_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[10]_i_3_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[11]_i_3_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[12]_i_3_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[13]_i_3_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[14]_i_3_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[15]_i_3_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[7]_i_3_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[8]_i_3_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[9]_i_3_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rvalid_reg_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl0_esc_abort_clr_axi_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl0_esc_abort_clr_axi_reg_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl0_hs_abort_clr_axi_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl0_hs_abort_clr_axi_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl0_hs_abort_clr_axi_reg_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl1_esc_abort_clr_axi_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl1_esc_abort_clr_axi_reg_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl1_hs_abort_clr_axi_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl2_esc_abort_clr_axi_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl2_esc_abort_clr_axi_reg_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl2_hs_abort_clr_axi_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl3_esc_abort_clr_axi_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl3_esc_abort_clr_axi_reg_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl3_hs_abort_clr_axi_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl4_esc_abort_clr_axi_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl4_esc_abort_clr_axi_reg_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl4_hs_abort_clr_axi_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl5_esc_abort_clr_axi_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl5_esc_abort_clr_axi_reg_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl5_hs_abort_clr_axi_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl6_esc_abort_clr_axi_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl6_esc_abort_clr_axi_reg_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl6_hs_abort_clr_axi_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl7_esc_abort_clr_axi_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl7_esc_abort_clr_axi_reg_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dl7_hs_abort_clr_axi_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dphy_en_axi_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.dphy_srst_axi_i_1_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[0] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[10] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[11] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[12] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[13] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[14] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[15] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[16] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[17] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[18] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[19] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[1] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[20] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[21] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[22] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[23] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[24] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[25] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[26] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[27] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[28] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[29] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[2] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[30] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[31] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[3] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[4] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[5] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[6] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[7] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[8] ;
  wire \gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[9] ;
  wire [31:0]hs_exit_reg_axi;
  wire hs_exit_reg_axi_5;
  wire [31:0]hs_prepare_reg_axi;
  wire hs_prepare_reg_axi_7;
  wire [31:0]hs_trail_reg_axi;
  wire hs_trail_reg_axi_8;
  wire [31:0]hs_tx_timeout_axi;
  wire hs_tx_timeout_axi_6;
  wire [31:0]hs_zero_reg_axi;
  wire hs_zero_reg_axi_3;
  wire init_done_sync_n_0;
  wire init_value_axi;
  wire mode_sync_n_0;
  wire mode_sync_n_1;
  wire mode_sync_n_2;
  wire mode_sync_n_3;
  wire oserdes_clkdiv_in;
  wire [1:0]out;
  wire [4:0]p_0_in;
  wire [0:0]p_4_in;
  wire [15:0]pkt_cnt;
  wire rd_req;
  wire rd_req0;
  wire rd_req_i_1_n_0;
  wire reset_released;
  wire reset_released_r;
  wire s_axi_aclk;
  wire [4:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [4:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire [15:0]\s_level_out_bus_d1_cdc_to_reg[15] ;
  wire [15:0]\s_level_out_bus_d1_cdc_to_reg[15]_0 ;
  wire [15:0]\s_level_out_bus_d1_cdc_to_reg[15]_1 ;
  wire \s_level_out_bus_d3_reg[0] ;
  wire \s_level_out_bus_d3_reg[1] ;
  wire [4:0]sel0;
  wire stopstate_sync_n_0;
  wire stopstate_sync_n_1;
  wire tx_cl_lp_cn_r_reg;
  wire tx_div4_clk;
  wire ulps_sync_n_0;
  wire \wr_addr[2]_i_1_n_0 ;
  wire \wr_addr[3]_i_1_n_0 ;
  wire \wr_addr[4]_i_1_n_0 ;
  wire \wr_addr[5]_i_1_n_0 ;
  wire \wr_addr[6]_i_1_n_0 ;
  wire wr_req;
  wire wr_req024_out;
  wire wr_req_i_1_n_0;

  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'h08F8)) 
    axi_bvalid_i_1
       (.I0(s_axi_wvalid),
        .I1(wr_req),
        .I2(axi_bvalid_reg_0),
        .I3(s_axi_bready),
        .O(axi_bvalid_i_1_n_0));
  FDCE axi_bvalid_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(axi_bvalid_i_1_n_0),
        .Q(axi_bvalid_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8 clk_post_reg_sync
       (.Q(clk_post_reg_axi),
        .oserdes_clkdiv_in(oserdes_clkdiv_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_97 clk_pre_reg_sync
       (.Q(clk_pre_reg_axi),
        .oserdes_clkdiv_in(oserdes_clkdiv_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_98 clk_prepare_reg_div4clk_sync
       (.Q(clk_prepare_reg_axi),
        .oserdes_clkdiv_in(oserdes_clkdiv_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_99 clk_prepare_reg_sync
       (.Q(clk_prepare_reg_axi),
        .core_clk(core_clk),
        .\s_level_out_bus_d3_reg[0]_0 (\s_level_out_bus_d3_reg[0] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_100 clk_trail_reg_sync
       (.Q(clk_trail_reg_axi),
        .core_clk(core_clk),
        .\s_level_out_bus_d2_reg[0]_0 (\s_level_out_bus_d3_reg[0] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_101 clk_zero_reg_div4clk_sync
       (.Q(clk_zero_reg_axi),
        .oserdes_clkdiv_in(oserdes_clkdiv_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_102 clk_zero_reg_sync
       (.Q(clk_zero_reg_axi),
        .core_clk(core_clk),
        .\s_level_out_bus_d2_reg[0]_0 (\s_level_out_bus_d3_reg[0] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized6 control_sync
       (.core_clk(core_clk),
        .core_rst(core_rst),
        .data0(data0),
        .out(out),
        .p_4_in(p_4_in),
        .\s_level_out_bus_d3_reg[1]_0 (\s_level_out_bus_d3_reg[1] ),
        .tx_cl_lp_cn_r_reg(\s_level_out_bus_d3_reg[0] ),
        .tx_cl_lp_cn_r_reg_0(tx_cl_lp_cn_r_reg));
  LUT4 #(
    .INIT(16'h1110)) 
    dl0_esc_abort_r_axi_i_1
       (.I0(p_4_in),
        .I1(\gen_regs.gen_timeout_debug_regs.dl0_esc_abort_clr_axi_reg_n_0 ),
        .I2(dl0_esc_abort_axi),
        .I3(dl0_esc_abort_r_axi),
        .O(dl0_esc_abort_r_axi_i_1_n_0));
  FDCE dl0_esc_abort_r_axi_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(dl0_esc_abort_r_axi_i_1_n_0),
        .Q(dl0_esc_abort_r_axi));
  LUT4 #(
    .INIT(16'h1110)) 
    dl0_hs_abort_r_axi_i_1
       (.I0(p_4_in),
        .I1(\gen_regs.gen_timeout_debug_regs.dl0_hs_abort_clr_axi_reg_n_0 ),
        .I2(dl0_hs_abort_axi),
        .I3(dl0_hs_abort_r_axi),
        .O(dl0_hs_abort_r_axi_i_1_n_0));
  FDCE dl0_hs_abort_r_axi_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(dl0_hs_abort_r_axi_i_1_n_0),
        .Q(dl0_hs_abort_r_axi));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized2 dl0_pkt_cnt_sync
       (.Q(sel0[1:0]),
        .SR(mode_sync_n_1),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 (esc_timeout_axi[31:16]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 (hs_tx_timeout_axi[31:16]),
        .pkt_cnt(pkt_cnt),
        .s_axi_aclk(s_axi_aclk),
        .\s_level_out_bus_d3_reg[0]_0 (dl0_pkt_cnt_sync_n_0),
        .\s_level_out_bus_d3_reg[10]_0 (dl0_pkt_cnt_sync_n_10),
        .\s_level_out_bus_d3_reg[11]_0 (dl0_pkt_cnt_sync_n_11),
        .\s_level_out_bus_d3_reg[12]_0 (dl0_pkt_cnt_sync_n_12),
        .\s_level_out_bus_d3_reg[13]_0 (dl0_pkt_cnt_sync_n_13),
        .\s_level_out_bus_d3_reg[14]_0 (dl0_pkt_cnt_sync_n_14),
        .\s_level_out_bus_d3_reg[15]_0 (dl0_pkt_cnt_sync_n_15),
        .\s_level_out_bus_d3_reg[1]_0 (dl0_pkt_cnt_sync_n_1),
        .\s_level_out_bus_d3_reg[2]_0 (dl0_pkt_cnt_sync_n_2),
        .\s_level_out_bus_d3_reg[3]_0 (dl0_pkt_cnt_sync_n_3),
        .\s_level_out_bus_d3_reg[4]_0 (dl0_pkt_cnt_sync_n_4),
        .\s_level_out_bus_d3_reg[5]_0 (dl0_pkt_cnt_sync_n_5),
        .\s_level_out_bus_d3_reg[6]_0 (dl0_pkt_cnt_sync_n_6),
        .\s_level_out_bus_d3_reg[7]_0 (dl0_pkt_cnt_sync_n_7),
        .\s_level_out_bus_d3_reg[8]_0 (dl0_pkt_cnt_sync_n_8),
        .\s_level_out_bus_d3_reg[9]_0 (dl0_pkt_cnt_sync_n_9));
  LUT4 #(
    .INIT(16'h1110)) 
    dl1_esc_abort_r_axi_i_1
       (.I0(p_4_in),
        .I1(\gen_regs.gen_timeout_debug_regs.dl1_esc_abort_clr_axi_reg_n_0 ),
        .I2(dl1_esc_abort_axi),
        .I3(dl1_esc_abort_r_axi),
        .O(dl1_esc_abort_r_axi_i_1_n_0));
  FDCE dl1_esc_abort_r_axi_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(dl1_esc_abort_r_axi_i_1_n_0),
        .Q(dl1_esc_abort_r_axi));
  LUT4 #(
    .INIT(16'h1110)) 
    dl1_hs_abort_r_axi_i_1
       (.I0(p_4_in),
        .I1(dl1_hs_abort_clr_axi),
        .I2(dl0_hs_abort_axi),
        .I3(dl1_hs_abort_r_axi),
        .O(dl1_hs_abort_r_axi_i_1_n_0));
  FDCE dl1_hs_abort_r_axi_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(dl1_hs_abort_r_axi_i_1_n_0),
        .Q(dl1_hs_abort_r_axi));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized2_103 dl1_pkt_cnt_sync
       (.D(dl1_pkt_cnt_axi),
        .SR(mode_sync_n_1),
        .s_axi_aclk(s_axi_aclk),
        .\s_level_out_bus_d1_cdc_to_reg[15]_0 (\s_level_out_bus_d1_cdc_to_reg[15] ));
  LUT4 #(
    .INIT(16'h1110)) 
    dl2_esc_abort_r_axi_i_1
       (.I0(p_4_in),
        .I1(\gen_regs.gen_timeout_debug_regs.dl2_esc_abort_clr_axi_reg_n_0 ),
        .I2(dl2_esc_abort_axi),
        .I3(dl2_esc_abort_r_axi),
        .O(dl2_esc_abort_r_axi_i_1_n_0));
  FDCE dl2_esc_abort_r_axi_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(dl2_esc_abort_r_axi_i_1_n_0),
        .Q(dl2_esc_abort_r_axi));
  LUT4 #(
    .INIT(16'h1110)) 
    dl2_hs_abort_r_axi_i_1
       (.I0(p_4_in),
        .I1(dl2_hs_abort_clr_axi),
        .I2(dl0_hs_abort_axi),
        .I3(dl2_hs_abort_r_axi),
        .O(dl2_hs_abort_r_axi_i_1_n_0));
  FDCE dl2_hs_abort_r_axi_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(dl2_hs_abort_r_axi_i_1_n_0),
        .Q(dl2_hs_abort_r_axi));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized2_104 dl2_pkt_cnt_sync
       (.D(dl2_pkt_cnt_axi),
        .SR(mode_sync_n_1),
        .s_axi_aclk(s_axi_aclk),
        .\s_level_out_bus_d1_cdc_to_reg[15]_0 (\s_level_out_bus_d1_cdc_to_reg[15]_0 ));
  LUT4 #(
    .INIT(16'h1110)) 
    dl3_esc_abort_r_axi_i_1
       (.I0(p_4_in),
        .I1(\gen_regs.gen_timeout_debug_regs.dl3_esc_abort_clr_axi_reg_n_0 ),
        .I2(dl3_esc_abort_axi),
        .I3(dl3_esc_abort_r_axi),
        .O(dl3_esc_abort_r_axi_i_1_n_0));
  FDCE dl3_esc_abort_r_axi_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(dl3_esc_abort_r_axi_i_1_n_0),
        .Q(dl3_esc_abort_r_axi));
  LUT4 #(
    .INIT(16'h1110)) 
    dl3_hs_abort_r_axi_i_1
       (.I0(p_4_in),
        .I1(dl3_hs_abort_clr_axi),
        .I2(dl0_hs_abort_axi),
        .I3(dl3_hs_abort_r_axi),
        .O(dl3_hs_abort_r_axi_i_1_n_0));
  FDCE dl3_hs_abort_r_axi_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(dl3_hs_abort_r_axi_i_1_n_0),
        .Q(dl3_hs_abort_r_axi));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized2_105 dl3_pkt_cnt_sync
       (.D(dl2_pkt_cnt_axi),
        .Q(sel0[3:0]),
        .SR(mode_sync_n_1),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 (hs_prepare_reg_axi[31:16]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 (dl1_pkt_cnt_axi),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] (\gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_0 (dl0_pkt_cnt_sync_n_0),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_8_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17] (\gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17]_0 (dl0_pkt_cnt_sync_n_1),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17]_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_8_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18] (\gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18]_0 (dl0_pkt_cnt_sync_n_2),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18]_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_8_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19] (\gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19]_0 (dl0_pkt_cnt_sync_n_3),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19]_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_8_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20] (\gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20]_0 (dl0_pkt_cnt_sync_n_4),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20]_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_8_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21] (\gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21]_0 (dl0_pkt_cnt_sync_n_5),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21]_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_8_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22] (\gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22]_0 (dl0_pkt_cnt_sync_n_6),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22]_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_8_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23] (\gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23]_0 (dl0_pkt_cnt_sync_n_7),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23]_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_8_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24] (\gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24]_0 (dl0_pkt_cnt_sync_n_8),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24]_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_8_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25] (\gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25]_0 (dl0_pkt_cnt_sync_n_9),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25]_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_8_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26] (\gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26]_0 (dl0_pkt_cnt_sync_n_10),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26]_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_8_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27] (\gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27]_0 (dl0_pkt_cnt_sync_n_11),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27]_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_8_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28] (\gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28]_0 (dl0_pkt_cnt_sync_n_12),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28]_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_8_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29] (\gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29]_0 (dl0_pkt_cnt_sync_n_13),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29]_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_8_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30] (\gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30]_0 (dl0_pkt_cnt_sync_n_14),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30]_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_8_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] (\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_9_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_0 (dl0_pkt_cnt_sync_n_15),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_12_n_0 ),
        .\rd_addr_reg[5] (dl3_pkt_cnt_sync_n_0),
        .\rd_addr_reg[5]_0 (dl3_pkt_cnt_sync_n_1),
        .\rd_addr_reg[5]_1 (dl3_pkt_cnt_sync_n_2),
        .\rd_addr_reg[5]_10 (dl3_pkt_cnt_sync_n_11),
        .\rd_addr_reg[5]_11 (dl3_pkt_cnt_sync_n_12),
        .\rd_addr_reg[5]_12 (dl3_pkt_cnt_sync_n_13),
        .\rd_addr_reg[5]_13 (dl3_pkt_cnt_sync_n_14),
        .\rd_addr_reg[5]_14 (dl3_pkt_cnt_sync_n_15),
        .\rd_addr_reg[5]_2 (dl3_pkt_cnt_sync_n_3),
        .\rd_addr_reg[5]_3 (dl3_pkt_cnt_sync_n_4),
        .\rd_addr_reg[5]_4 (dl3_pkt_cnt_sync_n_5),
        .\rd_addr_reg[5]_5 (dl3_pkt_cnt_sync_n_6),
        .\rd_addr_reg[5]_6 (dl3_pkt_cnt_sync_n_7),
        .\rd_addr_reg[5]_7 (dl3_pkt_cnt_sync_n_8),
        .\rd_addr_reg[5]_8 (dl3_pkt_cnt_sync_n_9),
        .\rd_addr_reg[5]_9 (dl3_pkt_cnt_sync_n_10),
        .s_axi_aclk(s_axi_aclk),
        .\s_level_out_bus_d1_cdc_to_reg[15]_0 (\s_level_out_bus_d1_cdc_to_reg[15]_1 ));
  LUT4 #(
    .INIT(16'h1110)) 
    dl4_esc_abort_r_axi_i_1
       (.I0(p_4_in),
        .I1(\gen_regs.gen_timeout_debug_regs.dl4_esc_abort_clr_axi_reg_n_0 ),
        .I2(dl4_esc_abort_axi),
        .I3(dl4_esc_abort_r_axi),
        .O(dl4_esc_abort_r_axi_i_1_n_0));
  FDCE dl4_esc_abort_r_axi_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(dl4_esc_abort_r_axi_i_1_n_0),
        .Q(dl4_esc_abort_r_axi));
  LUT4 #(
    .INIT(16'h1110)) 
    dl4_hs_abort_r_axi_i_1
       (.I0(p_4_in),
        .I1(dl4_hs_abort_clr_axi),
        .I2(dl0_hs_abort_axi),
        .I3(dl4_hs_abort_r_axi),
        .O(dl4_hs_abort_r_axi_i_1_n_0));
  FDCE dl4_hs_abort_r_axi_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(dl4_hs_abort_r_axi_i_1_n_0),
        .Q(dl4_hs_abort_r_axi));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized2_106 dl4_pkt_cnt_sync
       (.D({dl4_pkt_cnt_sync_n_0,dl4_pkt_cnt_sync_n_1,dl4_pkt_cnt_sync_n_2,dl4_pkt_cnt_sync_n_3,dl4_pkt_cnt_sync_n_4,dl4_pkt_cnt_sync_n_5,dl4_pkt_cnt_sync_n_6,dl4_pkt_cnt_sync_n_7,dl4_pkt_cnt_sync_n_8,dl4_pkt_cnt_sync_n_9,dl4_pkt_cnt_sync_n_10,dl4_pkt_cnt_sync_n_11,dl4_pkt_cnt_sync_n_12,dl4_pkt_cnt_sync_n_13,dl4_pkt_cnt_sync_n_14,dl4_pkt_cnt_sync_n_15}),
        .Q(clk_trail_reg_axi[31:16]),
        .SR(mode_sync_n_1),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] (\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_0 (dl7_pkt_cnt_sync_n_0),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_7_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_2 (dl3_pkt_cnt_sync_n_0),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 (sel0[1:0]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17] (dl7_pkt_cnt_sync_n_1),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17]_0 (dl3_pkt_cnt_sync_n_1),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18] (dl7_pkt_cnt_sync_n_2),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18]_0 (dl3_pkt_cnt_sync_n_2),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19] (dl7_pkt_cnt_sync_n_3),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19]_0 (dl3_pkt_cnt_sync_n_3),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20] (dl7_pkt_cnt_sync_n_4),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20]_0 (dl3_pkt_cnt_sync_n_4),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21] (dl7_pkt_cnt_sync_n_5),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21]_0 (dl3_pkt_cnt_sync_n_5),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22] (dl7_pkt_cnt_sync_n_6),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22]_0 (dl3_pkt_cnt_sync_n_6),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23] (dl7_pkt_cnt_sync_n_7),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23]_0 (dl3_pkt_cnt_sync_n_7),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24] (dl7_pkt_cnt_sync_n_8),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24]_0 (dl3_pkt_cnt_sync_n_8),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25] (dl7_pkt_cnt_sync_n_9),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25]_0 (dl3_pkt_cnt_sync_n_9),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26] (dl7_pkt_cnt_sync_n_10),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26]_0 (dl3_pkt_cnt_sync_n_10),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27] (dl7_pkt_cnt_sync_n_11),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27]_0 (dl3_pkt_cnt_sync_n_11),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28] (dl7_pkt_cnt_sync_n_12),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28]_0 (dl3_pkt_cnt_sync_n_12),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29] (dl7_pkt_cnt_sync_n_13),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29]_0 (dl3_pkt_cnt_sync_n_13),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30] (dl7_pkt_cnt_sync_n_14),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30]_0 (dl3_pkt_cnt_sync_n_14),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] (dl7_pkt_cnt_sync_n_15),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_0 (dl3_pkt_cnt_sync_n_15),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 (clk_zero_reg_axi[31:16]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 (clk_prepare_reg_axi[31:16]),
        .rd_req(rd_req),
        .s_axi_aclk(s_axi_aclk));
  LUT4 #(
    .INIT(16'h1110)) 
    dl5_esc_abort_r_axi_i_1
       (.I0(p_4_in),
        .I1(\gen_regs.gen_timeout_debug_regs.dl5_esc_abort_clr_axi_reg_n_0 ),
        .I2(dl5_esc_abort_axi),
        .I3(dl5_esc_abort_r_axi),
        .O(dl5_esc_abort_r_axi_i_1_n_0));
  FDCE dl5_esc_abort_r_axi_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(dl5_esc_abort_r_axi_i_1_n_0),
        .Q(dl5_esc_abort_r_axi));
  LUT4 #(
    .INIT(16'h1110)) 
    dl5_hs_abort_r_axi_i_1
       (.I0(p_4_in),
        .I1(dl5_hs_abort_clr_axi),
        .I2(dl0_hs_abort_axi),
        .I3(dl5_hs_abort_r_axi),
        .O(dl5_hs_abort_r_axi_i_1_n_0));
  FDCE dl5_hs_abort_r_axi_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(dl5_hs_abort_r_axi_i_1_n_0),
        .Q(dl5_hs_abort_r_axi));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized2_107 dl5_pkt_cnt_sync
       (.D(dl5_pkt_cnt_axi),
        .SR(mode_sync_n_1),
        .s_axi_aclk(s_axi_aclk));
  LUT4 #(
    .INIT(16'h1110)) 
    dl6_esc_abort_r_axi_i_1
       (.I0(p_4_in),
        .I1(\gen_regs.gen_timeout_debug_regs.dl6_esc_abort_clr_axi_reg_n_0 ),
        .I2(dl6_esc_abort_axi),
        .I3(dl6_esc_abort_r_axi),
        .O(dl6_esc_abort_r_axi_i_1_n_0));
  FDCE dl6_esc_abort_r_axi_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(dl6_esc_abort_r_axi_i_1_n_0),
        .Q(dl6_esc_abort_r_axi));
  LUT4 #(
    .INIT(16'h1110)) 
    dl6_hs_abort_r_axi_i_1
       (.I0(p_4_in),
        .I1(dl6_hs_abort_clr_axi),
        .I2(dl0_hs_abort_axi),
        .I3(dl6_hs_abort_r_axi),
        .O(dl6_hs_abort_r_axi_i_1_n_0));
  FDCE dl6_hs_abort_r_axi_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(dl6_hs_abort_r_axi_i_1_n_0),
        .Q(dl6_hs_abort_r_axi));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized2_108 dl6_pkt_cnt_sync
       (.D(dl6_pkt_cnt_axi),
        .SR(mode_sync_n_1),
        .s_axi_aclk(s_axi_aclk));
  LUT4 #(
    .INIT(16'h1110)) 
    dl7_esc_abort_r_axi_i_1
       (.I0(p_4_in),
        .I1(\gen_regs.gen_timeout_debug_regs.dl7_esc_abort_clr_axi_reg_n_0 ),
        .I2(dl7_esc_abort_axi),
        .I3(dl7_esc_abort_r_axi),
        .O(dl7_esc_abort_r_axi_i_1_n_0));
  FDCE dl7_esc_abort_r_axi_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(dl7_esc_abort_r_axi_i_1_n_0),
        .Q(dl7_esc_abort_r_axi));
  LUT4 #(
    .INIT(16'h1110)) 
    dl7_hs_abort_r_axi_i_1
       (.I0(p_4_in),
        .I1(dl7_hs_abort_clr_axi),
        .I2(dl0_hs_abort_axi),
        .I3(dl7_hs_abort_r_axi),
        .O(dl7_hs_abort_r_axi_i_1_n_0));
  FDCE dl7_hs_abort_r_axi_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(dl7_hs_abort_r_axi_i_1_n_0),
        .Q(dl7_hs_abort_r_axi));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized2_109 dl7_pkt_cnt_sync
       (.D(dl6_pkt_cnt_axi),
        .Q(sel0[1:0]),
        .SR(mode_sync_n_1),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] (dl5_pkt_cnt_axi),
        .s_axi_aclk(s_axi_aclk),
        .\s_level_out_bus_d3_reg[0]_0 (dl7_pkt_cnt_sync_n_0),
        .\s_level_out_bus_d3_reg[10]_0 (dl7_pkt_cnt_sync_n_10),
        .\s_level_out_bus_d3_reg[11]_0 (dl7_pkt_cnt_sync_n_11),
        .\s_level_out_bus_d3_reg[12]_0 (dl7_pkt_cnt_sync_n_12),
        .\s_level_out_bus_d3_reg[13]_0 (dl7_pkt_cnt_sync_n_13),
        .\s_level_out_bus_d3_reg[14]_0 (dl7_pkt_cnt_sync_n_14),
        .\s_level_out_bus_d3_reg[15]_0 (dl7_pkt_cnt_sync_n_15),
        .\s_level_out_bus_d3_reg[1]_0 (dl7_pkt_cnt_sync_n_1),
        .\s_level_out_bus_d3_reg[2]_0 (dl7_pkt_cnt_sync_n_2),
        .\s_level_out_bus_d3_reg[3]_0 (dl7_pkt_cnt_sync_n_3),
        .\s_level_out_bus_d3_reg[4]_0 (dl7_pkt_cnt_sync_n_4),
        .\s_level_out_bus_d3_reg[5]_0 (dl7_pkt_cnt_sync_n_5),
        .\s_level_out_bus_d3_reg[6]_0 (dl7_pkt_cnt_sync_n_6),
        .\s_level_out_bus_d3_reg[7]_0 (dl7_pkt_cnt_sync_n_7),
        .\s_level_out_bus_d3_reg[8]_0 (dl7_pkt_cnt_sync_n_8),
        .\s_level_out_bus_d3_reg[9]_0 (dl7_pkt_cnt_sync_n_9));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized3 esc_abort_sync
       (.D({dl0_esc_abort_axi,dl1_esc_abort_axi,dl2_esc_abort_axi,dl3_esc_abort_axi,dl4_esc_abort_axi,dl5_esc_abort_axi,dl6_esc_abort_axi,dl7_esc_abort_axi}),
        .SR(mode_sync_n_1),
        .dl_status_reg({dl_status_reg[18],dl_status_reg[13],dl_status_reg[8],dl_status_reg[3]}),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_110 esc_timeout_sync
       (.Q(esc_timeout_axi),
        .dl0_txclkesc(dl0_txclkesc));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_10 
       (.I0(clk_post_reg_axi[0]),
        .I1(clk_pre_reg_axi[0]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[0]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[0]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_7 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[0] ),
        .I1(sel0[1]),
        .I2(hs_exit_reg_axi[0]),
        .I3(sel0[0]),
        .I4(p_4_in),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00AA20AA00002000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_1 
       (.I0(rd_req),
        .I1(sel0[2]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_2_n_0 ),
        .I3(sel0[4]),
        .I4(sel0[3]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[10]_i_3_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_2 
       (.I0(clk_trail_reg_axi[10]),
        .I1(sel0[1]),
        .I2(clk_zero_reg_axi[10]),
        .I3(sel0[0]),
        .I4(clk_prepare_reg_axi[10]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00E2FFFF00E20000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_4 
       (.I0(hs_tx_timeout_axi[10]),
        .I1(sel0[0]),
        .I2(esc_timeout_axi[10]),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_6_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8888888)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_5 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_7_n_0 ),
        .I1(sel0[2]),
        .I2(sel0[1]),
        .I3(hs_prepare_reg_axi[10]),
        .I4(sel0[0]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[10] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[10]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_7 
       (.I0(clk_post_reg_axi[10]),
        .I1(clk_pre_reg_axi[10]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[10]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[10]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00AA20AA00002000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_1 
       (.I0(rd_req),
        .I1(sel0[2]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_2_n_0 ),
        .I3(sel0[4]),
        .I4(sel0[3]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[11]_i_3_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_2 
       (.I0(clk_trail_reg_axi[11]),
        .I1(sel0[1]),
        .I2(clk_zero_reg_axi[11]),
        .I3(sel0[0]),
        .I4(clk_prepare_reg_axi[11]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00E2FFFF00E20000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_4 
       (.I0(hs_tx_timeout_axi[11]),
        .I1(sel0[0]),
        .I2(esc_timeout_axi[11]),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_6_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8888888)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_5 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_7_n_0 ),
        .I1(sel0[2]),
        .I2(sel0[1]),
        .I3(hs_prepare_reg_axi[11]),
        .I4(sel0[0]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[11] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[11]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_7 
       (.I0(clk_post_reg_axi[11]),
        .I1(clk_pre_reg_axi[11]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[11]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[11]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00AA20AA00002000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_1 
       (.I0(rd_req),
        .I1(sel0[2]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_2_n_0 ),
        .I3(sel0[4]),
        .I4(sel0[3]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[12]_i_3_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_2 
       (.I0(clk_trail_reg_axi[12]),
        .I1(sel0[1]),
        .I2(clk_zero_reg_axi[12]),
        .I3(sel0[0]),
        .I4(clk_prepare_reg_axi[12]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00E2FFFF00E20000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_4 
       (.I0(hs_tx_timeout_axi[12]),
        .I1(sel0[0]),
        .I2(esc_timeout_axi[12]),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_6_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8888888)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_5 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_7_n_0 ),
        .I1(sel0[2]),
        .I2(sel0[1]),
        .I3(hs_prepare_reg_axi[12]),
        .I4(sel0[0]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[12] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[12]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_7 
       (.I0(clk_post_reg_axi[12]),
        .I1(clk_pre_reg_axi[12]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[12]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[12]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00AA20AA00002000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_1 
       (.I0(rd_req),
        .I1(sel0[2]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_2_n_0 ),
        .I3(sel0[4]),
        .I4(sel0[3]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[13]_i_3_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_2 
       (.I0(clk_trail_reg_axi[13]),
        .I1(sel0[1]),
        .I2(clk_zero_reg_axi[13]),
        .I3(sel0[0]),
        .I4(clk_prepare_reg_axi[13]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00E2FFFF00E20000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_4 
       (.I0(hs_tx_timeout_axi[13]),
        .I1(sel0[0]),
        .I2(esc_timeout_axi[13]),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_6_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8888888)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_5 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_7_n_0 ),
        .I1(sel0[2]),
        .I2(sel0[1]),
        .I3(hs_prepare_reg_axi[13]),
        .I4(sel0[0]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[13] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[13]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_7 
       (.I0(clk_post_reg_axi[13]),
        .I1(clk_pre_reg_axi[13]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[13]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[13]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00AA20AA00002000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_1 
       (.I0(rd_req),
        .I1(sel0[2]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_2_n_0 ),
        .I3(sel0[4]),
        .I4(sel0[3]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[14]_i_3_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_2 
       (.I0(clk_trail_reg_axi[14]),
        .I1(sel0[1]),
        .I2(clk_zero_reg_axi[14]),
        .I3(sel0[0]),
        .I4(clk_prepare_reg_axi[14]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00E2FFFF00E20000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_4 
       (.I0(hs_tx_timeout_axi[14]),
        .I1(sel0[0]),
        .I2(esc_timeout_axi[14]),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_6_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8888888)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_5 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_7_n_0 ),
        .I1(sel0[2]),
        .I2(sel0[1]),
        .I3(hs_prepare_reg_axi[14]),
        .I4(sel0[0]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[14] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[14]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_7 
       (.I0(clk_post_reg_axi[14]),
        .I1(clk_pre_reg_axi[14]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[14]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[14]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00AA20AA00002000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_1 
       (.I0(rd_req),
        .I1(sel0[2]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_2_n_0 ),
        .I3(sel0[4]),
        .I4(sel0[3]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[15]_i_3_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_2 
       (.I0(clk_trail_reg_axi[15]),
        .I1(sel0[1]),
        .I2(clk_zero_reg_axi[15]),
        .I3(sel0[0]),
        .I4(clk_prepare_reg_axi[15]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00E2FFFF00E20000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_4 
       (.I0(hs_tx_timeout_axi[15]),
        .I1(sel0[0]),
        .I2(esc_timeout_axi[15]),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_6_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8888888)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_5 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_7_n_0 ),
        .I1(sel0[2]),
        .I2(sel0[1]),
        .I3(hs_prepare_reg_axi[15]),
        .I4(sel0[0]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[15] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[15]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_7 
       (.I0(clk_post_reg_axi[15]),
        .I1(clk_pre_reg_axi[15]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[15]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[15]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_5 
       (.I0(clk_post_reg_axi[16]),
        .I1(clk_pre_reg_axi[16]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[16]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[16]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[16] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[16]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_5 
       (.I0(clk_post_reg_axi[17]),
        .I1(clk_pre_reg_axi[17]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[17]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[17]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[17] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[17]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_5 
       (.I0(clk_post_reg_axi[18]),
        .I1(clk_pre_reg_axi[18]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[18]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[18]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[18] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[18]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_5 
       (.I0(clk_post_reg_axi[19]),
        .I1(clk_pre_reg_axi[19]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[19]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[19]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[19] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[19]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_10 
       (.I0(clk_post_reg_axi[1]),
        .I1(clk_pre_reg_axi[1]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[1]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[1]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_7 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[1] ),
        .I1(sel0[1]),
        .I2(hs_exit_reg_axi[1]),
        .I3(sel0[0]),
        .I4(data0),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_5 
       (.I0(clk_post_reg_axi[20]),
        .I1(clk_pre_reg_axi[20]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[20]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[20]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[20] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[20]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_5 
       (.I0(clk_post_reg_axi[21]),
        .I1(clk_pre_reg_axi[21]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[21]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[21]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[21] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[21]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_5 
       (.I0(clk_post_reg_axi[22]),
        .I1(clk_pre_reg_axi[22]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[22]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[22]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[22] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[22]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_5 
       (.I0(clk_post_reg_axi[23]),
        .I1(clk_pre_reg_axi[23]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[23]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[23]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[23] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[23]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_5 
       (.I0(clk_post_reg_axi[24]),
        .I1(clk_pre_reg_axi[24]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[24]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[24]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[24] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[24]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_5 
       (.I0(clk_post_reg_axi[25]),
        .I1(clk_pre_reg_axi[25]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[25]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[25]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[25] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[25]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_5 
       (.I0(clk_post_reg_axi[26]),
        .I1(clk_pre_reg_axi[26]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[26]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[26]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[26] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[26]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_5 
       (.I0(clk_post_reg_axi[27]),
        .I1(clk_pre_reg_axi[27]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[27]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[27]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[27] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[27]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_5 
       (.I0(clk_post_reg_axi[28]),
        .I1(clk_pre_reg_axi[28]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[28]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[28]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[28] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[28]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_5 
       (.I0(clk_post_reg_axi[29]),
        .I1(clk_pre_reg_axi[29]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[29]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[29]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[29] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[29]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_5 
       (.I0(clk_post_reg_axi[2]),
        .I1(clk_pre_reg_axi[2]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[2]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[2]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[2] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[2]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_5 
       (.I0(clk_post_reg_axi[30]),
        .I1(clk_pre_reg_axi[30]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[30]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[30]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[30] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[30]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rvalid_reg_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_12 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[31] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[31]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'h5D)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_5 
       (.I0(sel0[4]),
        .I1(sel0[2]),
        .I2(sel0[3]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_7 
       (.I0(sel0[3]),
        .I1(sel0[4]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_9 
       (.I0(clk_post_reg_axi[31]),
        .I1(clk_pre_reg_axi[31]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[31]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[31]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_8 
       (.I0(clk_post_reg_axi[3]),
        .I1(clk_pre_reg_axi[3]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[3]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[3]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_2 
       (.I0(dl4_hs_abort_r_axi),
        .I1(clk_trail_reg_axi[4]),
        .I2(sel0[1]),
        .I3(clk_zero_reg_axi[4]),
        .I4(sel0[0]),
        .I5(clk_prepare_reg_axi[4]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_3 
       (.I0(dl7_hs_abort_r_axi),
        .I1(sel0[1]),
        .I2(dl6_hs_abort_r_axi),
        .I3(sel0[0]),
        .I4(dl5_hs_abort_r_axi),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_5 
       (.I0(clk_post_reg_axi[4]),
        .I1(clk_pre_reg_axi[4]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[4]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[4]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_6 
       (.I0(hs_prepare_reg_axi[4]),
        .I1(dl3_hs_abort_r_axi),
        .I2(sel0[1]),
        .I3(dl2_hs_abort_r_axi),
        .I4(sel0[0]),
        .I5(dl1_hs_abort_r_axi),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[4] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[4]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_5_n_0 ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_3_n_0 ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_7_n_0 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_4_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_2 
       (.I0(dl4_esc_abort_r_axi),
        .I1(clk_trail_reg_axi[5]),
        .I2(sel0[1]),
        .I3(clk_zero_reg_axi[5]),
        .I4(sel0[0]),
        .I5(clk_prepare_reg_axi[5]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_3 
       (.I0(dl7_esc_abort_r_axi),
        .I1(sel0[1]),
        .I2(dl6_esc_abort_r_axi),
        .I3(sel0[0]),
        .I4(dl5_esc_abort_r_axi),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_5_n_0 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_6_n_0 ),
        .I2(sel0[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_7_n_0 ),
        .I4(sel0[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_8_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_5 
       (.I0(clk_post_reg_axi[5]),
        .I1(clk_pre_reg_axi[5]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[5]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[5]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_6 
       (.I0(hs_prepare_reg_axi[5]),
        .I1(dl3_esc_abort_r_axi),
        .I2(sel0[1]),
        .I3(dl2_esc_abort_r_axi),
        .I4(sel0[0]),
        .I5(dl1_esc_abort_r_axi),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hB833B800)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_7 
       (.I0(dl0_esc_abort_r_axi),
        .I1(sel0[1]),
        .I2(esc_timeout_axi[5]),
        .I3(sel0[0]),
        .I4(hs_tx_timeout_axi[5]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[5] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[5]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_5 
       (.I0(clk_post_reg_axi[6]),
        .I1(clk_pre_reg_axi[6]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[6]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[6]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[6] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[6]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h00AA20AA00002000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_1 
       (.I0(rd_req),
        .I1(sel0[2]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_2_n_0 ),
        .I3(sel0[4]),
        .I4(sel0[3]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[7]_i_3_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_2 
       (.I0(clk_trail_reg_axi[7]),
        .I1(sel0[1]),
        .I2(clk_zero_reg_axi[7]),
        .I3(sel0[0]),
        .I4(clk_prepare_reg_axi[7]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00E2FFFF00E20000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_4 
       (.I0(hs_tx_timeout_axi[7]),
        .I1(sel0[0]),
        .I2(esc_timeout_axi[7]),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_6_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8888888)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_5 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_7_n_0 ),
        .I1(sel0[2]),
        .I2(sel0[1]),
        .I3(hs_prepare_reg_axi[7]),
        .I4(sel0[0]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[7] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[7]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_7 
       (.I0(clk_post_reg_axi[7]),
        .I1(clk_pre_reg_axi[7]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[7]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[7]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00AA20AA00002000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_1 
       (.I0(rd_req),
        .I1(sel0[2]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_2_n_0 ),
        .I3(sel0[4]),
        .I4(sel0[3]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[8]_i_3_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_2 
       (.I0(clk_trail_reg_axi[8]),
        .I1(sel0[1]),
        .I2(clk_zero_reg_axi[8]),
        .I3(sel0[0]),
        .I4(clk_prepare_reg_axi[8]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00E2FFFF00E20000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_4 
       (.I0(hs_tx_timeout_axi[8]),
        .I1(sel0[0]),
        .I2(esc_timeout_axi[8]),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_6_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8888888)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_5 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_7_n_0 ),
        .I1(sel0[2]),
        .I2(sel0[1]),
        .I3(hs_prepare_reg_axi[8]),
        .I4(sel0[0]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[8] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[8]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_7 
       (.I0(clk_post_reg_axi[8]),
        .I1(clk_pre_reg_axi[8]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[8]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[8]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00AA20AA00002000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_1 
       (.I0(rd_req),
        .I1(sel0[2]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_2_n_0 ),
        .I3(sel0[4]),
        .I4(sel0[3]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[9]_i_3_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_2 
       (.I0(clk_trail_reg_axi[9]),
        .I1(sel0[1]),
        .I2(clk_zero_reg_axi[9]),
        .I3(sel0[0]),
        .I4(clk_prepare_reg_axi[9]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00E2FFFF00E20000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_4 
       (.I0(hs_tx_timeout_axi[9]),
        .I1(sel0[0]),
        .I2(esc_timeout_axi[9]),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_6_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8888888)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_5 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_7_n_0 ),
        .I1(sel0[2]),
        .I2(sel0[1]),
        .I3(hs_prepare_reg_axi[9]),
        .I4(sel0[0]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[9] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(hs_exit_reg_axi[9]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_7 
       (.I0(clk_post_reg_axi[9]),
        .I1(clk_pre_reg_axi[9]),
        .I2(sel0[1]),
        .I3(hs_trail_reg_axi[9]),
        .I4(sel0[0]),
        .I5(hs_zero_reg_axi[9]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_7_n_0 ));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(mode_sync_n_3),
        .Q(s_axi_rdata[0]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[10] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_1_n_0 ),
        .Q(s_axi_rdata[10]));
  MUXF7 \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[10]_i_3 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_4_n_0 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[10]_i_5_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[10]_i_3_n_0 ),
        .S(sel0[3]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[11] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_1_n_0 ),
        .Q(s_axi_rdata[11]));
  MUXF7 \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[11]_i_3 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_4_n_0 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[11]_i_5_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[11]_i_3_n_0 ),
        .S(sel0[3]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[12] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_1_n_0 ),
        .Q(s_axi_rdata[12]));
  MUXF7 \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[12]_i_3 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_4_n_0 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[12]_i_5_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[12]_i_3_n_0 ),
        .S(sel0[3]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[13] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_1_n_0 ),
        .Q(s_axi_rdata[13]));
  MUXF7 \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[13]_i_3 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_4_n_0 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[13]_i_5_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[13]_i_3_n_0 ),
        .S(sel0[3]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[14] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_1_n_0 ),
        .Q(s_axi_rdata[14]));
  MUXF7 \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[14]_i_3 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_4_n_0 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[14]_i_5_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[14]_i_3_n_0 ),
        .S(sel0[3]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[15] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_1_n_0 ),
        .Q(s_axi_rdata[15]));
  MUXF7 \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[15]_i_3 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_4_n_0 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[15]_i_5_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[15]_i_3_n_0 ),
        .S(sel0[3]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(dl4_pkt_cnt_sync_n_15),
        .Q(s_axi_rdata[16]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(dl4_pkt_cnt_sync_n_14),
        .Q(s_axi_rdata[17]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(dl4_pkt_cnt_sync_n_13),
        .Q(s_axi_rdata[18]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(dl4_pkt_cnt_sync_n_12),
        .Q(s_axi_rdata[19]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(mode_sync_n_2),
        .Q(s_axi_rdata[1]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(dl4_pkt_cnt_sync_n_11),
        .Q(s_axi_rdata[20]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(dl4_pkt_cnt_sync_n_10),
        .Q(s_axi_rdata[21]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(dl4_pkt_cnt_sync_n_9),
        .Q(s_axi_rdata[22]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(dl4_pkt_cnt_sync_n_8),
        .Q(s_axi_rdata[23]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(dl4_pkt_cnt_sync_n_7),
        .Q(s_axi_rdata[24]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(dl4_pkt_cnt_sync_n_6),
        .Q(s_axi_rdata[25]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(dl4_pkt_cnt_sync_n_5),
        .Q(s_axi_rdata[26]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(dl4_pkt_cnt_sync_n_4),
        .Q(s_axi_rdata[27]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(dl4_pkt_cnt_sync_n_3),
        .Q(s_axi_rdata[28]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(dl4_pkt_cnt_sync_n_2),
        .Q(s_axi_rdata[29]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(ulps_sync_n_0),
        .Q(s_axi_rdata[2]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(dl4_pkt_cnt_sync_n_1),
        .Q(s_axi_rdata[30]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(dl4_pkt_cnt_sync_n_0),
        .Q(s_axi_rdata[31]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(init_done_sync_n_0),
        .Q(s_axi_rdata[3]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(stopstate_sync_n_1),
        .Q(s_axi_rdata[4]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[5] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.axi_rdata[5]_i_1_n_0 ),
        .Q(s_axi_rdata[5]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(stopstate_sync_n_0),
        .Q(s_axi_rdata[6]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[7] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_1_n_0 ),
        .Q(s_axi_rdata[7]));
  MUXF7 \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[7]_i_3 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_4_n_0 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[7]_i_5_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[7]_i_3_n_0 ),
        .S(sel0[3]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[8] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_1_n_0 ),
        .Q(s_axi_rdata[8]));
  MUXF7 \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[8]_i_3 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_4_n_0 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[8]_i_5_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[8]_i_3_n_0 ),
        .S(sel0[3]));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[9] 
       (.C(s_axi_aclk),
        .CE(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_1_n_0 ),
        .Q(s_axi_rdata[9]));
  MUXF7 \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[9]_i_3 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_4_n_0 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[9]_i_5_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[9]_i_3_n_0 ),
        .S(sel0[3]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'h2A)) 
    \gen_regs.gen_timeout_debug_regs.axi_rvalid_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rvalid_reg_0 ),
        .I2(s_axi_rready),
        .O(axi_rvalid21_out));
  FDCE \gen_regs.gen_timeout_debug_regs.axi_rvalid_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(axi_rvalid21_out),
        .Q(\gen_regs.gen_timeout_debug_regs.axi_rvalid_reg_0 ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi[31]_i_1 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[2]),
        .I2(p_0_in[3]),
        .I3(p_0_in[0]),
        .I4(p_0_in[1]),
        .I5(p_0_in[4]),
        .O(clk_post_reg_axi_9));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[0]),
        .Q(clk_post_reg_axi[0]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[10] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[10]),
        .Q(clk_post_reg_axi[10]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[11] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[11]),
        .Q(clk_post_reg_axi[11]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[12] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[12]),
        .Q(clk_post_reg_axi[12]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[13] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[13]),
        .Q(clk_post_reg_axi[13]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[14] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[14]),
        .Q(clk_post_reg_axi[14]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[15] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[15]),
        .Q(clk_post_reg_axi[15]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[16] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[16]),
        .Q(clk_post_reg_axi[16]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[17] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[17]),
        .Q(clk_post_reg_axi[17]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[18] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[18]),
        .Q(clk_post_reg_axi[18]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[19] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[19]),
        .Q(clk_post_reg_axi[19]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[1]),
        .Q(clk_post_reg_axi[1]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[20] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[20]),
        .Q(clk_post_reg_axi[20]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[21] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[21]),
        .Q(clk_post_reg_axi[21]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[22] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[22]),
        .Q(clk_post_reg_axi[22]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[23] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[23]),
        .Q(clk_post_reg_axi[23]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[24] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[24]),
        .Q(clk_post_reg_axi[24]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[25] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[25]),
        .Q(clk_post_reg_axi[25]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[26] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[26]),
        .Q(clk_post_reg_axi[26]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[27] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[27]),
        .Q(clk_post_reg_axi[27]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[28] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[28]),
        .Q(clk_post_reg_axi[28]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[29] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[29]),
        .Q(clk_post_reg_axi[29]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[2]),
        .Q(clk_post_reg_axi[2]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[30] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[30]),
        .Q(clk_post_reg_axi[30]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[31] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[31]),
        .Q(clk_post_reg_axi[31]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[3]),
        .Q(clk_post_reg_axi[3]));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .D(s_axi_wdata[4]),
        .PRE(mode_sync_n_1),
        .Q(clk_post_reg_axi[4]));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .D(s_axi_wdata[5]),
        .PRE(mode_sync_n_1),
        .Q(clk_post_reg_axi[5]));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .D(s_axi_wdata[6]),
        .PRE(mode_sync_n_1),
        .Q(clk_post_reg_axi[6]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[7]),
        .Q(clk_post_reg_axi[7]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[8]),
        .Q(clk_post_reg_axi[8]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_post_reg_axi_reg[9] 
       (.C(s_axi_aclk),
        .CE(clk_post_reg_axi_9),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[9]),
        .Q(clk_post_reg_axi[9]));
  LUT6 #(
    .INIT(64'h0000000008000000)) 
    \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi[31]_i_1 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[3]),
        .I2(p_0_in[4]),
        .I3(p_0_in[2]),
        .I4(p_0_in[1]),
        .I5(p_0_in[0]),
        .O(clk_pre_reg_axi_2));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[0]),
        .Q(clk_pre_reg_axi[0]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[10] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[10]),
        .Q(clk_pre_reg_axi[10]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[11] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[11]),
        .Q(clk_pre_reg_axi[11]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[12] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[12]),
        .Q(clk_pre_reg_axi[12]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[13] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[13]),
        .Q(clk_pre_reg_axi[13]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[14] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[14]),
        .Q(clk_pre_reg_axi[14]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[15] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[15]),
        .Q(clk_pre_reg_axi[15]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[16] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[16]),
        .Q(clk_pre_reg_axi[16]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[17] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[17]),
        .Q(clk_pre_reg_axi[17]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[18] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[18]),
        .Q(clk_pre_reg_axi[18]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[19] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[19]),
        .Q(clk_pre_reg_axi[19]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[1]),
        .Q(clk_pre_reg_axi[1]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[20] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[20]),
        .Q(clk_pre_reg_axi[20]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[21] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[21]),
        .Q(clk_pre_reg_axi[21]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[22] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[22]),
        .Q(clk_pre_reg_axi[22]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[23] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[23]),
        .Q(clk_pre_reg_axi[23]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[24] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[24]),
        .Q(clk_pre_reg_axi[24]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[25] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[25]),
        .Q(clk_pre_reg_axi[25]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[26] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[26]),
        .Q(clk_pre_reg_axi[26]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[27] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[27]),
        .Q(clk_pre_reg_axi[27]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[28] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[28]),
        .Q(clk_pre_reg_axi[28]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[29] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[29]),
        .Q(clk_pre_reg_axi[29]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[2]),
        .Q(clk_pre_reg_axi[2]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[30] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[30]),
        .Q(clk_pre_reg_axi[30]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[31] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[31]),
        .Q(clk_pre_reg_axi[31]));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .D(s_axi_wdata[3]),
        .PRE(mode_sync_n_1),
        .Q(clk_pre_reg_axi[3]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[4]),
        .Q(clk_pre_reg_axi[4]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[5]),
        .Q(clk_pre_reg_axi[5]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[6]),
        .Q(clk_pre_reg_axi[6]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[7]),
        .Q(clk_pre_reg_axi[7]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[8]),
        .Q(clk_pre_reg_axi[8]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_pre_reg_axi_reg[9] 
       (.C(s_axi_aclk),
        .CE(clk_pre_reg_axi_2),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[9]),
        .Q(clk_pre_reg_axi[9]));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi[31]_i_1 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[0]),
        .I2(p_0_in[3]),
        .I3(p_0_in[1]),
        .I4(p_0_in[2]),
        .I5(p_0_in[4]),
        .O(clk_prepare_reg_axi_1));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .D(s_axi_wdata[0]),
        .PRE(mode_sync_n_1),
        .Q(clk_prepare_reg_axi[0]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[10] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[10]),
        .Q(clk_prepare_reg_axi[10]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[11] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[11]),
        .Q(clk_prepare_reg_axi[11]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[12] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[12]),
        .Q(clk_prepare_reg_axi[12]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[13] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[13]),
        .Q(clk_prepare_reg_axi[13]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[14] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[14]),
        .Q(clk_prepare_reg_axi[14]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[15] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[15]),
        .Q(clk_prepare_reg_axi[15]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[16] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[16]),
        .Q(clk_prepare_reg_axi[16]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[17] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[17]),
        .Q(clk_prepare_reg_axi[17]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[18] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[18]),
        .Q(clk_prepare_reg_axi[18]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[19] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[19]),
        .Q(clk_prepare_reg_axi[19]));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .D(s_axi_wdata[1]),
        .PRE(mode_sync_n_1),
        .Q(clk_prepare_reg_axi[1]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[20] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[20]),
        .Q(clk_prepare_reg_axi[20]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[21] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[21]),
        .Q(clk_prepare_reg_axi[21]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[22] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[22]),
        .Q(clk_prepare_reg_axi[22]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[23] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[23]),
        .Q(clk_prepare_reg_axi[23]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[24] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[24]),
        .Q(clk_prepare_reg_axi[24]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[25] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[25]),
        .Q(clk_prepare_reg_axi[25]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[26] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[26]),
        .Q(clk_prepare_reg_axi[26]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[27] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[27]),
        .Q(clk_prepare_reg_axi[27]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[28] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[28]),
        .Q(clk_prepare_reg_axi[28]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[29] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[29]),
        .Q(clk_prepare_reg_axi[29]));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .D(s_axi_wdata[2]),
        .PRE(mode_sync_n_1),
        .Q(clk_prepare_reg_axi[2]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[30] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[30]),
        .Q(clk_prepare_reg_axi[30]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[31] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[31]),
        .Q(clk_prepare_reg_axi[31]));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .D(s_axi_wdata[3]),
        .PRE(mode_sync_n_1),
        .Q(clk_prepare_reg_axi[3]));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .D(s_axi_wdata[4]),
        .PRE(mode_sync_n_1),
        .Q(clk_prepare_reg_axi[4]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[5]),
        .Q(clk_prepare_reg_axi[5]));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .D(s_axi_wdata[6]),
        .PRE(mode_sync_n_1),
        .Q(clk_prepare_reg_axi[6]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[7]),
        .Q(clk_prepare_reg_axi[7]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[8]),
        .Q(clk_prepare_reg_axi[8]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_prepare_reg_axi_reg[9] 
       (.C(s_axi_aclk),
        .CE(clk_prepare_reg_axi_1),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[9]),
        .Q(clk_prepare_reg_axi[9]));
  LUT6 #(
    .INIT(64'h0000020000000000)) 
    \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi[31]_i_1 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[0]),
        .I2(p_0_in[3]),
        .I3(p_0_in[4]),
        .I4(p_0_in[2]),
        .I5(p_0_in[1]),
        .O(clk_trail_reg_axi_0));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[0]),
        .Q(clk_trail_reg_axi[0]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[10] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[10]),
        .Q(clk_trail_reg_axi[10]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[11] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[11]),
        .Q(clk_trail_reg_axi[11]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[12] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[12]),
        .Q(clk_trail_reg_axi[12]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[13] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[13]),
        .Q(clk_trail_reg_axi[13]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[14] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[14]),
        .Q(clk_trail_reg_axi[14]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[15] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[15]),
        .Q(clk_trail_reg_axi[15]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[16] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[16]),
        .Q(clk_trail_reg_axi[16]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[17] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[17]),
        .Q(clk_trail_reg_axi[17]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[18] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[18]),
        .Q(clk_trail_reg_axi[18]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[19] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[19]),
        .Q(clk_trail_reg_axi[19]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[1]),
        .Q(clk_trail_reg_axi[1]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[20] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[20]),
        .Q(clk_trail_reg_axi[20]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[21] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[21]),
        .Q(clk_trail_reg_axi[21]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[22] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[22]),
        .Q(clk_trail_reg_axi[22]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[23] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[23]),
        .Q(clk_trail_reg_axi[23]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[24] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[24]),
        .Q(clk_trail_reg_axi[24]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[25] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[25]),
        .Q(clk_trail_reg_axi[25]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[26] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[26]),
        .Q(clk_trail_reg_axi[26]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[27] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[27]),
        .Q(clk_trail_reg_axi[27]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[28] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[28]),
        .Q(clk_trail_reg_axi[28]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[29] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[29]),
        .Q(clk_trail_reg_axi[29]));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .D(s_axi_wdata[2]),
        .PRE(mode_sync_n_1),
        .Q(clk_trail_reg_axi[2]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[30] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[30]),
        .Q(clk_trail_reg_axi[30]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[31] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[31]),
        .Q(clk_trail_reg_axi[31]));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .D(s_axi_wdata[3]),
        .PRE(mode_sync_n_1),
        .Q(clk_trail_reg_axi[3]));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .D(s_axi_wdata[4]),
        .PRE(mode_sync_n_1),
        .Q(clk_trail_reg_axi[4]));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .D(s_axi_wdata[5]),
        .PRE(mode_sync_n_1),
        .Q(clk_trail_reg_axi[5]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[6]),
        .Q(clk_trail_reg_axi[6]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[7]),
        .Q(clk_trail_reg_axi[7]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[8]),
        .Q(clk_trail_reg_axi[8]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_trail_reg_axi_reg[9] 
       (.C(s_axi_aclk),
        .CE(clk_trail_reg_axi_0),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[9]),
        .Q(clk_trail_reg_axi[9]));
  LUT6 #(
    .INIT(64'h0000020000000000)) 
    \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi[31]_i_1 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[1]),
        .I2(p_0_in[3]),
        .I3(p_0_in[4]),
        .I4(p_0_in[2]),
        .I5(p_0_in[0]),
        .O(clk_zero_reg_axi_10));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .D(s_axi_wdata[0]),
        .PRE(mode_sync_n_1),
        .Q(clk_zero_reg_axi[0]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[10] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[10]),
        .Q(clk_zero_reg_axi[10]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[11] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[11]),
        .Q(clk_zero_reg_axi[11]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[12] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[12]),
        .Q(clk_zero_reg_axi[12]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[13] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[13]),
        .Q(clk_zero_reg_axi[13]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[14] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[14]),
        .Q(clk_zero_reg_axi[14]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[15] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[15]),
        .Q(clk_zero_reg_axi[15]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[16] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[16]),
        .Q(clk_zero_reg_axi[16]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[17] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[17]),
        .Q(clk_zero_reg_axi[17]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[18] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[18]),
        .Q(clk_zero_reg_axi[18]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[19] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[19]),
        .Q(clk_zero_reg_axi[19]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[1]),
        .Q(clk_zero_reg_axi[1]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[20] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[20]),
        .Q(clk_zero_reg_axi[20]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[21] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[21]),
        .Q(clk_zero_reg_axi[21]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[22] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[22]),
        .Q(clk_zero_reg_axi[22]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[23] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[23]),
        .Q(clk_zero_reg_axi[23]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[24] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[24]),
        .Q(clk_zero_reg_axi[24]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[25] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[25]),
        .Q(clk_zero_reg_axi[25]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[26] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[26]),
        .Q(clk_zero_reg_axi[26]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[27] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[27]),
        .Q(clk_zero_reg_axi[27]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[28] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[28]),
        .Q(clk_zero_reg_axi[28]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[29] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[29]),
        .Q(clk_zero_reg_axi[29]));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .D(s_axi_wdata[2]),
        .PRE(mode_sync_n_1),
        .Q(clk_zero_reg_axi[2]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[30] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[30]),
        .Q(clk_zero_reg_axi[30]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[31] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[31]),
        .Q(clk_zero_reg_axi[31]));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .D(s_axi_wdata[3]),
        .PRE(mode_sync_n_1),
        .Q(clk_zero_reg_axi[3]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[4]),
        .Q(clk_zero_reg_axi[4]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[5]),
        .Q(clk_zero_reg_axi[5]));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .D(s_axi_wdata[6]),
        .PRE(mode_sync_n_1),
        .Q(clk_zero_reg_axi[6]));
  FDPE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .D(s_axi_wdata[7]),
        .PRE(mode_sync_n_1),
        .Q(clk_zero_reg_axi[7]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[8]),
        .Q(clk_zero_reg_axi[8]));
  FDCE \gen_regs.gen_timeout_debug_regs.clk_zero_reg_axi_reg[9] 
       (.C(s_axi_aclk),
        .CE(clk_zero_reg_axi_10),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[9]),
        .Q(clk_zero_reg_axi[9]));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    \gen_regs.gen_timeout_debug_regs.dl0_esc_abort_clr_axi_i_1 
       (.I0(s_axi_wdata[5]),
        .I1(s_axi_wvalid),
        .I2(wr_req),
        .I3(axi_bvalid_reg_0),
        .I4(\gen_regs.gen_timeout_debug_regs.dl0_hs_abort_clr_axi_i_2_n_0 ),
        .I5(\gen_regs.gen_timeout_debug_regs.dl0_esc_abort_clr_axi_reg_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.dl0_esc_abort_clr_axi_i_1_n_0 ));
  FDCE \gen_regs.gen_timeout_debug_regs.dl0_esc_abort_clr_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.dl0_esc_abort_clr_axi_i_1_n_0 ),
        .Q(\gen_regs.gen_timeout_debug_regs.dl0_esc_abort_clr_axi_reg_n_0 ));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    \gen_regs.gen_timeout_debug_regs.dl0_hs_abort_clr_axi_i_1 
       (.I0(s_axi_wdata[4]),
        .I1(s_axi_wvalid),
        .I2(wr_req),
        .I3(axi_bvalid_reg_0),
        .I4(\gen_regs.gen_timeout_debug_regs.dl0_hs_abort_clr_axi_i_2_n_0 ),
        .I5(\gen_regs.gen_timeout_debug_regs.dl0_hs_abort_clr_axi_reg_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.dl0_hs_abort_clr_axi_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h555555555D555555)) 
    \gen_regs.gen_timeout_debug_regs.dl0_hs_abort_clr_axi_i_2 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[2]),
        .I2(p_0_in[4]),
        .I3(p_0_in[0]),
        .I4(p_0_in[1]),
        .I5(p_0_in[3]),
        .O(\gen_regs.gen_timeout_debug_regs.dl0_hs_abort_clr_axi_i_2_n_0 ));
  FDCE \gen_regs.gen_timeout_debug_regs.dl0_hs_abort_clr_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.dl0_hs_abort_clr_axi_i_1_n_0 ),
        .Q(\gen_regs.gen_timeout_debug_regs.dl0_hs_abort_clr_axi_reg_n_0 ));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    \gen_regs.gen_timeout_debug_regs.dl1_esc_abort_clr_axi_i_1 
       (.I0(s_axi_wdata[5]),
        .I1(s_axi_wvalid),
        .I2(wr_req),
        .I3(axi_bvalid_reg_0),
        .I4(dl1_esc_abort_clr_axi),
        .I5(\gen_regs.gen_timeout_debug_regs.dl1_esc_abort_clr_axi_reg_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.dl1_esc_abort_clr_axi_i_1_n_0 ));
  FDCE \gen_regs.gen_timeout_debug_regs.dl1_esc_abort_clr_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.dl1_esc_abort_clr_axi_i_1_n_0 ),
        .Q(\gen_regs.gen_timeout_debug_regs.dl1_esc_abort_clr_axi_reg_n_0 ));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    \gen_regs.gen_timeout_debug_regs.dl1_hs_abort_clr_axi_i_1 
       (.I0(s_axi_wdata[4]),
        .I1(s_axi_wvalid),
        .I2(wr_req),
        .I3(axi_bvalid_reg_0),
        .I4(dl1_esc_abort_clr_axi),
        .I5(dl1_hs_abort_clr_axi),
        .O(\gen_regs.gen_timeout_debug_regs.dl1_hs_abort_clr_axi_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h5555555755555555)) 
    \gen_regs.gen_timeout_debug_regs.dl1_hs_abort_clr_axi_i_2 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[4]),
        .I2(p_0_in[0]),
        .I3(p_0_in[1]),
        .I4(p_0_in[2]),
        .I5(p_0_in[3]),
        .O(dl1_esc_abort_clr_axi));
  FDCE \gen_regs.gen_timeout_debug_regs.dl1_hs_abort_clr_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.dl1_hs_abort_clr_axi_i_1_n_0 ),
        .Q(dl1_hs_abort_clr_axi));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    \gen_regs.gen_timeout_debug_regs.dl2_esc_abort_clr_axi_i_1 
       (.I0(s_axi_wdata[5]),
        .I1(s_axi_wvalid),
        .I2(wr_req),
        .I3(axi_bvalid_reg_0),
        .I4(dl2_esc_abort_clr_axi),
        .I5(\gen_regs.gen_timeout_debug_regs.dl2_esc_abort_clr_axi_reg_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.dl2_esc_abort_clr_axi_i_1_n_0 ));
  FDCE \gen_regs.gen_timeout_debug_regs.dl2_esc_abort_clr_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.dl2_esc_abort_clr_axi_i_1_n_0 ),
        .Q(\gen_regs.gen_timeout_debug_regs.dl2_esc_abort_clr_axi_reg_n_0 ));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    \gen_regs.gen_timeout_debug_regs.dl2_hs_abort_clr_axi_i_1 
       (.I0(s_axi_wdata[4]),
        .I1(s_axi_wvalid),
        .I2(wr_req),
        .I3(axi_bvalid_reg_0),
        .I4(dl2_esc_abort_clr_axi),
        .I5(dl2_hs_abort_clr_axi),
        .O(\gen_regs.gen_timeout_debug_regs.dl2_hs_abort_clr_axi_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h5555575555555555)) 
    \gen_regs.gen_timeout_debug_regs.dl2_hs_abort_clr_axi_i_2 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[4]),
        .I2(p_0_in[1]),
        .I3(p_0_in[3]),
        .I4(p_0_in[2]),
        .I5(p_0_in[0]),
        .O(dl2_esc_abort_clr_axi));
  FDCE \gen_regs.gen_timeout_debug_regs.dl2_hs_abort_clr_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.dl2_hs_abort_clr_axi_i_1_n_0 ),
        .Q(dl2_hs_abort_clr_axi));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    \gen_regs.gen_timeout_debug_regs.dl3_esc_abort_clr_axi_i_1 
       (.I0(s_axi_wdata[5]),
        .I1(s_axi_wvalid),
        .I2(wr_req),
        .I3(axi_bvalid_reg_0),
        .I4(dl3_esc_abort_clr_axi),
        .I5(\gen_regs.gen_timeout_debug_regs.dl3_esc_abort_clr_axi_reg_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.dl3_esc_abort_clr_axi_i_1_n_0 ));
  FDCE \gen_regs.gen_timeout_debug_regs.dl3_esc_abort_clr_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.dl3_esc_abort_clr_axi_i_1_n_0 ),
        .Q(\gen_regs.gen_timeout_debug_regs.dl3_esc_abort_clr_axi_reg_n_0 ));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    \gen_regs.gen_timeout_debug_regs.dl3_hs_abort_clr_axi_i_1 
       (.I0(s_axi_wdata[4]),
        .I1(s_axi_wvalid),
        .I2(wr_req),
        .I3(axi_bvalid_reg_0),
        .I4(dl3_esc_abort_clr_axi),
        .I5(dl3_hs_abort_clr_axi),
        .O(\gen_regs.gen_timeout_debug_regs.dl3_hs_abort_clr_axi_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h5555575555555555)) 
    \gen_regs.gen_timeout_debug_regs.dl3_hs_abort_clr_axi_i_2 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[4]),
        .I2(p_0_in[0]),
        .I3(p_0_in[3]),
        .I4(p_0_in[2]),
        .I5(p_0_in[1]),
        .O(dl3_esc_abort_clr_axi));
  FDCE \gen_regs.gen_timeout_debug_regs.dl3_hs_abort_clr_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.dl3_hs_abort_clr_axi_i_1_n_0 ),
        .Q(dl3_hs_abort_clr_axi));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    \gen_regs.gen_timeout_debug_regs.dl4_esc_abort_clr_axi_i_1 
       (.I0(s_axi_wdata[5]),
        .I1(s_axi_wvalid),
        .I2(wr_req),
        .I3(axi_bvalid_reg_0),
        .I4(dl4_esc_abort_clr_axi),
        .I5(\gen_regs.gen_timeout_debug_regs.dl4_esc_abort_clr_axi_reg_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.dl4_esc_abort_clr_axi_i_1_n_0 ));
  FDCE \gen_regs.gen_timeout_debug_regs.dl4_esc_abort_clr_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.dl4_esc_abort_clr_axi_i_1_n_0 ),
        .Q(\gen_regs.gen_timeout_debug_regs.dl4_esc_abort_clr_axi_reg_n_0 ));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    \gen_regs.gen_timeout_debug_regs.dl4_hs_abort_clr_axi_i_1 
       (.I0(s_axi_wdata[4]),
        .I1(s_axi_wvalid),
        .I2(wr_req),
        .I3(axi_bvalid_reg_0),
        .I4(dl4_esc_abort_clr_axi),
        .I5(dl4_hs_abort_clr_axi),
        .O(\gen_regs.gen_timeout_debug_regs.dl4_hs_abort_clr_axi_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h555555555D555555)) 
    \gen_regs.gen_timeout_debug_regs.dl4_hs_abort_clr_axi_i_2 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[4]),
        .I2(p_0_in[2]),
        .I3(p_0_in[0]),
        .I4(p_0_in[1]),
        .I5(p_0_in[3]),
        .O(dl4_esc_abort_clr_axi));
  FDCE \gen_regs.gen_timeout_debug_regs.dl4_hs_abort_clr_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.dl4_hs_abort_clr_axi_i_1_n_0 ),
        .Q(dl4_hs_abort_clr_axi));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    \gen_regs.gen_timeout_debug_regs.dl5_esc_abort_clr_axi_i_1 
       (.I0(s_axi_wdata[5]),
        .I1(s_axi_wvalid),
        .I2(wr_req),
        .I3(axi_bvalid_reg_0),
        .I4(dl5_esc_abort_clr_axi),
        .I5(\gen_regs.gen_timeout_debug_regs.dl5_esc_abort_clr_axi_reg_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.dl5_esc_abort_clr_axi_i_1_n_0 ));
  FDCE \gen_regs.gen_timeout_debug_regs.dl5_esc_abort_clr_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.dl5_esc_abort_clr_axi_i_1_n_0 ),
        .Q(\gen_regs.gen_timeout_debug_regs.dl5_esc_abort_clr_axi_reg_n_0 ));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    \gen_regs.gen_timeout_debug_regs.dl5_hs_abort_clr_axi_i_1 
       (.I0(s_axi_wdata[4]),
        .I1(s_axi_wvalid),
        .I2(wr_req),
        .I3(axi_bvalid_reg_0),
        .I4(dl5_esc_abort_clr_axi),
        .I5(dl5_hs_abort_clr_axi),
        .O(\gen_regs.gen_timeout_debug_regs.dl5_hs_abort_clr_axi_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h5555575555555555)) 
    \gen_regs.gen_timeout_debug_regs.dl5_hs_abort_clr_axi_i_2 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[1]),
        .I2(p_0_in[3]),
        .I3(p_0_in[4]),
        .I4(p_0_in[0]),
        .I5(p_0_in[2]),
        .O(dl5_esc_abort_clr_axi));
  FDCE \gen_regs.gen_timeout_debug_regs.dl5_hs_abort_clr_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.dl5_hs_abort_clr_axi_i_1_n_0 ),
        .Q(dl5_hs_abort_clr_axi));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    \gen_regs.gen_timeout_debug_regs.dl6_esc_abort_clr_axi_i_1 
       (.I0(s_axi_wdata[5]),
        .I1(s_axi_wvalid),
        .I2(wr_req),
        .I3(axi_bvalid_reg_0),
        .I4(dl6_esc_abort_clr_axi),
        .I5(\gen_regs.gen_timeout_debug_regs.dl6_esc_abort_clr_axi_reg_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.dl6_esc_abort_clr_axi_i_1_n_0 ));
  FDCE \gen_regs.gen_timeout_debug_regs.dl6_esc_abort_clr_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.dl6_esc_abort_clr_axi_i_1_n_0 ),
        .Q(\gen_regs.gen_timeout_debug_regs.dl6_esc_abort_clr_axi_reg_n_0 ));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    \gen_regs.gen_timeout_debug_regs.dl6_hs_abort_clr_axi_i_1 
       (.I0(s_axi_wdata[4]),
        .I1(s_axi_wvalid),
        .I2(wr_req),
        .I3(axi_bvalid_reg_0),
        .I4(dl6_esc_abort_clr_axi),
        .I5(dl6_hs_abort_clr_axi),
        .O(\gen_regs.gen_timeout_debug_regs.dl6_hs_abort_clr_axi_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h555555555D555555)) 
    \gen_regs.gen_timeout_debug_regs.dl6_hs_abort_clr_axi_i_2 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[4]),
        .I2(p_0_in[1]),
        .I3(p_0_in[0]),
        .I4(p_0_in[2]),
        .I5(p_0_in[3]),
        .O(dl6_esc_abort_clr_axi));
  FDCE \gen_regs.gen_timeout_debug_regs.dl6_hs_abort_clr_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.dl6_hs_abort_clr_axi_i_1_n_0 ),
        .Q(dl6_hs_abort_clr_axi));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    \gen_regs.gen_timeout_debug_regs.dl7_esc_abort_clr_axi_i_1 
       (.I0(s_axi_wdata[5]),
        .I1(s_axi_wvalid),
        .I2(wr_req),
        .I3(axi_bvalid_reg_0),
        .I4(dl7_esc_abort_clr_axi),
        .I5(\gen_regs.gen_timeout_debug_regs.dl7_esc_abort_clr_axi_reg_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.dl7_esc_abort_clr_axi_i_1_n_0 ));
  FDCE \gen_regs.gen_timeout_debug_regs.dl7_esc_abort_clr_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.dl7_esc_abort_clr_axi_i_1_n_0 ),
        .Q(\gen_regs.gen_timeout_debug_regs.dl7_esc_abort_clr_axi_reg_n_0 ));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    \gen_regs.gen_timeout_debug_regs.dl7_hs_abort_clr_axi_i_1 
       (.I0(s_axi_wdata[4]),
        .I1(s_axi_wvalid),
        .I2(wr_req),
        .I3(axi_bvalid_reg_0),
        .I4(dl7_esc_abort_clr_axi),
        .I5(dl7_hs_abort_clr_axi),
        .O(\gen_regs.gen_timeout_debug_regs.dl7_hs_abort_clr_axi_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h555555555D555555)) 
    \gen_regs.gen_timeout_debug_regs.dl7_hs_abort_clr_axi_i_2 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[4]),
        .I2(p_0_in[0]),
        .I3(p_0_in[2]),
        .I4(p_0_in[1]),
        .I5(p_0_in[3]),
        .O(dl7_esc_abort_clr_axi));
  FDCE \gen_regs.gen_timeout_debug_regs.dl7_hs_abort_clr_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.dl7_hs_abort_clr_axi_i_1_n_0 ),
        .Q(dl7_hs_abort_clr_axi));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_regs.gen_timeout_debug_regs.dphy_en_axi_i_1 
       (.I0(s_axi_wdata[1]),
        .I1(dphy_en_axi),
        .I2(data0),
        .O(\gen_regs.gen_timeout_debug_regs.dphy_en_axi_i_1_n_0 ));
  FDPE \gen_regs.gen_timeout_debug_regs.dphy_en_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\gen_regs.gen_timeout_debug_regs.dphy_en_axi_i_1_n_0 ),
        .PRE(mode_sync_n_1),
        .Q(data0));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_regs.gen_timeout_debug_regs.dphy_srst_axi_i_1 
       (.I0(s_axi_wdata[0]),
        .I1(dphy_en_axi),
        .I2(p_4_in),
        .O(\gen_regs.gen_timeout_debug_regs.dphy_srst_axi_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    \gen_regs.gen_timeout_debug_regs.dphy_srst_axi_i_2 
       (.I0(p_0_in[2]),
        .I1(p_0_in[4]),
        .I2(p_0_in[0]),
        .I3(p_0_in[1]),
        .I4(p_0_in[3]),
        .I5(dphy_en_axi1),
        .O(dphy_en_axi));
  FDCE \gen_regs.gen_timeout_debug_regs.dphy_srst_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(\gen_regs.gen_timeout_debug_regs.dphy_srst_axi_i_1_n_0 ),
        .Q(p_4_in));
  LUT6 #(
    .INIT(64'h0000020000000000)) 
    \gen_regs.gen_timeout_debug_regs.esc_timeout_axi[31]_i_1 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[4]),
        .I2(p_0_in[3]),
        .I3(p_0_in[2]),
        .I4(p_0_in[1]),
        .I5(p_0_in[0]),
        .O(esc_timeout_axi_4));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[0]),
        .Q(esc_timeout_axi[0]));
  FDPE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[10] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .D(s_axi_wdata[10]),
        .PRE(mode_sync_n_1),
        .Q(esc_timeout_axi[10]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[11] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[11]),
        .Q(esc_timeout_axi[11]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[12] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[12]),
        .Q(esc_timeout_axi[12]));
  FDPE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[13] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .D(s_axi_wdata[13]),
        .PRE(mode_sync_n_1),
        .Q(esc_timeout_axi[13]));
  FDPE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[14] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .D(s_axi_wdata[14]),
        .PRE(mode_sync_n_1),
        .Q(esc_timeout_axi[14]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[15] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[15]),
        .Q(esc_timeout_axi[15]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[16] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[16]),
        .Q(esc_timeout_axi[16]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[17] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[17]),
        .Q(esc_timeout_axi[17]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[18] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[18]),
        .Q(esc_timeout_axi[18]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[19] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[19]),
        .Q(esc_timeout_axi[19]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[1]),
        .Q(esc_timeout_axi[1]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[20] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[20]),
        .Q(esc_timeout_axi[20]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[21] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[21]),
        .Q(esc_timeout_axi[21]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[22] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[22]),
        .Q(esc_timeout_axi[22]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[23] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[23]),
        .Q(esc_timeout_axi[23]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[24] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[24]),
        .Q(esc_timeout_axi[24]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[25] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[25]),
        .Q(esc_timeout_axi[25]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[26] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[26]),
        .Q(esc_timeout_axi[26]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[27] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[27]),
        .Q(esc_timeout_axi[27]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[28] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[28]),
        .Q(esc_timeout_axi[28]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[29] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[29]),
        .Q(esc_timeout_axi[29]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[2]),
        .Q(esc_timeout_axi[2]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[30] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[30]),
        .Q(esc_timeout_axi[30]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[31] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[31]),
        .Q(esc_timeout_axi[31]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[3]),
        .Q(esc_timeout_axi[3]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[4]),
        .Q(esc_timeout_axi[4]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[5]),
        .Q(esc_timeout_axi[5]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[6]),
        .Q(esc_timeout_axi[6]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[7]),
        .Q(esc_timeout_axi[7]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[8]),
        .Q(esc_timeout_axi[8]));
  FDCE \gen_regs.gen_timeout_debug_regs.esc_timeout_axi_reg[9] 
       (.C(s_axi_aclk),
        .CE(esc_timeout_axi_4),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[9]),
        .Q(esc_timeout_axi[9]));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi[31]_i_1 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[4]),
        .I2(p_0_in[3]),
        .I3(p_0_in[1]),
        .I4(p_0_in[2]),
        .I5(p_0_in[0]),
        .O(hs_exit_reg_axi_5));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi[31]_i_2 
       (.I0(axi_bvalid_reg_0),
        .I1(wr_req),
        .I2(s_axi_wvalid),
        .O(dphy_en_axi1));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[0]),
        .Q(hs_exit_reg_axi[0]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[10] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[10]),
        .Q(hs_exit_reg_axi[10]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[11] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[11]),
        .Q(hs_exit_reg_axi[11]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[12] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[12]),
        .Q(hs_exit_reg_axi[12]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[13] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[13]),
        .Q(hs_exit_reg_axi[13]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[14] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[14]),
        .Q(hs_exit_reg_axi[14]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[15] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[15]),
        .Q(hs_exit_reg_axi[15]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[16] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[16]),
        .Q(hs_exit_reg_axi[16]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[17] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[17]),
        .Q(hs_exit_reg_axi[17]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[18] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[18]),
        .Q(hs_exit_reg_axi[18]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[19] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[19]),
        .Q(hs_exit_reg_axi[19]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[1]),
        .Q(hs_exit_reg_axi[1]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[20] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[20]),
        .Q(hs_exit_reg_axi[20]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[21] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[21]),
        .Q(hs_exit_reg_axi[21]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[22] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[22]),
        .Q(hs_exit_reg_axi[22]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[23] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[23]),
        .Q(hs_exit_reg_axi[23]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[24] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[24]),
        .Q(hs_exit_reg_axi[24]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[25] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[25]),
        .Q(hs_exit_reg_axi[25]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[26] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[26]),
        .Q(hs_exit_reg_axi[26]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[27] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[27]),
        .Q(hs_exit_reg_axi[27]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[28] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[28]),
        .Q(hs_exit_reg_axi[28]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[29] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[29]),
        .Q(hs_exit_reg_axi[29]));
  FDPE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .D(s_axi_wdata[2]),
        .PRE(mode_sync_n_1),
        .Q(hs_exit_reg_axi[2]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[30] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[30]),
        .Q(hs_exit_reg_axi[30]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[31] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[31]),
        .Q(hs_exit_reg_axi[31]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[3]),
        .Q(hs_exit_reg_axi[3]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[4]),
        .Q(hs_exit_reg_axi[4]));
  FDPE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .D(s_axi_wdata[5]),
        .PRE(mode_sync_n_1),
        .Q(hs_exit_reg_axi[5]));
  FDPE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .D(s_axi_wdata[6]),
        .PRE(mode_sync_n_1),
        .Q(hs_exit_reg_axi[6]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[7]),
        .Q(hs_exit_reg_axi[7]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[8]),
        .Q(hs_exit_reg_axi[8]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_exit_reg_axi_reg[9] 
       (.C(s_axi_aclk),
        .CE(hs_exit_reg_axi_5),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[9]),
        .Q(hs_exit_reg_axi[9]));
  LUT6 #(
    .INIT(64'h0000000008000000)) 
    \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi[31]_i_1 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[3]),
        .I2(p_0_in[4]),
        .I3(p_0_in[0]),
        .I4(p_0_in[1]),
        .I5(p_0_in[2]),
        .O(hs_prepare_reg_axi_7));
  FDPE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .D(s_axi_wdata[0]),
        .PRE(mode_sync_n_1),
        .Q(hs_prepare_reg_axi[0]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[10] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[10]),
        .Q(hs_prepare_reg_axi[10]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[11] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[11]),
        .Q(hs_prepare_reg_axi[11]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[12] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[12]),
        .Q(hs_prepare_reg_axi[12]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[13] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[13]),
        .Q(hs_prepare_reg_axi[13]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[14] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[14]),
        .Q(hs_prepare_reg_axi[14]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[15] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[15]),
        .Q(hs_prepare_reg_axi[15]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[16] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[16]),
        .Q(hs_prepare_reg_axi[16]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[17] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[17]),
        .Q(hs_prepare_reg_axi[17]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[18] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[18]),
        .Q(hs_prepare_reg_axi[18]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[19] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[19]),
        .Q(hs_prepare_reg_axi[19]));
  FDPE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .D(s_axi_wdata[1]),
        .PRE(mode_sync_n_1),
        .Q(hs_prepare_reg_axi[1]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[20] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[20]),
        .Q(hs_prepare_reg_axi[20]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[21] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[21]),
        .Q(hs_prepare_reg_axi[21]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[22] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[22]),
        .Q(hs_prepare_reg_axi[22]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[23] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[23]),
        .Q(hs_prepare_reg_axi[23]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[24] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[24]),
        .Q(hs_prepare_reg_axi[24]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[25] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[25]),
        .Q(hs_prepare_reg_axi[25]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[26] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[26]),
        .Q(hs_prepare_reg_axi[26]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[27] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[27]),
        .Q(hs_prepare_reg_axi[27]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[28] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[28]),
        .Q(hs_prepare_reg_axi[28]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[29] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[29]),
        .Q(hs_prepare_reg_axi[29]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[2]),
        .Q(hs_prepare_reg_axi[2]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[30] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[30]),
        .Q(hs_prepare_reg_axi[30]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[31] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[31]),
        .Q(hs_prepare_reg_axi[31]));
  FDPE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .D(s_axi_wdata[3]),
        .PRE(mode_sync_n_1),
        .Q(hs_prepare_reg_axi[3]));
  FDPE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .D(s_axi_wdata[4]),
        .PRE(mode_sync_n_1),
        .Q(hs_prepare_reg_axi[4]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[5]),
        .Q(hs_prepare_reg_axi[5]));
  FDPE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .D(s_axi_wdata[6]),
        .PRE(mode_sync_n_1),
        .Q(hs_prepare_reg_axi[6]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[7]),
        .Q(hs_prepare_reg_axi[7]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[8]),
        .Q(hs_prepare_reg_axi[8]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_prepare_reg_axi_reg[9] 
       (.C(s_axi_aclk),
        .CE(hs_prepare_reg_axi_7),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[9]),
        .Q(hs_prepare_reg_axi[9]));
  LUT6 #(
    .INIT(64'h0000000008000000)) 
    \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi[31]_i_1 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[3]),
        .I2(p_0_in[4]),
        .I3(p_0_in[0]),
        .I4(p_0_in[2]),
        .I5(p_0_in[1]),
        .O(hs_trail_reg_axi_8));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[0]),
        .Q(hs_trail_reg_axi[0]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[10] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[10]),
        .Q(hs_trail_reg_axi[10]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[11] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[11]),
        .Q(hs_trail_reg_axi[11]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[12] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[12]),
        .Q(hs_trail_reg_axi[12]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[13] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[13]),
        .Q(hs_trail_reg_axi[13]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[14] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[14]),
        .Q(hs_trail_reg_axi[14]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[15] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[15]),
        .Q(hs_trail_reg_axi[15]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[16] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[16]),
        .Q(hs_trail_reg_axi[16]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[17] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[17]),
        .Q(hs_trail_reg_axi[17]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[18] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[18]),
        .Q(hs_trail_reg_axi[18]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[19] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[19]),
        .Q(hs_trail_reg_axi[19]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[1]),
        .Q(hs_trail_reg_axi[1]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[20] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[20]),
        .Q(hs_trail_reg_axi[20]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[21] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[21]),
        .Q(hs_trail_reg_axi[21]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[22] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[22]),
        .Q(hs_trail_reg_axi[22]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[23] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[23]),
        .Q(hs_trail_reg_axi[23]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[24] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[24]),
        .Q(hs_trail_reg_axi[24]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[25] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[25]),
        .Q(hs_trail_reg_axi[25]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[26] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[26]),
        .Q(hs_trail_reg_axi[26]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[27] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[27]),
        .Q(hs_trail_reg_axi[27]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[28] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[28]),
        .Q(hs_trail_reg_axi[28]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[29] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[29]),
        .Q(hs_trail_reg_axi[29]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[2]),
        .Q(hs_trail_reg_axi[2]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[30] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[30]),
        .Q(hs_trail_reg_axi[30]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[31] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[31]),
        .Q(hs_trail_reg_axi[31]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[3]),
        .Q(hs_trail_reg_axi[3]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[4]),
        .Q(hs_trail_reg_axi[4]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[5]),
        .Q(hs_trail_reg_axi[5]));
  FDPE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .D(s_axi_wdata[6]),
        .PRE(mode_sync_n_1),
        .Q(hs_trail_reg_axi[6]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[7]),
        .Q(hs_trail_reg_axi[7]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[8]),
        .Q(hs_trail_reg_axi[8]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_trail_reg_axi_reg[9] 
       (.C(s_axi_aclk),
        .CE(hs_trail_reg_axi_8),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[9]),
        .Q(hs_trail_reg_axi[9]));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi[31]_i_1 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[4]),
        .I2(p_0_in[3]),
        .I3(p_0_in[1]),
        .I4(p_0_in[0]),
        .I5(p_0_in[2]),
        .O(hs_tx_timeout_axi_6));
  FDPE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .D(s_axi_wdata[0]),
        .PRE(mode_sync_n_1),
        .Q(hs_tx_timeout_axi[0]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[10] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[10]),
        .Q(hs_tx_timeout_axi[10]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[11] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[11]),
        .Q(hs_tx_timeout_axi[11]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[12] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[12]),
        .Q(hs_tx_timeout_axi[12]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[13] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[13]),
        .Q(hs_tx_timeout_axi[13]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[14] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[14]),
        .Q(hs_tx_timeout_axi[14]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[15] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[15]),
        .Q(hs_tx_timeout_axi[15]));
  FDPE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[16] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .D(s_axi_wdata[16]),
        .PRE(mode_sync_n_1),
        .Q(hs_tx_timeout_axi[16]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[17] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[17]),
        .Q(hs_tx_timeout_axi[17]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[18] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[18]),
        .Q(hs_tx_timeout_axi[18]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[19] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[19]),
        .Q(hs_tx_timeout_axi[19]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[1]),
        .Q(hs_tx_timeout_axi[1]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[20] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[20]),
        .Q(hs_tx_timeout_axi[20]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[21] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[21]),
        .Q(hs_tx_timeout_axi[21]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[22] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[22]),
        .Q(hs_tx_timeout_axi[22]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[23] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[23]),
        .Q(hs_tx_timeout_axi[23]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[24] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[24]),
        .Q(hs_tx_timeout_axi[24]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[25] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[25]),
        .Q(hs_tx_timeout_axi[25]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[26] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[26]),
        .Q(hs_tx_timeout_axi[26]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[27] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[27]),
        .Q(hs_tx_timeout_axi[27]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[28] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[28]),
        .Q(hs_tx_timeout_axi[28]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[29] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[29]),
        .Q(hs_tx_timeout_axi[29]));
  FDPE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .D(s_axi_wdata[2]),
        .PRE(mode_sync_n_1),
        .Q(hs_tx_timeout_axi[2]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[30] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[30]),
        .Q(hs_tx_timeout_axi[30]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[31] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[31]),
        .Q(hs_tx_timeout_axi[31]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[3]),
        .Q(hs_tx_timeout_axi[3]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[4]),
        .Q(hs_tx_timeout_axi[4]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[5]),
        .Q(hs_tx_timeout_axi[5]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[6]),
        .Q(hs_tx_timeout_axi[6]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[7]),
        .Q(hs_tx_timeout_axi[7]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[8]),
        .Q(hs_tx_timeout_axi[8]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_tx_timeout_axi_reg[9] 
       (.C(s_axi_aclk),
        .CE(hs_tx_timeout_axi_6),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[9]),
        .Q(hs_tx_timeout_axi[9]));
  LUT6 #(
    .INIT(64'h0000020000000000)) 
    \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi[31]_i_1 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[4]),
        .I2(p_0_in[1]),
        .I3(p_0_in[3]),
        .I4(p_0_in[0]),
        .I5(p_0_in[2]),
        .O(hs_zero_reg_axi_3));
  FDPE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .D(s_axi_wdata[0]),
        .PRE(mode_sync_n_1),
        .Q(hs_zero_reg_axi[0]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[10] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[10]),
        .Q(hs_zero_reg_axi[10]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[11] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[11]),
        .Q(hs_zero_reg_axi[11]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[12] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[12]),
        .Q(hs_zero_reg_axi[12]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[13] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[13]),
        .Q(hs_zero_reg_axi[13]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[14] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[14]),
        .Q(hs_zero_reg_axi[14]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[15] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[15]),
        .Q(hs_zero_reg_axi[15]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[16] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[16]),
        .Q(hs_zero_reg_axi[16]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[17] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[17]),
        .Q(hs_zero_reg_axi[17]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[18] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[18]),
        .Q(hs_zero_reg_axi[18]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[19] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[19]),
        .Q(hs_zero_reg_axi[19]));
  FDPE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .D(s_axi_wdata[1]),
        .PRE(mode_sync_n_1),
        .Q(hs_zero_reg_axi[1]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[20] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[20]),
        .Q(hs_zero_reg_axi[20]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[21] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[21]),
        .Q(hs_zero_reg_axi[21]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[22] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[22]),
        .Q(hs_zero_reg_axi[22]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[23] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[23]),
        .Q(hs_zero_reg_axi[23]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[24] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[24]),
        .Q(hs_zero_reg_axi[24]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[25] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[25]),
        .Q(hs_zero_reg_axi[25]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[26] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[26]),
        .Q(hs_zero_reg_axi[26]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[27] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[27]),
        .Q(hs_zero_reg_axi[27]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[28] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[28]),
        .Q(hs_zero_reg_axi[28]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[29] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[29]),
        .Q(hs_zero_reg_axi[29]));
  FDPE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .D(s_axi_wdata[2]),
        .PRE(mode_sync_n_1),
        .Q(hs_zero_reg_axi[2]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[30] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[30]),
        .Q(hs_zero_reg_axi[30]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[31] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[31]),
        .Q(hs_zero_reg_axi[31]));
  FDPE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .D(s_axi_wdata[3]),
        .PRE(mode_sync_n_1),
        .Q(hs_zero_reg_axi[3]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[4]),
        .Q(hs_zero_reg_axi[4]));
  FDPE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .D(s_axi_wdata[5]),
        .PRE(mode_sync_n_1),
        .Q(hs_zero_reg_axi[5]));
  FDPE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .D(s_axi_wdata[6]),
        .PRE(mode_sync_n_1),
        .Q(hs_zero_reg_axi[6]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[7]),
        .Q(hs_zero_reg_axi[7]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[8]),
        .Q(hs_zero_reg_axi[8]));
  FDCE \gen_regs.gen_timeout_debug_regs.hs_zero_reg_axi_reg[9] 
       (.C(s_axi_aclk),
        .CE(hs_zero_reg_axi_3),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[9]),
        .Q(hs_zero_reg_axi[9]));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    \gen_regs.gen_timeout_debug_regs.init_value_axi[31]_i_1 
       (.I0(dphy_en_axi1),
        .I1(p_0_in[4]),
        .I2(p_0_in[3]),
        .I3(p_0_in[0]),
        .I4(p_0_in[2]),
        .I5(p_0_in[1]),
        .O(init_value_axi));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[0]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[0] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[10] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[10]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[10] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[11] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[11]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[11] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[12] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[12]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[12] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[13] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[13]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[13] ));
  FDPE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[14] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[14]),
        .PRE(mode_sync_n_1),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[14] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[15] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[15]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[15] ));
  FDPE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[16] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[16]),
        .PRE(mode_sync_n_1),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[16] ));
  FDPE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[17] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[17]),
        .PRE(mode_sync_n_1),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[17] ));
  FDPE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[18] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[18]),
        .PRE(mode_sync_n_1),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[18] ));
  FDPE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[19] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[19]),
        .PRE(mode_sync_n_1),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[19] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[1]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[1] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[20] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[20]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[20] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[21] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[21]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[21] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[22] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[22]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[22] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[23] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[23]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[23] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[24] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[24]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[24] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[25] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[25]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[25] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[26] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[26]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[26] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[27] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[27]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[27] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[28] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[28]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[28] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[29] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[29]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[29] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[2]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[2] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[30] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[30]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[30] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[31] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[31]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[31] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[3]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[3] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[4]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[4] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[5]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[5] ));
  FDPE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[6]),
        .PRE(mode_sync_n_1),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[6] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[7]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[7] ));
  FDCE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_1),
        .D(s_axi_wdata[8]),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[8] ));
  FDPE \gen_regs.gen_timeout_debug_regs.init_value_axi_reg[9] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[9]),
        .PRE(mode_sync_n_1),
        .Q(\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[9] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_111 hs_abort_sync
       (.SR(mode_sync_n_1),
        .out(dl0_hs_abort_axi),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_112 hs_exit_reg_sync
       (.Q(hs_exit_reg_axi),
        .core_clk(core_clk),
        .\s_level_out_bus_d2_reg[0]_0 (\s_level_out_bus_d3_reg[0] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_113 hs_prepare_reg_sync
       (.Q(hs_prepare_reg_axi),
        .core_clk(core_clk),
        .\s_level_out_bus_d3_reg[0]_0 (\s_level_out_bus_d3_reg[0] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_114 hs_trail_reg_sync
       (.Q(hs_trail_reg_axi),
        .tx_div4_clk(tx_div4_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_115 hs_tx_timeout_sync
       (.Q(hs_tx_timeout_axi),
        .tx_div4_clk(tx_div4_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_116 hs_zero_reg_sync
       (.Q(hs_zero_reg_axi),
        .tx_div4_clk(tx_div4_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_117 init_done_sync
       (.D(init_done_sync_n_0),
        .Q(sel0),
        .SR(mode_sync_n_1),
        .cl_status_reg_w(cl_status_reg_w[3]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2_0 (clk_trail_reg_axi[3]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2_1 (clk_zero_reg_axi[3]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2_2 (clk_prepare_reg_axi[3]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_5_0 (esc_timeout_axi[3]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_5_1 (hs_tx_timeout_axi[3]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3] (\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_0 (\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[3] ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_1 (hs_exit_reg_axi[3]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_2 (\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_8_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_3 (hs_prepare_reg_axi[3]),
        .rd_req(rd_req),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized7 init_reg_sync
       (.D(D),
        .Q({\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[31] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[30] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[29] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[28] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[27] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[26] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[25] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[24] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[23] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[22] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[21] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[20] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[19] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[18] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[17] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[16] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[15] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[14] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[13] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[12] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[11] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[10] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[9] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[8] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[7] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[6] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[5] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[4] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[3] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[2] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[1] ,\gen_regs.gen_timeout_debug_regs.init_value_axi_reg_n_0_[0] }),
        .core_clk(core_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized5 mode_sync
       (.D(mode_sync_n_0),
        .Q(clk_trail_reg_axi[1:0]),
        .SR(mode_sync_n_1),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0] (\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_0 (\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_7_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 (sel0[3:0]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_4_0 (\gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_7_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_4_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_10_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1] (clk_zero_reg_axi[1:0]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_0 (clk_prepare_reg_axi[1:0]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_4_0 (\gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_7_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_4_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_10_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_5_0 (esc_timeout_axi[1:0]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_5_1 (hs_tx_timeout_axi[1:0]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_6_0 (hs_prepare_reg_axi[1:0]),
        .rd_req(rd_req),
        .rd_req_reg({mode_sync_n_2,mode_sync_n_3}),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .\s_level_out_bus_d1_cdc_to_reg[17]_0 ({dl_status_reg[1:0],dl_status_reg[6:5],dl_status_reg[11:10],dl_status_reg[16:15],cl_status_reg_w[1:0]}));
  LUT4 #(
    .INIT(16'h0400)) 
    \rd_addr[6]_i_1 
       (.I0(rd_req),
        .I1(reset_released_r),
        .I2(wr_req),
        .I3(s_axi_arvalid),
        .O(rd_req0));
  FDCE \rd_addr_reg[2] 
       (.C(s_axi_aclk),
        .CE(rd_req0),
        .CLR(mode_sync_n_1),
        .D(s_axi_araddr[0]),
        .Q(sel0[0]));
  FDCE \rd_addr_reg[3] 
       (.C(s_axi_aclk),
        .CE(rd_req0),
        .CLR(mode_sync_n_1),
        .D(s_axi_araddr[1]),
        .Q(sel0[1]));
  FDCE \rd_addr_reg[4] 
       (.C(s_axi_aclk),
        .CE(rd_req0),
        .CLR(mode_sync_n_1),
        .D(s_axi_araddr[2]),
        .Q(sel0[2]));
  FDCE \rd_addr_reg[5] 
       (.C(s_axi_aclk),
        .CE(rd_req0),
        .CLR(mode_sync_n_1),
        .D(s_axi_araddr[3]),
        .Q(sel0[3]));
  FDCE \rd_addr_reg[6] 
       (.C(s_axi_aclk),
        .CE(rd_req0),
        .CLR(mode_sync_n_1),
        .D(s_axi_araddr[4]),
        .Q(sel0[4]));
  LUT6 #(
    .INIT(64'h0020FF20FF20FF20)) 
    rd_req_i_1
       (.I0(s_axi_arvalid),
        .I1(wr_req),
        .I2(reset_released_r),
        .I3(rd_req),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rvalid_reg_0 ),
        .I5(s_axi_rready),
        .O(rd_req_i_1_n_0));
  FDCE rd_req_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(rd_req_i_1_n_0),
        .Q(rd_req));
  FDCE reset_released_r_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(reset_released),
        .Q(reset_released_r));
  FDCE reset_released_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_1),
        .D(1'b1),
        .Q(reset_released));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'h04)) 
    s_axi_arready_INST_0
       (.I0(wr_req),
        .I1(reset_released_r),
        .I2(rd_req),
        .O(s_axi_arready));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    s_axi_awready_INST_0
       (.I0(wr_req),
        .I1(reset_released_r),
        .I2(s_axi_arvalid),
        .I3(rd_req),
        .O(s_axi_awready));
  LUT2 #(
    .INIT(4'h2)) 
    s_axi_wready_INST_0
       (.I0(wr_req),
        .I1(axi_bvalid_reg_0),
        .O(s_axi_wready));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized4 stopstate_sync
       (.D({stopstate_sync_n_0,stopstate_sync_n_1}),
        .Q(sel0[3:0]),
        .SR(mode_sync_n_1),
        .dl0_hs_abort_r_axi(dl0_hs_abort_r_axi),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_0 ({esc_timeout_axi[6],esc_timeout_axi[4]}),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_1 ({hs_tx_timeout_axi[6],hs_tx_timeout_axi[4]}),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_2 (hs_prepare_reg_axi[6]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4] (\gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_2_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_0 (\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_1 (\gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_3_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_2 (\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_7_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_3 (\gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_4 (\gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_6_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_5 (\gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_8_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6] (clk_trail_reg_axi[6]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_0 (clk_zero_reg_axi[6]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_1 (clk_prepare_reg_axi[6]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_2 (\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_3 (\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_8_n_0 ),
        .rd_req(rd_req),
        .s_axi_aclk(s_axi_aclk),
        .\s_level_out_bus_d1_cdc_to_reg[8]_0 ({dl_status_reg[4],dl_status_reg[9],dl_status_reg[14],dl_status_reg[19],cl_status_reg_w[4]}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized4_118 ulps_sync
       (.D(ulps_sync_n_0),
        .Q(clk_trail_reg_axi[2]),
        .SR(mode_sync_n_1),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_0 (mode_sync_n_0),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_1 (esc_timeout_axi[2]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_2 (hs_tx_timeout_axi[2]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_3 (hs_prepare_reg_axi[2]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2] (\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_0 (\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_7_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_1 (sel0[3:0]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_2 (clk_zero_reg_axi[2]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_3 (clk_prepare_reg_axi[2]),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_4 (\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_5_n_0 ),
        .\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_5 (\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_8_n_0 ),
        .rd_req(rd_req),
        .s_axi_aclk(s_axi_aclk),
        .\s_level_out_bus_d1_cdc_to_reg[8]_0 ({dl_status_reg[2],dl_status_reg[7],dl_status_reg[12],dl_status_reg[17],cl_status_reg_w[2]}));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \wr_addr[2]_i_1 
       (.I0(s_axi_awvalid),
        .I1(wr_req),
        .I2(reset_released_r),
        .I3(s_axi_arvalid),
        .I4(rd_req),
        .I5(s_axi_awaddr[0]),
        .O(\wr_addr[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \wr_addr[3]_i_1 
       (.I0(s_axi_awvalid),
        .I1(wr_req),
        .I2(reset_released_r),
        .I3(s_axi_arvalid),
        .I4(rd_req),
        .I5(s_axi_awaddr[1]),
        .O(\wr_addr[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \wr_addr[4]_i_1 
       (.I0(s_axi_awvalid),
        .I1(wr_req),
        .I2(reset_released_r),
        .I3(s_axi_arvalid),
        .I4(rd_req),
        .I5(s_axi_awaddr[2]),
        .O(\wr_addr[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \wr_addr[5]_i_1 
       (.I0(s_axi_awvalid),
        .I1(wr_req),
        .I2(reset_released_r),
        .I3(s_axi_arvalid),
        .I4(rd_req),
        .I5(s_axi_awaddr[3]),
        .O(\wr_addr[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \wr_addr[6]_i_1 
       (.I0(s_axi_awvalid),
        .I1(wr_req),
        .I2(reset_released_r),
        .I3(s_axi_arvalid),
        .I4(rd_req),
        .I5(s_axi_awaddr[4]),
        .O(\wr_addr[6]_i_1_n_0 ));
  FDCE \wr_addr_reg[2] 
       (.C(s_axi_aclk),
        .CE(wr_req_i_1_n_0),
        .CLR(mode_sync_n_1),
        .D(\wr_addr[2]_i_1_n_0 ),
        .Q(p_0_in[0]));
  FDCE \wr_addr_reg[3] 
       (.C(s_axi_aclk),
        .CE(wr_req_i_1_n_0),
        .CLR(mode_sync_n_1),
        .D(\wr_addr[3]_i_1_n_0 ),
        .Q(p_0_in[1]));
  FDCE \wr_addr_reg[4] 
       (.C(s_axi_aclk),
        .CE(wr_req_i_1_n_0),
        .CLR(mode_sync_n_1),
        .D(\wr_addr[4]_i_1_n_0 ),
        .Q(p_0_in[2]));
  FDCE \wr_addr_reg[5] 
       (.C(s_axi_aclk),
        .CE(wr_req_i_1_n_0),
        .CLR(mode_sync_n_1),
        .D(\wr_addr[5]_i_1_n_0 ),
        .Q(p_0_in[3]));
  FDCE \wr_addr_reg[6] 
       (.C(s_axi_aclk),
        .CE(wr_req_i_1_n_0),
        .CLR(mode_sync_n_1),
        .D(\wr_addr[6]_i_1_n_0 ),
        .Q(p_0_in[4]));
  LUT3 #(
    .INIT(8'hEA)) 
    wr_req_i_1
       (.I0(wr_req024_out),
        .I1(axi_bvalid_reg_0),
        .I2(s_axi_bready),
        .O(wr_req_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h00100000)) 
    wr_req_i_2
       (.I0(rd_req),
        .I1(s_axi_arvalid),
        .I2(reset_released_r),
        .I3(wr_req),
        .I4(s_axi_awvalid),
        .O(wr_req024_out));
  FDCE wr_req_reg
       (.C(s_axi_aclk),
        .CE(wr_req_i_1_n_0),
        .CLR(mode_sync_n_1),
        .D(wr_req024_out),
        .Q(wr_req));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_esc_datapath
   (s_level_out_d3_reg,
    dl_status_reg,
    out,
    esc_ctrl_all_sm_reg_0,
    esc_stopstate_reg_0,
    dl_txreadyesc_reg_0,
    dl3_ulpsactivenot,
    esc_abort_i,
    esc_ulps_i,
    tx_dl3_lp_dp,
    tx_dl3_lp_dn,
    esc_ctrl_all_sm_reg_1,
    dl0_txclkesc,
    s_level_out_d1_cdc_to_reg,
    dl3_forcetxstopmode,
    esc_start_i,
    txlpdtesc_r_reg_0,
    dl3_txvalidesc,
    dl3_txrequestesc,
    dl3_txdataesc,
    dl3_txulpsexit,
    dl3_txtriggeresc,
    tx_dl_lp_dp_hs_i,
    hs_xfer_done_i,
    tx_dl_lp_dn_hs_i,
    dl3_txulpsesc,
    dl3_txlpdtesc);
  output s_level_out_d3_reg;
  output [0:0]dl_status_reg;
  output out;
  output esc_ctrl_all_sm_reg_0;
  output esc_stopstate_reg_0;
  output dl_txreadyesc_reg_0;
  output dl3_ulpsactivenot;
  output esc_abort_i;
  output esc_ulps_i;
  output tx_dl3_lp_dp;
  output tx_dl3_lp_dn;
  input esc_ctrl_all_sm_reg_1;
  input dl0_txclkesc;
  input s_level_out_d1_cdc_to_reg;
  input dl3_forcetxstopmode;
  input esc_start_i;
  input txlpdtesc_r_reg_0;
  input dl3_txvalidesc;
  input dl3_txrequestesc;
  input [7:0]dl3_txdataesc;
  input dl3_txulpsexit;
  input [3:0]dl3_txtriggeresc;
  input tx_dl_lp_dp_hs_i;
  input hs_xfer_done_i;
  input tx_dl_lp_dn_hs_i;
  input dl3_txulpsesc;
  input dl3_txlpdtesc;

  wire \FSM_sequential_dl_tx_state[0]_i_3__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_2__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_6__2_n_0 ;
  wire [2:0]bit_cnt;
  wire \bit_cnt[3]_i_12__2_n_0 ;
  wire \bit_cnt[3]_i_5__2_n_0 ;
  wire \bit_cnt[3]_i_6__2_n_0 ;
  wire \bit_cnt[3]_i_7__2_n_0 ;
  wire \bit_cnt[3]_i_8__2_n_0 ;
  wire \bit_cnt_reg_n_0_[0] ;
  wire \bit_cnt_reg_n_0_[1] ;
  wire \bit_cnt_reg_n_0_[2] ;
  wire \bit_cnt_reg_n_0_[3] ;
  wire [6:0]data0;
  wire dl0_txclkesc;
  wire dl3_forcetxstopmode;
  wire [7:0]dl3_txdataesc;
  wire dl3_txlpdtesc;
  wire dl3_txrequestesc;
  wire [3:0]dl3_txtriggeresc;
  wire dl3_txulpsesc;
  wire dl3_txulpsexit;
  wire dl3_txvalidesc;
  wire dl3_ulpsactivenot;
  (* DONT_TOUCH *) wire [0:0]dl_status_reg;
  wire [3:0]dl_tx_state;
  wire dl_txreadyesc_i_2__2_n_0;
  wire dl_txreadyesc_i_3__2_n_0;
  wire dl_txreadyesc_reg_0;
  wire dl_ulpsactivenot_i_3__2_n_0;
  wire esc_abort_i;
  wire \esc_cmd_data[7]_i_4__2_n_0 ;
  wire \esc_cmd_data[7]_i_5__2_n_0 ;
  wire \esc_cmd_data[7]_i_8__2_n_0 ;
  wire \esc_cmd_data_reg_n_0_[0] ;
  (* DONT_TOUCH *) wire esc_ctrl_all_sm_reg_0;
  wire esc_ctrl_all_sm_reg_1;
  wire esc_ctrl_axi_if_i_1__2_n_0;
  wire esc_ctrl_i;
  wire esc_start_i;
  wire esc_start_sync;
  wire esc_start_sync_i_n_1;
  wire esc_start_sync_i_n_2;
  wire esc_start_sync_i_n_3;
  wire esc_stopstate_i_1__2_n_0;
  (* DONT_TOUCH *) wire esc_stopstate_reg_0;
  wire esc_ulps_i;
  wire hs_xfer_done_i;
  wire init_done_sync_i_n_0;
  wire init_done_sync_i_n_1;
  wire init_done_sync_i_n_10;
  wire init_done_sync_i_n_11;
  wire init_done_sync_i_n_12;
  wire init_done_sync_i_n_13;
  wire init_done_sync_i_n_14;
  wire init_done_sync_i_n_15;
  wire init_done_sync_i_n_16;
  wire init_done_sync_i_n_18;
  wire init_done_sync_i_n_19;
  wire init_done_sync_i_n_2;
  wire init_done_sync_i_n_20;
  wire init_done_sync_i_n_21;
  wire init_done_sync_i_n_22;
  wire init_done_sync_i_n_23;
  wire init_done_sync_i_n_24;
  wire init_done_sync_i_n_25;
  wire init_done_sync_i_n_26;
  wire init_done_sync_i_n_27;
  wire init_done_sync_i_n_28;
  wire init_done_sync_i_n_29;
  wire init_done_sync_i_n_3;
  wire init_done_sync_i_n_30;
  wire init_done_sync_i_n_4;
  wire init_done_sync_i_n_5;
  wire init_done_sync_i_n_6;
  wire init_done_sync_i_n_7;
  wire init_done_sync_i_n_8;
  wire init_done_sync_i_n_9;
  (* DONT_TOUCH *) wire out;
  wire p_0_in;
  wire p_2_in;
  wire s_level_out_d1_cdc_to_reg;
  wire s_level_out_d3_reg;
  wire tx_dl3_lp_dn;
  wire tx_dl3_lp_dp;
  wire tx_dl_lp_dn_esc_i;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dn_i_10__2_n_0;
  wire tx_dl_lp_dn_i_12__2_n_0;
  wire tx_dl_lp_dn_i_6__2_n_0;
  wire tx_dl_lp_dp_esc_i;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_i_6__6_n_0;
  wire txlpdtesc_r;
  wire txlpdtesc_r_reg_0;
  wire \txtriggeresc_r_reg_n_0_[0] ;
  wire \txtriggeresc_r_reg_n_0_[3] ;
  wire txulpsesc_r;

  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_tx_state[0]_i_3__2 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .O(\FSM_sequential_dl_tx_state[0]_i_3__2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_tx_state[2]_i_2__2 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[2]),
        .O(\FSM_sequential_dl_tx_state[2]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \FSM_sequential_dl_tx_state[3]_i_6__2 
       (.I0(dl_tx_state[3]),
        .I1(dl_tx_state[1]),
        .I2(dl_tx_state[2]),
        .I3(dl_tx_state[0]),
        .O(\FSM_sequential_dl_tx_state[3]_i_6__2_n_0 ));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_4),
        .Q(dl_tx_state[0]),
        .R(esc_ctrl_all_sm_reg_1));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_sequential_dl_tx_state_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_3),
        .Q(dl_tx_state[1]),
        .S(esc_ctrl_all_sm_reg_1));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_2),
        .Q(dl_tx_state[2]),
        .R(esc_ctrl_all_sm_reg_1));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_1),
        .Q(dl_tx_state[3]),
        .R(esc_ctrl_all_sm_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT5 #(
    .INIT(32'h00600000)) 
    \bit_cnt[1]_i_1__2 
       (.I0(\bit_cnt_reg_n_0_[1] ),
        .I1(\bit_cnt_reg_n_0_[0] ),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[3]),
        .I4(dl_tx_state[1]),
        .O(bit_cnt[1]));
  LUT6 #(
    .INIT(64'h0000780000000000)) 
    \bit_cnt[2]_i_1__2 
       (.I0(\bit_cnt_reg_n_0_[0] ),
        .I1(\bit_cnt_reg_n_0_[1] ),
        .I2(\bit_cnt_reg_n_0_[2] ),
        .I3(dl_tx_state[0]),
        .I4(dl_tx_state[3]),
        .I5(dl_tx_state[1]),
        .O(bit_cnt[2]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \bit_cnt[3]_i_12__2 
       (.I0(\txtriggeresc_r_reg_n_0_[0] ),
        .I1(p_2_in),
        .I2(\txtriggeresc_r_reg_n_0_[3] ),
        .I3(p_0_in),
        .O(\bit_cnt[3]_i_12__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \bit_cnt[3]_i_5__2 
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .I2(\bit_cnt_reg_n_0_[3] ),
        .O(\bit_cnt[3]_i_5__2_n_0 ));
  LUT6 #(
    .INIT(64'hF1FFFFFFFFFFFFFF)) 
    \bit_cnt[3]_i_6__2 
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .I2(\bit_cnt_reg_n_0_[3] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .I4(\bit_cnt_reg_n_0_[0] ),
        .I5(\bit_cnt_reg_n_0_[1] ),
        .O(\bit_cnt[3]_i_6__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \bit_cnt[3]_i_7__2 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[0]),
        .O(\bit_cnt[3]_i_7__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT4 #(
    .INIT(16'h9555)) 
    \bit_cnt[3]_i_8__2 
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(\bit_cnt_reg_n_0_[2] ),
        .I2(\bit_cnt_reg_n_0_[0] ),
        .I3(\bit_cnt_reg_n_0_[1] ),
        .O(\bit_cnt[3]_i_8__2_n_0 ));
  FDRE \bit_cnt_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_6),
        .D(bit_cnt[0]),
        .Q(\bit_cnt_reg_n_0_[0] ),
        .R(esc_ctrl_all_sm_reg_1));
  FDRE \bit_cnt_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_6),
        .D(bit_cnt[1]),
        .Q(\bit_cnt_reg_n_0_[1] ),
        .R(esc_ctrl_all_sm_reg_1));
  FDRE \bit_cnt_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_6),
        .D(bit_cnt[2]),
        .Q(\bit_cnt_reg_n_0_[2] ),
        .R(esc_ctrl_all_sm_reg_1));
  FDRE \bit_cnt_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_6),
        .D(init_done_sync_i_n_16),
        .Q(\bit_cnt_reg_n_0_[3] ),
        .R(esc_ctrl_all_sm_reg_1));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_14 dl_forcetxstopmode_sync_i
       (.dl0_txclkesc(dl0_txclkesc),
        .dl3_forcetxstopmode(dl3_forcetxstopmode),
        .s_level_out_d3_reg_0(s_level_out_d3_reg));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT4 #(
    .INIT(16'h2400)) 
    dl_status_reg_bit_2_i_1__2
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[2]),
        .I2(dl_tx_state[1]),
        .I3(dl_tx_state[3]),
        .O(esc_ulps_i));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    dl_status_reg_bit_5_i_1__2
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .I3(dl_tx_state[0]),
        .O(esc_abort_i));
  LUT6 #(
    .INIT(64'h00000200AAAAAAAA)) 
    dl_txreadyesc_i_2__2
       (.I0(txlpdtesc_r),
        .I1(dl_tx_state[2]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[3]),
        .I4(dl_tx_state[1]),
        .I5(\bit_cnt[3]_i_6__2_n_0 ),
        .O(dl_txreadyesc_i_2__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    dl_txreadyesc_i_3__2
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[1]),
        .I3(dl_tx_state[3]),
        .O(dl_txreadyesc_i_3__2_n_0));
  FDRE dl_txreadyesc_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_0),
        .Q(dl_txreadyesc_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT4 #(
    .INIT(16'hFFFD)) 
    dl_ulpsactivenot_i_3__2
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(\bit_cnt_reg_n_0_[0] ),
        .I2(\bit_cnt_reg_n_0_[1] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .O(dl_ulpsactivenot_i_3__2_n_0));
  FDRE dl_ulpsactivenot_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_19),
        .Q(dl3_ulpsactivenot),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT5 #(
    .INIT(32'h0D0D0D00)) 
    \esc_cmd_data[7]_i_4__2 
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(\esc_cmd_data[7]_i_8__2_n_0 ),
        .I2(\bit_cnt[3]_i_7__2_n_0 ),
        .I3(tx_dl_lp_dp_esc_i),
        .I4(tx_dl_lp_dn_esc_i),
        .O(\esc_cmd_data[7]_i_4__2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \esc_cmd_data[7]_i_5__2 
       (.I0(dl_txreadyesc_reg_0),
        .I1(dl3_txvalidesc),
        .O(\esc_cmd_data[7]_i_5__2_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \esc_cmd_data[7]_i_8__2 
       (.I0(\bit_cnt_reg_n_0_[2] ),
        .I1(\bit_cnt_reg_n_0_[1] ),
        .I2(\bit_cnt_reg_n_0_[0] ),
        .O(\esc_cmd_data[7]_i_8__2_n_0 ));
  FDRE \esc_cmd_data_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_15),
        .Q(\esc_cmd_data_reg_n_0_[0] ),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_14),
        .Q(data0[0]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_13),
        .Q(data0[1]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_12),
        .Q(data0[2]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[4] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_11),
        .Q(data0[3]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[5] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_10),
        .Q(data0[4]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[6] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_9),
        .Q(data0[5]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[7] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_8),
        .Q(data0[6]),
        .R(txlpdtesc_r_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_all_sm_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1__2_n_0),
        .D(esc_start_sync_i_n_3),
        .Q(esc_ctrl_all_sm_reg_0),
        .R(esc_ctrl_all_sm_reg_1));
  LUT4 #(
    .INIT(16'h0175)) 
    esc_ctrl_axi_if_i_1__2
       (.I0(dl_tx_state[3]),
        .I1(dl_tx_state[2]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[1]),
        .O(esc_ctrl_axi_if_i_1__2_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_axi_if_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1__2_n_0),
        .D(esc_start_sync_i_n_1),
        .Q(dl_status_reg),
        .R(esc_ctrl_all_sm_reg_1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_lane_sm_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1__2_n_0),
        .D(esc_start_sync_i_n_2),
        .Q(out),
        .R(esc_ctrl_all_sm_reg_1));
  FDRE #(
    .INIT(1'b0)) 
    esc_ctrl_t_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_27),
        .Q(esc_ctrl_i),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_15 esc_start_sync_i
       (.Q(dl_tx_state[2:0]),
        .dl0_txclkesc(dl0_txclkesc),
        .dl_status_reg(dl_status_reg),
        .esc_ctrl_all_sm_reg(esc_ctrl_all_sm_reg_0),
        .esc_ctrl_axi_if_reg(init_done_sync_i_n_5),
        .esc_ctrl_lane_sm_reg(out),
        .esc_start_i(esc_start_i),
        .out(esc_start_sync),
        .s_level_out_d3_reg_0(esc_start_sync_i_n_1),
        .s_level_out_d3_reg_1(esc_start_sync_i_n_2),
        .s_level_out_d3_reg_2(esc_start_sync_i_n_3));
  LUT4 #(
    .INIT(16'h1004)) 
    esc_stopstate_i_1__2
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[1]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[3]),
        .O(esc_stopstate_i_1__2_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_stopstate_reg
       (.C(dl0_txclkesc),
        .CE(esc_stopstate_i_1__2_n_0),
        .D(init_done_sync_i_n_30),
        .Q(esc_stopstate_reg_0),
        .R(esc_ctrl_all_sm_reg_1));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_16 init_done_sync_i
       (.D({init_done_sync_i_n_1,init_done_sync_i_n_2,init_done_sync_i_n_3,init_done_sync_i_n_4}),
        .E(init_done_sync_i_n_6),
        .\FSM_sequential_dl_tx_state_reg[0] (\FSM_sequential_dl_tx_state[0]_i_3__2_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[1] (init_done_sync_i_n_18),
        .\FSM_sequential_dl_tx_state_reg[1]_0 (init_done_sync_i_n_30),
        .\FSM_sequential_dl_tx_state_reg[2] (init_done_sync_i_n_7),
        .\FSM_sequential_dl_tx_state_reg[2]_0 ({init_done_sync_i_n_16,bit_cnt[0]}),
        .\FSM_sequential_dl_tx_state_reg[2]_1 (\FSM_sequential_dl_tx_state[2]_i_2__2_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[2]_2 ({\txtriggeresc_r_reg_n_0_[3] ,p_0_in,p_2_in,\txtriggeresc_r_reg_n_0_[0] }),
        .\FSM_sequential_dl_tx_state_reg[2]_3 ({\bit_cnt_reg_n_0_[3] ,\bit_cnt_reg_n_0_[2] ,\bit_cnt_reg_n_0_[1] ,\bit_cnt_reg_n_0_[0] }),
        .\FSM_sequential_dl_tx_state_reg[3] (\FSM_sequential_dl_tx_state[3]_i_6__2_n_0 ),
        .Q(dl_tx_state),
        .\bit_cnt_reg[0] (\bit_cnt[3]_i_5__2_n_0 ),
        .\bit_cnt_reg[0]_0 (\bit_cnt[3]_i_6__2_n_0 ),
        .\bit_cnt_reg[3] (\bit_cnt[3]_i_12__2_n_0 ),
        .\bit_cnt_reg[3]_0 (\bit_cnt[3]_i_7__2_n_0 ),
        .\bit_cnt_reg[3]_1 (\bit_cnt[3]_i_8__2_n_0 ),
        .dl0_txclkesc(dl0_txclkesc),
        .dl3_txdataesc(dl3_txdataesc),
        .dl3_txlpdtesc(dl3_txlpdtesc),
        .dl3_txlpdtesc_0(init_done_sync_i_n_26),
        .dl3_txrequestesc(dl3_txrequestesc),
        .dl3_txtriggeresc(dl3_txtriggeresc),
        .\dl3_txtriggeresc[2] (init_done_sync_i_n_24),
        .\dl3_txtriggeresc[3] ({init_done_sync_i_n_20,init_done_sync_i_n_21,init_done_sync_i_n_22,init_done_sync_i_n_23}),
        .dl3_txulpsesc(dl3_txulpsesc),
        .dl3_txulpsesc_0(init_done_sync_i_n_25),
        .dl3_txulpsexit(dl3_txulpsexit),
        .dl3_txvalidesc(dl3_txvalidesc),
        .dl3_txvalidesc_0(init_done_sync_i_n_0),
        .dl3_ulpsactivenot(dl3_ulpsactivenot),
        .dl_txreadyesc_reg(dl_txreadyesc_i_2__2_n_0),
        .dl_txreadyesc_reg_0(dl_txreadyesc_reg_0),
        .dl_ulpsactivenot_reg(dl_ulpsactivenot_i_3__2_n_0),
        .\esc_cmd_data_reg[3] (\esc_cmd_data[7]_i_5__2_n_0 ),
        .\esc_cmd_data_reg[3]_0 (\esc_cmd_data[7]_i_4__2_n_0 ),
        .\esc_cmd_data_reg[6] ({data0,\esc_cmd_data_reg_n_0_[0] }),
        .esc_ctrl_i(esc_ctrl_i),
        .esc_ctrl_t_reg(init_done_sync_i_n_27),
        .esc_ctrl_t_reg_0(txlpdtesc_r_reg_0),
        .esc_ctrl_t_reg_1(s_level_out_d3_reg),
        .out(esc_start_sync),
        .s_level_out_d1_cdc_to_reg_0(s_level_out_d1_cdc_to_reg),
        .tx_dl_lp_dn_esc_i(tx_dl_lp_dn_esc_i),
        .tx_dl_lp_dn_reg(init_done_sync_i_n_29),
        .tx_dl_lp_dn_reg_0(tx_dl_lp_dn_i_6__2_n_0),
        .tx_dl_lp_dn_reg_1(tx_dl_lp_dn_i_10__2_n_0),
        .tx_dl_lp_dn_reg_2(tx_dl_lp_dn_i_12__2_n_0),
        .tx_dl_lp_dp_esc_i(tx_dl_lp_dp_esc_i),
        .tx_dl_lp_dp_reg(init_done_sync_i_n_28),
        .tx_dl_lp_dp_reg_0(tx_dl_lp_dp_i_6__6_n_0),
        .tx_dl_lp_dp_reg_1(esc_ctrl_all_sm_reg_1),
        .txlpdtesc_r(txlpdtesc_r),
        .\txtriggeresc_r_reg[0] (init_done_sync_i_n_5),
        .\txtriggeresc_r_reg[2] ({init_done_sync_i_n_8,init_done_sync_i_n_9,init_done_sync_i_n_10,init_done_sync_i_n_11,init_done_sync_i_n_12,init_done_sync_i_n_13,init_done_sync_i_n_14,init_done_sync_i_n_15}),
        .txulpsesc_r(txulpsesc_r),
        .txulpsesc_r_reg(init_done_sync_i_n_19),
        .txulpsesc_r_reg_0(dl_txreadyesc_i_3__2_n_0));
  LUT4 #(
    .INIT(16'hBBB8)) 
    tx_dl3_lp_dn_INST_0
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(esc_ctrl_i),
        .I2(hs_xfer_done_i),
        .I3(tx_dl_lp_dn_hs_i),
        .O(tx_dl3_lp_dn));
  LUT4 #(
    .INIT(16'hBBB8)) 
    tx_dl3_lp_dp_INST_0
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(esc_ctrl_i),
        .I2(tx_dl_lp_dp_hs_i),
        .I3(hs_xfer_done_i),
        .O(tx_dl3_lp_dp));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'h47)) 
    tx_dl_lp_dn_i_10__2
       (.I0(dl_tx_state[3]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[1]),
        .O(tx_dl_lp_dn_i_10__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'hBE)) 
    tx_dl_lp_dn_i_12__2
       (.I0(\esc_cmd_data_reg_n_0_[0] ),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(tx_dl_lp_dp_esc_i),
        .O(tx_dl_lp_dn_i_12__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    tx_dl_lp_dn_i_6__2
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(tx_dl_lp_dp_esc_i),
        .O(tx_dl_lp_dn_i_6__2_n_0));
  FDRE tx_dl_lp_dn_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_29),
        .Q(tx_dl_lp_dn_esc_i),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h6F)) 
    tx_dl_lp_dp_i_6__6
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .I2(\esc_cmd_data_reg_n_0_[0] ),
        .O(tx_dl_lp_dp_i_6__6_n_0));
  FDRE tx_dl_lp_dp_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_28),
        .Q(tx_dl_lp_dp_esc_i),
        .R(1'b0));
  FDRE txlpdtesc_r_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_26),
        .Q(txlpdtesc_r),
        .R(txlpdtesc_r_reg_0));
  FDRE \txtriggeresc_r_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_24),
        .D(init_done_sync_i_n_23),
        .Q(\txtriggeresc_r_reg_n_0_[0] ),
        .R(txlpdtesc_r_reg_0));
  FDRE \txtriggeresc_r_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_24),
        .D(init_done_sync_i_n_22),
        .Q(p_2_in),
        .R(txlpdtesc_r_reg_0));
  FDRE \txtriggeresc_r_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_24),
        .D(init_done_sync_i_n_21),
        .Q(p_0_in),
        .R(txlpdtesc_r_reg_0));
  FDRE \txtriggeresc_r_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_24),
        .D(init_done_sync_i_n_20),
        .Q(\txtriggeresc_r_reg_n_0_[3] ),
        .R(txlpdtesc_r_reg_0));
  FDRE txulpsesc_r_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_25),
        .Q(txulpsesc_r),
        .R(txlpdtesc_r_reg_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_esc_datapath" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_esc_datapath_33
   (s_level_out_d3_reg,
    dl_status_reg,
    out,
    esc_ctrl_all_sm_reg_0,
    esc_stopstate_reg_0,
    dl_txreadyesc_reg_0,
    dl2_ulpsactivenot,
    esc_abort_i,
    esc_ulps_i,
    tx_dl2_lp_dp,
    tx_dl2_lp_dn,
    esc_ctrl_all_sm_reg_1,
    dl0_txclkesc,
    s_level_out_d1_cdc_to_reg,
    dl2_forcetxstopmode,
    esc_start_i,
    txlpdtesc_r_reg_0,
    dl2_txvalidesc,
    dl2_txrequestesc,
    dl2_txdataesc,
    dl2_txulpsexit,
    dl2_txtriggeresc,
    tx_dl_lp_dp_hs_i,
    hs_xfer_done_i,
    tx_dl_lp_dn_hs_i,
    dl2_txulpsesc,
    dl2_txlpdtesc);
  output s_level_out_d3_reg;
  output [0:0]dl_status_reg;
  output out;
  output esc_ctrl_all_sm_reg_0;
  output esc_stopstate_reg_0;
  output dl_txreadyesc_reg_0;
  output dl2_ulpsactivenot;
  output esc_abort_i;
  output esc_ulps_i;
  output tx_dl2_lp_dp;
  output tx_dl2_lp_dn;
  input esc_ctrl_all_sm_reg_1;
  input dl0_txclkesc;
  input s_level_out_d1_cdc_to_reg;
  input dl2_forcetxstopmode;
  input esc_start_i;
  input txlpdtesc_r_reg_0;
  input dl2_txvalidesc;
  input dl2_txrequestesc;
  input [7:0]dl2_txdataesc;
  input dl2_txulpsexit;
  input [3:0]dl2_txtriggeresc;
  input tx_dl_lp_dp_hs_i;
  input hs_xfer_done_i;
  input tx_dl_lp_dn_hs_i;
  input dl2_txulpsesc;
  input dl2_txlpdtesc;

  wire \FSM_sequential_dl_tx_state[0]_i_3__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_2__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_6__1_n_0 ;
  wire [2:0]bit_cnt;
  wire \bit_cnt[3]_i_12__1_n_0 ;
  wire \bit_cnt[3]_i_5__1_n_0 ;
  wire \bit_cnt[3]_i_6__1_n_0 ;
  wire \bit_cnt[3]_i_7__1_n_0 ;
  wire \bit_cnt[3]_i_8__1_n_0 ;
  wire \bit_cnt_reg_n_0_[0] ;
  wire \bit_cnt_reg_n_0_[1] ;
  wire \bit_cnt_reg_n_0_[2] ;
  wire \bit_cnt_reg_n_0_[3] ;
  wire [6:0]data0;
  wire dl0_txclkesc;
  wire dl2_forcetxstopmode;
  wire [7:0]dl2_txdataesc;
  wire dl2_txlpdtesc;
  wire dl2_txrequestesc;
  wire [3:0]dl2_txtriggeresc;
  wire dl2_txulpsesc;
  wire dl2_txulpsexit;
  wire dl2_txvalidesc;
  wire dl2_ulpsactivenot;
  (* DONT_TOUCH *) wire [0:0]dl_status_reg;
  wire [3:0]dl_tx_state;
  wire dl_txreadyesc_i_2__1_n_0;
  wire dl_txreadyesc_i_3__1_n_0;
  wire dl_txreadyesc_reg_0;
  wire dl_ulpsactivenot_i_3__1_n_0;
  wire esc_abort_i;
  wire \esc_cmd_data[7]_i_4__1_n_0 ;
  wire \esc_cmd_data[7]_i_5__1_n_0 ;
  wire \esc_cmd_data[7]_i_8__1_n_0 ;
  wire \esc_cmd_data_reg_n_0_[0] ;
  (* DONT_TOUCH *) wire esc_ctrl_all_sm_reg_0;
  wire esc_ctrl_all_sm_reg_1;
  wire esc_ctrl_axi_if_i_1__1_n_0;
  wire esc_ctrl_i;
  wire esc_start_i;
  wire esc_start_sync;
  wire esc_start_sync_i_n_1;
  wire esc_start_sync_i_n_2;
  wire esc_start_sync_i_n_3;
  wire esc_stopstate_i_1__1_n_0;
  (* DONT_TOUCH *) wire esc_stopstate_reg_0;
  wire esc_ulps_i;
  wire hs_xfer_done_i;
  wire init_done_sync_i_n_0;
  wire init_done_sync_i_n_1;
  wire init_done_sync_i_n_10;
  wire init_done_sync_i_n_11;
  wire init_done_sync_i_n_12;
  wire init_done_sync_i_n_13;
  wire init_done_sync_i_n_14;
  wire init_done_sync_i_n_15;
  wire init_done_sync_i_n_16;
  wire init_done_sync_i_n_18;
  wire init_done_sync_i_n_19;
  wire init_done_sync_i_n_2;
  wire init_done_sync_i_n_20;
  wire init_done_sync_i_n_21;
  wire init_done_sync_i_n_22;
  wire init_done_sync_i_n_23;
  wire init_done_sync_i_n_24;
  wire init_done_sync_i_n_25;
  wire init_done_sync_i_n_26;
  wire init_done_sync_i_n_27;
  wire init_done_sync_i_n_28;
  wire init_done_sync_i_n_29;
  wire init_done_sync_i_n_3;
  wire init_done_sync_i_n_30;
  wire init_done_sync_i_n_4;
  wire init_done_sync_i_n_5;
  wire init_done_sync_i_n_6;
  wire init_done_sync_i_n_7;
  wire init_done_sync_i_n_8;
  wire init_done_sync_i_n_9;
  (* DONT_TOUCH *) wire out;
  wire p_0_in;
  wire p_2_in;
  wire s_level_out_d1_cdc_to_reg;
  wire s_level_out_d3_reg;
  wire tx_dl2_lp_dn;
  wire tx_dl2_lp_dp;
  wire tx_dl_lp_dn_esc_i;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dn_i_10__1_n_0;
  wire tx_dl_lp_dn_i_12__1_n_0;
  wire tx_dl_lp_dn_i_6__1_n_0;
  wire tx_dl_lp_dp_esc_i;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_i_6__4_n_0;
  wire txlpdtesc_r;
  wire txlpdtesc_r_reg_0;
  wire \txtriggeresc_r_reg_n_0_[0] ;
  wire \txtriggeresc_r_reg_n_0_[3] ;
  wire txulpsesc_r;

  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_tx_state[0]_i_3__1 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .O(\FSM_sequential_dl_tx_state[0]_i_3__1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_tx_state[2]_i_2__1 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[2]),
        .O(\FSM_sequential_dl_tx_state[2]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \FSM_sequential_dl_tx_state[3]_i_6__1 
       (.I0(dl_tx_state[3]),
        .I1(dl_tx_state[1]),
        .I2(dl_tx_state[2]),
        .I3(dl_tx_state[0]),
        .O(\FSM_sequential_dl_tx_state[3]_i_6__1_n_0 ));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_4),
        .Q(dl_tx_state[0]),
        .R(esc_ctrl_all_sm_reg_1));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_sequential_dl_tx_state_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_3),
        .Q(dl_tx_state[1]),
        .S(esc_ctrl_all_sm_reg_1));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_2),
        .Q(dl_tx_state[2]),
        .R(esc_ctrl_all_sm_reg_1));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_1),
        .Q(dl_tx_state[3]),
        .R(esc_ctrl_all_sm_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'h00600000)) 
    \bit_cnt[1]_i_1__1 
       (.I0(\bit_cnt_reg_n_0_[1] ),
        .I1(\bit_cnt_reg_n_0_[0] ),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[3]),
        .I4(dl_tx_state[1]),
        .O(bit_cnt[1]));
  LUT6 #(
    .INIT(64'h0000780000000000)) 
    \bit_cnt[2]_i_1__1 
       (.I0(\bit_cnt_reg_n_0_[0] ),
        .I1(\bit_cnt_reg_n_0_[1] ),
        .I2(\bit_cnt_reg_n_0_[2] ),
        .I3(dl_tx_state[0]),
        .I4(dl_tx_state[3]),
        .I5(dl_tx_state[1]),
        .O(bit_cnt[2]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \bit_cnt[3]_i_12__1 
       (.I0(\txtriggeresc_r_reg_n_0_[0] ),
        .I1(p_2_in),
        .I2(\txtriggeresc_r_reg_n_0_[3] ),
        .I3(p_0_in),
        .O(\bit_cnt[3]_i_12__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \bit_cnt[3]_i_5__1 
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .I2(\bit_cnt_reg_n_0_[3] ),
        .O(\bit_cnt[3]_i_5__1_n_0 ));
  LUT6 #(
    .INIT(64'hF1FFFFFFFFFFFFFF)) 
    \bit_cnt[3]_i_6__1 
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .I2(\bit_cnt_reg_n_0_[3] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .I4(\bit_cnt_reg_n_0_[0] ),
        .I5(\bit_cnt_reg_n_0_[1] ),
        .O(\bit_cnt[3]_i_6__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \bit_cnt[3]_i_7__1 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[0]),
        .O(\bit_cnt[3]_i_7__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT4 #(
    .INIT(16'h9555)) 
    \bit_cnt[3]_i_8__1 
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(\bit_cnt_reg_n_0_[2] ),
        .I2(\bit_cnt_reg_n_0_[0] ),
        .I3(\bit_cnt_reg_n_0_[1] ),
        .O(\bit_cnt[3]_i_8__1_n_0 ));
  FDRE \bit_cnt_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_6),
        .D(bit_cnt[0]),
        .Q(\bit_cnt_reg_n_0_[0] ),
        .R(esc_ctrl_all_sm_reg_1));
  FDRE \bit_cnt_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_6),
        .D(bit_cnt[1]),
        .Q(\bit_cnt_reg_n_0_[1] ),
        .R(esc_ctrl_all_sm_reg_1));
  FDRE \bit_cnt_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_6),
        .D(bit_cnt[2]),
        .Q(\bit_cnt_reg_n_0_[2] ),
        .R(esc_ctrl_all_sm_reg_1));
  FDRE \bit_cnt_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_6),
        .D(init_done_sync_i_n_16),
        .Q(\bit_cnt_reg_n_0_[3] ),
        .R(esc_ctrl_all_sm_reg_1));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_34 dl_forcetxstopmode_sync_i
       (.dl0_txclkesc(dl0_txclkesc),
        .dl2_forcetxstopmode(dl2_forcetxstopmode),
        .s_level_out_d3_reg_0(s_level_out_d3_reg));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT4 #(
    .INIT(16'h2400)) 
    dl_status_reg_bit_2_i_1__1
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[2]),
        .I2(dl_tx_state[1]),
        .I3(dl_tx_state[3]),
        .O(esc_ulps_i));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    dl_status_reg_bit_5_i_1__1
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .I3(dl_tx_state[0]),
        .O(esc_abort_i));
  LUT6 #(
    .INIT(64'h00000200AAAAAAAA)) 
    dl_txreadyesc_i_2__1
       (.I0(txlpdtesc_r),
        .I1(dl_tx_state[2]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[3]),
        .I4(dl_tx_state[1]),
        .I5(\bit_cnt[3]_i_6__1_n_0 ),
        .O(dl_txreadyesc_i_2__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    dl_txreadyesc_i_3__1
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[1]),
        .I3(dl_tx_state[3]),
        .O(dl_txreadyesc_i_3__1_n_0));
  FDRE dl_txreadyesc_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_0),
        .Q(dl_txreadyesc_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT4 #(
    .INIT(16'hFFFD)) 
    dl_ulpsactivenot_i_3__1
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(\bit_cnt_reg_n_0_[0] ),
        .I2(\bit_cnt_reg_n_0_[1] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .O(dl_ulpsactivenot_i_3__1_n_0));
  FDRE dl_ulpsactivenot_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_19),
        .Q(dl2_ulpsactivenot),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT5 #(
    .INIT(32'h0D0D0D00)) 
    \esc_cmd_data[7]_i_4__1 
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(\esc_cmd_data[7]_i_8__1_n_0 ),
        .I2(\bit_cnt[3]_i_7__1_n_0 ),
        .I3(tx_dl_lp_dp_esc_i),
        .I4(tx_dl_lp_dn_esc_i),
        .O(\esc_cmd_data[7]_i_4__1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \esc_cmd_data[7]_i_5__1 
       (.I0(dl_txreadyesc_reg_0),
        .I1(dl2_txvalidesc),
        .O(\esc_cmd_data[7]_i_5__1_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \esc_cmd_data[7]_i_8__1 
       (.I0(\bit_cnt_reg_n_0_[2] ),
        .I1(\bit_cnt_reg_n_0_[1] ),
        .I2(\bit_cnt_reg_n_0_[0] ),
        .O(\esc_cmd_data[7]_i_8__1_n_0 ));
  FDRE \esc_cmd_data_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_15),
        .Q(\esc_cmd_data_reg_n_0_[0] ),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_14),
        .Q(data0[0]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_13),
        .Q(data0[1]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_12),
        .Q(data0[2]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[4] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_11),
        .Q(data0[3]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[5] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_10),
        .Q(data0[4]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[6] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_9),
        .Q(data0[5]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[7] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_8),
        .Q(data0[6]),
        .R(txlpdtesc_r_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_all_sm_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1__1_n_0),
        .D(esc_start_sync_i_n_3),
        .Q(esc_ctrl_all_sm_reg_0),
        .R(esc_ctrl_all_sm_reg_1));
  LUT4 #(
    .INIT(16'h0175)) 
    esc_ctrl_axi_if_i_1__1
       (.I0(dl_tx_state[3]),
        .I1(dl_tx_state[2]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[1]),
        .O(esc_ctrl_axi_if_i_1__1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_axi_if_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1__1_n_0),
        .D(esc_start_sync_i_n_1),
        .Q(dl_status_reg),
        .R(esc_ctrl_all_sm_reg_1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_lane_sm_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1__1_n_0),
        .D(esc_start_sync_i_n_2),
        .Q(out),
        .R(esc_ctrl_all_sm_reg_1));
  FDRE #(
    .INIT(1'b0)) 
    esc_ctrl_t_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_27),
        .Q(esc_ctrl_i),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_35 esc_start_sync_i
       (.Q(dl_tx_state[2:0]),
        .dl0_txclkesc(dl0_txclkesc),
        .dl_status_reg(dl_status_reg),
        .esc_ctrl_all_sm_reg(esc_ctrl_all_sm_reg_0),
        .esc_ctrl_axi_if_reg(init_done_sync_i_n_5),
        .esc_ctrl_lane_sm_reg(out),
        .esc_start_i(esc_start_i),
        .out(esc_start_sync),
        .s_level_out_d3_reg_0(esc_start_sync_i_n_1),
        .s_level_out_d3_reg_1(esc_start_sync_i_n_2),
        .s_level_out_d3_reg_2(esc_start_sync_i_n_3));
  LUT4 #(
    .INIT(16'h1004)) 
    esc_stopstate_i_1__1
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[1]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[3]),
        .O(esc_stopstate_i_1__1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_stopstate_reg
       (.C(dl0_txclkesc),
        .CE(esc_stopstate_i_1__1_n_0),
        .D(init_done_sync_i_n_30),
        .Q(esc_stopstate_reg_0),
        .R(esc_ctrl_all_sm_reg_1));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_36 init_done_sync_i
       (.D({init_done_sync_i_n_1,init_done_sync_i_n_2,init_done_sync_i_n_3,init_done_sync_i_n_4}),
        .E(init_done_sync_i_n_6),
        .\FSM_sequential_dl_tx_state_reg[0] (\FSM_sequential_dl_tx_state[0]_i_3__1_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[1] (init_done_sync_i_n_18),
        .\FSM_sequential_dl_tx_state_reg[1]_0 (init_done_sync_i_n_30),
        .\FSM_sequential_dl_tx_state_reg[2] (init_done_sync_i_n_7),
        .\FSM_sequential_dl_tx_state_reg[2]_0 ({init_done_sync_i_n_16,bit_cnt[0]}),
        .\FSM_sequential_dl_tx_state_reg[2]_1 (\FSM_sequential_dl_tx_state[2]_i_2__1_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[2]_2 ({\txtriggeresc_r_reg_n_0_[3] ,p_0_in,p_2_in,\txtriggeresc_r_reg_n_0_[0] }),
        .\FSM_sequential_dl_tx_state_reg[2]_3 ({\bit_cnt_reg_n_0_[3] ,\bit_cnt_reg_n_0_[2] ,\bit_cnt_reg_n_0_[1] ,\bit_cnt_reg_n_0_[0] }),
        .\FSM_sequential_dl_tx_state_reg[3] (\FSM_sequential_dl_tx_state[3]_i_6__1_n_0 ),
        .Q(dl_tx_state),
        .\bit_cnt_reg[0] (\bit_cnt[3]_i_5__1_n_0 ),
        .\bit_cnt_reg[0]_0 (\bit_cnt[3]_i_6__1_n_0 ),
        .\bit_cnt_reg[3] (\bit_cnt[3]_i_12__1_n_0 ),
        .\bit_cnt_reg[3]_0 (\bit_cnt[3]_i_7__1_n_0 ),
        .\bit_cnt_reg[3]_1 (\bit_cnt[3]_i_8__1_n_0 ),
        .dl0_txclkesc(dl0_txclkesc),
        .dl2_txdataesc(dl2_txdataesc),
        .dl2_txlpdtesc(dl2_txlpdtesc),
        .dl2_txlpdtesc_0(init_done_sync_i_n_26),
        .dl2_txrequestesc(dl2_txrequestesc),
        .dl2_txtriggeresc(dl2_txtriggeresc),
        .\dl2_txtriggeresc[2] (init_done_sync_i_n_24),
        .\dl2_txtriggeresc[3] ({init_done_sync_i_n_20,init_done_sync_i_n_21,init_done_sync_i_n_22,init_done_sync_i_n_23}),
        .dl2_txulpsesc(dl2_txulpsesc),
        .dl2_txulpsesc_0(init_done_sync_i_n_25),
        .dl2_txulpsexit(dl2_txulpsexit),
        .dl2_txvalidesc(dl2_txvalidesc),
        .dl2_txvalidesc_0(init_done_sync_i_n_0),
        .dl2_ulpsactivenot(dl2_ulpsactivenot),
        .dl_txreadyesc_reg(dl_txreadyesc_i_2__1_n_0),
        .dl_txreadyesc_reg_0(dl_txreadyesc_reg_0),
        .dl_ulpsactivenot_reg(dl_ulpsactivenot_i_3__1_n_0),
        .\esc_cmd_data_reg[3] (\esc_cmd_data[7]_i_5__1_n_0 ),
        .\esc_cmd_data_reg[3]_0 (\esc_cmd_data[7]_i_4__1_n_0 ),
        .\esc_cmd_data_reg[6] ({data0,\esc_cmd_data_reg_n_0_[0] }),
        .esc_ctrl_i(esc_ctrl_i),
        .esc_ctrl_t_reg(init_done_sync_i_n_27),
        .esc_ctrl_t_reg_0(txlpdtesc_r_reg_0),
        .esc_ctrl_t_reg_1(s_level_out_d3_reg),
        .out(esc_start_sync),
        .s_level_out_d1_cdc_to_reg_0(s_level_out_d1_cdc_to_reg),
        .tx_dl_lp_dn_esc_i(tx_dl_lp_dn_esc_i),
        .tx_dl_lp_dn_reg(init_done_sync_i_n_29),
        .tx_dl_lp_dn_reg_0(tx_dl_lp_dn_i_6__1_n_0),
        .tx_dl_lp_dn_reg_1(tx_dl_lp_dn_i_10__1_n_0),
        .tx_dl_lp_dn_reg_2(tx_dl_lp_dn_i_12__1_n_0),
        .tx_dl_lp_dp_esc_i(tx_dl_lp_dp_esc_i),
        .tx_dl_lp_dp_reg(init_done_sync_i_n_28),
        .tx_dl_lp_dp_reg_0(tx_dl_lp_dp_i_6__4_n_0),
        .tx_dl_lp_dp_reg_1(esc_ctrl_all_sm_reg_1),
        .txlpdtesc_r(txlpdtesc_r),
        .\txtriggeresc_r_reg[0] (init_done_sync_i_n_5),
        .\txtriggeresc_r_reg[2] ({init_done_sync_i_n_8,init_done_sync_i_n_9,init_done_sync_i_n_10,init_done_sync_i_n_11,init_done_sync_i_n_12,init_done_sync_i_n_13,init_done_sync_i_n_14,init_done_sync_i_n_15}),
        .txulpsesc_r(txulpsesc_r),
        .txulpsesc_r_reg(init_done_sync_i_n_19),
        .txulpsesc_r_reg_0(dl_txreadyesc_i_3__1_n_0));
  LUT4 #(
    .INIT(16'hBBB8)) 
    tx_dl2_lp_dn_INST_0
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(esc_ctrl_i),
        .I2(hs_xfer_done_i),
        .I3(tx_dl_lp_dn_hs_i),
        .O(tx_dl2_lp_dn));
  LUT4 #(
    .INIT(16'hBBB8)) 
    tx_dl2_lp_dp_INST_0
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(esc_ctrl_i),
        .I2(tx_dl_lp_dp_hs_i),
        .I3(hs_xfer_done_i),
        .O(tx_dl2_lp_dp));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'h47)) 
    tx_dl_lp_dn_i_10__1
       (.I0(dl_tx_state[3]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[1]),
        .O(tx_dl_lp_dn_i_10__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hBE)) 
    tx_dl_lp_dn_i_12__1
       (.I0(\esc_cmd_data_reg_n_0_[0] ),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(tx_dl_lp_dp_esc_i),
        .O(tx_dl_lp_dn_i_12__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    tx_dl_lp_dn_i_6__1
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(tx_dl_lp_dp_esc_i),
        .O(tx_dl_lp_dn_i_6__1_n_0));
  FDRE tx_dl_lp_dn_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_29),
        .Q(tx_dl_lp_dn_esc_i),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h6F)) 
    tx_dl_lp_dp_i_6__4
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .I2(\esc_cmd_data_reg_n_0_[0] ),
        .O(tx_dl_lp_dp_i_6__4_n_0));
  FDRE tx_dl_lp_dp_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_28),
        .Q(tx_dl_lp_dp_esc_i),
        .R(1'b0));
  FDRE txlpdtesc_r_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_26),
        .Q(txlpdtesc_r),
        .R(txlpdtesc_r_reg_0));
  FDRE \txtriggeresc_r_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_24),
        .D(init_done_sync_i_n_23),
        .Q(\txtriggeresc_r_reg_n_0_[0] ),
        .R(txlpdtesc_r_reg_0));
  FDRE \txtriggeresc_r_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_24),
        .D(init_done_sync_i_n_22),
        .Q(p_2_in),
        .R(txlpdtesc_r_reg_0));
  FDRE \txtriggeresc_r_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_24),
        .D(init_done_sync_i_n_21),
        .Q(p_0_in),
        .R(txlpdtesc_r_reg_0));
  FDRE \txtriggeresc_r_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_24),
        .D(init_done_sync_i_n_20),
        .Q(\txtriggeresc_r_reg_n_0_[3] ),
        .R(txlpdtesc_r_reg_0));
  FDRE txulpsesc_r_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_25),
        .Q(txulpsesc_r),
        .R(txlpdtesc_r_reg_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_esc_datapath" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_esc_datapath_53
   (s_level_out_d3_reg,
    dl_status_reg,
    out,
    esc_stopstate_reg_0,
    dl_txreadyesc_reg_0,
    dl1_ulpsactivenot,
    esc_abort_i,
    esc_ulps_i,
    tx_dl1_lp_dp,
    tx_dl1_lp_dn,
    esc_ctrl_all_sm_reg_0,
    esc_ctrl_all_sm_reg_1,
    dl0_txclkesc,
    s_level_out_d1_cdc_to_reg,
    dl1_forcetxstopmode,
    esc_start_i,
    txlpdtesc_r_reg_0,
    dl1_txvalidesc,
    dl1_txrequestesc,
    dl1_txdataesc,
    dl1_txulpsexit,
    dl1_txtriggeresc,
    tx_dl_lp_dp_hs_i,
    hs_xfer_done_i,
    tx_dl_lp_dn_hs_i,
    dl1_txulpsesc,
    dl1_txlpdtesc,
    esc_active_all_reg);
  output s_level_out_d3_reg;
  output [0:0]dl_status_reg;
  output out;
  output esc_stopstate_reg_0;
  output dl_txreadyesc_reg_0;
  output dl1_ulpsactivenot;
  output esc_abort_i;
  output esc_ulps_i;
  output tx_dl1_lp_dp;
  output tx_dl1_lp_dn;
  output esc_ctrl_all_sm_reg_0;
  input esc_ctrl_all_sm_reg_1;
  input dl0_txclkesc;
  input s_level_out_d1_cdc_to_reg;
  input dl1_forcetxstopmode;
  input esc_start_i;
  input txlpdtesc_r_reg_0;
  input dl1_txvalidesc;
  input dl1_txrequestesc;
  input [7:0]dl1_txdataesc;
  input dl1_txulpsexit;
  input [3:0]dl1_txtriggeresc;
  input tx_dl_lp_dp_hs_i;
  input hs_xfer_done_i;
  input tx_dl_lp_dn_hs_i;
  input dl1_txulpsesc;
  input dl1_txlpdtesc;
  input [2:0]esc_active_all_reg;

  wire \FSM_sequential_dl_tx_state[0]_i_3__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_2__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_6__0_n_0 ;
  wire [2:0]bit_cnt;
  wire \bit_cnt[3]_i_12__0_n_0 ;
  wire \bit_cnt[3]_i_5__0_n_0 ;
  wire \bit_cnt[3]_i_6__0_n_0 ;
  wire \bit_cnt[3]_i_7__0_n_0 ;
  wire \bit_cnt[3]_i_8__0_n_0 ;
  wire \bit_cnt_reg_n_0_[0] ;
  wire \bit_cnt_reg_n_0_[1] ;
  wire \bit_cnt_reg_n_0_[2] ;
  wire \bit_cnt_reg_n_0_[3] ;
  wire [6:0]data0;
  wire dl0_txclkesc;
  wire dl1_forcetxstopmode;
  wire [7:0]dl1_txdataesc;
  wire dl1_txlpdtesc;
  wire dl1_txrequestesc;
  wire [3:0]dl1_txtriggeresc;
  wire dl1_txulpsesc;
  wire dl1_txulpsexit;
  wire dl1_txvalidesc;
  wire dl1_ulpsactivenot;
  (* DONT_TOUCH *) wire [0:0]dl_status_reg;
  wire [3:0]dl_tx_state;
  wire dl_txreadyesc_i_2__0_n_0;
  wire dl_txreadyesc_i_3__0_n_0;
  wire dl_txreadyesc_reg_0;
  wire dl_ulpsactivenot_i_3__0_n_0;
  wire esc_abort_i;
  wire [2:0]esc_active_all_reg;
  wire \esc_cmd_data[7]_i_4__0_n_0 ;
  wire \esc_cmd_data[7]_i_5__0_n_0 ;
  wire \esc_cmd_data[7]_i_8__0_n_0 ;
  wire \esc_cmd_data_reg_n_0_[0] ;
  (* DONT_TOUCH *) wire [1:1]esc_ctrl_all_sm_c;
  wire esc_ctrl_all_sm_reg_0;
  wire esc_ctrl_all_sm_reg_1;
  wire esc_ctrl_axi_if_i_1__0_n_0;
  wire esc_ctrl_i;
  wire esc_start_i;
  wire esc_start_sync;
  wire esc_start_sync_i_n_1;
  wire esc_start_sync_i_n_2;
  wire esc_start_sync_i_n_3;
  wire esc_stopstate_i_1__0_n_0;
  (* DONT_TOUCH *) wire esc_stopstate_reg_0;
  wire esc_ulps_i;
  wire hs_xfer_done_i;
  wire init_done_sync_i_n_0;
  wire init_done_sync_i_n_1;
  wire init_done_sync_i_n_10;
  wire init_done_sync_i_n_11;
  wire init_done_sync_i_n_12;
  wire init_done_sync_i_n_13;
  wire init_done_sync_i_n_14;
  wire init_done_sync_i_n_15;
  wire init_done_sync_i_n_16;
  wire init_done_sync_i_n_18;
  wire init_done_sync_i_n_19;
  wire init_done_sync_i_n_2;
  wire init_done_sync_i_n_20;
  wire init_done_sync_i_n_21;
  wire init_done_sync_i_n_22;
  wire init_done_sync_i_n_23;
  wire init_done_sync_i_n_24;
  wire init_done_sync_i_n_25;
  wire init_done_sync_i_n_26;
  wire init_done_sync_i_n_27;
  wire init_done_sync_i_n_28;
  wire init_done_sync_i_n_29;
  wire init_done_sync_i_n_3;
  wire init_done_sync_i_n_30;
  wire init_done_sync_i_n_4;
  wire init_done_sync_i_n_5;
  wire init_done_sync_i_n_6;
  wire init_done_sync_i_n_7;
  wire init_done_sync_i_n_8;
  wire init_done_sync_i_n_9;
  (* DONT_TOUCH *) wire out;
  wire p_0_in;
  wire p_2_in;
  wire s_level_out_d1_cdc_to_reg;
  wire s_level_out_d3_reg;
  wire tx_dl1_lp_dn;
  wire tx_dl1_lp_dp;
  wire tx_dl_lp_dn_esc_i;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dn_i_10__0_n_0;
  wire tx_dl_lp_dn_i_12__0_n_0;
  wire tx_dl_lp_dn_i_6__0_n_0;
  wire tx_dl_lp_dp_esc_i;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_i_6__2_n_0;
  wire txlpdtesc_r;
  wire txlpdtesc_r_reg_0;
  wire \txtriggeresc_r_reg_n_0_[0] ;
  wire \txtriggeresc_r_reg_n_0_[3] ;
  wire txulpsesc_r;

  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_tx_state[0]_i_3__0 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .O(\FSM_sequential_dl_tx_state[0]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_tx_state[2]_i_2__0 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[2]),
        .O(\FSM_sequential_dl_tx_state[2]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \FSM_sequential_dl_tx_state[3]_i_6__0 
       (.I0(dl_tx_state[3]),
        .I1(dl_tx_state[1]),
        .I2(dl_tx_state[2]),
        .I3(dl_tx_state[0]),
        .O(\FSM_sequential_dl_tx_state[3]_i_6__0_n_0 ));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_4),
        .Q(dl_tx_state[0]),
        .R(esc_ctrl_all_sm_reg_1));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_sequential_dl_tx_state_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_3),
        .Q(dl_tx_state[1]),
        .S(esc_ctrl_all_sm_reg_1));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_2),
        .Q(dl_tx_state[2]),
        .R(esc_ctrl_all_sm_reg_1));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_1),
        .Q(dl_tx_state[3]),
        .R(esc_ctrl_all_sm_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT5 #(
    .INIT(32'h00600000)) 
    \bit_cnt[1]_i_1__0 
       (.I0(\bit_cnt_reg_n_0_[1] ),
        .I1(\bit_cnt_reg_n_0_[0] ),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[3]),
        .I4(dl_tx_state[1]),
        .O(bit_cnt[1]));
  LUT6 #(
    .INIT(64'h0000780000000000)) 
    \bit_cnt[2]_i_1__0 
       (.I0(\bit_cnt_reg_n_0_[0] ),
        .I1(\bit_cnt_reg_n_0_[1] ),
        .I2(\bit_cnt_reg_n_0_[2] ),
        .I3(dl_tx_state[0]),
        .I4(dl_tx_state[3]),
        .I5(dl_tx_state[1]),
        .O(bit_cnt[2]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \bit_cnt[3]_i_12__0 
       (.I0(\txtriggeresc_r_reg_n_0_[0] ),
        .I1(p_2_in),
        .I2(\txtriggeresc_r_reg_n_0_[3] ),
        .I3(p_0_in),
        .O(\bit_cnt[3]_i_12__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \bit_cnt[3]_i_5__0 
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .I2(\bit_cnt_reg_n_0_[3] ),
        .O(\bit_cnt[3]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hF1FFFFFFFFFFFFFF)) 
    \bit_cnt[3]_i_6__0 
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .I2(\bit_cnt_reg_n_0_[3] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .I4(\bit_cnt_reg_n_0_[0] ),
        .I5(\bit_cnt_reg_n_0_[1] ),
        .O(\bit_cnt[3]_i_6__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \bit_cnt[3]_i_7__0 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[0]),
        .O(\bit_cnt[3]_i_7__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT4 #(
    .INIT(16'h9555)) 
    \bit_cnt[3]_i_8__0 
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(\bit_cnt_reg_n_0_[2] ),
        .I2(\bit_cnt_reg_n_0_[0] ),
        .I3(\bit_cnt_reg_n_0_[1] ),
        .O(\bit_cnt[3]_i_8__0_n_0 ));
  FDRE \bit_cnt_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_6),
        .D(bit_cnt[0]),
        .Q(\bit_cnt_reg_n_0_[0] ),
        .R(esc_ctrl_all_sm_reg_1));
  FDRE \bit_cnt_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_6),
        .D(bit_cnt[1]),
        .Q(\bit_cnt_reg_n_0_[1] ),
        .R(esc_ctrl_all_sm_reg_1));
  FDRE \bit_cnt_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_6),
        .D(bit_cnt[2]),
        .Q(\bit_cnt_reg_n_0_[2] ),
        .R(esc_ctrl_all_sm_reg_1));
  FDRE \bit_cnt_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_6),
        .D(init_done_sync_i_n_16),
        .Q(\bit_cnt_reg_n_0_[3] ),
        .R(esc_ctrl_all_sm_reg_1));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_54 dl_forcetxstopmode_sync_i
       (.dl0_txclkesc(dl0_txclkesc),
        .dl1_forcetxstopmode(dl1_forcetxstopmode),
        .s_level_out_d3_reg_0(s_level_out_d3_reg));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT4 #(
    .INIT(16'h2400)) 
    dl_status_reg_bit_2_i_1__0
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[2]),
        .I2(dl_tx_state[1]),
        .I3(dl_tx_state[3]),
        .O(esc_ulps_i));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    dl_status_reg_bit_5_i_1__0
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .I3(dl_tx_state[0]),
        .O(esc_abort_i));
  LUT6 #(
    .INIT(64'h00000200AAAAAAAA)) 
    dl_txreadyesc_i_2__0
       (.I0(txlpdtesc_r),
        .I1(dl_tx_state[2]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[3]),
        .I4(dl_tx_state[1]),
        .I5(\bit_cnt[3]_i_6__0_n_0 ),
        .O(dl_txreadyesc_i_2__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    dl_txreadyesc_i_3__0
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[1]),
        .I3(dl_tx_state[3]),
        .O(dl_txreadyesc_i_3__0_n_0));
  FDRE dl_txreadyesc_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_0),
        .Q(dl_txreadyesc_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT4 #(
    .INIT(16'hFFFD)) 
    dl_ulpsactivenot_i_3__0
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(\bit_cnt_reg_n_0_[0] ),
        .I2(\bit_cnt_reg_n_0_[1] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .O(dl_ulpsactivenot_i_3__0_n_0));
  FDRE dl_ulpsactivenot_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_19),
        .Q(dl1_ulpsactivenot),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    esc_active_all_i_1
       (.I0(esc_ctrl_all_sm_c),
        .I1(esc_active_all_reg[0]),
        .I2(esc_active_all_reg[2]),
        .I3(esc_active_all_reg[1]),
        .O(esc_ctrl_all_sm_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT5 #(
    .INIT(32'h0D0D0D00)) 
    \esc_cmd_data[7]_i_4__0 
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(\esc_cmd_data[7]_i_8__0_n_0 ),
        .I2(\bit_cnt[3]_i_7__0_n_0 ),
        .I3(tx_dl_lp_dp_esc_i),
        .I4(tx_dl_lp_dn_esc_i),
        .O(\esc_cmd_data[7]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \esc_cmd_data[7]_i_5__0 
       (.I0(dl_txreadyesc_reg_0),
        .I1(dl1_txvalidesc),
        .O(\esc_cmd_data[7]_i_5__0_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \esc_cmd_data[7]_i_8__0 
       (.I0(\bit_cnt_reg_n_0_[2] ),
        .I1(\bit_cnt_reg_n_0_[1] ),
        .I2(\bit_cnt_reg_n_0_[0] ),
        .O(\esc_cmd_data[7]_i_8__0_n_0 ));
  FDRE \esc_cmd_data_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_15),
        .Q(\esc_cmd_data_reg_n_0_[0] ),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_14),
        .Q(data0[0]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_13),
        .Q(data0[1]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_12),
        .Q(data0[2]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[4] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_11),
        .Q(data0[3]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[5] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_10),
        .Q(data0[4]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[6] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_9),
        .Q(data0[5]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[7] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_8),
        .Q(data0[6]),
        .R(txlpdtesc_r_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_all_sm_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1__0_n_0),
        .D(esc_start_sync_i_n_3),
        .Q(esc_ctrl_all_sm_c),
        .R(esc_ctrl_all_sm_reg_1));
  LUT4 #(
    .INIT(16'h0175)) 
    esc_ctrl_axi_if_i_1__0
       (.I0(dl_tx_state[3]),
        .I1(dl_tx_state[2]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[1]),
        .O(esc_ctrl_axi_if_i_1__0_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_axi_if_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1__0_n_0),
        .D(esc_start_sync_i_n_1),
        .Q(dl_status_reg),
        .R(esc_ctrl_all_sm_reg_1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_lane_sm_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1__0_n_0),
        .D(esc_start_sync_i_n_2),
        .Q(out),
        .R(esc_ctrl_all_sm_reg_1));
  FDRE #(
    .INIT(1'b0)) 
    esc_ctrl_t_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_27),
        .Q(esc_ctrl_i),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_55 esc_start_sync_i
       (.Q(dl_tx_state[2:0]),
        .dl0_txclkesc(dl0_txclkesc),
        .dl_status_reg(dl_status_reg),
        .esc_ctrl_all_sm_reg(esc_ctrl_all_sm_c),
        .esc_ctrl_axi_if_reg(init_done_sync_i_n_5),
        .esc_ctrl_lane_sm_reg(out),
        .esc_start_i(esc_start_i),
        .out(esc_start_sync),
        .s_level_out_d3_reg_0(esc_start_sync_i_n_1),
        .s_level_out_d3_reg_1(esc_start_sync_i_n_2),
        .s_level_out_d3_reg_2(esc_start_sync_i_n_3));
  LUT4 #(
    .INIT(16'h1004)) 
    esc_stopstate_i_1__0
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[1]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[3]),
        .O(esc_stopstate_i_1__0_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_stopstate_reg
       (.C(dl0_txclkesc),
        .CE(esc_stopstate_i_1__0_n_0),
        .D(init_done_sync_i_n_30),
        .Q(esc_stopstate_reg_0),
        .R(esc_ctrl_all_sm_reg_1));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_56 init_done_sync_i
       (.D({init_done_sync_i_n_1,init_done_sync_i_n_2,init_done_sync_i_n_3,init_done_sync_i_n_4}),
        .E(init_done_sync_i_n_6),
        .\FSM_sequential_dl_tx_state_reg[0] (\FSM_sequential_dl_tx_state[0]_i_3__0_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[1] (init_done_sync_i_n_18),
        .\FSM_sequential_dl_tx_state_reg[1]_0 (init_done_sync_i_n_30),
        .\FSM_sequential_dl_tx_state_reg[2] (init_done_sync_i_n_7),
        .\FSM_sequential_dl_tx_state_reg[2]_0 ({init_done_sync_i_n_16,bit_cnt[0]}),
        .\FSM_sequential_dl_tx_state_reg[2]_1 (\FSM_sequential_dl_tx_state[2]_i_2__0_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[2]_2 ({\txtriggeresc_r_reg_n_0_[3] ,p_0_in,p_2_in,\txtriggeresc_r_reg_n_0_[0] }),
        .\FSM_sequential_dl_tx_state_reg[2]_3 ({\bit_cnt_reg_n_0_[3] ,\bit_cnt_reg_n_0_[2] ,\bit_cnt_reg_n_0_[1] ,\bit_cnt_reg_n_0_[0] }),
        .\FSM_sequential_dl_tx_state_reg[3] (\FSM_sequential_dl_tx_state[3]_i_6__0_n_0 ),
        .Q(dl_tx_state),
        .\bit_cnt_reg[0] (\bit_cnt[3]_i_5__0_n_0 ),
        .\bit_cnt_reg[0]_0 (\bit_cnt[3]_i_6__0_n_0 ),
        .\bit_cnt_reg[3] (\bit_cnt[3]_i_12__0_n_0 ),
        .\bit_cnt_reg[3]_0 (\bit_cnt[3]_i_7__0_n_0 ),
        .\bit_cnt_reg[3]_1 (\bit_cnt[3]_i_8__0_n_0 ),
        .dl0_txclkesc(dl0_txclkesc),
        .dl1_txdataesc(dl1_txdataesc),
        .dl1_txlpdtesc(dl1_txlpdtesc),
        .dl1_txlpdtesc_0(init_done_sync_i_n_26),
        .dl1_txrequestesc(dl1_txrequestesc),
        .dl1_txtriggeresc(dl1_txtriggeresc),
        .\dl1_txtriggeresc[2] (init_done_sync_i_n_24),
        .\dl1_txtriggeresc[3] ({init_done_sync_i_n_20,init_done_sync_i_n_21,init_done_sync_i_n_22,init_done_sync_i_n_23}),
        .dl1_txulpsesc(dl1_txulpsesc),
        .dl1_txulpsesc_0(init_done_sync_i_n_25),
        .dl1_txulpsexit(dl1_txulpsexit),
        .dl1_txvalidesc(dl1_txvalidesc),
        .dl1_txvalidesc_0(init_done_sync_i_n_0),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dl_txreadyesc_reg(dl_txreadyesc_i_2__0_n_0),
        .dl_txreadyesc_reg_0(dl_txreadyesc_reg_0),
        .dl_ulpsactivenot_reg(dl_ulpsactivenot_i_3__0_n_0),
        .\esc_cmd_data_reg[3] (\esc_cmd_data[7]_i_5__0_n_0 ),
        .\esc_cmd_data_reg[3]_0 (\esc_cmd_data[7]_i_4__0_n_0 ),
        .\esc_cmd_data_reg[6] ({data0,\esc_cmd_data_reg_n_0_[0] }),
        .esc_ctrl_i(esc_ctrl_i),
        .esc_ctrl_t_reg(init_done_sync_i_n_27),
        .esc_ctrl_t_reg_0(txlpdtesc_r_reg_0),
        .esc_ctrl_t_reg_1(s_level_out_d3_reg),
        .out(esc_start_sync),
        .s_level_out_d1_cdc_to_reg_0(s_level_out_d1_cdc_to_reg),
        .tx_dl_lp_dn_esc_i(tx_dl_lp_dn_esc_i),
        .tx_dl_lp_dn_reg(init_done_sync_i_n_29),
        .tx_dl_lp_dn_reg_0(tx_dl_lp_dn_i_6__0_n_0),
        .tx_dl_lp_dn_reg_1(tx_dl_lp_dn_i_10__0_n_0),
        .tx_dl_lp_dn_reg_2(tx_dl_lp_dn_i_12__0_n_0),
        .tx_dl_lp_dp_esc_i(tx_dl_lp_dp_esc_i),
        .tx_dl_lp_dp_reg(init_done_sync_i_n_28),
        .tx_dl_lp_dp_reg_0(tx_dl_lp_dp_i_6__2_n_0),
        .tx_dl_lp_dp_reg_1(esc_ctrl_all_sm_reg_1),
        .txlpdtesc_r(txlpdtesc_r),
        .\txtriggeresc_r_reg[0] (init_done_sync_i_n_5),
        .\txtriggeresc_r_reg[2] ({init_done_sync_i_n_8,init_done_sync_i_n_9,init_done_sync_i_n_10,init_done_sync_i_n_11,init_done_sync_i_n_12,init_done_sync_i_n_13,init_done_sync_i_n_14,init_done_sync_i_n_15}),
        .txulpsesc_r(txulpsesc_r),
        .txulpsesc_r_reg(init_done_sync_i_n_19),
        .txulpsesc_r_reg_0(dl_txreadyesc_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hBBB8)) 
    tx_dl1_lp_dn_INST_0
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(esc_ctrl_i),
        .I2(hs_xfer_done_i),
        .I3(tx_dl_lp_dn_hs_i),
        .O(tx_dl1_lp_dn));
  LUT4 #(
    .INIT(16'hBBB8)) 
    tx_dl1_lp_dp_INST_0
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(esc_ctrl_i),
        .I2(tx_dl_lp_dp_hs_i),
        .I3(hs_xfer_done_i),
        .O(tx_dl1_lp_dp));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'h47)) 
    tx_dl_lp_dn_i_10__0
       (.I0(dl_tx_state[3]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[1]),
        .O(tx_dl_lp_dn_i_10__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'hBE)) 
    tx_dl_lp_dn_i_12__0
       (.I0(\esc_cmd_data_reg_n_0_[0] ),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(tx_dl_lp_dp_esc_i),
        .O(tx_dl_lp_dn_i_12__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    tx_dl_lp_dn_i_6__0
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(tx_dl_lp_dp_esc_i),
        .O(tx_dl_lp_dn_i_6__0_n_0));
  FDRE tx_dl_lp_dn_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_29),
        .Q(tx_dl_lp_dn_esc_i),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h6F)) 
    tx_dl_lp_dp_i_6__2
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .I2(\esc_cmd_data_reg_n_0_[0] ),
        .O(tx_dl_lp_dp_i_6__2_n_0));
  FDRE tx_dl_lp_dp_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_28),
        .Q(tx_dl_lp_dp_esc_i),
        .R(1'b0));
  FDRE txlpdtesc_r_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_26),
        .Q(txlpdtesc_r),
        .R(txlpdtesc_r_reg_0));
  FDRE \txtriggeresc_r_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_24),
        .D(init_done_sync_i_n_23),
        .Q(\txtriggeresc_r_reg_n_0_[0] ),
        .R(txlpdtesc_r_reg_0));
  FDRE \txtriggeresc_r_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_24),
        .D(init_done_sync_i_n_22),
        .Q(p_2_in),
        .R(txlpdtesc_r_reg_0));
  FDRE \txtriggeresc_r_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_24),
        .D(init_done_sync_i_n_21),
        .Q(p_0_in),
        .R(txlpdtesc_r_reg_0));
  FDRE \txtriggeresc_r_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_24),
        .D(init_done_sync_i_n_20),
        .Q(\txtriggeresc_r_reg_n_0_[3] ),
        .R(txlpdtesc_r_reg_0));
  FDRE txulpsesc_r_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_25),
        .Q(txulpsesc_r),
        .R(txlpdtesc_r_reg_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_esc_datapath" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_esc_datapath_73
   (s_level_out_d3_reg,
    dl_status_reg,
    out,
    esc_ctrl_all_sm_reg_0,
    esc_stopstate_reg_0,
    dl_txreadyesc_reg_0,
    dl0_ulpsactivenot,
    esc_abort_i,
    esc_ulps_i,
    tx_dl0_lp_dp,
    tx_dl0_lp_dn,
    esc_ctrl_all_sm_reg_1,
    dl0_txclkesc,
    s_level_out_d1_cdc_to_reg,
    dl0_forcetxstopmode,
    esc_start_i,
    txlpdtesc_r_reg_0,
    dl0_txvalidesc,
    dl0_txrequestesc,
    dl0_txdataesc,
    dl0_txulpsexit,
    dl0_txtriggeresc,
    tx_dl_lp_dp_hs_i,
    hs_xfer_done_i,
    tx_dl_lp_dn_hs_i,
    dl0_txulpsesc,
    dl0_txlpdtesc);
  output s_level_out_d3_reg;
  output [0:0]dl_status_reg;
  output out;
  output esc_ctrl_all_sm_reg_0;
  output esc_stopstate_reg_0;
  output dl_txreadyesc_reg_0;
  output dl0_ulpsactivenot;
  output esc_abort_i;
  output esc_ulps_i;
  output tx_dl0_lp_dp;
  output tx_dl0_lp_dn;
  input esc_ctrl_all_sm_reg_1;
  input dl0_txclkesc;
  input s_level_out_d1_cdc_to_reg;
  input dl0_forcetxstopmode;
  input esc_start_i;
  input txlpdtesc_r_reg_0;
  input dl0_txvalidesc;
  input dl0_txrequestesc;
  input [7:0]dl0_txdataesc;
  input dl0_txulpsexit;
  input [3:0]dl0_txtriggeresc;
  input tx_dl_lp_dp_hs_i;
  input hs_xfer_done_i;
  input tx_dl_lp_dn_hs_i;
  input dl0_txulpsesc;
  input dl0_txlpdtesc;

  wire \FSM_sequential_dl_tx_state[0]_i_3_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_6_n_0 ;
  wire [2:0]bit_cnt;
  wire \bit_cnt[3]_i_12_n_0 ;
  wire \bit_cnt[3]_i_5_n_0 ;
  wire \bit_cnt[3]_i_6_n_0 ;
  wire \bit_cnt[3]_i_7_n_0 ;
  wire \bit_cnt[3]_i_8_n_0 ;
  wire \bit_cnt_reg_n_0_[0] ;
  wire \bit_cnt_reg_n_0_[1] ;
  wire \bit_cnt_reg_n_0_[2] ;
  wire \bit_cnt_reg_n_0_[3] ;
  wire [6:0]data0;
  wire dl0_forcetxstopmode;
  wire dl0_txclkesc;
  wire [7:0]dl0_txdataesc;
  wire dl0_txlpdtesc;
  wire dl0_txrequestesc;
  wire [3:0]dl0_txtriggeresc;
  wire dl0_txulpsesc;
  wire dl0_txulpsexit;
  wire dl0_txvalidesc;
  wire dl0_ulpsactivenot;
  (* DONT_TOUCH *) wire [0:0]dl_status_reg;
  wire [3:0]dl_tx_state;
  wire dl_txreadyesc_i_2_n_0;
  wire dl_txreadyesc_i_3_n_0;
  wire dl_txreadyesc_reg_0;
  wire dl_ulpsactivenot_i_3_n_0;
  wire esc_abort_i;
  wire \esc_cmd_data[7]_i_4_n_0 ;
  wire \esc_cmd_data[7]_i_5_n_0 ;
  wire \esc_cmd_data[7]_i_8_n_0 ;
  wire \esc_cmd_data_reg_n_0_[0] ;
  (* DONT_TOUCH *) wire esc_ctrl_all_sm_reg_0;
  wire esc_ctrl_all_sm_reg_1;
  wire esc_ctrl_axi_if_i_1_n_0;
  wire esc_ctrl_i;
  wire esc_start_i;
  wire esc_start_sync;
  wire esc_start_sync_i_n_1;
  wire esc_start_sync_i_n_2;
  wire esc_start_sync_i_n_3;
  wire esc_stopstate_i_1_n_0;
  (* DONT_TOUCH *) wire esc_stopstate_reg_0;
  wire esc_ulps_i;
  wire hs_xfer_done_i;
  wire init_done_sync_i_n_0;
  wire init_done_sync_i_n_1;
  wire init_done_sync_i_n_10;
  wire init_done_sync_i_n_11;
  wire init_done_sync_i_n_12;
  wire init_done_sync_i_n_13;
  wire init_done_sync_i_n_14;
  wire init_done_sync_i_n_15;
  wire init_done_sync_i_n_16;
  wire init_done_sync_i_n_18;
  wire init_done_sync_i_n_19;
  wire init_done_sync_i_n_2;
  wire init_done_sync_i_n_20;
  wire init_done_sync_i_n_21;
  wire init_done_sync_i_n_22;
  wire init_done_sync_i_n_23;
  wire init_done_sync_i_n_24;
  wire init_done_sync_i_n_25;
  wire init_done_sync_i_n_26;
  wire init_done_sync_i_n_27;
  wire init_done_sync_i_n_28;
  wire init_done_sync_i_n_29;
  wire init_done_sync_i_n_3;
  wire init_done_sync_i_n_30;
  wire init_done_sync_i_n_4;
  wire init_done_sync_i_n_5;
  wire init_done_sync_i_n_6;
  wire init_done_sync_i_n_7;
  wire init_done_sync_i_n_8;
  wire init_done_sync_i_n_9;
  (* DONT_TOUCH *) wire out;
  wire p_0_in;
  wire p_2_in;
  wire s_level_out_d1_cdc_to_reg;
  wire s_level_out_d3_reg;
  wire tx_dl0_lp_dn;
  wire tx_dl0_lp_dp;
  wire tx_dl_lp_dn_esc_i;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dn_i_10_n_0;
  wire tx_dl_lp_dn_i_12_n_0;
  wire tx_dl_lp_dn_i_6_n_0;
  wire tx_dl_lp_dp_esc_i;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_i_6__0_n_0;
  wire txlpdtesc_r;
  wire txlpdtesc_r_reg_0;
  wire \txtriggeresc_r_reg_n_0_[0] ;
  wire \txtriggeresc_r_reg_n_0_[3] ;
  wire txulpsesc_r;

  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_tx_state[0]_i_3 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .O(\FSM_sequential_dl_tx_state[0]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_tx_state[2]_i_2 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[2]),
        .O(\FSM_sequential_dl_tx_state[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \FSM_sequential_dl_tx_state[3]_i_6 
       (.I0(dl_tx_state[3]),
        .I1(dl_tx_state[1]),
        .I2(dl_tx_state[2]),
        .I3(dl_tx_state[0]),
        .O(\FSM_sequential_dl_tx_state[3]_i_6_n_0 ));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_4),
        .Q(dl_tx_state[0]),
        .R(esc_ctrl_all_sm_reg_1));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_sequential_dl_tx_state_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_3),
        .Q(dl_tx_state[1]),
        .S(esc_ctrl_all_sm_reg_1));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_2),
        .Q(dl_tx_state[2]),
        .R(esc_ctrl_all_sm_reg_1));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_1),
        .Q(dl_tx_state[3]),
        .R(esc_ctrl_all_sm_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT5 #(
    .INIT(32'h00600000)) 
    \bit_cnt[1]_i_1 
       (.I0(\bit_cnt_reg_n_0_[1] ),
        .I1(\bit_cnt_reg_n_0_[0] ),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[3]),
        .I4(dl_tx_state[1]),
        .O(bit_cnt[1]));
  LUT6 #(
    .INIT(64'h0000780000000000)) 
    \bit_cnt[2]_i_1 
       (.I0(\bit_cnt_reg_n_0_[0] ),
        .I1(\bit_cnt_reg_n_0_[1] ),
        .I2(\bit_cnt_reg_n_0_[2] ),
        .I3(dl_tx_state[0]),
        .I4(dl_tx_state[3]),
        .I5(dl_tx_state[1]),
        .O(bit_cnt[2]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \bit_cnt[3]_i_12 
       (.I0(\txtriggeresc_r_reg_n_0_[0] ),
        .I1(p_2_in),
        .I2(\txtriggeresc_r_reg_n_0_[3] ),
        .I3(p_0_in),
        .O(\bit_cnt[3]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \bit_cnt[3]_i_5 
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .I2(\bit_cnt_reg_n_0_[3] ),
        .O(\bit_cnt[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF1FFFFFFFFFFFFFF)) 
    \bit_cnt[3]_i_6 
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .I2(\bit_cnt_reg_n_0_[3] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .I4(\bit_cnt_reg_n_0_[0] ),
        .I5(\bit_cnt_reg_n_0_[1] ),
        .O(\bit_cnt[3]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \bit_cnt[3]_i_7 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[0]),
        .O(\bit_cnt[3]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT4 #(
    .INIT(16'h9555)) 
    \bit_cnt[3]_i_8 
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(\bit_cnt_reg_n_0_[2] ),
        .I2(\bit_cnt_reg_n_0_[0] ),
        .I3(\bit_cnt_reg_n_0_[1] ),
        .O(\bit_cnt[3]_i_8_n_0 ));
  FDRE \bit_cnt_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_6),
        .D(bit_cnt[0]),
        .Q(\bit_cnt_reg_n_0_[0] ),
        .R(esc_ctrl_all_sm_reg_1));
  FDRE \bit_cnt_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_6),
        .D(bit_cnt[1]),
        .Q(\bit_cnt_reg_n_0_[1] ),
        .R(esc_ctrl_all_sm_reg_1));
  FDRE \bit_cnt_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_6),
        .D(bit_cnt[2]),
        .Q(\bit_cnt_reg_n_0_[2] ),
        .R(esc_ctrl_all_sm_reg_1));
  FDRE \bit_cnt_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_6),
        .D(init_done_sync_i_n_16),
        .Q(\bit_cnt_reg_n_0_[3] ),
        .R(esc_ctrl_all_sm_reg_1));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_74 dl_forcetxstopmode_sync_i
       (.dl0_forcetxstopmode(dl0_forcetxstopmode),
        .dl0_txclkesc(dl0_txclkesc),
        .s_level_out_d3_reg_0(s_level_out_d3_reg));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT4 #(
    .INIT(16'h2400)) 
    dl_status_reg_bit_2_i_1
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[2]),
        .I2(dl_tx_state[1]),
        .I3(dl_tx_state[3]),
        .O(esc_ulps_i));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    dl_status_reg_bit_5_i_1
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .I3(dl_tx_state[0]),
        .O(esc_abort_i));
  LUT6 #(
    .INIT(64'h00000200AAAAAAAA)) 
    dl_txreadyesc_i_2
       (.I0(txlpdtesc_r),
        .I1(dl_tx_state[2]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[3]),
        .I4(dl_tx_state[1]),
        .I5(\bit_cnt[3]_i_6_n_0 ),
        .O(dl_txreadyesc_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    dl_txreadyesc_i_3
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[1]),
        .I3(dl_tx_state[3]),
        .O(dl_txreadyesc_i_3_n_0));
  FDRE dl_txreadyesc_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_0),
        .Q(dl_txreadyesc_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT4 #(
    .INIT(16'hFFFD)) 
    dl_ulpsactivenot_i_3
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(\bit_cnt_reg_n_0_[0] ),
        .I2(\bit_cnt_reg_n_0_[1] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .O(dl_ulpsactivenot_i_3_n_0));
  FDRE dl_ulpsactivenot_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_19),
        .Q(dl0_ulpsactivenot),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT5 #(
    .INIT(32'h0D0D0D00)) 
    \esc_cmd_data[7]_i_4 
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(\esc_cmd_data[7]_i_8_n_0 ),
        .I2(\bit_cnt[3]_i_7_n_0 ),
        .I3(tx_dl_lp_dp_esc_i),
        .I4(tx_dl_lp_dn_esc_i),
        .O(\esc_cmd_data[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \esc_cmd_data[7]_i_5 
       (.I0(dl_txreadyesc_reg_0),
        .I1(dl0_txvalidesc),
        .O(\esc_cmd_data[7]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \esc_cmd_data[7]_i_8 
       (.I0(\bit_cnt_reg_n_0_[2] ),
        .I1(\bit_cnt_reg_n_0_[1] ),
        .I2(\bit_cnt_reg_n_0_[0] ),
        .O(\esc_cmd_data[7]_i_8_n_0 ));
  FDRE \esc_cmd_data_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_15),
        .Q(\esc_cmd_data_reg_n_0_[0] ),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_14),
        .Q(data0[0]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_13),
        .Q(data0[1]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_12),
        .Q(data0[2]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[4] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_11),
        .Q(data0[3]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[5] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_10),
        .Q(data0[4]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[6] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_9),
        .Q(data0[5]),
        .R(txlpdtesc_r_reg_0));
  FDRE \esc_cmd_data_reg[7] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_18),
        .D(init_done_sync_i_n_8),
        .Q(data0[6]),
        .R(txlpdtesc_r_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_all_sm_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1_n_0),
        .D(esc_start_sync_i_n_3),
        .Q(esc_ctrl_all_sm_reg_0),
        .R(esc_ctrl_all_sm_reg_1));
  LUT4 #(
    .INIT(16'h0175)) 
    esc_ctrl_axi_if_i_1
       (.I0(dl_tx_state[3]),
        .I1(dl_tx_state[2]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[1]),
        .O(esc_ctrl_axi_if_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_axi_if_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1_n_0),
        .D(esc_start_sync_i_n_1),
        .Q(dl_status_reg),
        .R(esc_ctrl_all_sm_reg_1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_lane_sm_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1_n_0),
        .D(esc_start_sync_i_n_2),
        .Q(out),
        .R(esc_ctrl_all_sm_reg_1));
  FDRE #(
    .INIT(1'b0)) 
    esc_ctrl_t_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_27),
        .Q(esc_ctrl_i),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_75 esc_start_sync_i
       (.Q(dl_tx_state[2:0]),
        .dl0_txclkesc(dl0_txclkesc),
        .dl_status_reg(dl_status_reg),
        .esc_ctrl_all_sm_reg(esc_ctrl_all_sm_reg_0),
        .esc_ctrl_axi_if_reg(init_done_sync_i_n_5),
        .esc_ctrl_lane_sm_reg(out),
        .esc_start_i(esc_start_i),
        .out(esc_start_sync),
        .s_level_out_d3_reg_0(esc_start_sync_i_n_1),
        .s_level_out_d3_reg_1(esc_start_sync_i_n_2),
        .s_level_out_d3_reg_2(esc_start_sync_i_n_3));
  LUT4 #(
    .INIT(16'h1004)) 
    esc_stopstate_i_1
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[1]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[3]),
        .O(esc_stopstate_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_stopstate_reg
       (.C(dl0_txclkesc),
        .CE(esc_stopstate_i_1_n_0),
        .D(init_done_sync_i_n_30),
        .Q(esc_stopstate_reg_0),
        .R(esc_ctrl_all_sm_reg_1));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_76 init_done_sync_i
       (.D({init_done_sync_i_n_1,init_done_sync_i_n_2,init_done_sync_i_n_3,init_done_sync_i_n_4}),
        .E(init_done_sync_i_n_6),
        .\FSM_sequential_dl_tx_state_reg[0] (\FSM_sequential_dl_tx_state[0]_i_3_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[1] (init_done_sync_i_n_18),
        .\FSM_sequential_dl_tx_state_reg[1]_0 (init_done_sync_i_n_30),
        .\FSM_sequential_dl_tx_state_reg[2] (init_done_sync_i_n_7),
        .\FSM_sequential_dl_tx_state_reg[2]_0 ({init_done_sync_i_n_16,bit_cnt[0]}),
        .\FSM_sequential_dl_tx_state_reg[2]_1 (\FSM_sequential_dl_tx_state[2]_i_2_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[2]_2 ({\txtriggeresc_r_reg_n_0_[3] ,p_0_in,p_2_in,\txtriggeresc_r_reg_n_0_[0] }),
        .\FSM_sequential_dl_tx_state_reg[2]_3 ({\bit_cnt_reg_n_0_[3] ,\bit_cnt_reg_n_0_[2] ,\bit_cnt_reg_n_0_[1] ,\bit_cnt_reg_n_0_[0] }),
        .\FSM_sequential_dl_tx_state_reg[3] (\FSM_sequential_dl_tx_state[3]_i_6_n_0 ),
        .Q(dl_tx_state),
        .\bit_cnt_reg[0] (\bit_cnt[3]_i_5_n_0 ),
        .\bit_cnt_reg[0]_0 (\bit_cnt[3]_i_6_n_0 ),
        .\bit_cnt_reg[3] (\bit_cnt[3]_i_12_n_0 ),
        .\bit_cnt_reg[3]_0 (\bit_cnt[3]_i_7_n_0 ),
        .\bit_cnt_reg[3]_1 (\bit_cnt[3]_i_8_n_0 ),
        .dl0_txclkesc(dl0_txclkesc),
        .dl0_txdataesc(dl0_txdataesc),
        .dl0_txlpdtesc(dl0_txlpdtesc),
        .dl0_txlpdtesc_0(init_done_sync_i_n_26),
        .dl0_txrequestesc(dl0_txrequestesc),
        .dl0_txtriggeresc(dl0_txtriggeresc),
        .\dl0_txtriggeresc[2] (init_done_sync_i_n_24),
        .\dl0_txtriggeresc[3] ({init_done_sync_i_n_20,init_done_sync_i_n_21,init_done_sync_i_n_22,init_done_sync_i_n_23}),
        .dl0_txulpsesc(dl0_txulpsesc),
        .dl0_txulpsesc_0(init_done_sync_i_n_25),
        .dl0_txulpsexit(dl0_txulpsexit),
        .dl0_txvalidesc(dl0_txvalidesc),
        .dl0_txvalidesc_0(init_done_sync_i_n_0),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl_txreadyesc_reg(dl_txreadyesc_i_2_n_0),
        .dl_txreadyesc_reg_0(dl_txreadyesc_reg_0),
        .dl_ulpsactivenot_reg(dl_ulpsactivenot_i_3_n_0),
        .\esc_cmd_data_reg[3] (\esc_cmd_data[7]_i_5_n_0 ),
        .\esc_cmd_data_reg[3]_0 (\esc_cmd_data[7]_i_4_n_0 ),
        .\esc_cmd_data_reg[6] ({data0,\esc_cmd_data_reg_n_0_[0] }),
        .esc_ctrl_i(esc_ctrl_i),
        .esc_ctrl_t_reg(init_done_sync_i_n_27),
        .esc_ctrl_t_reg_0(txlpdtesc_r_reg_0),
        .esc_ctrl_t_reg_1(s_level_out_d3_reg),
        .out(esc_start_sync),
        .s_level_out_d1_cdc_to_reg_0(s_level_out_d1_cdc_to_reg),
        .tx_dl_lp_dn_esc_i(tx_dl_lp_dn_esc_i),
        .tx_dl_lp_dn_reg(init_done_sync_i_n_29),
        .tx_dl_lp_dn_reg_0(tx_dl_lp_dn_i_6_n_0),
        .tx_dl_lp_dn_reg_1(tx_dl_lp_dn_i_10_n_0),
        .tx_dl_lp_dn_reg_2(tx_dl_lp_dn_i_12_n_0),
        .tx_dl_lp_dp_esc_i(tx_dl_lp_dp_esc_i),
        .tx_dl_lp_dp_reg(init_done_sync_i_n_28),
        .tx_dl_lp_dp_reg_0(tx_dl_lp_dp_i_6__0_n_0),
        .tx_dl_lp_dp_reg_1(esc_ctrl_all_sm_reg_1),
        .txlpdtesc_r(txlpdtesc_r),
        .\txtriggeresc_r_reg[0] (init_done_sync_i_n_5),
        .\txtriggeresc_r_reg[2] ({init_done_sync_i_n_8,init_done_sync_i_n_9,init_done_sync_i_n_10,init_done_sync_i_n_11,init_done_sync_i_n_12,init_done_sync_i_n_13,init_done_sync_i_n_14,init_done_sync_i_n_15}),
        .txulpsesc_r(txulpsesc_r),
        .txulpsesc_r_reg(init_done_sync_i_n_19),
        .txulpsesc_r_reg_0(dl_txreadyesc_i_3_n_0));
  LUT4 #(
    .INIT(16'hBBB8)) 
    tx_dl0_lp_dn_INST_0
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(esc_ctrl_i),
        .I2(hs_xfer_done_i),
        .I3(tx_dl_lp_dn_hs_i),
        .O(tx_dl0_lp_dn));
  LUT4 #(
    .INIT(16'hBBB8)) 
    tx_dl0_lp_dp_INST_0
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(esc_ctrl_i),
        .I2(tx_dl_lp_dp_hs_i),
        .I3(hs_xfer_done_i),
        .O(tx_dl0_lp_dp));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'h47)) 
    tx_dl_lp_dn_i_10
       (.I0(dl_tx_state[3]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[1]),
        .O(tx_dl_lp_dn_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hBE)) 
    tx_dl_lp_dn_i_12
       (.I0(\esc_cmd_data_reg_n_0_[0] ),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(tx_dl_lp_dp_esc_i),
        .O(tx_dl_lp_dn_i_12_n_0));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    tx_dl_lp_dn_i_6
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(tx_dl_lp_dp_esc_i),
        .O(tx_dl_lp_dn_i_6_n_0));
  FDRE tx_dl_lp_dn_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_29),
        .Q(tx_dl_lp_dn_esc_i),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h6F)) 
    tx_dl_lp_dp_i_6__0
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .I2(\esc_cmd_data_reg_n_0_[0] ),
        .O(tx_dl_lp_dp_i_6__0_n_0));
  FDRE tx_dl_lp_dp_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_28),
        .Q(tx_dl_lp_dp_esc_i),
        .R(1'b0));
  FDRE txlpdtesc_r_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_26),
        .Q(txlpdtesc_r),
        .R(txlpdtesc_r_reg_0));
  FDRE \txtriggeresc_r_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_24),
        .D(init_done_sync_i_n_23),
        .Q(\txtriggeresc_r_reg_n_0_[0] ),
        .R(txlpdtesc_r_reg_0));
  FDRE \txtriggeresc_r_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_24),
        .D(init_done_sync_i_n_22),
        .Q(p_2_in),
        .R(txlpdtesc_r_reg_0));
  FDRE \txtriggeresc_r_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_24),
        .D(init_done_sync_i_n_21),
        .Q(p_0_in),
        .R(txlpdtesc_r_reg_0));
  FDRE \txtriggeresc_r_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_24),
        .D(init_done_sync_i_n_20),
        .Q(\txtriggeresc_r_reg_n_0_[3] ),
        .R(txlpdtesc_r_reg_0));
  FDRE txulpsesc_r_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_25),
        .Q(txulpsesc_r),
        .R(txlpdtesc_r_reg_0));
endmodule

(* BYTE_UI_LOCAL = "8" *) (* C_CLK_POST_VAL = "112" *) (* C_CLK_PREPARE_VAL = "95" *) 
(* C_CLK_PRE_VAL = "8" *) (* C_CLK_TRAIL_VAL = "60" *) (* C_CLK_ZERO_VAL = "205" *) 
(* C_DPHY_LANES = "4" *) (* C_DPHY_MODE = "MASTER" *) (* C_EN_DEBUG_REGS = "0" *) 
(* C_EN_HS_OBUFTDS = "FALSE" *) (* C_EN_REGISTER = "1" *) (* C_EN_TIMEOUT_REGS = "0" *) 
(* C_ESC_CLK_PERIOD = "50.000000" *) (* C_ESC_TIMEOUT = "25600" *) (* C_HS_EXIT_VAL = "100" *) 
(* C_HS_LINE_RATE = "1000" *) (* C_HS_PREPARE_VAL = "91" *) (* C_HS_TRAIL_VAL = "64" *) 
(* C_HS_TX_TIMEOUT = "65541" *) (* C_HS_ZERO_VAL = "111" *) (* C_INIT = "1000000" *) 
(* C_IS_7SERIES = "TRUE" *) (* C_LPX_PERIOD = "50" *) (* C_STABLE_CLK_PERIOD = "5.000000" *) 
(* C_USE_LANE0_TXREADYHS = "TRUE" *) (* C_WAKEUP = "1000000" *) (* C_XMIT_ALT_DESKEW_SEQ = "false" *) 
(* C_XMIT_FIRST_DESKEW_SEQ = "false" *) (* C_XMIT_PERIODIC_DESKEW_SEQ = "false" *) (* DowngradeIPIdentifiedWarnings = "yes" *) 
(* IS_VERSAL = "0" *) (* LINE_RATE_SPEC_SWITCH = "1500" *) (* LP_STATE_CNT = "9" *) 
(* MTBF_SYNC_STAGES = "3" *) (* SKEW_CAL_FIRST_TIME = "4096" *) (* SKEW_CAL_PERIODIC_TIME = "128" *) 
(* SUPPORT_LEVEL = "1" *) (* UI = "1000" *) (* UI4 = "4" *) 
(* UI52 = "52" *) (* UI6 = "6" *) (* UI8 = "8" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_fab_top
   (tx_div4_clk,
    oserdes_clkdiv_in,
    config_div4_clk,
    dl_tst_clk_in,
    cl_tst_clk_in,
    core_clk,
    core_rst,
    core_ref_clk,
    system_rst_in,
    dphy_srst_out,
    dphy_en_out,
    system_rst_phybyteclk_in,
    system_rst_byteclk_in,
    system_rst_escclk_in,
    phy_rst,
    phy_ready,
    init_done,
    cl_txclkactivehs,
    cl_txrequesths,
    cl_stopstate,
    cl_enable,
    cl_txulpsclk,
    cl_txulpsexit,
    cl_ulpsactivenot,
    dl0_txbyteclkhs,
    dl0_txdatahs,
    dl0_txrequesths,
    dl0_txskewcalhs,
    dl0_txreadyhs,
    dl0_forcetxstopmode,
    dl0_stopstate,
    dl0_enable,
    dl0_txclkesc,
    dl0_txrequestesc,
    dl0_txlpdtesc,
    dl0_txulpsexit,
    dl0_ulpsactivenot,
    dl0_txulpsesc,
    dl0_txtriggeresc,
    dl0_txdataesc,
    dl0_txvalidesc,
    dl0_txreadyesc,
    dl1_txbyteclkhs,
    dl1_txdatahs,
    dl1_txrequesths,
    dl1_txskewcalhs,
    dl1_txreadyhs,
    dl1_forcetxstopmode,
    dl1_stopstate,
    dl1_enable,
    dl1_txclkesc,
    dl1_txrequestesc,
    dl1_txlpdtesc,
    dl1_txulpsexit,
    dl1_ulpsactivenot,
    dl1_txulpsesc,
    dl1_txtriggeresc,
    dl1_txdataesc,
    dl1_txvalidesc,
    dl1_txreadyesc,
    dl2_txbyteclkhs,
    dl2_txdatahs,
    dl2_txrequesths,
    dl2_txskewcalhs,
    dl2_txreadyhs,
    dl2_forcetxstopmode,
    dl2_stopstate,
    dl2_enable,
    dl2_txclkesc,
    dl2_txrequestesc,
    dl2_txlpdtesc,
    dl2_txulpsexit,
    dl2_ulpsactivenot,
    dl2_txulpsesc,
    dl2_txtriggeresc,
    dl2_txdataesc,
    dl2_txvalidesc,
    dl2_txreadyesc,
    dl3_txbyteclkhs,
    dl3_txdatahs,
    dl3_txrequesths,
    dl3_txskewcalhs,
    dl3_txreadyhs,
    dl3_forcetxstopmode,
    dl3_stopstate,
    dl3_enable,
    dl3_txclkesc,
    dl3_txrequestesc,
    dl3_txlpdtesc,
    dl3_txulpsexit,
    dl3_ulpsactivenot,
    dl3_txulpsesc,
    dl3_txtriggeresc,
    dl3_txdataesc,
    dl3_txvalidesc,
    dl3_txreadyesc,
    dl4_txbyteclkhs,
    dl4_txdatahs,
    dl4_txrequesths,
    dl4_txskewcalhs,
    dl4_txreadyhs,
    dl4_forcetxstopmode,
    dl4_stopstate,
    dl4_enable,
    dl4_txclkesc,
    dl4_txrequestesc,
    dl4_txlpdtesc,
    dl4_txulpsexit,
    dl4_ulpsactivenot,
    dl4_txulpsesc,
    dl4_txtriggeresc,
    dl4_txdataesc,
    dl4_txvalidesc,
    dl4_txreadyesc,
    dl5_txbyteclkhs,
    dl5_txdatahs,
    dl5_txrequesths,
    dl5_txskewcalhs,
    dl5_txreadyhs,
    dl5_forcetxstopmode,
    dl5_stopstate,
    dl5_enable,
    dl5_txclkesc,
    dl5_txrequestesc,
    dl5_txlpdtesc,
    dl5_txulpsexit,
    dl5_ulpsactivenot,
    dl5_txulpsesc,
    dl5_txtriggeresc,
    dl5_txdataesc,
    dl5_txvalidesc,
    dl5_txreadyesc,
    dl6_txbyteclkhs,
    dl6_txdatahs,
    dl6_txrequesths,
    dl6_txskewcalhs,
    dl6_txreadyhs,
    dl6_forcetxstopmode,
    dl6_stopstate,
    dl6_enable,
    dl6_txclkesc,
    dl6_txrequestesc,
    dl6_txlpdtesc,
    dl6_txulpsexit,
    dl6_ulpsactivenot,
    dl6_txulpsesc,
    dl6_txtriggeresc,
    dl6_txdataesc,
    dl6_txvalidesc,
    dl6_txreadyesc,
    dl7_txbyteclkhs,
    dl7_txdatahs,
    dl7_txrequesths,
    dl7_txskewcalhs,
    dl7_txreadyhs,
    dl7_forcetxstopmode,
    dl7_stopstate,
    dl7_enable,
    dl7_txclkesc,
    dl7_txrequestesc,
    dl7_txlpdtesc,
    dl7_txulpsexit,
    dl7_ulpsactivenot,
    dl7_txulpsesc,
    dl7_txtriggeresc,
    dl7_txdataesc,
    dl7_txvalidesc,
    dl7_txreadyesc,
    tx_hs_clk_p,
    tx_cl_lp_cp,
    tx_cl_lp_cn,
    tx_cl_en_lp_tst,
    tx_cl_en_hs_tst,
    tx_dl0_hs_dp,
    tx_dl0_lp_dp,
    tx_dl0_lp_dn,
    tx_dl0_en_lp_tst,
    tx_dl0_en_hs_tst,
    tx_dl1_hs_dp,
    tx_dl1_lp_dp,
    tx_dl1_lp_dn,
    tx_dl1_en_lp_tst,
    tx_dl1_en_hs_tst,
    tx_dl2_hs_dp,
    tx_dl2_lp_dp,
    tx_dl2_lp_dn,
    tx_dl2_en_lp_tst,
    tx_dl2_en_hs_tst,
    tx_dl3_hs_dp,
    tx_dl3_lp_dp,
    tx_dl3_lp_dn,
    tx_dl3_en_lp_tst,
    tx_dl3_en_hs_tst,
    tx_dl4_hs_dp,
    tx_dl4_lp_dp,
    tx_dl4_lp_dn,
    tx_dl4_en_lp_tst,
    tx_dl4_en_hs_tst,
    tx_dl5_hs_dp,
    tx_dl5_lp_dp,
    tx_dl5_lp_dn,
    tx_dl5_en_lp_tst,
    tx_dl5_en_hs_tst,
    tx_dl6_hs_dp,
    tx_dl6_lp_dp,
    tx_dl6_lp_dn,
    tx_dl6_en_lp_tst,
    tx_dl6_en_hs_tst,
    tx_dl7_hs_dp,
    tx_dl7_lp_dp,
    tx_dl7_lp_dn,
    tx_dl7_en_lp_tst,
    tx_dl7_en_hs_tst,
    active_lanes_in,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awready,
    s_axi_awvalid,
    s_axi_araddr,
    s_axi_arready,
    s_axi_arvalid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wready,
    s_axi_wvalid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rready,
    s_axi_rvalid,
    s_axi_bresp,
    s_axi_bready,
    s_axi_bvalid);
  input tx_div4_clk;
  input oserdes_clkdiv_in;
  input config_div4_clk;
  input dl_tst_clk_in;
  input cl_tst_clk_in;
  input core_clk;
  input core_rst;
  output core_ref_clk;
  input system_rst_in;
  output dphy_srst_out;
  output dphy_en_out;
  input system_rst_phybyteclk_in;
  input system_rst_byteclk_in;
  input system_rst_escclk_in;
  output phy_rst;
  input phy_ready;
  output init_done;
  output cl_txclkactivehs;
  input cl_txrequesths;
  output cl_stopstate;
  input cl_enable;
  input cl_txulpsclk;
  input cl_txulpsexit;
  output cl_ulpsactivenot;
  output dl0_txbyteclkhs;
  input [7:0]dl0_txdatahs;
  input dl0_txrequesths;
  input dl0_txskewcalhs;
  output dl0_txreadyhs;
  input dl0_forcetxstopmode;
  output dl0_stopstate;
  input dl0_enable;
  input dl0_txclkesc;
  input dl0_txrequestesc;
  input dl0_txlpdtesc;
  input dl0_txulpsexit;
  output dl0_ulpsactivenot;
  input dl0_txulpsesc;
  input [3:0]dl0_txtriggeresc;
  input [7:0]dl0_txdataesc;
  input dl0_txvalidesc;
  output dl0_txreadyesc;
  output dl1_txbyteclkhs;
  input [7:0]dl1_txdatahs;
  input dl1_txrequesths;
  input dl1_txskewcalhs;
  output dl1_txreadyhs;
  input dl1_forcetxstopmode;
  output dl1_stopstate;
  input dl1_enable;
  input dl1_txclkesc;
  input dl1_txrequestesc;
  input dl1_txlpdtesc;
  input dl1_txulpsexit;
  output dl1_ulpsactivenot;
  input dl1_txulpsesc;
  input [3:0]dl1_txtriggeresc;
  input [7:0]dl1_txdataesc;
  input dl1_txvalidesc;
  output dl1_txreadyesc;
  output dl2_txbyteclkhs;
  input [7:0]dl2_txdatahs;
  input dl2_txrequesths;
  input dl2_txskewcalhs;
  output dl2_txreadyhs;
  input dl2_forcetxstopmode;
  output dl2_stopstate;
  input dl2_enable;
  input dl2_txclkesc;
  input dl2_txrequestesc;
  input dl2_txlpdtesc;
  input dl2_txulpsexit;
  output dl2_ulpsactivenot;
  input dl2_txulpsesc;
  input [3:0]dl2_txtriggeresc;
  input [7:0]dl2_txdataesc;
  input dl2_txvalidesc;
  output dl2_txreadyesc;
  output dl3_txbyteclkhs;
  input [7:0]dl3_txdatahs;
  input dl3_txrequesths;
  input dl3_txskewcalhs;
  output dl3_txreadyhs;
  input dl3_forcetxstopmode;
  output dl3_stopstate;
  input dl3_enable;
  input dl3_txclkesc;
  input dl3_txrequestesc;
  input dl3_txlpdtesc;
  input dl3_txulpsexit;
  output dl3_ulpsactivenot;
  input dl3_txulpsesc;
  input [3:0]dl3_txtriggeresc;
  input [7:0]dl3_txdataesc;
  input dl3_txvalidesc;
  output dl3_txreadyesc;
  output dl4_txbyteclkhs;
  input [7:0]dl4_txdatahs;
  input dl4_txrequesths;
  input dl4_txskewcalhs;
  output dl4_txreadyhs;
  input dl4_forcetxstopmode;
  output dl4_stopstate;
  input dl4_enable;
  input dl4_txclkesc;
  input dl4_txrequestesc;
  input dl4_txlpdtesc;
  input dl4_txulpsexit;
  output dl4_ulpsactivenot;
  input dl4_txulpsesc;
  input [3:0]dl4_txtriggeresc;
  input [7:0]dl4_txdataesc;
  input dl4_txvalidesc;
  output dl4_txreadyesc;
  output dl5_txbyteclkhs;
  input [7:0]dl5_txdatahs;
  input dl5_txrequesths;
  input dl5_txskewcalhs;
  output dl5_txreadyhs;
  input dl5_forcetxstopmode;
  output dl5_stopstate;
  input dl5_enable;
  input dl5_txclkesc;
  input dl5_txrequestesc;
  input dl5_txlpdtesc;
  input dl5_txulpsexit;
  output dl5_ulpsactivenot;
  input dl5_txulpsesc;
  input [3:0]dl5_txtriggeresc;
  input [7:0]dl5_txdataesc;
  input dl5_txvalidesc;
  output dl5_txreadyesc;
  output dl6_txbyteclkhs;
  input [7:0]dl6_txdatahs;
  input dl6_txrequesths;
  input dl6_txskewcalhs;
  output dl6_txreadyhs;
  input dl6_forcetxstopmode;
  output dl6_stopstate;
  input dl6_enable;
  input dl6_txclkesc;
  input dl6_txrequestesc;
  input dl6_txlpdtesc;
  input dl6_txulpsexit;
  output dl6_ulpsactivenot;
  input dl6_txulpsesc;
  input [3:0]dl6_txtriggeresc;
  input [7:0]dl6_txdataesc;
  input dl6_txvalidesc;
  output dl6_txreadyesc;
  output dl7_txbyteclkhs;
  input [7:0]dl7_txdatahs;
  input dl7_txrequesths;
  input dl7_txskewcalhs;
  output dl7_txreadyhs;
  input dl7_forcetxstopmode;
  output dl7_stopstate;
  input dl7_enable;
  input dl7_txclkesc;
  input dl7_txrequestesc;
  input dl7_txlpdtesc;
  input dl7_txulpsexit;
  output dl7_ulpsactivenot;
  input dl7_txulpsesc;
  input [3:0]dl7_txtriggeresc;
  input [7:0]dl7_txdataesc;
  input dl7_txvalidesc;
  output dl7_txreadyesc;
  output [7:0]tx_hs_clk_p;
  output tx_cl_lp_cp;
  output tx_cl_lp_cn;
  output tx_cl_en_lp_tst;
  output tx_cl_en_hs_tst;
  output [7:0]tx_dl0_hs_dp;
  output tx_dl0_lp_dp;
  output tx_dl0_lp_dn;
  output tx_dl0_en_lp_tst;
  output tx_dl0_en_hs_tst;
  output [7:0]tx_dl1_hs_dp;
  output tx_dl1_lp_dp;
  output tx_dl1_lp_dn;
  output tx_dl1_en_lp_tst;
  output tx_dl1_en_hs_tst;
  output [7:0]tx_dl2_hs_dp;
  output tx_dl2_lp_dp;
  output tx_dl2_lp_dn;
  output tx_dl2_en_lp_tst;
  output tx_dl2_en_hs_tst;
  output [7:0]tx_dl3_hs_dp;
  output tx_dl3_lp_dp;
  output tx_dl3_lp_dn;
  output tx_dl3_en_lp_tst;
  output tx_dl3_en_hs_tst;
  output [7:0]tx_dl4_hs_dp;
  output tx_dl4_lp_dp;
  output tx_dl4_lp_dn;
  output tx_dl4_en_lp_tst;
  output tx_dl4_en_hs_tst;
  output [7:0]tx_dl5_hs_dp;
  output tx_dl5_lp_dp;
  output tx_dl5_lp_dn;
  output tx_dl5_en_lp_tst;
  output tx_dl5_en_hs_tst;
  output [7:0]tx_dl6_hs_dp;
  output tx_dl6_lp_dp;
  output tx_dl6_lp_dn;
  output tx_dl6_en_lp_tst;
  output tx_dl6_en_hs_tst;
  output [7:0]tx_dl7_hs_dp;
  output tx_dl7_lp_dp;
  output tx_dl7_lp_dn;
  output tx_dl7_en_lp_tst;
  output tx_dl7_en_hs_tst;
  input [7:0]active_lanes_in;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [6:0]s_axi_awaddr;
  output s_axi_awready;
  input s_axi_awvalid;
  input [6:0]s_axi_araddr;
  output s_axi_arready;
  input s_axi_arvalid;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  output s_axi_wready;
  input s_axi_wvalid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  input s_axi_rready;
  output s_axi_rvalid;
  output [1:0]s_axi_bresp;
  input s_axi_bready;
  output s_axi_bvalid;

  wire \<const0> ;
  wire cl_enable;
  wire cl_init_done_coreclk_i;
  wire cl_init_done_escclk_sync_i;
  wire [4:0]cl_status_reg_w;
  wire cl_stopstate;
  wire cl_txclkactivehs;
  wire cl_txclkactivehs_i;
  wire cl_txrequesths;
  wire cl_txrequesths_coreclk_sync;
  wire cl_txulpsclk;
  wire cl_txulpsexit;
  wire cl_ulpsactivenot;
  wire core_clk;
  wire core_rst;
  wire dl0_enable;
  wire dl0_forcetxstopmode;
  wire dl0_stopstate;
  wire dl0_txclkesc;
  wire [7:0]dl0_txdataesc;
  wire [7:0]dl0_txdatahs;
  wire dl0_txlpdtesc;
  wire dl0_txreadyesc;
  wire dl0_txreadyhs;
  wire dl0_txrequestesc;
  wire dl0_txrequesths;
  wire [3:0]dl0_txtriggeresc;
  wire dl0_txulpsesc;
  wire dl0_txulpsexit;
  wire dl0_txvalidesc;
  wire dl0_ulpsactivenot;
  wire dl1_enable;
  wire dl1_forcetxstopmode;
  wire dl1_stopstate;
  wire [7:0]dl1_txdataesc;
  wire [7:0]dl1_txdatahs;
  wire dl1_txlpdtesc;
  wire dl1_txreadyesc;
  wire dl1_txreadyhs;
  wire dl1_txrequestesc;
  wire dl1_txrequesths;
  wire [3:0]dl1_txtriggeresc;
  wire dl1_txulpsesc;
  wire dl1_txulpsexit;
  wire dl1_txvalidesc;
  wire dl1_ulpsactivenot;
  wire dl2_enable;
  wire dl2_forcetxstopmode;
  wire dl2_stopstate;
  wire [7:0]dl2_txdataesc;
  wire [7:0]dl2_txdatahs;
  wire dl2_txlpdtesc;
  wire dl2_txreadyesc;
  wire dl2_txreadyhs;
  wire dl2_txrequestesc;
  wire dl2_txrequesths;
  wire [3:0]dl2_txtriggeresc;
  wire dl2_txulpsesc;
  wire dl2_txulpsexit;
  wire dl2_txvalidesc;
  wire dl2_ulpsactivenot;
  wire dl3_enable;
  wire dl3_forcetxstopmode;
  wire dl3_stopstate;
  wire [7:0]dl3_txdataesc;
  wire [7:0]dl3_txdatahs;
  wire dl3_txlpdtesc;
  wire dl3_txreadyesc;
  wire dl3_txreadyhs;
  wire dl3_txrequestesc;
  wire dl3_txrequesths;
  wire [3:0]dl3_txtriggeresc;
  wire dl3_txulpsesc;
  wire dl3_txulpsexit;
  wire dl3_txvalidesc;
  wire dl3_ulpsactivenot;
  wire [3:0]dl_hs_exit_done_i;
  wire [15:0]dl_pkt_cnt_0;
  wire [15:0]dl_pkt_cnt_16;
  wire [15:0]dl_pkt_cnt_32;
  wire [15:0]dl_pkt_cnt_48;
  wire [27:0]dl_status_reg;
  wire dphy_en_out;
  wire dphy_srst_out;
  wire \en_regs.gen_regs_wo_debug_wo_timeout.tx_dphy_reg_inst_n_15 ;
  wire \en_rst_logic.system_rst_byteclk90_sync_i_n_1 ;
  wire \en_rst_logic.system_rst_byteclk_sync_i_n_1 ;
  wire \en_rst_logic.system_rst_escclk_sync_i_n_1 ;
  wire \en_rst_logic.system_rst_escclk_sync_i_n_2 ;
  wire \en_rst_logic.system_rst_escclk_sync_i_n_3 ;
  wire \en_rst_logic.system_rst_escclk_sync_i_n_4 ;
  wire esc_active_all;
  wire esc_active_all_sync_i_n_0;
  wire [3:0]esc_ctrl_all_sm_c;
  wire \gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_0 ;
  wire \gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_17 ;
  wire \gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_18 ;
  wire \gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_19 ;
  wire \gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_20 ;
  wire \gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_21 ;
  wire \gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_22 ;
  wire \gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_23 ;
  wire \gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_24 ;
  wire \gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_25 ;
  wire \gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_26 ;
  wire \gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_27 ;
  wire \gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_28 ;
  wire \gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_29 ;
  wire \gen_tx_data_lane[0].u_tx_data_lane_n_16 ;
  wire \gen_tx_data_lane[0].u_tx_data_lane_n_17 ;
  wire \gen_tx_data_lane[0].u_tx_data_lane_n_18 ;
  wire \gen_tx_data_lane[1].u_tx_data_lane_n_30 ;
  wire \gen_tx_data_lane[1].u_tx_data_lane_n_31 ;
  wire \gen_tx_data_lane[2].u_tx_data_lane_n_31 ;
  wire \gen_tx_data_lane[2].u_tx_data_lane_n_32 ;
  wire hs_dp_sync_out_i_0;
  wire init_done;
  wire [19:8]init_value_cl;
  wire oserdes_clkdiv_in;
  wire s_axi_aclk;
  wire [6:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [6:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire start_clkpost_byteclk_sync;
  wire system_rst_byteclk90_t;
  wire system_rst_byteclk_in;
  wire system_rst_byteclk_t;
  wire system_rst_div4clk_t;
  wire system_rst_escclk_in;
  wire system_rst_escclk_t;
  wire system_rst_in;
  wire system_rst_phybyteclk_in;
  wire system_rst_t;
  wire time_out_prepare_i_21_n_0;
  wire time_out_prepare_i_42_n_0;
  wire time_out_prepare_i_43_n_0;
  wire time_out_prepare_i_44_n_0;
  wire time_out_prepare_i_45_n_0;
  wire time_out_prepare_i_46_n_0;
  wire time_out_prepare_i_47_n_0;
  wire time_out_prepare_i_48_n_0;
  wire time_out_prepare_i_68_n_0;
  wire time_out_prepare_i_69_n_0;
  wire time_out_prepare_i_70_n_0;
  wire time_out_prepare_i_72_n_0;
  wire time_out_prepare_i_73_n_0;
  wire time_out_prepare_i_74_n_0;
  wire time_out_prepare_i_93_n_0;
  wire time_out_prepare_i_94_n_0;
  wire time_out_prepare_i_95_n_0;
  wire time_out_prepare_i_96_n_0;
  wire time_out_prepare_i_97_n_0;
  wire time_out_prepare_reg_i_14_n_7;
  wire time_out_prepare_reg_i_20_n_0;
  wire time_out_prepare_reg_i_20_n_1;
  wire time_out_prepare_reg_i_20_n_2;
  wire time_out_prepare_reg_i_20_n_3;
  wire time_out_prepare_reg_i_20_n_4;
  wire time_out_prepare_reg_i_20_n_5;
  wire time_out_prepare_reg_i_20_n_6;
  wire time_out_prepare_reg_i_20_n_7;
  wire time_out_prepare_reg_i_41_n_0;
  wire time_out_prepare_reg_i_41_n_1;
  wire time_out_prepare_reg_i_41_n_2;
  wire time_out_prepare_reg_i_41_n_3;
  wire time_out_prepare_reg_i_41_n_4;
  wire time_out_prepare_reg_i_41_n_5;
  wire time_out_prepare_reg_i_41_n_6;
  wire time_out_prepare_reg_i_41_n_7;
  wire time_out_prepare_reg_i_49_n_0;
  wire time_out_prepare_reg_i_49_n_2;
  wire time_out_prepare_reg_i_49_n_3;
  wire time_out_prepare_reg_i_49_n_5;
  wire time_out_prepare_reg_i_49_n_6;
  wire time_out_prepare_reg_i_49_n_7;
  wire time_out_prepare_reg_i_71_n_0;
  wire time_out_prepare_reg_i_71_n_1;
  wire time_out_prepare_reg_i_71_n_2;
  wire time_out_prepare_reg_i_71_n_3;
  wire time_out_prepare_reg_i_71_n_4;
  wire time_out_prepare_reg_i_71_n_5;
  wire time_out_prepare_reg_i_71_n_6;
  wire time_out_prepare_reg_i_71_n_7;
  wire [3:0]timeout_hsexit;
  wire timeout_hsexit_all;
  wire timeout_zero_out_i_0;
  wire \trail_count[9]_i_122_n_0 ;
  wire \trail_count[9]_i_123_n_0 ;
  wire \trail_count[9]_i_124_n_0 ;
  wire \trail_count[9]_i_125_n_0 ;
  wire \trail_count[9]_i_126_n_0 ;
  wire \trail_count[9]_i_127_n_0 ;
  wire \trail_count[9]_i_128_n_0 ;
  wire \trail_count[9]_i_129_n_0 ;
  wire \trail_count[9]_i_130_n_0 ;
  wire \trail_count[9]_i_131_n_0 ;
  wire \trail_count[9]_i_132_n_0 ;
  wire \trail_count[9]_i_133_n_0 ;
  wire \trail_count[9]_i_134_n_0 ;
  wire \trail_count[9]_i_135_n_0 ;
  wire \trail_count[9]_i_136_n_0 ;
  wire \trail_count[9]_i_29_n_0 ;
  wire \trail_count[9]_i_30_n_0 ;
  wire \trail_count[9]_i_31_n_0 ;
  wire \trail_count[9]_i_32_n_0 ;
  wire \trail_count[9]_i_33_n_0 ;
  wire \trail_count[9]_i_34_n_0 ;
  wire \trail_count[9]_i_35_n_0 ;
  wire \trail_count[9]_i_58_n_0 ;
  wire \trail_count[9]_i_59_n_0 ;
  wire \trail_count[9]_i_60_n_0 ;
  wire \trail_count[9]_i_61_n_0 ;
  wire \trail_count[9]_i_62_n_0 ;
  wire \trail_count[9]_i_63_n_0 ;
  wire \trail_count[9]_i_64_n_0 ;
  wire \trail_count[9]_i_91_n_0 ;
  wire \trail_count[9]_i_92_n_0 ;
  wire \trail_count[9]_i_93_n_0 ;
  wire \trail_count[9]_i_96_n_0 ;
  wire \trail_count[9]_i_97_n_0 ;
  wire \trail_count[9]_i_98_n_0 ;
  wire \trail_count[9]_i_99_n_0 ;
  wire \trail_count_reg[9]_i_17_n_1 ;
  wire \trail_count_reg[9]_i_17_n_2 ;
  wire \trail_count_reg[9]_i_17_n_3 ;
  wire \trail_count_reg[9]_i_17_n_4 ;
  wire \trail_count_reg[9]_i_17_n_5 ;
  wire \trail_count_reg[9]_i_17_n_6 ;
  wire \trail_count_reg[9]_i_17_n_7 ;
  wire \trail_count_reg[9]_i_28_n_0 ;
  wire \trail_count_reg[9]_i_28_n_1 ;
  wire \trail_count_reg[9]_i_28_n_2 ;
  wire \trail_count_reg[9]_i_28_n_3 ;
  wire \trail_count_reg[9]_i_28_n_4 ;
  wire \trail_count_reg[9]_i_28_n_5 ;
  wire \trail_count_reg[9]_i_28_n_6 ;
  wire \trail_count_reg[9]_i_28_n_7 ;
  wire \trail_count_reg[9]_i_57_n_0 ;
  wire \trail_count_reg[9]_i_57_n_1 ;
  wire \trail_count_reg[9]_i_57_n_2 ;
  wire \trail_count_reg[9]_i_57_n_3 ;
  wire \trail_count_reg[9]_i_57_n_4 ;
  wire \trail_count_reg[9]_i_57_n_5 ;
  wire \trail_count_reg[9]_i_57_n_6 ;
  wire \trail_count_reg[9]_i_57_n_7 ;
  wire \trail_count_reg[9]_i_65_n_0 ;
  wire \trail_count_reg[9]_i_65_n_2 ;
  wire \trail_count_reg[9]_i_65_n_3 ;
  wire \trail_count_reg[9]_i_65_n_5 ;
  wire \trail_count_reg[9]_i_65_n_6 ;
  wire \trail_count_reg[9]_i_65_n_7 ;
  wire \trail_count_reg[9]_i_94_n_0 ;
  wire \trail_count_reg[9]_i_94_n_1 ;
  wire \trail_count_reg[9]_i_94_n_2 ;
  wire \trail_count_reg[9]_i_94_n_3 ;
  wire \trail_count_reg[9]_i_94_n_4 ;
  wire \trail_count_reg[9]_i_94_n_5 ;
  wire \trail_count_reg[9]_i_94_n_6 ;
  wire \trail_count_reg[9]_i_94_n_7 ;
  wire \trail_count_reg[9]_i_95_n_0 ;
  wire \trail_count_reg[9]_i_95_n_1 ;
  wire \trail_count_reg[9]_i_95_n_2 ;
  wire \trail_count_reg[9]_i_95_n_3 ;
  wire \trail_count_reg[9]_i_95_n_4 ;
  wire \trail_count_reg[9]_i_95_n_5 ;
  wire \trail_count_reg[9]_i_95_n_6 ;
  wire \trail_count_reg[9]_i_95_n_7 ;
  wire tx_cl_lp_cn;
  wire tx_cl_lp_cp;
  wire tx_div4_clk;
  wire [7:0]tx_dl0_hs_dp;
  wire tx_dl0_lp_dn;
  wire tx_dl0_lp_dp;
  wire [7:0]tx_dl1_hs_dp;
  wire tx_dl1_lp_dn;
  wire tx_dl1_lp_dp;
  wire [7:0]tx_dl2_hs_dp;
  wire tx_dl2_lp_dn;
  wire tx_dl2_lp_dp;
  wire [7:0]tx_dl3_hs_dp;
  wire tx_dl3_lp_dn;
  wire tx_dl3_lp_dp;
  wire [1:1]\^tx_hs_clk_p ;
  wire \u_tx_data_lane_sm/dl_tx_sm_state0__0 ;
  wire \u_tx_esc_datapath/dl_forcetxstopmode_sync ;
  wire \u_tx_esc_datapath/dl_forcetxstopmode_sync_0 ;
  wire \u_tx_esc_datapath/dl_forcetxstopmode_sync_1 ;
  wire \u_tx_esc_datapath/dl_forcetxstopmode_sync_2 ;
  wire u_tx_support_rst_logic_n_1;
  wire [3:0]NLW_time_out_prepare_reg_i_14_CO_UNCONNECTED;
  wire [3:1]NLW_time_out_prepare_reg_i_14_O_UNCONNECTED;
  wire [2:2]NLW_time_out_prepare_reg_i_49_CO_UNCONNECTED;
  wire [3:3]NLW_time_out_prepare_reg_i_49_O_UNCONNECTED;
  wire [3:3]\NLW_trail_count_reg[9]_i_17_CO_UNCONNECTED ;
  wire [2:2]\NLW_trail_count_reg[9]_i_65_CO_UNCONNECTED ;
  wire [3:3]\NLW_trail_count_reg[9]_i_65_O_UNCONNECTED ;

  assign core_ref_clk = \<const0> ;
  assign dl0_txbyteclkhs = \<const0> ;
  assign dl1_txbyteclkhs = \<const0> ;
  assign dl2_txbyteclkhs = \<const0> ;
  assign dl3_txbyteclkhs = \<const0> ;
  assign dl4_stopstate = \<const0> ;
  assign dl4_txbyteclkhs = \<const0> ;
  assign dl4_txreadyesc = \<const0> ;
  assign dl4_txreadyhs = \<const0> ;
  assign dl4_ulpsactivenot = \<const0> ;
  assign dl5_stopstate = \<const0> ;
  assign dl5_txbyteclkhs = \<const0> ;
  assign dl5_txreadyesc = \<const0> ;
  assign dl5_txreadyhs = \<const0> ;
  assign dl5_ulpsactivenot = \<const0> ;
  assign dl6_stopstate = \<const0> ;
  assign dl6_txbyteclkhs = \<const0> ;
  assign dl6_txreadyesc = \<const0> ;
  assign dl6_txreadyhs = \<const0> ;
  assign dl6_ulpsactivenot = \<const0> ;
  assign dl7_stopstate = \<const0> ;
  assign dl7_txbyteclkhs = \<const0> ;
  assign dl7_txreadyesc = \<const0> ;
  assign dl7_txreadyhs = \<const0> ;
  assign dl7_ulpsactivenot = \<const0> ;
  assign phy_rst = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign tx_cl_en_hs_tst = \<const0> ;
  assign tx_cl_en_lp_tst = \<const0> ;
  assign tx_dl0_en_hs_tst = \<const0> ;
  assign tx_dl0_en_lp_tst = \<const0> ;
  assign tx_dl1_en_hs_tst = \<const0> ;
  assign tx_dl1_en_lp_tst = \<const0> ;
  assign tx_dl2_en_hs_tst = \<const0> ;
  assign tx_dl2_en_lp_tst = \<const0> ;
  assign tx_dl3_en_hs_tst = \<const0> ;
  assign tx_dl3_en_lp_tst = \<const0> ;
  assign tx_dl4_en_hs_tst = \<const0> ;
  assign tx_dl4_en_lp_tst = \<const0> ;
  assign tx_dl4_hs_dp[7] = \<const0> ;
  assign tx_dl4_hs_dp[6] = \<const0> ;
  assign tx_dl4_hs_dp[5] = \<const0> ;
  assign tx_dl4_hs_dp[4] = \<const0> ;
  assign tx_dl4_hs_dp[3] = \<const0> ;
  assign tx_dl4_hs_dp[2] = \<const0> ;
  assign tx_dl4_hs_dp[1] = \<const0> ;
  assign tx_dl4_hs_dp[0] = \<const0> ;
  assign tx_dl4_lp_dn = \<const0> ;
  assign tx_dl4_lp_dp = \<const0> ;
  assign tx_dl5_en_hs_tst = \<const0> ;
  assign tx_dl5_en_lp_tst = \<const0> ;
  assign tx_dl5_hs_dp[7] = \<const0> ;
  assign tx_dl5_hs_dp[6] = \<const0> ;
  assign tx_dl5_hs_dp[5] = \<const0> ;
  assign tx_dl5_hs_dp[4] = \<const0> ;
  assign tx_dl5_hs_dp[3] = \<const0> ;
  assign tx_dl5_hs_dp[2] = \<const0> ;
  assign tx_dl5_hs_dp[1] = \<const0> ;
  assign tx_dl5_hs_dp[0] = \<const0> ;
  assign tx_dl5_lp_dn = \<const0> ;
  assign tx_dl5_lp_dp = \<const0> ;
  assign tx_dl6_en_hs_tst = \<const0> ;
  assign tx_dl6_en_lp_tst = \<const0> ;
  assign tx_dl6_hs_dp[7] = \<const0> ;
  assign tx_dl6_hs_dp[6] = \<const0> ;
  assign tx_dl6_hs_dp[5] = \<const0> ;
  assign tx_dl6_hs_dp[4] = \<const0> ;
  assign tx_dl6_hs_dp[3] = \<const0> ;
  assign tx_dl6_hs_dp[2] = \<const0> ;
  assign tx_dl6_hs_dp[1] = \<const0> ;
  assign tx_dl6_hs_dp[0] = \<const0> ;
  assign tx_dl6_lp_dn = \<const0> ;
  assign tx_dl6_lp_dp = \<const0> ;
  assign tx_dl7_en_hs_tst = \<const0> ;
  assign tx_dl7_en_lp_tst = \<const0> ;
  assign tx_dl7_hs_dp[7] = \<const0> ;
  assign tx_dl7_hs_dp[6] = \<const0> ;
  assign tx_dl7_hs_dp[5] = \<const0> ;
  assign tx_dl7_hs_dp[4] = \<const0> ;
  assign tx_dl7_hs_dp[3] = \<const0> ;
  assign tx_dl7_hs_dp[2] = \<const0> ;
  assign tx_dl7_hs_dp[1] = \<const0> ;
  assign tx_dl7_hs_dp[0] = \<const0> ;
  assign tx_dl7_lp_dn = \<const0> ;
  assign tx_dl7_lp_dp = \<const0> ;
  assign tx_hs_clk_p[7] = \<const0> ;
  assign tx_hs_clk_p[6] = \<const0> ;
  assign tx_hs_clk_p[5] = \<const0> ;
  assign tx_hs_clk_p[4] = \<const0> ;
  assign tx_hs_clk_p[3] = \<const0> ;
  assign tx_hs_clk_p[2] = \<const0> ;
  assign tx_hs_clk_p[1] = \^tx_hs_clk_p [1];
  assign tx_hs_clk_p[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_dphy_reg \en_regs.gen_regs_wo_debug_wo_timeout.tx_dphy_reg_inst 
       (.D(init_value_cl),
        .axi_bvalid_reg_0(s_axi_bvalid),
        .cl_status_reg_w(cl_status_reg_w),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_txclkesc(dl0_txclkesc),
        .dl_status_reg({dl_status_reg[27:26],dl_status_reg[23:19],dl_status_reg[16:12],dl_status_reg[9:5],dl_status_reg[2:0]}),
        .\gen_regs.gen_timeout_debug_regs.axi_rvalid_reg_0 (s_axi_rvalid),
        .oserdes_clkdiv_in(oserdes_clkdiv_in),
        .out({dphy_en_out,dphy_srst_out}),
        .pkt_cnt(dl_pkt_cnt_0),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr[6:2]),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr[6:2]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .\s_level_out_bus_d1_cdc_to_reg[15] (dl_pkt_cnt_16),
        .\s_level_out_bus_d1_cdc_to_reg[15]_0 (dl_pkt_cnt_32),
        .\s_level_out_bus_d1_cdc_to_reg[15]_1 (dl_pkt_cnt_48),
        .\s_level_out_bus_d3_reg[0] (system_rst_t),
        .\s_level_out_bus_d3_reg[1] (\en_regs.gen_regs_wo_debug_wo_timeout.tx_dphy_reg_inst_n_15 ),
        .tx_cl_lp_cn_r_reg(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_0 ),
        .tx_div4_clk(tx_div4_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized0 \en_rst_logic.system_rst_byteclk90_sync_i 
       (.clear(\en_rst_logic.system_rst_byteclk90_sync_i_n_1 ),
        .oserdes_clkdiv_in(oserdes_clkdiv_in),
        .out(system_rst_byteclk90_t),
        .\post_count_reg[0] (start_clkpost_byteclk_sync),
        .system_rst_byteclk_in(system_rst_byteclk_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized0_0 \en_rst_logic.system_rst_byteclk_sync_i 
       (.init_done(init_done),
        .out(system_rst_byteclk_t),
        .s_level_out_d3_reg_0(\en_rst_logic.system_rst_byteclk_sync_i_n_1 ),
        .system_rst_byteclk_in(system_rst_byteclk_in),
        .tx_div4_clk(tx_div4_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized0_1 \en_rst_logic.system_rst_escclk_sync_i 
       (.dl0_txclkesc(dl0_txclkesc),
        .esc_ctrl_all_sm_reg(\u_tx_esc_datapath/dl_forcetxstopmode_sync ),
        .esc_ctrl_all_sm_reg_0(\u_tx_esc_datapath/dl_forcetxstopmode_sync_0 ),
        .esc_ctrl_all_sm_reg_1(\u_tx_esc_datapath/dl_forcetxstopmode_sync_1 ),
        .esc_ctrl_all_sm_reg_2(\u_tx_esc_datapath/dl_forcetxstopmode_sync_2 ),
        .out(system_rst_escclk_t),
        .s_level_out_d3_reg_0(\en_rst_logic.system_rst_escclk_sync_i_n_1 ),
        .s_level_out_d3_reg_1(\en_rst_logic.system_rst_escclk_sync_i_n_2 ),
        .s_level_out_d3_reg_2(\en_rst_logic.system_rst_escclk_sync_i_n_3 ),
        .s_level_out_d3_reg_3(\en_rst_logic.system_rst_escclk_sync_i_n_4 ),
        .system_rst_escclk_in(system_rst_escclk_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized0_2 \en_rst_logic.system_rst_phybyteclk_sync_i 
       (.out(system_rst_div4clk_t),
        .system_rst_phybyteclk_in(system_rst_phybyteclk_in),
        .tx_div4_clk(tx_div4_clk));
  FDRE esc_active_all_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(\gen_tx_data_lane[1].u_tx_data_lane_n_30 ),
        .Q(esc_active_all),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized9 esc_active_all_sync_i
       (.core_clk(core_clk),
        .dl_hs_exit_done_i(dl_hs_exit_done_i),
        .in0(esc_active_all),
        .s_level_out_d2_reg_0(esc_active_all_sync_i_n_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_clk_lane_7series \gen_tx_clk_lane_7series.u_tx_clk_lane_7series 
       (.D(init_value_cl),
        .O({\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_17 ,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_18 ,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_19 ,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_20 }),
        .PREPARE_TIMEOUT1_0({\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_25 ,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_26 ,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_27 }),
        .PREPARE_TIMEOUT1_1({\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_28 ,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_29 }),
        .TRAIL_TIMEOUT1_0({\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_21 ,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_22 ,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_23 }),
        .TRAIL_TIMEOUT1_1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_24 ),
        .cl_enable(cl_enable),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_status_reg_w(cl_status_reg_w),
        .cl_stopstate(cl_stopstate),
        .cl_stopstate_reg_0(dphy_en_out),
        .\cl_tx_state[3]_i_2 (\gen_tx_data_lane[1].u_tx_data_lane_n_31 ),
        .\cl_tx_state_reg[0]_0 (u_tx_support_rst_logic_n_1),
        .cl_txclkactivehs(cl_txclkactivehs),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .cl_txclkactivehs_reg_i_3(\gen_tx_data_lane[2].u_tx_data_lane_n_32 ),
        .cl_txrequesths(cl_txrequesths),
        .cl_txrequesths_r2_reg_0(system_rst_byteclk90_t),
        .cl_txulpsclk(cl_txulpsclk),
        .cl_txulpsexit(cl_txulpsexit),
        .cl_ulpsactivenot(cl_ulpsactivenot),
        .clear(\en_rst_logic.system_rst_byteclk90_sync_i_n_1 ),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_hs_exit_done_i(dl_hs_exit_done_i),
        .init_done(init_done),
        .oserdes_clkdiv_in(oserdes_clkdiv_in),
        .out(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_0 ),
        .s_level_out_d3_reg(cl_txrequesths_coreclk_sync),
        .s_level_out_d3_reg_0(start_clkpost_byteclk_sync),
        .start_clkpost_r_reg_0(\gen_tx_data_lane[2].u_tx_data_lane_n_31 ),
        .start_clkzero_r_reg_0(system_rst_t),
        .time_out_prepare_i_10_0(time_out_prepare_reg_i_14_n_7),
        .time_out_prepare_reg_i_15_0({time_out_prepare_reg_i_20_n_4,time_out_prepare_reg_i_20_n_5,time_out_prepare_reg_i_20_n_6,time_out_prepare_reg_i_20_n_7}),
        .time_out_prepare_reg_i_22_0({time_out_prepare_reg_i_41_n_4,time_out_prepare_reg_i_41_n_5,time_out_prepare_reg_i_41_n_6,time_out_prepare_reg_i_41_n_7}),
        .time_out_prepare_reg_i_50_0(time_out_prepare_reg_i_71_n_7),
        .\trail_count[9]_i_11_0 ({\trail_count_reg[9]_i_17_n_4 ,\trail_count_reg[9]_i_17_n_5 ,\trail_count_reg[9]_i_17_n_6 ,\trail_count_reg[9]_i_17_n_7 }),
        .\trail_count_reg[9]_i_100_0 (\trail_count_reg[9]_i_94_n_7 ),
        .\trail_count_reg[9]_i_36_0 ({\trail_count_reg[9]_i_28_n_4 ,\trail_count_reg[9]_i_28_n_5 ,\trail_count_reg[9]_i_28_n_6 ,\trail_count_reg[9]_i_28_n_7 }),
        .\trail_count_reg[9]_i_66_0 ({\trail_count_reg[9]_i_57_n_4 ,\trail_count_reg[9]_i_57_n_5 ,\trail_count_reg[9]_i_57_n_6 ,\trail_count_reg[9]_i_57_n_7 }),
        .tx_cl_lp_cn(tx_cl_lp_cn),
        .tx_cl_lp_cn_r_reg_0(\en_regs.gen_regs_wo_debug_wo_timeout.tx_dphy_reg_inst_n_15 ),
        .tx_cl_lp_cp(tx_cl_lp_cp),
        .tx_div4_clk(tx_div4_clk),
        .tx_hs_clk_p(\^tx_hs_clk_p ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_data_lane \gen_tx_data_lane[0].u_tx_data_lane 
       (.\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg (dl0_txreadyhs),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_enable(dl0_enable),
        .dl0_forcetxstopmode(dl0_forcetxstopmode),
        .dl0_stopstate(dl0_stopstate),
        .dl0_txclkesc(dl0_txclkesc),
        .dl0_txdataesc(dl0_txdataesc),
        .dl0_txdatahs(dl0_txdatahs),
        .dl0_txlpdtesc(dl0_txlpdtesc),
        .dl0_txrequestesc(dl0_txrequestesc),
        .dl0_txrequesths(dl0_txrequesths),
        .dl0_txtriggeresc(dl0_txtriggeresc),
        .dl0_txulpsesc(dl0_txulpsesc),
        .dl0_txulpsexit(dl0_txulpsexit),
        .dl0_txvalidesc(dl0_txvalidesc),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl1_txrequesths(dl1_txrequesths),
        .dl1_txrequesths_0(\gen_tx_data_lane[0].u_tx_data_lane_n_16 ),
        .dl2_txrequesths(dl2_txrequesths),
        .dl2_txrequesths_0(\gen_tx_data_lane[0].u_tx_data_lane_n_17 ),
        .dl3_txrequesths(dl3_txrequesths),
        .dl3_txrequesths_0(\gen_tx_data_lane[0].u_tx_data_lane_n_18 ),
        .dl_status_reg({dl_status_reg[6:5],dl_status_reg[2:0]}),
        .dl_tx_sm_state0__0(\u_tx_data_lane_sm/dl_tx_sm_state0__0 ),
        .\dl_tx_sm_state[1]_i_4 (esc_active_all_sync_i_n_0),
        .dl_txreadyesc_reg(dl0_txreadyesc),
        .dl_txrequesths_r_reg_0(system_rst_byteclk_t),
        .en_hs_datapath_r_reg(system_rst_div4clk_t),
        .esc_ctrl_all_sm_reg(esc_ctrl_all_sm_c[0]),
        .esc_ctrl_all_sm_reg_0(\en_rst_logic.system_rst_escclk_sync_i_n_1 ),
        .out(dl_hs_exit_done_i[0]),
        .pkt_cnt(dl_pkt_cnt_0),
        .\pkt_cnt_reg[15]_0 (\en_rst_logic.system_rst_byteclk_sync_i_n_1 ),
        .s_level_out_d1_cdc_to_reg(cl_init_done_escclk_sync_i),
        .s_level_out_d3_reg(hs_dp_sync_out_i_0),
        .s_level_out_d3_reg_0(\u_tx_esc_datapath/dl_forcetxstopmode_sync ),
        .timeout_hsexit(timeout_hsexit[0]),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_zero_out_i_0(timeout_zero_out_i_0),
        .tx_div4_clk(tx_div4_clk),
        .tx_dl0_hs_dp(tx_dl0_hs_dp),
        .tx_dl0_lp_dn(tx_dl0_lp_dn),
        .tx_dl0_lp_dp(tx_dl0_lp_dp),
        .tx_dl_lp_dp_reg(system_rst_t),
        .txlpdtesc_r_reg(system_rst_escclk_t));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_data_lane_3 \gen_tx_data_lane[1].u_tx_data_lane 
       (.\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] (\gen_tx_data_lane[0].u_tx_data_lane_n_16 ),
        .\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg (dl1_txreadyhs),
        .\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] (system_rst_div4clk_t),
        .\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 (hs_dp_sync_out_i_0),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .\cl_tx_state[3]_i_7 (cl_txrequesths_coreclk_sync),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_txclkesc(dl0_txclkesc),
        .dl1_enable(dl1_enable),
        .dl1_forcetxstopmode(dl1_forcetxstopmode),
        .dl1_stopstate(dl1_stopstate),
        .dl1_txdataesc(dl1_txdataesc),
        .dl1_txdatahs(dl1_txdatahs),
        .dl1_txlpdtesc(dl1_txlpdtesc),
        .dl1_txrequestesc(dl1_txrequestesc),
        .dl1_txrequesths(dl1_txrequesths),
        .dl1_txtriggeresc(dl1_txtriggeresc),
        .dl1_txulpsesc(dl1_txulpsesc),
        .dl1_txulpsexit(dl1_txulpsexit),
        .dl1_txvalidesc(dl1_txvalidesc),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dl_hs_exit_done_i({dl_hs_exit_done_i[3:2],dl_hs_exit_done_i[0]}),
        .dl_status_bit_6_i_6({timeout_hsexit[3:2],timeout_hsexit[0]}),
        .dl_status_reg({dl_status_reg[13:12],dl_status_reg[9:7]}),
        .dl_tx_sm_state0__0(\u_tx_data_lane_sm/dl_tx_sm_state0__0 ),
        .\dl_tx_sm_state[1]_i_4__0 (esc_active_all_sync_i_n_0),
        .dl_txreadyesc_reg(dl1_txreadyesc),
        .dl_txrequesths_r_reg_0(system_rst_byteclk_t),
        .esc_active_all_reg({esc_ctrl_all_sm_c[3:2],esc_ctrl_all_sm_c[0]}),
        .esc_ctrl_all_sm_reg(\gen_tx_data_lane[1].u_tx_data_lane_n_30 ),
        .esc_ctrl_all_sm_reg_0(\en_rst_logic.system_rst_escclk_sync_i_n_2 ),
        .out(dl_hs_exit_done_i[1]),
        .\pkt_cnt_reg[0]_0 (\en_rst_logic.system_rst_byteclk_sync_i_n_1 ),
        .\pkt_cnt_reg[15]_0 (dl_pkt_cnt_16),
        .s_level_out_d1_cdc_to_reg(cl_init_done_escclk_sync_i),
        .s_level_out_d3_reg(\u_tx_esc_datapath/dl_forcetxstopmode_sync_0 ),
        .s_level_out_d3_reg_0(\gen_tx_data_lane[1].u_tx_data_lane_n_31 ),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_zero_out_i_0(timeout_zero_out_i_0),
        .tx_div4_clk(tx_div4_clk),
        .tx_dl1_hs_dp(tx_dl1_hs_dp),
        .tx_dl1_lp_dn(tx_dl1_lp_dn),
        .tx_dl1_lp_dp(tx_dl1_lp_dp),
        .tx_dl_lp_dp_reg(system_rst_t),
        .txlpdtesc_r_reg(system_rst_escclk_t));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_data_lane_4 \gen_tx_data_lane[2].u_tx_data_lane 
       (.\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] (\gen_tx_data_lane[0].u_tx_data_lane_n_17 ),
        .\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg (dl2_txreadyhs),
        .\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] (system_rst_div4clk_t),
        .\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 (hs_dp_sync_out_i_0),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .cl_txclkactivehs_i_5({dl_status_reg[21],dl_status_reg[7],dl_status_reg[0]}),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_txclkesc(dl0_txclkesc),
        .dl2_enable(dl2_enable),
        .dl2_forcetxstopmode(dl2_forcetxstopmode),
        .dl2_stopstate(dl2_stopstate),
        .dl2_txdataesc(dl2_txdataesc),
        .dl2_txdatahs(dl2_txdatahs),
        .dl2_txlpdtesc(dl2_txlpdtesc),
        .dl2_txrequestesc(dl2_txrequestesc),
        .dl2_txrequesths(dl2_txrequesths),
        .dl2_txtriggeresc(dl2_txtriggeresc),
        .dl2_txulpsesc(dl2_txulpsesc),
        .dl2_txulpsexit(dl2_txulpsexit),
        .dl2_txvalidesc(dl2_txvalidesc),
        .dl2_ulpsactivenot(dl2_ulpsactivenot),
        .dl_hs_exit_done_i({dl_hs_exit_done_i[3],dl_hs_exit_done_i[1:0]}),
        .dl_status_reg({dl_status_reg[20:19],dl_status_reg[16:14]}),
        .dl_tx_sm_state0__0(\u_tx_data_lane_sm/dl_tx_sm_state0__0 ),
        .\dl_tx_sm_state[1]_i_4__1 (esc_active_all_sync_i_n_0),
        .dl_txreadyesc_reg(dl2_txreadyesc),
        .dl_txrequesths_r_reg_0(system_rst_byteclk_t),
        .en_hs_datapath_reg(\gen_tx_data_lane[2].u_tx_data_lane_n_31 ),
        .esc_ctrl_all_sm_reg(esc_ctrl_all_sm_c[2]),
        .esc_ctrl_all_sm_reg_0(\en_rst_logic.system_rst_escclk_sync_i_n_3 ),
        .out(dl_hs_exit_done_i[2]),
        .\pkt_cnt_reg[0]_0 (\en_rst_logic.system_rst_byteclk_sync_i_n_1 ),
        .\pkt_cnt_reg[15]_0 (dl_pkt_cnt_32),
        .s_level_out_d1_cdc_to_reg(cl_init_done_escclk_sync_i),
        .s_level_out_d3_reg(\u_tx_esc_datapath/dl_forcetxstopmode_sync_1 ),
        .s_level_out_d3_reg_0(\gen_tx_data_lane[2].u_tx_data_lane_n_32 ),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_hsexit_reg(timeout_hsexit[2]),
        .timeout_zero_out_i_0(timeout_zero_out_i_0),
        .tx_div4_clk(tx_div4_clk),
        .tx_dl2_hs_dp(tx_dl2_hs_dp),
        .tx_dl2_lp_dn(tx_dl2_lp_dn),
        .tx_dl2_lp_dp(tx_dl2_lp_dp),
        .tx_dl_lp_dp_reg(system_rst_t),
        .txlpdtesc_r_reg(system_rst_escclk_t));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_data_lane_5 \gen_tx_data_lane[3].u_tx_data_lane 
       (.\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] (\gen_tx_data_lane[0].u_tx_data_lane_n_18 ),
        .\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg (dl3_txreadyhs),
        .\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] (system_rst_div4clk_t),
        .\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 (hs_dp_sync_out_i_0),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_txclkesc(dl0_txclkesc),
        .dl3_enable(dl3_enable),
        .dl3_forcetxstopmode(dl3_forcetxstopmode),
        .dl3_stopstate(dl3_stopstate),
        .dl3_txdataesc(dl3_txdataesc),
        .dl3_txdatahs(dl3_txdatahs),
        .dl3_txlpdtesc(dl3_txlpdtesc),
        .dl3_txrequestesc(dl3_txrequestesc),
        .dl3_txrequesths(dl3_txrequesths),
        .dl3_txtriggeresc(dl3_txtriggeresc),
        .dl3_txulpsesc(dl3_txulpsesc),
        .dl3_txulpsexit(dl3_txulpsexit),
        .dl3_txvalidesc(dl3_txvalidesc),
        .dl3_ulpsactivenot(dl3_ulpsactivenot),
        .dl_status_reg({dl_status_reg[27:26],dl_status_reg[23:21]}),
        .dl_tx_sm_state0__0(\u_tx_data_lane_sm/dl_tx_sm_state0__0 ),
        .\dl_tx_sm_state[1]_i_4__2 (esc_active_all_sync_i_n_0),
        .dl_txreadyesc_reg(dl3_txreadyesc),
        .dl_txrequesths_r_reg_0(system_rst_byteclk_t),
        .esc_ctrl_all_sm_reg(esc_ctrl_all_sm_c[3]),
        .esc_ctrl_all_sm_reg_0(\en_rst_logic.system_rst_escclk_sync_i_n_4 ),
        .out(dl_hs_exit_done_i[3]),
        .\pkt_cnt_reg[0]_0 (\en_rst_logic.system_rst_byteclk_sync_i_n_1 ),
        .\pkt_cnt_reg[15]_0 (dl_pkt_cnt_48),
        .s_level_out_d1_cdc_to_reg(cl_init_done_escclk_sync_i),
        .s_level_out_d3_reg(\u_tx_esc_datapath/dl_forcetxstopmode_sync_2 ),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_hsexit_reg(timeout_hsexit[3]),
        .timeout_zero_out_i_0(timeout_zero_out_i_0),
        .tx_div4_clk(tx_div4_clk),
        .tx_dl3_hs_dp(tx_dl3_hs_dp),
        .tx_dl3_lp_dn(tx_dl3_lp_dn),
        .tx_dl3_lp_dp(tx_dl3_lp_dp),
        .tx_dl_lp_dp_reg(system_rst_t),
        .txlpdtesc_r_reg(system_rst_escclk_t));
  LUT3 #(
    .INIT(8'hE1)) 
    time_out_prepare_i_21
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_26 ),
        .I1(time_out_prepare_reg_i_49_n_0),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_25 ),
        .O(time_out_prepare_i_21_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    time_out_prepare_i_42
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_27 ),
        .I1(time_out_prepare_reg_i_49_n_0),
        .O(time_out_prepare_i_42_n_0));
  LUT3 #(
    .INIT(8'hE8)) 
    time_out_prepare_i_43
       (.I0(time_out_prepare_reg_i_49_n_5),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_28 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_25 ),
        .O(time_out_prepare_i_43_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    time_out_prepare_i_44
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_25 ),
        .I1(time_out_prepare_reg_i_49_n_5),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_28 ),
        .O(time_out_prepare_i_44_n_0));
  LUT3 #(
    .INIT(8'hE1)) 
    time_out_prepare_i_45
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_27 ),
        .I1(time_out_prepare_reg_i_49_n_0),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_26 ),
        .O(time_out_prepare_i_45_n_0));
  LUT5 #(
    .INIT(32'h17E8E817)) 
    time_out_prepare_i_46
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_25 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_28 ),
        .I2(time_out_prepare_reg_i_49_n_5),
        .I3(time_out_prepare_reg_i_49_n_0),
        .I4(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_27 ),
        .O(time_out_prepare_i_46_n_0));
  LUT5 #(
    .INIT(32'h69969696)) 
    time_out_prepare_i_47
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_28 ),
        .I1(time_out_prepare_reg_i_49_n_5),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_25 ),
        .I3(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_29 ),
        .I4(time_out_prepare_reg_i_49_n_6),
        .O(time_out_prepare_i_47_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    time_out_prepare_i_48
       (.I0(time_out_prepare_reg_i_49_n_6),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_29 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_26 ),
        .O(time_out_prepare_i_48_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    time_out_prepare_i_68
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_27 ),
        .I1(time_out_prepare_reg_i_49_n_7),
        .O(time_out_prepare_i_68_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    time_out_prepare_i_69
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_28 ),
        .I1(time_out_prepare_reg_i_71_n_4),
        .O(time_out_prepare_i_69_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    time_out_prepare_i_70
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_29 ),
        .I1(time_out_prepare_reg_i_71_n_5),
        .O(time_out_prepare_i_70_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    time_out_prepare_i_72
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_25 ),
        .O(time_out_prepare_i_72_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    time_out_prepare_i_73
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_26 ),
        .O(time_out_prepare_i_73_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    time_out_prepare_i_74
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_27 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_25 ),
        .O(time_out_prepare_i_74_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    time_out_prepare_i_93
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_25 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_29 ),
        .O(time_out_prepare_i_93_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    time_out_prepare_i_94
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_28 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_26 ),
        .O(time_out_prepare_i_94_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    time_out_prepare_i_95
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_29 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_27 ),
        .O(time_out_prepare_i_95_n_0));
  LUT3 #(
    .INIT(8'hD2)) 
    time_out_prepare_i_96
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_29 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_25 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_28 ),
        .O(time_out_prepare_i_96_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    time_out_prepare_i_97
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_25 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_29 ),
        .O(time_out_prepare_i_97_n_0));
  CARRY4 time_out_prepare_reg_i_14
       (.CI(time_out_prepare_reg_i_20_n_0),
        .CO(NLW_time_out_prepare_reg_i_14_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_time_out_prepare_reg_i_14_O_UNCONNECTED[3:1],time_out_prepare_reg_i_14_n_7}),
        .S({1'b0,1'b0,1'b0,time_out_prepare_i_21_n_0}));
  CARRY4 time_out_prepare_reg_i_20
       (.CI(time_out_prepare_reg_i_41_n_0),
        .CO({time_out_prepare_reg_i_20_n_0,time_out_prepare_reg_i_20_n_1,time_out_prepare_reg_i_20_n_2,time_out_prepare_reg_i_20_n_3}),
        .CYINIT(1'b0),
        .DI({time_out_prepare_i_42_n_0,time_out_prepare_i_43_n_0,time_out_prepare_i_44_n_0,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_26 }),
        .O({time_out_prepare_reg_i_20_n_4,time_out_prepare_reg_i_20_n_5,time_out_prepare_reg_i_20_n_6,time_out_prepare_reg_i_20_n_7}),
        .S({time_out_prepare_i_45_n_0,time_out_prepare_i_46_n_0,time_out_prepare_i_47_n_0,time_out_prepare_i_48_n_0}));
  CARRY4 time_out_prepare_reg_i_41
       (.CI(1'b0),
        .CO({time_out_prepare_reg_i_41_n_0,time_out_prepare_reg_i_41_n_1,time_out_prepare_reg_i_41_n_2,time_out_prepare_reg_i_41_n_3}),
        .CYINIT(1'b0),
        .DI({\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_27 ,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_28 ,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_29 ,1'b0}),
        .O({time_out_prepare_reg_i_41_n_4,time_out_prepare_reg_i_41_n_5,time_out_prepare_reg_i_41_n_6,time_out_prepare_reg_i_41_n_7}),
        .S({time_out_prepare_i_68_n_0,time_out_prepare_i_69_n_0,time_out_prepare_i_70_n_0,time_out_prepare_reg_i_71_n_6}));
  CARRY4 time_out_prepare_reg_i_49
       (.CI(time_out_prepare_reg_i_71_n_0),
        .CO({time_out_prepare_reg_i_49_n_0,NLW_time_out_prepare_reg_i_49_CO_UNCONNECTED[2],time_out_prepare_reg_i_49_n_2,time_out_prepare_reg_i_49_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_25 ,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_26 ,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_27 }),
        .O({NLW_time_out_prepare_reg_i_49_O_UNCONNECTED[3],time_out_prepare_reg_i_49_n_5,time_out_prepare_reg_i_49_n_6,time_out_prepare_reg_i_49_n_7}),
        .S({1'b1,time_out_prepare_i_72_n_0,time_out_prepare_i_73_n_0,time_out_prepare_i_74_n_0}));
  CARRY4 time_out_prepare_reg_i_71
       (.CI(1'b0),
        .CO({time_out_prepare_reg_i_71_n_0,time_out_prepare_reg_i_71_n_1,time_out_prepare_reg_i_71_n_2,time_out_prepare_reg_i_71_n_3}),
        .CYINIT(1'b0),
        .DI({\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_28 ,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_29 ,time_out_prepare_i_93_n_0,1'b0}),
        .O({time_out_prepare_reg_i_71_n_4,time_out_prepare_reg_i_71_n_5,time_out_prepare_reg_i_71_n_6,time_out_prepare_reg_i_71_n_7}),
        .S({time_out_prepare_i_94_n_0,time_out_prepare_i_95_n_0,time_out_prepare_i_96_n_0,time_out_prepare_i_97_n_0}));
  LUT3 #(
    .INIT(8'hD4)) 
    \trail_count[9]_i_122 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_21 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_23 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_17 ),
        .O(\trail_count[9]_i_122_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \trail_count[9]_i_123 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_23 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_21 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_17 ),
        .O(\trail_count[9]_i_123_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \trail_count[9]_i_124 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_19 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_23 ),
        .O(\trail_count[9]_i_124_n_0 ));
  LUT6 #(
    .INIT(64'h8E71718E718E8E71)) 
    \trail_count[9]_i_125 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_17 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_23 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_21 ),
        .I3(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_22 ),
        .I4(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_20 ),
        .I5(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_24 ),
        .O(\trail_count[9]_i_125_n_0 ));
  LUT5 #(
    .INIT(32'h69966969)) 
    \trail_count[9]_i_126 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_23 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_21 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_17 ),
        .I3(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_22 ),
        .I4(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_18 ),
        .O(\trail_count[9]_i_126_n_0 ));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \trail_count[9]_i_127 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_23 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_19 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_22 ),
        .I3(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_18 ),
        .O(\trail_count[9]_i_127_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \trail_count[9]_i_128 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_19 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_23 ),
        .O(\trail_count[9]_i_128_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \trail_count[9]_i_129 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_19 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_17 ),
        .O(\trail_count[9]_i_129_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \trail_count[9]_i_130 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_20 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_18 ),
        .O(\trail_count[9]_i_130_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \trail_count[9]_i_131 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_21 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_19 ),
        .O(\trail_count[9]_i_131_n_0 ));
  LUT3 #(
    .INIT(8'hD4)) 
    \trail_count[9]_i_132 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_20 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_22 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_24 ),
        .O(\trail_count[9]_i_132_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \trail_count[9]_i_133 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_17 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_19 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_24 ),
        .I3(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_18 ),
        .O(\trail_count[9]_i_133_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \trail_count[9]_i_134 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_18 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_20 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_17 ),
        .I3(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_19 ),
        .O(\trail_count[9]_i_134_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \trail_count[9]_i_135 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_19 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_21 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_18 ),
        .I3(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_20 ),
        .O(\trail_count[9]_i_135_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \trail_count[9]_i_136 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_24 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_22 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_20 ),
        .I3(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_19 ),
        .I4(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_21 ),
        .O(\trail_count[9]_i_136_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \trail_count[9]_i_29 
       (.I0(\trail_count_reg[9]_i_65_n_5 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_18 ),
        .O(\trail_count[9]_i_29_n_0 ));
  LUT3 #(
    .INIT(8'hE8)) 
    \trail_count[9]_i_30 
       (.I0(\trail_count_reg[9]_i_65_n_6 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_19 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_24 ),
        .O(\trail_count[9]_i_30_n_0 ));
  LUT3 #(
    .INIT(8'hE8)) 
    \trail_count[9]_i_31 
       (.I0(\trail_count_reg[9]_i_65_n_7 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_20 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_17 ),
        .O(\trail_count[9]_i_31_n_0 ));
  LUT3 #(
    .INIT(8'hE1)) 
    \trail_count[9]_i_32 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_17 ),
        .I1(\trail_count_reg[9]_i_65_n_0 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_24 ),
        .O(\trail_count[9]_i_32_n_0 ));
  LUT4 #(
    .INIT(16'h7887)) 
    \trail_count[9]_i_33 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_18 ),
        .I1(\trail_count_reg[9]_i_65_n_5 ),
        .I2(\trail_count_reg[9]_i_65_n_0 ),
        .I3(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_17 ),
        .O(\trail_count[9]_i_33_n_0 ));
  LUT5 #(
    .INIT(32'hE81717E8)) 
    \trail_count[9]_i_34 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_24 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_19 ),
        .I2(\trail_count_reg[9]_i_65_n_6 ),
        .I3(\trail_count_reg[9]_i_65_n_5 ),
        .I4(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_18 ),
        .O(\trail_count[9]_i_34_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \trail_count[9]_i_35 
       (.I0(\trail_count[9]_i_31_n_0 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_19 ),
        .I2(\trail_count_reg[9]_i_65_n_6 ),
        .I3(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_24 ),
        .O(\trail_count[9]_i_35_n_0 ));
  LUT3 #(
    .INIT(8'hE8)) 
    \trail_count[9]_i_58 
       (.I0(\trail_count_reg[9]_i_95_n_4 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_21 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_18 ),
        .O(\trail_count[9]_i_58_n_0 ));
  LUT3 #(
    .INIT(8'hE8)) 
    \trail_count[9]_i_59 
       (.I0(\trail_count_reg[9]_i_95_n_5 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_22 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_19 ),
        .O(\trail_count[9]_i_59_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \trail_count[9]_i_60 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_19 ),
        .I1(\trail_count_reg[9]_i_95_n_5 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_22 ),
        .O(\trail_count[9]_i_60_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \trail_count[9]_i_61 
       (.I0(\trail_count_reg[9]_i_65_n_7 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_20 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_17 ),
        .I3(\trail_count[9]_i_58_n_0 ),
        .O(\trail_count[9]_i_61_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \trail_count[9]_i_62 
       (.I0(\trail_count_reg[9]_i_95_n_4 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_21 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_18 ),
        .I3(\trail_count[9]_i_59_n_0 ),
        .O(\trail_count[9]_i_62_n_0 ));
  LUT5 #(
    .INIT(32'h69969696)) 
    \trail_count[9]_i_63 
       (.I0(\trail_count_reg[9]_i_95_n_5 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_22 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_19 ),
        .I3(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_23 ),
        .I4(\trail_count_reg[9]_i_95_n_6 ),
        .O(\trail_count[9]_i_63_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \trail_count[9]_i_64 
       (.I0(\trail_count_reg[9]_i_95_n_6 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_23 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_20 ),
        .O(\trail_count[9]_i_64_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \trail_count[9]_i_91 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_21 ),
        .I1(\trail_count_reg[9]_i_95_n_7 ),
        .O(\trail_count[9]_i_91_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \trail_count[9]_i_92 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_22 ),
        .I1(\trail_count_reg[9]_i_94_n_4 ),
        .O(\trail_count[9]_i_92_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \trail_count[9]_i_93 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_23 ),
        .I1(\trail_count_reg[9]_i_94_n_5 ),
        .O(\trail_count[9]_i_93_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \trail_count[9]_i_96 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_18 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_24 ),
        .O(\trail_count[9]_i_96_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \trail_count[9]_i_97 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_24 ),
        .O(\trail_count[9]_i_97_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \trail_count[9]_i_98 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_17 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_24 ),
        .O(\trail_count[9]_i_98_n_0 ));
  LUT3 #(
    .INIT(8'h4B)) 
    \trail_count[9]_i_99 
       (.I0(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_24 ),
        .I1(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_18 ),
        .I2(\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_17 ),
        .O(\trail_count[9]_i_99_n_0 ));
  CARRY4 \trail_count_reg[9]_i_17 
       (.CI(\trail_count_reg[9]_i_28_n_0 ),
        .CO({\NLW_trail_count_reg[9]_i_17_CO_UNCONNECTED [3],\trail_count_reg[9]_i_17_n_1 ,\trail_count_reg[9]_i_17_n_2 ,\trail_count_reg[9]_i_17_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\trail_count[9]_i_29_n_0 ,\trail_count[9]_i_30_n_0 ,\trail_count[9]_i_31_n_0 }),
        .O({\trail_count_reg[9]_i_17_n_4 ,\trail_count_reg[9]_i_17_n_5 ,\trail_count_reg[9]_i_17_n_6 ,\trail_count_reg[9]_i_17_n_7 }),
        .S({\trail_count[9]_i_32_n_0 ,\trail_count[9]_i_33_n_0 ,\trail_count[9]_i_34_n_0 ,\trail_count[9]_i_35_n_0 }));
  CARRY4 \trail_count_reg[9]_i_28 
       (.CI(\trail_count_reg[9]_i_57_n_0 ),
        .CO({\trail_count_reg[9]_i_28_n_0 ,\trail_count_reg[9]_i_28_n_1 ,\trail_count_reg[9]_i_28_n_2 ,\trail_count_reg[9]_i_28_n_3 }),
        .CYINIT(1'b0),
        .DI({\trail_count[9]_i_58_n_0 ,\trail_count[9]_i_59_n_0 ,\trail_count[9]_i_60_n_0 ,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_20 }),
        .O({\trail_count_reg[9]_i_28_n_4 ,\trail_count_reg[9]_i_28_n_5 ,\trail_count_reg[9]_i_28_n_6 ,\trail_count_reg[9]_i_28_n_7 }),
        .S({\trail_count[9]_i_61_n_0 ,\trail_count[9]_i_62_n_0 ,\trail_count[9]_i_63_n_0 ,\trail_count[9]_i_64_n_0 }));
  CARRY4 \trail_count_reg[9]_i_57 
       (.CI(1'b0),
        .CO({\trail_count_reg[9]_i_57_n_0 ,\trail_count_reg[9]_i_57_n_1 ,\trail_count_reg[9]_i_57_n_2 ,\trail_count_reg[9]_i_57_n_3 }),
        .CYINIT(1'b0),
        .DI({\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_21 ,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_22 ,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_23 ,1'b0}),
        .O({\trail_count_reg[9]_i_57_n_4 ,\trail_count_reg[9]_i_57_n_5 ,\trail_count_reg[9]_i_57_n_6 ,\trail_count_reg[9]_i_57_n_7 }),
        .S({\trail_count[9]_i_91_n_0 ,\trail_count[9]_i_92_n_0 ,\trail_count[9]_i_93_n_0 ,\trail_count_reg[9]_i_94_n_6 }));
  CARRY4 \trail_count_reg[9]_i_65 
       (.CI(\trail_count_reg[9]_i_95_n_0 ),
        .CO({\trail_count_reg[9]_i_65_n_0 ,\NLW_trail_count_reg[9]_i_65_CO_UNCONNECTED [2],\trail_count_reg[9]_i_65_n_2 ,\trail_count_reg[9]_i_65_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_24 ,\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_17 ,\trail_count[9]_i_96_n_0 }),
        .O({\NLW_trail_count_reg[9]_i_65_O_UNCONNECTED [3],\trail_count_reg[9]_i_65_n_5 ,\trail_count_reg[9]_i_65_n_6 ,\trail_count_reg[9]_i_65_n_7 }),
        .S({1'b1,\trail_count[9]_i_97_n_0 ,\trail_count[9]_i_98_n_0 ,\trail_count[9]_i_99_n_0 }));
  CARRY4 \trail_count_reg[9]_i_94 
       (.CI(1'b0),
        .CO({\trail_count_reg[9]_i_94_n_0 ,\trail_count_reg[9]_i_94_n_1 ,\trail_count_reg[9]_i_94_n_2 ,\trail_count_reg[9]_i_94_n_3 }),
        .CYINIT(1'b0),
        .DI({\trail_count[9]_i_122_n_0 ,\trail_count[9]_i_123_n_0 ,\trail_count[9]_i_124_n_0 ,1'b0}),
        .O({\trail_count_reg[9]_i_94_n_4 ,\trail_count_reg[9]_i_94_n_5 ,\trail_count_reg[9]_i_94_n_6 ,\trail_count_reg[9]_i_94_n_7 }),
        .S({\trail_count[9]_i_125_n_0 ,\trail_count[9]_i_126_n_0 ,\trail_count[9]_i_127_n_0 ,\trail_count[9]_i_128_n_0 }));
  CARRY4 \trail_count_reg[9]_i_95 
       (.CI(\trail_count_reg[9]_i_94_n_0 ),
        .CO({\trail_count_reg[9]_i_95_n_0 ,\trail_count_reg[9]_i_95_n_1 ,\trail_count_reg[9]_i_95_n_2 ,\trail_count_reg[9]_i_95_n_3 }),
        .CYINIT(1'b0),
        .DI({\trail_count[9]_i_129_n_0 ,\trail_count[9]_i_130_n_0 ,\trail_count[9]_i_131_n_0 ,\trail_count[9]_i_132_n_0 }),
        .O({\trail_count_reg[9]_i_95_n_4 ,\trail_count_reg[9]_i_95_n_5 ,\trail_count_reg[9]_i_95_n_6 ,\trail_count_reg[9]_i_95_n_7 }),
        .S({\trail_count[9]_i_133_n_0 ,\trail_count[9]_i_134_n_0 ,\trail_count[9]_i_135_n_0 ,\trail_count[9]_i_136_n_0 }));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized0_6 u_cl_init_done_escclk_sync
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .dl0_txclkesc(dl0_txclkesc),
        .out(cl_init_done_escclk_sync_i));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_support_rst_logic u_tx_support_rst_logic
       (.\cl_tx_state_reg[0] (\gen_tx_clk_lane_7series.u_tx_clk_lane_7series_n_0 ),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .out(system_rst_t),
        .system_rst_in(system_rst_in),
        .system_rst_reg_0(u_tx_support_rst_logic_n_1),
        .system_rst_reg_1({dphy_en_out,dphy_srst_out}));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_hs_datapath_7series
   (\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ,
    hs_xfer_done_i,
    pkt_cnt0,
    tx_dl3_hs_dp,
    \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ,
    dl3_txrequesths,
    tx_div4_clk,
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ,
    dl3_txdatahs,
    timeout_zero_out_i_0,
    \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ,
    out);
  output \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ;
  output hs_xfer_done_i;
  output pkt_cnt0;
  output [7:0]tx_dl3_hs_dp;
  input \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ;
  input dl3_txrequesths;
  input tx_div4_clk;
  input \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ;
  input [7:0]dl3_txdatahs;
  input timeout_zero_out_i_0;
  input \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ;
  input out;

  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_2__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_state[1]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ;
  wire TRAIL_TIMEOUT0__120_carry__0_i_1__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_2__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_3__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_4__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_5__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_6__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_7__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_8__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_n_1;
  wire TRAIL_TIMEOUT0__120_carry__0_n_2;
  wire TRAIL_TIMEOUT0__120_carry__0_n_3;
  wire TRAIL_TIMEOUT0__120_carry__1_i_1__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_2__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_3__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_4__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_5__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_6__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_7__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_8__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_n_1;
  wire TRAIL_TIMEOUT0__120_carry__1_n_2;
  wire TRAIL_TIMEOUT0__120_carry__1_n_3;
  wire TRAIL_TIMEOUT0__120_carry__2_i_1__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__2_i_2__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__2_i_3__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__2_i_4__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__2_n_2;
  wire TRAIL_TIMEOUT0__120_carry__2_n_3;
  wire TRAIL_TIMEOUT0__120_carry_i_1__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_2__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_3__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_4__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_5__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_6__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_7__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry_n_0;
  wire TRAIL_TIMEOUT0__120_carry_n_1;
  wire TRAIL_TIMEOUT0__120_carry_n_2;
  wire TRAIL_TIMEOUT0__120_carry_n_3;
  wire TRAIL_TIMEOUT0__60_carry__0_i_1__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_2__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_3__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_4__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_5__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_6__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_7__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_8__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_n_1;
  wire TRAIL_TIMEOUT0__60_carry__0_n_2;
  wire TRAIL_TIMEOUT0__60_carry__0_n_3;
  wire TRAIL_TIMEOUT0__60_carry__0_n_4;
  wire TRAIL_TIMEOUT0__60_carry__0_n_5;
  wire TRAIL_TIMEOUT0__60_carry__0_n_6;
  wire TRAIL_TIMEOUT0__60_carry__0_n_7;
  wire TRAIL_TIMEOUT0__60_carry__1_i_1__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_i_2__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_i_3__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_i_4__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_n_2;
  wire TRAIL_TIMEOUT0__60_carry__1_n_3;
  wire TRAIL_TIMEOUT0__60_carry__1_n_5;
  wire TRAIL_TIMEOUT0__60_carry__1_n_6;
  wire TRAIL_TIMEOUT0__60_carry__1_n_7;
  wire TRAIL_TIMEOUT0__60_carry_i_1__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_2__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_3__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_4__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_5__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_6__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_7__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry_n_0;
  wire TRAIL_TIMEOUT0__60_carry_n_1;
  wire TRAIL_TIMEOUT0__60_carry_n_2;
  wire TRAIL_TIMEOUT0__60_carry_n_3;
  wire TRAIL_TIMEOUT0__60_carry_n_4;
  wire TRAIL_TIMEOUT0__60_carry_n_5;
  wire TRAIL_TIMEOUT0__60_carry_n_6;
  wire TRAIL_TIMEOUT0__60_carry_n_7;
  wire TRAIL_TIMEOUT0__92_carry__0_i_1__2_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_2__2_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_3__2_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_4__2_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_5__2_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_6__2_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_7__2_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_8__2_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_n_1;
  wire TRAIL_TIMEOUT0__92_carry__0_n_2;
  wire TRAIL_TIMEOUT0__92_carry__0_n_3;
  wire TRAIL_TIMEOUT0__92_carry__0_n_4;
  wire TRAIL_TIMEOUT0__92_carry__0_n_5;
  wire TRAIL_TIMEOUT0__92_carry__0_n_6;
  wire TRAIL_TIMEOUT0__92_carry__0_n_7;
  wire TRAIL_TIMEOUT0__92_carry__1_i_1__2_n_0;
  wire TRAIL_TIMEOUT0__92_carry__1_i_2__2_n_0;
  wire TRAIL_TIMEOUT0__92_carry__1_i_3__2_n_0;
  wire TRAIL_TIMEOUT0__92_carry__1_n_3;
  wire TRAIL_TIMEOUT0__92_carry__1_n_6;
  wire TRAIL_TIMEOUT0__92_carry__1_n_7;
  wire TRAIL_TIMEOUT0__92_carry_i_1__2_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_2__1_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_3__1_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_4__2_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_5__2_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_6__2_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_7__2_n_0;
  wire TRAIL_TIMEOUT0__92_carry_n_0;
  wire TRAIL_TIMEOUT0__92_carry_n_1;
  wire TRAIL_TIMEOUT0__92_carry_n_2;
  wire TRAIL_TIMEOUT0__92_carry_n_3;
  wire TRAIL_TIMEOUT0__92_carry_n_4;
  wire TRAIL_TIMEOUT0__92_carry_n_5;
  wire TRAIL_TIMEOUT0__92_carry_n_6;
  wire TRAIL_TIMEOUT0__92_carry_n_7;
  wire TRAIL_TIMEOUT0_carry__0_i_1__2_n_0;
  wire TRAIL_TIMEOUT0_carry__0_i_2__2_n_0;
  wire TRAIL_TIMEOUT0_carry__0_i_3__2_n_0;
  wire TRAIL_TIMEOUT0_carry__0_i_4__2_n_0;
  wire TRAIL_TIMEOUT0_carry__0_n_0;
  wire TRAIL_TIMEOUT0_carry__0_n_1;
  wire TRAIL_TIMEOUT0_carry__0_n_2;
  wire TRAIL_TIMEOUT0_carry__0_n_3;
  wire TRAIL_TIMEOUT0_carry__1_i_1__2_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_2__2_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_3__2_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_4__2_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_5__2_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_6__2_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_7__2_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_8__2_n_0;
  wire TRAIL_TIMEOUT0_carry__1_n_0;
  wire TRAIL_TIMEOUT0_carry__1_n_1;
  wire TRAIL_TIMEOUT0_carry__1_n_2;
  wire TRAIL_TIMEOUT0_carry__1_n_3;
  wire TRAIL_TIMEOUT0_carry__2_i_1__2_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_2__2_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_3__2_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_4__2_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_5__2_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_6__2_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_7__2_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_8__2_n_0;
  wire TRAIL_TIMEOUT0_carry__2_n_0;
  wire TRAIL_TIMEOUT0_carry__2_n_1;
  wire TRAIL_TIMEOUT0_carry__2_n_2;
  wire TRAIL_TIMEOUT0_carry__2_n_3;
  wire TRAIL_TIMEOUT0_carry__3_i_1__2_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_2__2_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_3__2_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_4__2_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_5__2_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_6__2_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_7__2_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_8__2_n_0;
  wire TRAIL_TIMEOUT0_carry__3_n_0;
  wire TRAIL_TIMEOUT0_carry__3_n_1;
  wire TRAIL_TIMEOUT0_carry__3_n_2;
  wire TRAIL_TIMEOUT0_carry__3_n_3;
  wire TRAIL_TIMEOUT0_carry__4_i_1__2_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_2__2_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_3__2_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_4__2_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_5__2_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_6__2_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_7__2_n_0;
  wire TRAIL_TIMEOUT0_carry__4_n_0;
  wire TRAIL_TIMEOUT0_carry__4_n_1;
  wire TRAIL_TIMEOUT0_carry__4_n_2;
  wire TRAIL_TIMEOUT0_carry__4_n_3;
  wire TRAIL_TIMEOUT0_carry__4_n_4;
  wire TRAIL_TIMEOUT0_carry__4_n_5;
  wire TRAIL_TIMEOUT0_carry__4_n_6;
  wire TRAIL_TIMEOUT0_carry__4_n_7;
  wire TRAIL_TIMEOUT0_carry__5_i_1__2_n_0;
  wire TRAIL_TIMEOUT0_carry__5_i_2__2_n_0;
  wire TRAIL_TIMEOUT0_carry__5_i_3__2_n_0;
  wire TRAIL_TIMEOUT0_carry__5_i_4__2_n_0;
  wire TRAIL_TIMEOUT0_carry__5_n_1;
  wire TRAIL_TIMEOUT0_carry__5_n_2;
  wire TRAIL_TIMEOUT0_carry__5_n_3;
  wire TRAIL_TIMEOUT0_carry__5_n_4;
  wire TRAIL_TIMEOUT0_carry__5_n_5;
  wire TRAIL_TIMEOUT0_carry__5_n_6;
  wire TRAIL_TIMEOUT0_carry__5_n_7;
  wire TRAIL_TIMEOUT0_carry_i_1__2_n_0;
  wire TRAIL_TIMEOUT0_carry_i_2__2_n_0;
  wire TRAIL_TIMEOUT0_carry_i_3__2_n_0;
  wire TRAIL_TIMEOUT0_carry_n_0;
  wire TRAIL_TIMEOUT0_carry_n_1;
  wire TRAIL_TIMEOUT0_carry_n_2;
  wire TRAIL_TIMEOUT0_carry_n_3;
  wire TRAIL_TIMEOUT1_n_100;
  wire TRAIL_TIMEOUT1_n_101;
  wire TRAIL_TIMEOUT1_n_102;
  wire TRAIL_TIMEOUT1_n_103;
  wire TRAIL_TIMEOUT1_n_104;
  wire TRAIL_TIMEOUT1_n_105;
  wire TRAIL_TIMEOUT1_n_86;
  wire TRAIL_TIMEOUT1_n_87;
  wire TRAIL_TIMEOUT1_n_88;
  wire TRAIL_TIMEOUT1_n_89;
  wire TRAIL_TIMEOUT1_n_90;
  wire TRAIL_TIMEOUT1_n_91;
  wire TRAIL_TIMEOUT1_n_92;
  wire TRAIL_TIMEOUT1_n_93;
  wire TRAIL_TIMEOUT1_n_94;
  wire TRAIL_TIMEOUT1_n_95;
  wire TRAIL_TIMEOUT1_n_96;
  wire TRAIL_TIMEOUT1_n_97;
  wire TRAIL_TIMEOUT1_n_98;
  wire TRAIL_TIMEOUT1_n_99;
  wire [7:0]dl3_txdatahs;
  wire dl3_txrequesths;
  wire [7:0]dl_tx_hs_dp0_in;
  wire [1:0]dl_tx_state;
  wire dl_txrequesths_posedge_r_i_1__2_n_0;
  wire dl_txrequesths_posedge_r_reg_n_0;
  wire dl_txrequesths_r;
  wire [7:7]gen_eot_r;
  wire hs_xfer_done_i;
  wire hs_xfer_done_i_1__2_n_0;
  wire out;
  wire [9:0]p_0_in;
  wire [7:7]p_0_in_0;
  wire pkt_cnt0;
  wire time_out_trail;
  wire time_out_trail0_carry_i_10__2_n_0;
  wire time_out_trail0_carry_i_11__2_n_0;
  wire time_out_trail0_carry_i_12__2_n_0;
  wire time_out_trail0_carry_i_13__2_n_0;
  wire time_out_trail0_carry_i_14__2_n_0;
  wire time_out_trail0_carry_i_15__2_n_0;
  wire time_out_trail0_carry_i_16__2_n_0;
  wire time_out_trail0_carry_i_1__2_n_0;
  wire time_out_trail0_carry_i_2__2_n_0;
  wire time_out_trail0_carry_i_3__2_n_0;
  wire time_out_trail0_carry_i_4__2_n_0;
  wire time_out_trail0_carry_i_5__2_n_0;
  wire time_out_trail0_carry_i_6__2_n_0;
  wire time_out_trail0_carry_i_7__2_n_0;
  wire time_out_trail0_carry_i_8__1_n_0;
  wire time_out_trail0_carry_i_9__2_n_0;
  wire time_out_trail0_carry_n_0;
  wire time_out_trail0_carry_n_1;
  wire time_out_trail0_carry_n_2;
  wire time_out_trail0_carry_n_3;
  wire time_out_trail_i_1__3_n_0;
  wire timeout_zero_out_i_0;
  wire \trail_count[5]_i_1__3_n_0 ;
  wire \trail_count[6]_i_1__3_n_0 ;
  wire \trail_count[7]_i_1__3_n_0 ;
  wire \trail_count[9]_i_1__3_n_0 ;
  wire \trail_count[9]_i_2__3_n_0 ;
  wire \trail_count[9]_i_4__2_n_0 ;
  wire [9:0]trail_count_reg;
  wire tx_div4_clk;
  wire [7:0]tx_dl3_hs_dp;
  wire [3:0]NLW_TRAIL_TIMEOUT0__120_carry_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0__120_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0__120_carry__1_O_UNCONNECTED;
  wire [3:2]NLW_TRAIL_TIMEOUT0__120_carry__2_CO_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0__120_carry__2_O_UNCONNECTED;
  wire [2:2]NLW_TRAIL_TIMEOUT0__60_carry__1_CO_UNCONNECTED;
  wire [3:3]NLW_TRAIL_TIMEOUT0__60_carry__1_O_UNCONNECTED;
  wire [3:1]NLW_TRAIL_TIMEOUT0__92_carry__1_CO_UNCONNECTED;
  wire [3:2]NLW_TRAIL_TIMEOUT0__92_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry__2_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry__3_O_UNCONNECTED;
  wire [3:3]NLW_TRAIL_TIMEOUT0_carry__5_CO_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_OVERFLOW_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_PATTERNDETECT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_TRAIL_TIMEOUT1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_TRAIL_TIMEOUT1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT1_CARRYOUT_UNCONNECTED;
  wire [47:20]NLW_TRAIL_TIMEOUT1_P_UNCONNECTED;
  wire [47:0]NLW_TRAIL_TIMEOUT1_PCOUT_UNCONNECTED;
  wire [3:0]NLW_time_out_trail0_carry_O_UNCONNECTED;

  LUT6 #(
    .INIT(64'hC800CFFF880088AA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1__2 
       (.I0(dl_tx_state[1]),
        .I1(dl3_txdatahs[0]),
        .I2(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(gen_eot_r),
        .I5(dl_tx_state[0]),
        .O(dl_tx_hs_dp0_in[0]));
  LUT6 #(
    .INIT(64'hC800CFFF880088AA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1__2 
       (.I0(dl_tx_state[1]),
        .I1(dl3_txdatahs[1]),
        .I2(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(gen_eot_r),
        .I5(dl_tx_state[0]),
        .O(dl_tx_hs_dp0_in[1]));
  LUT6 #(
    .INIT(64'hC800CFFF880088AA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1__2 
       (.I0(dl_tx_state[1]),
        .I1(dl3_txdatahs[2]),
        .I2(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(gen_eot_r),
        .I5(dl_tx_state[0]),
        .O(dl_tx_hs_dp0_in[2]));
  LUT6 #(
    .INIT(64'h00000000EE0C0C0C)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__2_n_0 ),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6__1_n_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(dl3_txdatahs[3]),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7__1_n_0 ),
        .O(dl_tx_hs_dp0_in[3]));
  LUT6 #(
    .INIT(64'h00000000EE0C0C0C)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__2_n_0 ),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6__1_n_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(dl3_txdatahs[4]),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7__1_n_0 ),
        .O(dl_tx_hs_dp0_in[4]));
  LUT6 #(
    .INIT(64'h00000000EE0C0C0C)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__2_n_0 ),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6__1_n_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(dl3_txdatahs[5]),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7__1_n_0 ),
        .O(dl_tx_hs_dp0_in[5]));
  LUT6 #(
    .INIT(64'hC800CFFF880088AA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1__2 
       (.I0(dl_tx_state[1]),
        .I1(dl3_txdatahs[6]),
        .I2(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(gen_eot_r),
        .I5(dl_tx_state[0]),
        .O(dl_tx_hs_dp0_in[6]));
  LUT6 #(
    .INIT(64'hBEAABEBEBABABEBE)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__2_n_0 ),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[1]),
        .I3(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I4(dl3_txrequesths),
        .I5(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000E000EAAA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__2_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I3(dl3_txdatahs[7]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6__1_n_0 ),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7__1_n_0 ),
        .O(dl_tx_hs_dp0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT5 #(
    .INIT(32'h11111011)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__2 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[1]),
        .I2(dl_txrequesths_posedge_r_reg_n_0),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ),
        .I4(timeout_zero_out_i_0),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT5 #(
    .INIT(32'h55557FFF)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__2 
       (.I0(dl_tx_state[0]),
        .I1(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I2(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ),
        .I3(dl3_txrequesths),
        .I4(gen_eot_r),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__2_n_0 ));
  LUT4 #(
    .INIT(16'hAA80)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6__1 
       (.I0(dl_tx_state[1]),
        .I1(dl3_txrequesths),
        .I2(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ),
        .I3(gen_eot_r),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7__1 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[1]),
        .I2(timeout_zero_out_i_0),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7__1_n_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__2_n_0 ),
        .D(dl_tx_hs_dp0_in[0]),
        .Q(tx_dl3_hs_dp[0]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[1] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__2_n_0 ),
        .D(dl_tx_hs_dp0_in[1]),
        .Q(tx_dl3_hs_dp[1]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[2] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__2_n_0 ),
        .D(dl_tx_hs_dp0_in[2]),
        .Q(tx_dl3_hs_dp[2]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[3] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__2_n_0 ),
        .D(dl_tx_hs_dp0_in[3]),
        .Q(tx_dl3_hs_dp[3]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[4] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__2_n_0 ),
        .D(dl_tx_hs_dp0_in[4]),
        .Q(tx_dl3_hs_dp[4]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[5] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__2_n_0 ),
        .D(dl_tx_hs_dp0_in[5]),
        .Q(tx_dl3_hs_dp[5]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__2_n_0 ),
        .D(dl_tx_hs_dp0_in[6]),
        .Q(tx_dl3_hs_dp[6]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[7] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__2_n_0 ),
        .D(dl_tx_hs_dp0_in[7]),
        .Q(tx_dl3_hs_dp[7]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  LUT6 #(
    .INIT(64'h1133FFFF30FC0000)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_1__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(dl_tx_state[1]),
        .I2(timeout_zero_out_i_0),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_2__2_n_0 ),
        .I5(dl_tx_state[0]),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'hFF80)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_2__2 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[0]),
        .I2(time_out_trail),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'h662A)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state[1]_i_1__2 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[0]),
        .I2(time_out_trail),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_state[1]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_1__2_n_0 ),
        .Q(dl_tx_state[0]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_state[1]_i_1__2_n_0 ),
        .Q(dl_tx_state[1]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(timeout_zero_out_i_0),
        .I2(dl3_txrequesths),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__2_n_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__2_n_0 ),
        .Q(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h8A8F02008A8F0A00)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__2 
       (.I0(dl3_txrequesths),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ),
        .I2(dl_tx_state[1]),
        .I3(dl_tx_state[0]),
        .I4(dl3_txdatahs[7]),
        .I5(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .O(p_0_in_0));
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__2_n_0 ),
        .D(p_0_in_0),
        .Q(gen_eot_r),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  CARRY4 TRAIL_TIMEOUT0__120_carry
       (.CI(1'b0),
        .CO({TRAIL_TIMEOUT0__120_carry_n_0,TRAIL_TIMEOUT0__120_carry_n_1,TRAIL_TIMEOUT0__120_carry_n_2,TRAIL_TIMEOUT0__120_carry_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__120_carry_i_1__1_n_0,TRAIL_TIMEOUT0__120_carry_i_2__1_n_0,TRAIL_TIMEOUT0__120_carry_i_3__1_n_0,1'b0}),
        .O(NLW_TRAIL_TIMEOUT0__120_carry_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0__120_carry_i_4__2_n_0,TRAIL_TIMEOUT0__120_carry_i_5__2_n_0,TRAIL_TIMEOUT0__120_carry_i_6__2_n_0,TRAIL_TIMEOUT0__120_carry_i_7__2_n_0}));
  CARRY4 TRAIL_TIMEOUT0__120_carry__0
       (.CI(TRAIL_TIMEOUT0__120_carry_n_0),
        .CO({TRAIL_TIMEOUT0__120_carry__0_n_0,TRAIL_TIMEOUT0__120_carry__0_n_1,TRAIL_TIMEOUT0__120_carry__0_n_2,TRAIL_TIMEOUT0__120_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__120_carry__0_i_1__1_n_0,TRAIL_TIMEOUT0__120_carry__0_i_2__1_n_0,TRAIL_TIMEOUT0__120_carry__0_i_3__1_n_0,TRAIL_TIMEOUT0__120_carry__0_i_4__1_n_0}),
        .O(NLW_TRAIL_TIMEOUT0__120_carry__0_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0__120_carry__0_i_5__2_n_0,TRAIL_TIMEOUT0__120_carry__0_i_6__2_n_0,TRAIL_TIMEOUT0__120_carry__0_i_7__2_n_0,TRAIL_TIMEOUT0__120_carry__0_i_8__2_n_0}));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry__0_i_1__1
       (.I0(TRAIL_TIMEOUT0__92_carry_n_5),
        .I1(TRAIL_TIMEOUT1_n_93),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_1__1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry__0_i_2__1
       (.I0(TRAIL_TIMEOUT0__92_carry_n_6),
        .I1(TRAIL_TIMEOUT1_n_94),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_2__1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry__0_i_3__1
       (.I0(TRAIL_TIMEOUT0__92_carry_n_7),
        .I1(TRAIL_TIMEOUT1_n_95),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_3__1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry__0_i_4__1
       (.I0(TRAIL_TIMEOUT0__60_carry_n_6),
        .I1(TRAIL_TIMEOUT1_n_96),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_4__1_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    TRAIL_TIMEOUT0__120_carry__0_i_5__2
       (.I0(TRAIL_TIMEOUT1_n_93),
        .I1(TRAIL_TIMEOUT0__92_carry_n_5),
        .I2(TRAIL_TIMEOUT0__92_carry_n_4),
        .I3(TRAIL_TIMEOUT1_n_92),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_5__2_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    TRAIL_TIMEOUT0__120_carry__0_i_6__2
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT0__92_carry_n_6),
        .I2(TRAIL_TIMEOUT0__92_carry_n_5),
        .I3(TRAIL_TIMEOUT1_n_93),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_6__2_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    TRAIL_TIMEOUT0__120_carry__0_i_7__2
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT0__92_carry_n_7),
        .I2(TRAIL_TIMEOUT0__92_carry_n_6),
        .I3(TRAIL_TIMEOUT1_n_94),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_7__2_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    TRAIL_TIMEOUT0__120_carry__0_i_8__2
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT0__60_carry_n_6),
        .I2(TRAIL_TIMEOUT0__92_carry_n_7),
        .I3(TRAIL_TIMEOUT1_n_95),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_8__2_n_0));
  CARRY4 TRAIL_TIMEOUT0__120_carry__1
       (.CI(TRAIL_TIMEOUT0__120_carry__0_n_0),
        .CO({TRAIL_TIMEOUT0__120_carry__1_n_0,TRAIL_TIMEOUT0__120_carry__1_n_1,TRAIL_TIMEOUT0__120_carry__1_n_2,TRAIL_TIMEOUT0__120_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__120_carry__1_i_1__1_n_0,TRAIL_TIMEOUT0__120_carry__1_i_2__1_n_0,TRAIL_TIMEOUT0__120_carry__1_i_3__1_n_0,TRAIL_TIMEOUT0__120_carry__1_i_4__1_n_0}),
        .O(NLW_TRAIL_TIMEOUT0__120_carry__1_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0__120_carry__1_i_5__2_n_0,TRAIL_TIMEOUT0__120_carry__1_i_6__2_n_0,TRAIL_TIMEOUT0__120_carry__1_i_7__2_n_0,TRAIL_TIMEOUT0__120_carry__1_i_8__2_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__1_i_1__1
       (.I0(TRAIL_TIMEOUT0__92_carry__0_n_5),
        .I1(TRAIL_TIMEOUT1_n_89),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__1_i_2__1
       (.I0(TRAIL_TIMEOUT0__92_carry__0_n_6),
        .I1(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__1_i_3__1
       (.I0(TRAIL_TIMEOUT0__92_carry__0_n_7),
        .I1(TRAIL_TIMEOUT1_n_91),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__1_i_4__1
       (.I0(TRAIL_TIMEOUT0__92_carry_n_4),
        .I1(TRAIL_TIMEOUT1_n_92),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_4__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__1_i_5__2
       (.I0(TRAIL_TIMEOUT1_n_89),
        .I1(TRAIL_TIMEOUT0__92_carry__0_n_5),
        .I2(TRAIL_TIMEOUT0__92_carry__0_n_4),
        .I3(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_5__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__1_i_6__2
       (.I0(TRAIL_TIMEOUT1_n_90),
        .I1(TRAIL_TIMEOUT0__92_carry__0_n_6),
        .I2(TRAIL_TIMEOUT0__92_carry__0_n_5),
        .I3(TRAIL_TIMEOUT1_n_89),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_6__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__1_i_7__2
       (.I0(TRAIL_TIMEOUT1_n_91),
        .I1(TRAIL_TIMEOUT0__92_carry__0_n_7),
        .I2(TRAIL_TIMEOUT0__92_carry__0_n_6),
        .I3(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_7__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__1_i_8__2
       (.I0(TRAIL_TIMEOUT1_n_92),
        .I1(TRAIL_TIMEOUT0__92_carry_n_4),
        .I2(TRAIL_TIMEOUT0__92_carry__0_n_7),
        .I3(TRAIL_TIMEOUT1_n_91),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_8__2_n_0));
  CARRY4 TRAIL_TIMEOUT0__120_carry__2
       (.CI(TRAIL_TIMEOUT0__120_carry__1_n_0),
        .CO({NLW_TRAIL_TIMEOUT0__120_carry__2_CO_UNCONNECTED[3:2],TRAIL_TIMEOUT0__120_carry__2_n_2,TRAIL_TIMEOUT0__120_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,TRAIL_TIMEOUT0__120_carry__2_i_1__1_n_0,TRAIL_TIMEOUT0__120_carry__2_i_2__1_n_0}),
        .O(NLW_TRAIL_TIMEOUT0__120_carry__2_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,TRAIL_TIMEOUT0__120_carry__2_i_3__2_n_0,TRAIL_TIMEOUT0__120_carry__2_i_4__2_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__2_i_1__1
       (.I0(TRAIL_TIMEOUT0__92_carry__1_n_7),
        .I1(TRAIL_TIMEOUT1_n_87),
        .O(TRAIL_TIMEOUT0__120_carry__2_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__2_i_2__1
       (.I0(TRAIL_TIMEOUT0__92_carry__0_n_4),
        .I1(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0__120_carry__2_i_2__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__2_i_3__2
       (.I0(TRAIL_TIMEOUT1_n_87),
        .I1(TRAIL_TIMEOUT0__92_carry__1_n_7),
        .I2(TRAIL_TIMEOUT0__92_carry__1_n_6),
        .I3(TRAIL_TIMEOUT1_n_86),
        .O(TRAIL_TIMEOUT0__120_carry__2_i_3__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__2_i_4__2
       (.I0(TRAIL_TIMEOUT1_n_88),
        .I1(TRAIL_TIMEOUT0__92_carry__0_n_4),
        .I2(TRAIL_TIMEOUT0__92_carry__1_n_7),
        .I3(TRAIL_TIMEOUT1_n_87),
        .O(TRAIL_TIMEOUT0__120_carry__2_i_4__2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry_i_1__1
       (.I0(TRAIL_TIMEOUT0__60_carry_n_7),
        .I1(TRAIL_TIMEOUT1_n_97),
        .O(TRAIL_TIMEOUT0__120_carry_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry_i_2__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_6),
        .I1(TRAIL_TIMEOUT1_n_98),
        .O(TRAIL_TIMEOUT0__120_carry_i_2__1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry_i_3__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT1_n_99),
        .O(TRAIL_TIMEOUT0__120_carry_i_3__1_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    TRAIL_TIMEOUT0__120_carry_i_4__2
       (.I0(TRAIL_TIMEOUT1_n_97),
        .I1(TRAIL_TIMEOUT0__60_carry_n_7),
        .I2(TRAIL_TIMEOUT0__60_carry_n_6),
        .I3(TRAIL_TIMEOUT1_n_96),
        .O(TRAIL_TIMEOUT0__120_carry_i_4__2_n_0));
  LUT4 #(
    .INIT(16'h4BB4)) 
    TRAIL_TIMEOUT0__120_carry_i_5__2
       (.I0(TRAIL_TIMEOUT1_n_98),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0__60_carry_n_7),
        .I3(TRAIL_TIMEOUT1_n_97),
        .O(TRAIL_TIMEOUT0__120_carry_i_5__2_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    TRAIL_TIMEOUT0__120_carry_i_6__2
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .I3(TRAIL_TIMEOUT1_n_98),
        .O(TRAIL_TIMEOUT0__120_carry_i_6__2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    TRAIL_TIMEOUT0__120_carry_i_7__2
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__120_carry_i_7__2_n_0));
  CARRY4 TRAIL_TIMEOUT0__60_carry
       (.CI(1'b0),
        .CO({TRAIL_TIMEOUT0__60_carry_n_0,TRAIL_TIMEOUT0__60_carry_n_1,TRAIL_TIMEOUT0__60_carry_n_2,TRAIL_TIMEOUT0__60_carry_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__60_carry_i_1__2_n_0,TRAIL_TIMEOUT0__60_carry_i_2__2_n_0,TRAIL_TIMEOUT0__60_carry_i_3__2_n_0,1'b0}),
        .O({TRAIL_TIMEOUT0__60_carry_n_4,TRAIL_TIMEOUT0__60_carry_n_5,TRAIL_TIMEOUT0__60_carry_n_6,TRAIL_TIMEOUT0__60_carry_n_7}),
        .S({TRAIL_TIMEOUT0__60_carry_i_4__2_n_0,TRAIL_TIMEOUT0__60_carry_i_5__2_n_0,TRAIL_TIMEOUT0__60_carry_i_6__2_n_0,TRAIL_TIMEOUT0__60_carry_i_7__2_n_0}));
  CARRY4 TRAIL_TIMEOUT0__60_carry__0
       (.CI(TRAIL_TIMEOUT0__60_carry_n_0),
        .CO({TRAIL_TIMEOUT0__60_carry__0_n_0,TRAIL_TIMEOUT0__60_carry__0_n_1,TRAIL_TIMEOUT0__60_carry__0_n_2,TRAIL_TIMEOUT0__60_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__60_carry__0_i_1__2_n_0,TRAIL_TIMEOUT0__60_carry__0_i_2__2_n_0,TRAIL_TIMEOUT0__60_carry__0_i_3__2_n_0,TRAIL_TIMEOUT0__60_carry__0_i_4__2_n_0}),
        .O({TRAIL_TIMEOUT0__60_carry__0_n_4,TRAIL_TIMEOUT0__60_carry__0_n_5,TRAIL_TIMEOUT0__60_carry__0_n_6,TRAIL_TIMEOUT0__60_carry__0_n_7}),
        .S({TRAIL_TIMEOUT0__60_carry__0_i_5__2_n_0,TRAIL_TIMEOUT0__60_carry__0_i_6__2_n_0,TRAIL_TIMEOUT0__60_carry__0_i_7__2_n_0,TRAIL_TIMEOUT0__60_carry__0_i_8__2_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0__60_carry__0_i_1__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_1__2_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__60_carry__0_i_2__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_2__2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    TRAIL_TIMEOUT0__60_carry__0_i_3__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_5),
        .I2(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_3__2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    TRAIL_TIMEOUT0__60_carry__0_i_4__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_4__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__60_carry__0_i_5__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(TRAIL_TIMEOUT0_carry__5_n_4),
        .I3(TRAIL_TIMEOUT0_carry__5_n_6),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_5__2_n_0));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    TRAIL_TIMEOUT0__60_carry__0_i_6__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .I2(TRAIL_TIMEOUT0_carry__5_n_6),
        .I3(TRAIL_TIMEOUT0_carry__5_n_5),
        .I4(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_6__2_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__60_carry__0_i_7__2
       (.I0(TRAIL_TIMEOUT0__60_carry__0_i_3__2_n_0),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(TRAIL_TIMEOUT0_carry__5_n_4),
        .I3(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_7__2_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__60_carry__0_i_8__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_5),
        .I2(TRAIL_TIMEOUT0_carry__5_n_7),
        .I3(TRAIL_TIMEOUT0__60_carry__0_i_4__2_n_0),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_8__2_n_0));
  CARRY4 TRAIL_TIMEOUT0__60_carry__1
       (.CI(TRAIL_TIMEOUT0__60_carry__0_n_0),
        .CO({TRAIL_TIMEOUT0__60_carry__1_n_0,NLW_TRAIL_TIMEOUT0__60_carry__1_CO_UNCONNECTED[2],TRAIL_TIMEOUT0__60_carry__1_n_2,TRAIL_TIMEOUT0__60_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,TRAIL_TIMEOUT0_carry__5_n_4,TRAIL_TIMEOUT0_carry__5_n_5,TRAIL_TIMEOUT0__60_carry__1_i_1__2_n_0}),
        .O({NLW_TRAIL_TIMEOUT0__60_carry__1_O_UNCONNECTED[3],TRAIL_TIMEOUT0__60_carry__1_n_5,TRAIL_TIMEOUT0__60_carry__1_n_6,TRAIL_TIMEOUT0__60_carry__1_n_7}),
        .S({1'b1,TRAIL_TIMEOUT0__60_carry__1_i_2__2_n_0,TRAIL_TIMEOUT0__60_carry__1_i_3__2_n_0,TRAIL_TIMEOUT0__60_carry__1_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__60_carry__1_i_1__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__1_i_1__2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    TRAIL_TIMEOUT0__60_carry__1_i_2__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__1_i_2__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0__60_carry__1_i_3__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__1_i_3__2_n_0));
  LUT3 #(
    .INIT(8'h4B)) 
    TRAIL_TIMEOUT0__60_carry__1_i_4__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_4),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(TRAIL_TIMEOUT0_carry__5_n_5),
        .O(TRAIL_TIMEOUT0__60_carry__1_i_4__1_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__60_carry_i_1__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__60_carry_i_1__2_n_0));
  (* HLUTNM = "lutpair34" *) 
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__60_carry_i_2__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(TRAIL_TIMEOUT0__60_carry_i_2__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0__60_carry_i_3__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_6),
        .I1(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__60_carry_i_3__2_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__60_carry_i_4__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .I3(TRAIL_TIMEOUT0__60_carry_i_1__2_n_0),
        .O(TRAIL_TIMEOUT0__60_carry_i_4__2_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__60_carry_i_5__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .I3(TRAIL_TIMEOUT0__60_carry_i_2__2_n_0),
        .O(TRAIL_TIMEOUT0__60_carry_i_5__2_n_0));
  (* HLUTNM = "lutpair34" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    TRAIL_TIMEOUT0__60_carry_i_6__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .I3(TRAIL_TIMEOUT0_carry__4_n_5),
        .O(TRAIL_TIMEOUT0__60_carry_i_6__2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    TRAIL_TIMEOUT0__60_carry_i_7__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__60_carry_i_7__2_n_0));
  CARRY4 TRAIL_TIMEOUT0__92_carry
       (.CI(1'b0),
        .CO({TRAIL_TIMEOUT0__92_carry_n_0,TRAIL_TIMEOUT0__92_carry_n_1,TRAIL_TIMEOUT0__92_carry_n_2,TRAIL_TIMEOUT0__92_carry_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__92_carry_i_1__2_n_0,TRAIL_TIMEOUT0__92_carry_i_2__1_n_0,TRAIL_TIMEOUT0__92_carry_i_3__1_n_0,1'b0}),
        .O({TRAIL_TIMEOUT0__92_carry_n_4,TRAIL_TIMEOUT0__92_carry_n_5,TRAIL_TIMEOUT0__92_carry_n_6,TRAIL_TIMEOUT0__92_carry_n_7}),
        .S({TRAIL_TIMEOUT0__92_carry_i_4__2_n_0,TRAIL_TIMEOUT0__92_carry_i_5__2_n_0,TRAIL_TIMEOUT0__92_carry_i_6__2_n_0,TRAIL_TIMEOUT0__92_carry_i_7__2_n_0}));
  CARRY4 TRAIL_TIMEOUT0__92_carry__0
       (.CI(TRAIL_TIMEOUT0__92_carry_n_0),
        .CO({TRAIL_TIMEOUT0__92_carry__0_n_0,TRAIL_TIMEOUT0__92_carry__0_n_1,TRAIL_TIMEOUT0__92_carry__0_n_2,TRAIL_TIMEOUT0__92_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__92_carry__0_i_1__2_n_0,TRAIL_TIMEOUT0__92_carry__0_i_2__2_n_0,TRAIL_TIMEOUT0__92_carry__0_i_3__2_n_0,TRAIL_TIMEOUT0__92_carry__0_i_4__2_n_0}),
        .O({TRAIL_TIMEOUT0__92_carry__0_n_4,TRAIL_TIMEOUT0__92_carry__0_n_5,TRAIL_TIMEOUT0__92_carry__0_n_6,TRAIL_TIMEOUT0__92_carry__0_n_7}),
        .S({TRAIL_TIMEOUT0__92_carry__0_i_5__2_n_0,TRAIL_TIMEOUT0__92_carry__0_i_6__2_n_0,TRAIL_TIMEOUT0__92_carry__0_i_7__2_n_0,TRAIL_TIMEOUT0__92_carry__0_i_8__2_n_0}));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__92_carry__0_i_1__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0__60_carry__1_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_1__2_n_0));
  (* HLUTNM = "lutpair35" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__92_carry__0_i_2__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_4),
        .I2(TRAIL_TIMEOUT0_carry__4_n_5),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_2__2_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__92_carry__0_i_3__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_5),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_3__2_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__92_carry__0_i_4__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_4__2_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__92_carry__0_i_5__2
       (.I0(TRAIL_TIMEOUT0__92_carry__0_i_1__2_n_0),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .I2(TRAIL_TIMEOUT0__60_carry__1_n_6),
        .I3(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_5__2_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__92_carry__0_i_6__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0__60_carry__1_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .I3(TRAIL_TIMEOUT0__92_carry__0_i_2__2_n_0),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_6__2_n_0));
  (* HLUTNM = "lutpair35" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__92_carry__0_i_7__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_4),
        .I2(TRAIL_TIMEOUT0_carry__4_n_5),
        .I3(TRAIL_TIMEOUT0__92_carry__0_i_3__2_n_0),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_7__2_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__92_carry__0_i_8__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_5),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .I3(TRAIL_TIMEOUT0__92_carry__0_i_4__2_n_0),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_8__2_n_0));
  CARRY4 TRAIL_TIMEOUT0__92_carry__1
       (.CI(TRAIL_TIMEOUT0__92_carry__0_n_0),
        .CO({NLW_TRAIL_TIMEOUT0__92_carry__1_CO_UNCONNECTED[3:1],TRAIL_TIMEOUT0__92_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,TRAIL_TIMEOUT0__92_carry__1_i_1__2_n_0}),
        .O({NLW_TRAIL_TIMEOUT0__92_carry__1_O_UNCONNECTED[3:2],TRAIL_TIMEOUT0__92_carry__1_n_6,TRAIL_TIMEOUT0__92_carry__1_n_7}),
        .S({1'b0,1'b0,TRAIL_TIMEOUT0__92_carry__1_i_2__2_n_0,TRAIL_TIMEOUT0__92_carry__1_i_3__2_n_0}));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__92_carry__1_i_1__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_4),
        .I1(TRAIL_TIMEOUT0__60_carry__1_n_6),
        .I2(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(TRAIL_TIMEOUT0__92_carry__1_i_1__2_n_0));
  LUT4 #(
    .INIT(16'hE11E)) 
    TRAIL_TIMEOUT0__92_carry__1_i_2__2
       (.I0(TRAIL_TIMEOUT0__60_carry__1_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(TRAIL_TIMEOUT0__60_carry__1_n_0),
        .I3(TRAIL_TIMEOUT0_carry__5_n_5),
        .O(TRAIL_TIMEOUT0__92_carry__1_i_2__2_n_0));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    TRAIL_TIMEOUT0__92_carry__1_i_3__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry__1_n_6),
        .I2(TRAIL_TIMEOUT0_carry__5_n_4),
        .I3(TRAIL_TIMEOUT0__60_carry__1_n_5),
        .I4(TRAIL_TIMEOUT0_carry__5_n_6),
        .O(TRAIL_TIMEOUT0__92_carry__1_i_3__2_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    TRAIL_TIMEOUT0__92_carry_i_1__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__92_carry_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__92_carry_i_2__1
       (.I0(TRAIL_TIMEOUT0__60_carry_n_4),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(TRAIL_TIMEOUT0__92_carry_i_2__1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__92_carry_i_3__1
       (.I0(TRAIL_TIMEOUT0__60_carry_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__92_carry_i_3__1_n_0));
  LUT5 #(
    .INIT(32'h69966969)) 
    TRAIL_TIMEOUT0__92_carry_i_4__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .I3(TRAIL_TIMEOUT0_carry__4_n_5),
        .I4(TRAIL_TIMEOUT0__60_carry__0_n_7),
        .O(TRAIL_TIMEOUT0__92_carry_i_4__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__92_carry_i_5__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_6),
        .I1(TRAIL_TIMEOUT0__60_carry_n_4),
        .I2(TRAIL_TIMEOUT0__60_carry__0_n_7),
        .I3(TRAIL_TIMEOUT0_carry__4_n_5),
        .O(TRAIL_TIMEOUT0__92_carry_i_5__2_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    TRAIL_TIMEOUT0__92_carry_i_6__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry_n_5),
        .I2(TRAIL_TIMEOUT0__60_carry_n_4),
        .I3(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(TRAIL_TIMEOUT0__92_carry_i_6__2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    TRAIL_TIMEOUT0__92_carry_i_7__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry_n_5),
        .O(TRAIL_TIMEOUT0__92_carry_i_7__2_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry
       (.CI(1'b0),
        .CO({TRAIL_TIMEOUT0_carry_n_0,TRAIL_TIMEOUT0_carry_n_1,TRAIL_TIMEOUT0_carry_n_2,TRAIL_TIMEOUT0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT1_n_104,TRAIL_TIMEOUT1_n_105,1'b0,1'b1}),
        .O(NLW_TRAIL_TIMEOUT0_carry_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry_i_1__2_n_0,TRAIL_TIMEOUT0_carry_i_2__2_n_0,TRAIL_TIMEOUT0_carry_i_3__2_n_0,TRAIL_TIMEOUT1_n_105}));
  CARRY4 TRAIL_TIMEOUT0_carry__0
       (.CI(TRAIL_TIMEOUT0_carry_n_0),
        .CO({TRAIL_TIMEOUT0_carry__0_n_0,TRAIL_TIMEOUT0_carry__0_n_1,TRAIL_TIMEOUT0_carry__0_n_2,TRAIL_TIMEOUT0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT1_n_100,TRAIL_TIMEOUT1_n_101,TRAIL_TIMEOUT1_n_102,TRAIL_TIMEOUT1_n_103}),
        .O(NLW_TRAIL_TIMEOUT0_carry__0_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry__0_i_1__2_n_0,TRAIL_TIMEOUT0_carry__0_i_2__2_n_0,TRAIL_TIMEOUT0_carry__0_i_3__2_n_0,TRAIL_TIMEOUT0_carry__0_i_4__2_n_0}));
  LUT3 #(
    .INIT(8'h69)) 
    TRAIL_TIMEOUT0_carry__0_i_1__2
       (.I0(TRAIL_TIMEOUT1_n_98),
        .I1(TRAIL_TIMEOUT1_n_105),
        .I2(TRAIL_TIMEOUT1_n_100),
        .O(TRAIL_TIMEOUT0_carry__0_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__0_i_2__2
       (.I0(TRAIL_TIMEOUT1_n_101),
        .I1(TRAIL_TIMEOUT1_n_99),
        .O(TRAIL_TIMEOUT0_carry__0_i_2__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__0_i_3__2
       (.I0(TRAIL_TIMEOUT1_n_102),
        .I1(TRAIL_TIMEOUT1_n_100),
        .O(TRAIL_TIMEOUT0_carry__0_i_3__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__0_i_4__2
       (.I0(TRAIL_TIMEOUT1_n_103),
        .I1(TRAIL_TIMEOUT1_n_101),
        .O(TRAIL_TIMEOUT0_carry__0_i_4__2_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__1
       (.CI(TRAIL_TIMEOUT0_carry__0_n_0),
        .CO({TRAIL_TIMEOUT0_carry__1_n_0,TRAIL_TIMEOUT0_carry__1_n_1,TRAIL_TIMEOUT0_carry__1_n_2,TRAIL_TIMEOUT0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0_carry__1_i_1__2_n_0,TRAIL_TIMEOUT0_carry__1_i_2__2_n_0,TRAIL_TIMEOUT0_carry__1_i_3__2_n_0,TRAIL_TIMEOUT0_carry__1_i_4__2_n_0}),
        .O(NLW_TRAIL_TIMEOUT0_carry__1_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry__1_i_5__2_n_0,TRAIL_TIMEOUT0_carry__1_i_6__2_n_0,TRAIL_TIMEOUT0_carry__1_i_7__2_n_0,TRAIL_TIMEOUT0_carry__1_i_8__2_n_0}));
  (* HLUTNM = "lutpair25" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0_carry__1_i_1__2
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT1_n_102),
        .I2(TRAIL_TIMEOUT1_n_97),
        .O(TRAIL_TIMEOUT0_carry__1_i_1__2_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0_carry__1_i_2__2
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT1_n_103),
        .I2(TRAIL_TIMEOUT1_n_98),
        .O(TRAIL_TIMEOUT0_carry__1_i_2__2_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__1_i_3__2
       (.I0(TRAIL_TIMEOUT1_n_104),
        .I1(TRAIL_TIMEOUT1_n_97),
        .I2(TRAIL_TIMEOUT1_n_99),
        .O(TRAIL_TIMEOUT0_carry__1_i_3__2_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    TRAIL_TIMEOUT0_carry__1_i_4__2
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT1_n_97),
        .I2(TRAIL_TIMEOUT1_n_104),
        .O(TRAIL_TIMEOUT0_carry__1_i_4__2_n_0));
  (* HLUTNM = "lutpair26" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__1_i_5__2
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT1_n_101),
        .I2(TRAIL_TIMEOUT1_n_96),
        .I3(TRAIL_TIMEOUT0_carry__1_i_1__2_n_0),
        .O(TRAIL_TIMEOUT0_carry__1_i_5__2_n_0));
  (* HLUTNM = "lutpair25" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__1_i_6__2
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT1_n_102),
        .I2(TRAIL_TIMEOUT1_n_97),
        .I3(TRAIL_TIMEOUT0_carry__1_i_2__2_n_0),
        .O(TRAIL_TIMEOUT0_carry__1_i_6__2_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__1_i_7__2
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT1_n_103),
        .I2(TRAIL_TIMEOUT1_n_98),
        .I3(TRAIL_TIMEOUT0_carry__1_i_3__2_n_0),
        .O(TRAIL_TIMEOUT0_carry__1_i_7__2_n_0));
  LUT5 #(
    .INIT(32'h69966969)) 
    TRAIL_TIMEOUT0_carry__1_i_8__2
       (.I0(TRAIL_TIMEOUT1_n_104),
        .I1(TRAIL_TIMEOUT1_n_97),
        .I2(TRAIL_TIMEOUT1_n_99),
        .I3(TRAIL_TIMEOUT1_n_98),
        .I4(TRAIL_TIMEOUT1_n_105),
        .O(TRAIL_TIMEOUT0_carry__1_i_8__2_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__2
       (.CI(TRAIL_TIMEOUT0_carry__1_n_0),
        .CO({TRAIL_TIMEOUT0_carry__2_n_0,TRAIL_TIMEOUT0_carry__2_n_1,TRAIL_TIMEOUT0_carry__2_n_2,TRAIL_TIMEOUT0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0_carry__2_i_1__2_n_0,TRAIL_TIMEOUT0_carry__2_i_2__2_n_0,TRAIL_TIMEOUT0_carry__2_i_3__2_n_0,TRAIL_TIMEOUT0_carry__2_i_4__2_n_0}),
        .O(NLW_TRAIL_TIMEOUT0_carry__2_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry__2_i_5__2_n_0,TRAIL_TIMEOUT0_carry__2_i_6__2_n_0,TRAIL_TIMEOUT0_carry__2_i_7__2_n_0,TRAIL_TIMEOUT0_carry__2_i_8__2_n_0}));
  (* HLUTNM = "lutpair29" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__2_i_1__2
       (.I0(TRAIL_TIMEOUT1_n_98),
        .I1(TRAIL_TIMEOUT1_n_91),
        .I2(TRAIL_TIMEOUT1_n_93),
        .O(TRAIL_TIMEOUT0_carry__2_i_1__2_n_0));
  (* HLUTNM = "lutpair28" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__2_i_2__2
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT1_n_92),
        .I2(TRAIL_TIMEOUT1_n_94),
        .O(TRAIL_TIMEOUT0_carry__2_i_2__2_n_0));
  (* HLUTNM = "lutpair27" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0_carry__2_i_3__2
       (.I0(TRAIL_TIMEOUT1_n_93),
        .I1(TRAIL_TIMEOUT1_n_100),
        .I2(TRAIL_TIMEOUT1_n_95),
        .O(TRAIL_TIMEOUT0_carry__2_i_3__2_n_0));
  (* HLUTNM = "lutpair26" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0_carry__2_i_4__2
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT1_n_101),
        .I2(TRAIL_TIMEOUT1_n_96),
        .O(TRAIL_TIMEOUT0_carry__2_i_4__2_n_0));
  (* HLUTNM = "lutpair30" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__2_i_5__2
       (.I0(TRAIL_TIMEOUT1_n_97),
        .I1(TRAIL_TIMEOUT1_n_90),
        .I2(TRAIL_TIMEOUT1_n_92),
        .I3(TRAIL_TIMEOUT0_carry__2_i_1__2_n_0),
        .O(TRAIL_TIMEOUT0_carry__2_i_5__2_n_0));
  (* HLUTNM = "lutpair29" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__2_i_6__2
       (.I0(TRAIL_TIMEOUT1_n_98),
        .I1(TRAIL_TIMEOUT1_n_91),
        .I2(TRAIL_TIMEOUT1_n_93),
        .I3(TRAIL_TIMEOUT0_carry__2_i_2__2_n_0),
        .O(TRAIL_TIMEOUT0_carry__2_i_6__2_n_0));
  (* HLUTNM = "lutpair28" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__2_i_7__2
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT1_n_92),
        .I2(TRAIL_TIMEOUT1_n_94),
        .I3(TRAIL_TIMEOUT0_carry__2_i_3__2_n_0),
        .O(TRAIL_TIMEOUT0_carry__2_i_7__2_n_0));
  (* HLUTNM = "lutpair27" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__2_i_8__2
       (.I0(TRAIL_TIMEOUT1_n_93),
        .I1(TRAIL_TIMEOUT1_n_100),
        .I2(TRAIL_TIMEOUT1_n_95),
        .I3(TRAIL_TIMEOUT0_carry__2_i_4__2_n_0),
        .O(TRAIL_TIMEOUT0_carry__2_i_8__2_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__3
       (.CI(TRAIL_TIMEOUT0_carry__2_n_0),
        .CO({TRAIL_TIMEOUT0_carry__3_n_0,TRAIL_TIMEOUT0_carry__3_n_1,TRAIL_TIMEOUT0_carry__3_n_2,TRAIL_TIMEOUT0_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0_carry__3_i_1__2_n_0,TRAIL_TIMEOUT0_carry__3_i_2__2_n_0,TRAIL_TIMEOUT0_carry__3_i_3__2_n_0,TRAIL_TIMEOUT0_carry__3_i_4__2_n_0}),
        .O(NLW_TRAIL_TIMEOUT0_carry__3_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry__3_i_5__2_n_0,TRAIL_TIMEOUT0_carry__3_i_6__2_n_0,TRAIL_TIMEOUT0_carry__3_i_7__2_n_0,TRAIL_TIMEOUT0_carry__3_i_8__2_n_0}));
  (* HLUTNM = "lutpair33" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__3_i_1__2
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT1_n_87),
        .I2(TRAIL_TIMEOUT1_n_89),
        .O(TRAIL_TIMEOUT0_carry__3_i_1__2_n_0));
  (* HLUTNM = "lutpair32" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__3_i_2__2
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT1_n_88),
        .I2(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0_carry__3_i_2__2_n_0));
  (* HLUTNM = "lutpair31" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__3_i_3__2
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT1_n_89),
        .I2(TRAIL_TIMEOUT1_n_91),
        .O(TRAIL_TIMEOUT0_carry__3_i_3__2_n_0));
  (* HLUTNM = "lutpair30" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__3_i_4__2
       (.I0(TRAIL_TIMEOUT1_n_97),
        .I1(TRAIL_TIMEOUT1_n_90),
        .I2(TRAIL_TIMEOUT1_n_92),
        .O(TRAIL_TIMEOUT0_carry__3_i_4__2_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__3_i_5__2
       (.I0(TRAIL_TIMEOUT0_carry__3_i_1__2_n_0),
        .I1(TRAIL_TIMEOUT1_n_93),
        .I2(TRAIL_TIMEOUT1_n_86),
        .I3(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0_carry__3_i_5__2_n_0));
  (* HLUTNM = "lutpair33" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__3_i_6__2
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT1_n_87),
        .I2(TRAIL_TIMEOUT1_n_89),
        .I3(TRAIL_TIMEOUT0_carry__3_i_2__2_n_0),
        .O(TRAIL_TIMEOUT0_carry__3_i_6__2_n_0));
  (* HLUTNM = "lutpair32" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__3_i_7__2
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT1_n_88),
        .I2(TRAIL_TIMEOUT1_n_90),
        .I3(TRAIL_TIMEOUT0_carry__3_i_3__2_n_0),
        .O(TRAIL_TIMEOUT0_carry__3_i_7__2_n_0));
  (* HLUTNM = "lutpair31" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__3_i_8__2
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT1_n_89),
        .I2(TRAIL_TIMEOUT1_n_91),
        .I3(TRAIL_TIMEOUT0_carry__3_i_4__2_n_0),
        .O(TRAIL_TIMEOUT0_carry__3_i_8__2_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__4
       (.CI(TRAIL_TIMEOUT0_carry__3_n_0),
        .CO({TRAIL_TIMEOUT0_carry__4_n_0,TRAIL_TIMEOUT0_carry__4_n_1,TRAIL_TIMEOUT0_carry__4_n_2,TRAIL_TIMEOUT0_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT1_n_90,TRAIL_TIMEOUT0_carry__4_i_1__2_n_0,TRAIL_TIMEOUT0_carry__4_i_2__2_n_0,TRAIL_TIMEOUT0_carry__4_i_3__2_n_0}),
        .O({TRAIL_TIMEOUT0_carry__4_n_4,TRAIL_TIMEOUT0_carry__4_n_5,TRAIL_TIMEOUT0_carry__4_n_6,TRAIL_TIMEOUT0_carry__4_n_7}),
        .S({TRAIL_TIMEOUT0_carry__4_i_4__2_n_0,TRAIL_TIMEOUT0_carry__4_i_5__2_n_0,TRAIL_TIMEOUT0_carry__4_i_6__2_n_0,TRAIL_TIMEOUT0_carry__4_i_7__2_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    TRAIL_TIMEOUT0_carry__4_i_1__2
       (.I0(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0_carry__4_i_1__2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    TRAIL_TIMEOUT0_carry__4_i_2__2
       (.I0(TRAIL_TIMEOUT1_n_92),
        .I1(TRAIL_TIMEOUT1_n_87),
        .O(TRAIL_TIMEOUT0_carry__4_i_2__2_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__4_i_3__2
       (.I0(TRAIL_TIMEOUT1_n_93),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0_carry__4_i_3__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__4_i_4__2
       (.I0(TRAIL_TIMEOUT1_n_90),
        .I1(TRAIL_TIMEOUT1_n_89),
        .O(TRAIL_TIMEOUT0_carry__4_i_4__2_n_0));
  LUT3 #(
    .INIT(8'hE1)) 
    TRAIL_TIMEOUT0_carry__4_i_5__2
       (.I0(TRAIL_TIMEOUT1_n_86),
        .I1(TRAIL_TIMEOUT1_n_91),
        .I2(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0_carry__4_i_5__2_n_0));
  LUT4 #(
    .INIT(16'h1EE1)) 
    TRAIL_TIMEOUT0_carry__4_i_6__2
       (.I0(TRAIL_TIMEOUT1_n_87),
        .I1(TRAIL_TIMEOUT1_n_92),
        .I2(TRAIL_TIMEOUT1_n_86),
        .I3(TRAIL_TIMEOUT1_n_91),
        .O(TRAIL_TIMEOUT0_carry__4_i_6__2_n_0));
  LUT5 #(
    .INIT(32'h4DB2B24D)) 
    TRAIL_TIMEOUT0_carry__4_i_7__2
       (.I0(TRAIL_TIMEOUT1_n_88),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(TRAIL_TIMEOUT1_n_93),
        .I3(TRAIL_TIMEOUT1_n_87),
        .I4(TRAIL_TIMEOUT1_n_92),
        .O(TRAIL_TIMEOUT0_carry__4_i_7__2_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__5
       (.CI(TRAIL_TIMEOUT0_carry__4_n_0),
        .CO({NLW_TRAIL_TIMEOUT0_carry__5_CO_UNCONNECTED[3],TRAIL_TIMEOUT0_carry__5_n_1,TRAIL_TIMEOUT0_carry__5_n_2,TRAIL_TIMEOUT0_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,TRAIL_TIMEOUT1_n_87,TRAIL_TIMEOUT1_n_88,TRAIL_TIMEOUT1_n_89}),
        .O({TRAIL_TIMEOUT0_carry__5_n_4,TRAIL_TIMEOUT0_carry__5_n_5,TRAIL_TIMEOUT0_carry__5_n_6,TRAIL_TIMEOUT0_carry__5_n_7}),
        .S({TRAIL_TIMEOUT0_carry__5_i_1__2_n_0,TRAIL_TIMEOUT0_carry__5_i_2__2_n_0,TRAIL_TIMEOUT0_carry__5_i_3__2_n_0,TRAIL_TIMEOUT0_carry__5_i_4__2_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    TRAIL_TIMEOUT0_carry__5_i_1__2
       (.I0(TRAIL_TIMEOUT1_n_86),
        .O(TRAIL_TIMEOUT0_carry__5_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__5_i_2__2
       (.I0(TRAIL_TIMEOUT1_n_87),
        .I1(TRAIL_TIMEOUT1_n_86),
        .O(TRAIL_TIMEOUT0_carry__5_i_2__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__5_i_3__2
       (.I0(TRAIL_TIMEOUT1_n_88),
        .I1(TRAIL_TIMEOUT1_n_87),
        .O(TRAIL_TIMEOUT0_carry__5_i_3__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__5_i_4__2
       (.I0(TRAIL_TIMEOUT1_n_89),
        .I1(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0_carry__5_i_4__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry_i_1__2
       (.I0(TRAIL_TIMEOUT1_n_104),
        .I1(TRAIL_TIMEOUT1_n_102),
        .O(TRAIL_TIMEOUT0_carry_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry_i_2__2
       (.I0(TRAIL_TIMEOUT1_n_105),
        .I1(TRAIL_TIMEOUT1_n_103),
        .O(TRAIL_TIMEOUT0_carry_i_2__2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    TRAIL_TIMEOUT0_carry_i_3__2
       (.I0(TRAIL_TIMEOUT1_n_104),
        .O(TRAIL_TIMEOUT0_carry_i_3__2_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-13 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    TRAIL_TIMEOUT1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_TRAIL_TIMEOUT1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_TRAIL_TIMEOUT1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_TRAIL_TIMEOUT1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_TRAIL_TIMEOUT1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_TRAIL_TIMEOUT1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_TRAIL_TIMEOUT1_OVERFLOW_UNCONNECTED),
        .P({NLW_TRAIL_TIMEOUT1_P_UNCONNECTED[47:20],TRAIL_TIMEOUT1_n_86,TRAIL_TIMEOUT1_n_87,TRAIL_TIMEOUT1_n_88,TRAIL_TIMEOUT1_n_89,TRAIL_TIMEOUT1_n_90,TRAIL_TIMEOUT1_n_91,TRAIL_TIMEOUT1_n_92,TRAIL_TIMEOUT1_n_93,TRAIL_TIMEOUT1_n_94,TRAIL_TIMEOUT1_n_95,TRAIL_TIMEOUT1_n_96,TRAIL_TIMEOUT1_n_97,TRAIL_TIMEOUT1_n_98,TRAIL_TIMEOUT1_n_99,TRAIL_TIMEOUT1_n_100,TRAIL_TIMEOUT1_n_101,TRAIL_TIMEOUT1_n_102,TRAIL_TIMEOUT1_n_103,TRAIL_TIMEOUT1_n_104,TRAIL_TIMEOUT1_n_105}),
        .PATTERNBDETECT(NLW_TRAIL_TIMEOUT1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_TRAIL_TIMEOUT1_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_TRAIL_TIMEOUT1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_TRAIL_TIMEOUT1_UNDERFLOW_UNCONNECTED));
  LUT6 #(
    .INIT(64'h00000000AEAE00AE)) 
    dl_txrequesths_posedge_r_i_1__2
       (.I0(dl_txrequesths_posedge_r_reg_n_0),
        .I1(dl3_txrequesths),
        .I2(dl_txrequesths_r),
        .I3(dl_tx_state[0]),
        .I4(dl_tx_state[1]),
        .I5(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ),
        .O(dl_txrequesths_posedge_r_i_1__2_n_0));
  FDRE dl_txrequesths_posedge_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl_txrequesths_posedge_r_i_1__2_n_0),
        .Q(dl_txrequesths_posedge_r_reg_n_0),
        .R(1'b0));
  FDRE dl_txrequesths_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl3_txrequesths),
        .Q(dl_txrequesths_r),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hC8FF)) 
    hs_xfer_done_i_1__2
       (.I0(hs_xfer_done_i),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ),
        .I2(time_out_trail),
        .I3(out),
        .O(hs_xfer_done_i_1__2_n_0));
  FDRE hs_xfer_done_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(hs_xfer_done_i_1__2_n_0),
        .Q(hs_xfer_done_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \pkt_cnt[0]_i_1__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(dl3_txrequesths),
        .O(pkt_cnt0));
  CARRY4 time_out_trail0_carry
       (.CI(1'b0),
        .CO({time_out_trail0_carry_n_0,time_out_trail0_carry_n_1,time_out_trail0_carry_n_2,time_out_trail0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_time_out_trail0_carry_O_UNCONNECTED[3:0]),
        .S({time_out_trail0_carry_i_1__2_n_0,time_out_trail0_carry_i_2__2_n_0,time_out_trail0_carry_i_3__2_n_0,time_out_trail0_carry_i_4__2_n_0}));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT5 #(
    .INIT(32'h60000000)) 
    time_out_trail0_carry_i_10__2
       (.I0(time_out_trail0_carry_i_12__2_n_0),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .I3(TRAIL_TIMEOUT0_carry__4_n_5),
        .I4(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(time_out_trail0_carry_i_10__2_n_0));
  LUT6 #(
    .INIT(64'h9666966696666666)) 
    time_out_trail0_carry_i_11__2
       (.I0(trail_count_reg[3]),
        .I1(TRAIL_TIMEOUT0_carry__4_n_4),
        .I2(TRAIL_TIMEOUT0_carry__4_n_5),
        .I3(TRAIL_TIMEOUT0_carry__4_n_6),
        .I4(TRAIL_TIMEOUT0_carry__4_n_7),
        .I5(time_out_trail0_carry_i_12__2_n_0),
        .O(time_out_trail0_carry_i_11__2_n_0));
  LUT3 #(
    .INIT(8'h45)) 
    time_out_trail0_carry_i_12__2
       (.I0(TRAIL_TIMEOUT0__120_carry__2_n_2),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(TRAIL_TIMEOUT0__92_carry__1_n_6),
        .O(time_out_trail0_carry_i_12__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    time_out_trail0_carry_i_13__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(trail_count_reg[2]),
        .O(time_out_trail0_carry_i_13__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'h7)) 
    time_out_trail0_carry_i_14__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_6),
        .I1(TRAIL_TIMEOUT0_carry__4_n_5),
        .O(time_out_trail0_carry_i_14__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    time_out_trail0_carry_i_15__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(time_out_trail0_carry_i_15__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    time_out_trail0_carry_i_16__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_5),
        .I3(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(time_out_trail0_carry_i_16__2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    time_out_trail0_carry_i_1__2
       (.I0(trail_count_reg[9]),
        .O(time_out_trail0_carry_i_1__2_n_0));
  LUT6 #(
    .INIT(64'h0000100042210884)) 
    time_out_trail0_carry_i_2__2
       (.I0(trail_count_reg[6]),
        .I1(trail_count_reg[7]),
        .I2(time_out_trail0_carry_i_5__2_n_0),
        .I3(time_out_trail0_carry_i_6__2_n_0),
        .I4(time_out_trail0_carry_i_7__2_n_0),
        .I5(trail_count_reg[8]),
        .O(time_out_trail0_carry_i_2__2_n_0));
  LUT6 #(
    .INIT(64'h0000000006909009)) 
    time_out_trail0_carry_i_3__2
       (.I0(time_out_trail0_carry_i_8__1_n_0),
        .I1(trail_count_reg[5]),
        .I2(trail_count_reg[4]),
        .I3(time_out_trail0_carry_i_9__2_n_0),
        .I4(time_out_trail0_carry_i_10__2_n_0),
        .I5(time_out_trail0_carry_i_11__2_n_0),
        .O(time_out_trail0_carry_i_3__2_n_0));
  LUT6 #(
    .INIT(64'h2009400002200440)) 
    time_out_trail0_carry_i_4__2
       (.I0(trail_count_reg[1]),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .I3(time_out_trail0_carry_i_12__2_n_0),
        .I4(time_out_trail0_carry_i_13__2_n_0),
        .I5(trail_count_reg[0]),
        .O(time_out_trail0_carry_i_4__2_n_0));
  LUT6 #(
    .INIT(64'h1020000000000000)) 
    time_out_trail0_carry_i_5__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(time_out_trail0_carry_i_14__2_n_0),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .I3(time_out_trail0_carry_i_12__2_n_0),
        .I4(TRAIL_TIMEOUT0_carry__5_n_7),
        .I5(TRAIL_TIMEOUT0_carry__5_n_6),
        .O(time_out_trail0_carry_i_5__2_n_0));
  LUT6 #(
    .INIT(64'hA6AAAAAAAAAAAAAA)) 
    time_out_trail0_carry_i_6__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(time_out_trail0_carry_i_15__2_n_0),
        .I3(TRAIL_TIMEOUT0_carry__4_n_4),
        .I4(time_out_trail0_carry_i_12__2_n_0),
        .I5(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(time_out_trail0_carry_i_6__2_n_0));
  LUT6 #(
    .INIT(64'h5555955555555555)) 
    time_out_trail0_carry_i_7__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_4),
        .I1(TRAIL_TIMEOUT0_carry__5_n_5),
        .I2(TRAIL_TIMEOUT0_carry__5_n_7),
        .I3(time_out_trail0_carry_i_12__2_n_0),
        .I4(time_out_trail0_carry_i_16__2_n_0),
        .I5(TRAIL_TIMEOUT0_carry__5_n_6),
        .O(time_out_trail0_carry_i_7__2_n_0));
  LUT5 #(
    .INIT(32'hAAAA6AAA)) 
    time_out_trail0_carry_i_8__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(time_out_trail0_carry_i_12__2_n_0),
        .I3(TRAIL_TIMEOUT0_carry__4_n_4),
        .I4(time_out_trail0_carry_i_15__2_n_0),
        .O(time_out_trail0_carry_i_8__1_n_0));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    time_out_trail0_carry_i_9__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_7),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .I3(TRAIL_TIMEOUT0_carry__4_n_5),
        .I4(TRAIL_TIMEOUT0_carry__4_n_4),
        .I5(time_out_trail0_carry_i_12__2_n_0),
        .O(time_out_trail0_carry_i_9__2_n_0));
  LUT5 #(
    .INIT(32'h0000EAA0)) 
    time_out_trail_i_1__3
       (.I0(time_out_trail),
        .I1(time_out_trail0_carry_n_0),
        .I2(dl_tx_state[1]),
        .I3(dl_tx_state[0]),
        .I4(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ),
        .O(time_out_trail_i_1__3_n_0));
  FDRE time_out_trail_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(time_out_trail_i_1__3_n_0),
        .Q(time_out_trail),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \trail_count[0]_i_1__3 
       (.I0(trail_count_reg[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \trail_count[1]_i_1__3 
       (.I0(trail_count_reg[0]),
        .I1(trail_count_reg[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \trail_count[2]_i_1__3 
       (.I0(trail_count_reg[2]),
        .I1(trail_count_reg[0]),
        .I2(trail_count_reg[1]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \trail_count[3]_i_1__3 
       (.I0(trail_count_reg[3]),
        .I1(trail_count_reg[1]),
        .I2(trail_count_reg[0]),
        .I3(trail_count_reg[2]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \trail_count[4]_i_1__3 
       (.I0(trail_count_reg[4]),
        .I1(trail_count_reg[2]),
        .I2(trail_count_reg[0]),
        .I3(trail_count_reg[1]),
        .I4(trail_count_reg[3]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \trail_count[5]_i_1__3 
       (.I0(trail_count_reg[5]),
        .I1(trail_count_reg[4]),
        .I2(trail_count_reg[2]),
        .I3(trail_count_reg[0]),
        .I4(trail_count_reg[1]),
        .I5(trail_count_reg[3]),
        .O(\trail_count[5]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'hA6)) 
    \trail_count[6]_i_1__3 
       (.I0(trail_count_reg[6]),
        .I1(trail_count_reg[5]),
        .I2(\trail_count[9]_i_4__2_n_0 ),
        .O(\trail_count[6]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'hA6AA)) 
    \trail_count[7]_i_1__3 
       (.I0(trail_count_reg[7]),
        .I1(trail_count_reg[6]),
        .I2(\trail_count[9]_i_4__2_n_0 ),
        .I3(trail_count_reg[5]),
        .O(\trail_count[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT5 #(
    .INIT(32'hA6AAAAAA)) 
    \trail_count[8]_i_1__3 
       (.I0(trail_count_reg[8]),
        .I1(trail_count_reg[5]),
        .I2(\trail_count[9]_i_4__2_n_0 ),
        .I3(trail_count_reg[6]),
        .I4(trail_count_reg[7]),
        .O(p_0_in[8]));
  LUT3 #(
    .INIT(8'hAB)) 
    \trail_count[9]_i_1__3 
       (.I0(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[1]),
        .O(\trail_count[9]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \trail_count[9]_i_2__3 
       (.I0(time_out_trail0_carry_n_0),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[1]),
        .O(\trail_count[9]_i_2__3_n_0 ));
  LUT6 #(
    .INIT(64'hAA6AAAAAAAAAAAAA)) 
    \trail_count[9]_i_3__3 
       (.I0(trail_count_reg[9]),
        .I1(trail_count_reg[7]),
        .I2(trail_count_reg[6]),
        .I3(\trail_count[9]_i_4__2_n_0 ),
        .I4(trail_count_reg[5]),
        .I5(trail_count_reg[8]),
        .O(p_0_in[9]));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \trail_count[9]_i_4__2 
       (.I0(trail_count_reg[3]),
        .I1(trail_count_reg[1]),
        .I2(trail_count_reg[0]),
        .I3(trail_count_reg[2]),
        .I4(trail_count_reg[4]),
        .O(\trail_count[9]_i_4__2_n_0 ));
  FDRE \trail_count_reg[0] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__3_n_0 ),
        .D(p_0_in[0]),
        .Q(trail_count_reg[0]),
        .R(\trail_count[9]_i_1__3_n_0 ));
  FDRE \trail_count_reg[1] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__3_n_0 ),
        .D(p_0_in[1]),
        .Q(trail_count_reg[1]),
        .R(\trail_count[9]_i_1__3_n_0 ));
  FDRE \trail_count_reg[2] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__3_n_0 ),
        .D(p_0_in[2]),
        .Q(trail_count_reg[2]),
        .R(\trail_count[9]_i_1__3_n_0 ));
  FDRE \trail_count_reg[3] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__3_n_0 ),
        .D(p_0_in[3]),
        .Q(trail_count_reg[3]),
        .R(\trail_count[9]_i_1__3_n_0 ));
  FDRE \trail_count_reg[4] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__3_n_0 ),
        .D(p_0_in[4]),
        .Q(trail_count_reg[4]),
        .R(\trail_count[9]_i_1__3_n_0 ));
  FDRE \trail_count_reg[5] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__3_n_0 ),
        .D(\trail_count[5]_i_1__3_n_0 ),
        .Q(trail_count_reg[5]),
        .R(\trail_count[9]_i_1__3_n_0 ));
  FDRE \trail_count_reg[6] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__3_n_0 ),
        .D(\trail_count[6]_i_1__3_n_0 ),
        .Q(trail_count_reg[6]),
        .R(\trail_count[9]_i_1__3_n_0 ));
  FDRE \trail_count_reg[7] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__3_n_0 ),
        .D(\trail_count[7]_i_1__3_n_0 ),
        .Q(trail_count_reg[7]),
        .R(\trail_count[9]_i_1__3_n_0 ));
  FDRE \trail_count_reg[8] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__3_n_0 ),
        .D(p_0_in[8]),
        .Q(trail_count_reg[8]),
        .R(\trail_count[9]_i_1__3_n_0 ));
  FDRE \trail_count_reg[9] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__3_n_0 ),
        .D(p_0_in[9]),
        .Q(trail_count_reg[9]),
        .R(\trail_count[9]_i_1__3_n_0 ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_hs_datapath_7series" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_hs_datapath_7series_31
   (\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ,
    hs_xfer_done_i,
    pkt_cnt0,
    tx_dl2_hs_dp,
    \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ,
    dl2_txrequesths,
    tx_div4_clk,
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ,
    dl2_txdatahs,
    timeout_zero_out_i_0,
    \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ,
    out);
  output \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ;
  output hs_xfer_done_i;
  output pkt_cnt0;
  output [7:0]tx_dl2_hs_dp;
  input \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ;
  input dl2_txrequesths;
  input tx_div4_clk;
  input \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ;
  input [7:0]dl2_txdatahs;
  input timeout_zero_out_i_0;
  input \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ;
  input out;

  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_2__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_state[1]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ;
  wire TRAIL_TIMEOUT0__120_carry__0_i_1__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_2__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_3__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_4__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_5__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_6__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_7__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_8__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_n_1;
  wire TRAIL_TIMEOUT0__120_carry__0_n_2;
  wire TRAIL_TIMEOUT0__120_carry__0_n_3;
  wire TRAIL_TIMEOUT0__120_carry__1_i_1__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_2__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_3__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_4__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_5__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_6__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_7__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_8__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_n_1;
  wire TRAIL_TIMEOUT0__120_carry__1_n_2;
  wire TRAIL_TIMEOUT0__120_carry__1_n_3;
  wire TRAIL_TIMEOUT0__120_carry__2_i_1__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__2_i_2__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__2_i_3__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__2_i_4__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__2_n_2;
  wire TRAIL_TIMEOUT0__120_carry__2_n_3;
  wire TRAIL_TIMEOUT0__120_carry_i_1__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_2__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_3__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_4__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_5__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_6__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_7__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry_n_0;
  wire TRAIL_TIMEOUT0__120_carry_n_1;
  wire TRAIL_TIMEOUT0__120_carry_n_2;
  wire TRAIL_TIMEOUT0__120_carry_n_3;
  wire TRAIL_TIMEOUT0__60_carry__0_i_1__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_2__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_3__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_4__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_5__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_6__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_7__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_8__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_n_1;
  wire TRAIL_TIMEOUT0__60_carry__0_n_2;
  wire TRAIL_TIMEOUT0__60_carry__0_n_3;
  wire TRAIL_TIMEOUT0__60_carry__0_n_4;
  wire TRAIL_TIMEOUT0__60_carry__0_n_5;
  wire TRAIL_TIMEOUT0__60_carry__0_n_6;
  wire TRAIL_TIMEOUT0__60_carry__0_n_7;
  wire TRAIL_TIMEOUT0__60_carry__1_i_1__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_i_2__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_i_3__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_i_4__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_n_2;
  wire TRAIL_TIMEOUT0__60_carry__1_n_3;
  wire TRAIL_TIMEOUT0__60_carry__1_n_5;
  wire TRAIL_TIMEOUT0__60_carry__1_n_6;
  wire TRAIL_TIMEOUT0__60_carry__1_n_7;
  wire TRAIL_TIMEOUT0__60_carry_i_1__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_2__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_3__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_4__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_5__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_6__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_7__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry_n_0;
  wire TRAIL_TIMEOUT0__60_carry_n_1;
  wire TRAIL_TIMEOUT0__60_carry_n_2;
  wire TRAIL_TIMEOUT0__60_carry_n_3;
  wire TRAIL_TIMEOUT0__60_carry_n_4;
  wire TRAIL_TIMEOUT0__60_carry_n_5;
  wire TRAIL_TIMEOUT0__60_carry_n_6;
  wire TRAIL_TIMEOUT0__60_carry_n_7;
  wire TRAIL_TIMEOUT0__92_carry__0_i_1__1_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_2__1_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_3__1_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_4__1_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_5__1_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_6__1_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_7__1_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_8__1_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_n_1;
  wire TRAIL_TIMEOUT0__92_carry__0_n_2;
  wire TRAIL_TIMEOUT0__92_carry__0_n_3;
  wire TRAIL_TIMEOUT0__92_carry__0_n_4;
  wire TRAIL_TIMEOUT0__92_carry__0_n_5;
  wire TRAIL_TIMEOUT0__92_carry__0_n_6;
  wire TRAIL_TIMEOUT0__92_carry__0_n_7;
  wire TRAIL_TIMEOUT0__92_carry__1_i_1__1_n_0;
  wire TRAIL_TIMEOUT0__92_carry__1_i_2__1_n_0;
  wire TRAIL_TIMEOUT0__92_carry__1_i_3__1_n_0;
  wire TRAIL_TIMEOUT0__92_carry__1_n_3;
  wire TRAIL_TIMEOUT0__92_carry__1_n_6;
  wire TRAIL_TIMEOUT0__92_carry__1_n_7;
  wire TRAIL_TIMEOUT0__92_carry_i_1__1_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_2__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_3__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_4__1_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_5__1_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_6__1_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_7__1_n_0;
  wire TRAIL_TIMEOUT0__92_carry_n_0;
  wire TRAIL_TIMEOUT0__92_carry_n_1;
  wire TRAIL_TIMEOUT0__92_carry_n_2;
  wire TRAIL_TIMEOUT0__92_carry_n_3;
  wire TRAIL_TIMEOUT0__92_carry_n_4;
  wire TRAIL_TIMEOUT0__92_carry_n_5;
  wire TRAIL_TIMEOUT0__92_carry_n_6;
  wire TRAIL_TIMEOUT0__92_carry_n_7;
  wire TRAIL_TIMEOUT0_carry__0_i_1__1_n_0;
  wire TRAIL_TIMEOUT0_carry__0_i_2__1_n_0;
  wire TRAIL_TIMEOUT0_carry__0_i_3__1_n_0;
  wire TRAIL_TIMEOUT0_carry__0_i_4__1_n_0;
  wire TRAIL_TIMEOUT0_carry__0_n_0;
  wire TRAIL_TIMEOUT0_carry__0_n_1;
  wire TRAIL_TIMEOUT0_carry__0_n_2;
  wire TRAIL_TIMEOUT0_carry__0_n_3;
  wire TRAIL_TIMEOUT0_carry__1_i_1__1_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_2__1_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_3__1_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_4__1_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_5__1_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_6__1_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_7__1_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_8__1_n_0;
  wire TRAIL_TIMEOUT0_carry__1_n_0;
  wire TRAIL_TIMEOUT0_carry__1_n_1;
  wire TRAIL_TIMEOUT0_carry__1_n_2;
  wire TRAIL_TIMEOUT0_carry__1_n_3;
  wire TRAIL_TIMEOUT0_carry__2_i_1__1_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_2__1_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_3__1_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_4__1_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_5__1_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_6__1_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_7__1_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_8__1_n_0;
  wire TRAIL_TIMEOUT0_carry__2_n_0;
  wire TRAIL_TIMEOUT0_carry__2_n_1;
  wire TRAIL_TIMEOUT0_carry__2_n_2;
  wire TRAIL_TIMEOUT0_carry__2_n_3;
  wire TRAIL_TIMEOUT0_carry__3_i_1__1_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_2__1_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_3__1_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_4__1_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_5__1_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_6__1_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_7__1_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_8__1_n_0;
  wire TRAIL_TIMEOUT0_carry__3_n_0;
  wire TRAIL_TIMEOUT0_carry__3_n_1;
  wire TRAIL_TIMEOUT0_carry__3_n_2;
  wire TRAIL_TIMEOUT0_carry__3_n_3;
  wire TRAIL_TIMEOUT0_carry__4_i_1__1_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_2__1_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_3__1_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_4__1_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_5__1_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_6__1_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_7__1_n_0;
  wire TRAIL_TIMEOUT0_carry__4_n_0;
  wire TRAIL_TIMEOUT0_carry__4_n_1;
  wire TRAIL_TIMEOUT0_carry__4_n_2;
  wire TRAIL_TIMEOUT0_carry__4_n_3;
  wire TRAIL_TIMEOUT0_carry__4_n_4;
  wire TRAIL_TIMEOUT0_carry__4_n_5;
  wire TRAIL_TIMEOUT0_carry__4_n_6;
  wire TRAIL_TIMEOUT0_carry__4_n_7;
  wire TRAIL_TIMEOUT0_carry__5_i_1__1_n_0;
  wire TRAIL_TIMEOUT0_carry__5_i_2__1_n_0;
  wire TRAIL_TIMEOUT0_carry__5_i_3__1_n_0;
  wire TRAIL_TIMEOUT0_carry__5_i_4__1_n_0;
  wire TRAIL_TIMEOUT0_carry__5_n_1;
  wire TRAIL_TIMEOUT0_carry__5_n_2;
  wire TRAIL_TIMEOUT0_carry__5_n_3;
  wire TRAIL_TIMEOUT0_carry__5_n_4;
  wire TRAIL_TIMEOUT0_carry__5_n_5;
  wire TRAIL_TIMEOUT0_carry__5_n_6;
  wire TRAIL_TIMEOUT0_carry__5_n_7;
  wire TRAIL_TIMEOUT0_carry_i_1__1_n_0;
  wire TRAIL_TIMEOUT0_carry_i_2__1_n_0;
  wire TRAIL_TIMEOUT0_carry_i_3__1_n_0;
  wire TRAIL_TIMEOUT0_carry_n_0;
  wire TRAIL_TIMEOUT0_carry_n_1;
  wire TRAIL_TIMEOUT0_carry_n_2;
  wire TRAIL_TIMEOUT0_carry_n_3;
  wire TRAIL_TIMEOUT1_n_100;
  wire TRAIL_TIMEOUT1_n_101;
  wire TRAIL_TIMEOUT1_n_102;
  wire TRAIL_TIMEOUT1_n_103;
  wire TRAIL_TIMEOUT1_n_104;
  wire TRAIL_TIMEOUT1_n_105;
  wire TRAIL_TIMEOUT1_n_86;
  wire TRAIL_TIMEOUT1_n_87;
  wire TRAIL_TIMEOUT1_n_88;
  wire TRAIL_TIMEOUT1_n_89;
  wire TRAIL_TIMEOUT1_n_90;
  wire TRAIL_TIMEOUT1_n_91;
  wire TRAIL_TIMEOUT1_n_92;
  wire TRAIL_TIMEOUT1_n_93;
  wire TRAIL_TIMEOUT1_n_94;
  wire TRAIL_TIMEOUT1_n_95;
  wire TRAIL_TIMEOUT1_n_96;
  wire TRAIL_TIMEOUT1_n_97;
  wire TRAIL_TIMEOUT1_n_98;
  wire TRAIL_TIMEOUT1_n_99;
  wire [7:0]dl2_txdatahs;
  wire dl2_txrequesths;
  wire [7:0]dl_tx_hs_dp0_in;
  wire [1:0]dl_tx_state;
  wire dl_txrequesths_posedge_r_i_1__1_n_0;
  wire dl_txrequesths_posedge_r_reg_n_0;
  wire dl_txrequesths_r;
  wire [7:7]gen_eot_r;
  wire hs_xfer_done_i;
  wire hs_xfer_done_i_1__1_n_0;
  wire out;
  wire [9:0]p_0_in;
  wire [7:7]p_0_in_0;
  wire pkt_cnt0;
  wire time_out_trail;
  wire time_out_trail0_carry_i_10__1_n_0;
  wire time_out_trail0_carry_i_11__1_n_0;
  wire time_out_trail0_carry_i_12__1_n_0;
  wire time_out_trail0_carry_i_13__1_n_0;
  wire time_out_trail0_carry_i_14__1_n_0;
  wire time_out_trail0_carry_i_15__1_n_0;
  wire time_out_trail0_carry_i_16__1_n_0;
  wire time_out_trail0_carry_i_1__1_n_0;
  wire time_out_trail0_carry_i_2__1_n_0;
  wire time_out_trail0_carry_i_3__1_n_0;
  wire time_out_trail0_carry_i_4__1_n_0;
  wire time_out_trail0_carry_i_5__1_n_0;
  wire time_out_trail0_carry_i_6__1_n_0;
  wire time_out_trail0_carry_i_7__1_n_0;
  wire time_out_trail0_carry_i_8__0_n_0;
  wire time_out_trail0_carry_i_9__1_n_0;
  wire time_out_trail0_carry_n_0;
  wire time_out_trail0_carry_n_1;
  wire time_out_trail0_carry_n_2;
  wire time_out_trail0_carry_n_3;
  wire time_out_trail_i_1__2_n_0;
  wire timeout_zero_out_i_0;
  wire \trail_count[5]_i_1__2_n_0 ;
  wire \trail_count[6]_i_1__2_n_0 ;
  wire \trail_count[7]_i_1__2_n_0 ;
  wire \trail_count[9]_i_1__2_n_0 ;
  wire \trail_count[9]_i_2__2_n_0 ;
  wire \trail_count[9]_i_4__1_n_0 ;
  wire [9:0]trail_count_reg;
  wire tx_div4_clk;
  wire [7:0]tx_dl2_hs_dp;
  wire [3:0]NLW_TRAIL_TIMEOUT0__120_carry_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0__120_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0__120_carry__1_O_UNCONNECTED;
  wire [3:2]NLW_TRAIL_TIMEOUT0__120_carry__2_CO_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0__120_carry__2_O_UNCONNECTED;
  wire [2:2]NLW_TRAIL_TIMEOUT0__60_carry__1_CO_UNCONNECTED;
  wire [3:3]NLW_TRAIL_TIMEOUT0__60_carry__1_O_UNCONNECTED;
  wire [3:1]NLW_TRAIL_TIMEOUT0__92_carry__1_CO_UNCONNECTED;
  wire [3:2]NLW_TRAIL_TIMEOUT0__92_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry__2_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry__3_O_UNCONNECTED;
  wire [3:3]NLW_TRAIL_TIMEOUT0_carry__5_CO_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_OVERFLOW_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_PATTERNDETECT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_TRAIL_TIMEOUT1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_TRAIL_TIMEOUT1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT1_CARRYOUT_UNCONNECTED;
  wire [47:20]NLW_TRAIL_TIMEOUT1_P_UNCONNECTED;
  wire [47:0]NLW_TRAIL_TIMEOUT1_PCOUT_UNCONNECTED;
  wire [3:0]NLW_time_out_trail0_carry_O_UNCONNECTED;

  LUT6 #(
    .INIT(64'hC800CFFF880088AA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1__1 
       (.I0(dl_tx_state[1]),
        .I1(dl2_txdatahs[0]),
        .I2(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(gen_eot_r),
        .I5(dl_tx_state[0]),
        .O(dl_tx_hs_dp0_in[0]));
  LUT6 #(
    .INIT(64'hC800CFFF880088AA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1__1 
       (.I0(dl_tx_state[1]),
        .I1(dl2_txdatahs[1]),
        .I2(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(gen_eot_r),
        .I5(dl_tx_state[0]),
        .O(dl_tx_hs_dp0_in[1]));
  LUT6 #(
    .INIT(64'hC800CFFF880088AA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1__1 
       (.I0(dl_tx_state[1]),
        .I1(dl2_txdatahs[2]),
        .I2(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(gen_eot_r),
        .I5(dl_tx_state[0]),
        .O(dl_tx_hs_dp0_in[2]));
  LUT6 #(
    .INIT(64'h00000000EE0C0C0C)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__1_n_0 ),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6__0_n_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(dl2_txdatahs[3]),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7__0_n_0 ),
        .O(dl_tx_hs_dp0_in[3]));
  LUT6 #(
    .INIT(64'h00000000EE0C0C0C)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__1_n_0 ),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6__0_n_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(dl2_txdatahs[4]),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7__0_n_0 ),
        .O(dl_tx_hs_dp0_in[4]));
  LUT6 #(
    .INIT(64'h00000000EE0C0C0C)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__1_n_0 ),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6__0_n_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(dl2_txdatahs[5]),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7__0_n_0 ),
        .O(dl_tx_hs_dp0_in[5]));
  LUT6 #(
    .INIT(64'hC800CFFF880088AA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1__1 
       (.I0(dl_tx_state[1]),
        .I1(dl2_txdatahs[6]),
        .I2(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(gen_eot_r),
        .I5(dl_tx_state[0]),
        .O(dl_tx_hs_dp0_in[6]));
  LUT6 #(
    .INIT(64'hBEAABEBEBABABEBE)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__1_n_0 ),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[1]),
        .I3(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I4(dl2_txrequesths),
        .I5(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000E000EAAA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__1_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I3(dl2_txdatahs[7]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6__0_n_0 ),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7__0_n_0 ),
        .O(dl_tx_hs_dp0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT5 #(
    .INIT(32'h11111011)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__1 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[1]),
        .I2(dl_txrequesths_posedge_r_reg_n_0),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ),
        .I4(timeout_zero_out_i_0),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT5 #(
    .INIT(32'h55557FFF)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__1 
       (.I0(dl_tx_state[0]),
        .I1(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I2(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ),
        .I3(dl2_txrequesths),
        .I4(gen_eot_r),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__1_n_0 ));
  LUT4 #(
    .INIT(16'hAA80)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6__0 
       (.I0(dl_tx_state[1]),
        .I1(dl2_txrequesths),
        .I2(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ),
        .I3(gen_eot_r),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7__0 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[1]),
        .I2(timeout_zero_out_i_0),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7__0_n_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__1_n_0 ),
        .D(dl_tx_hs_dp0_in[0]),
        .Q(tx_dl2_hs_dp[0]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[1] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__1_n_0 ),
        .D(dl_tx_hs_dp0_in[1]),
        .Q(tx_dl2_hs_dp[1]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[2] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__1_n_0 ),
        .D(dl_tx_hs_dp0_in[2]),
        .Q(tx_dl2_hs_dp[2]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[3] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__1_n_0 ),
        .D(dl_tx_hs_dp0_in[3]),
        .Q(tx_dl2_hs_dp[3]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[4] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__1_n_0 ),
        .D(dl_tx_hs_dp0_in[4]),
        .Q(tx_dl2_hs_dp[4]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[5] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__1_n_0 ),
        .D(dl_tx_hs_dp0_in[5]),
        .Q(tx_dl2_hs_dp[5]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__1_n_0 ),
        .D(dl_tx_hs_dp0_in[6]),
        .Q(tx_dl2_hs_dp[6]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[7] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__1_n_0 ),
        .D(dl_tx_hs_dp0_in[7]),
        .Q(tx_dl2_hs_dp[7]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  LUT6 #(
    .INIT(64'h1133FFFF30FC0000)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_1__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(dl_tx_state[1]),
        .I2(timeout_zero_out_i_0),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_2__1_n_0 ),
        .I5(dl_tx_state[0]),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT4 #(
    .INIT(16'hFF80)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_2__1 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[0]),
        .I2(time_out_trail),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT4 #(
    .INIT(16'h662A)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state[1]_i_1__1 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[0]),
        .I2(time_out_trail),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_state[1]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_1__1_n_0 ),
        .Q(dl_tx_state[0]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_state[1]_i_1__1_n_0 ),
        .Q(dl_tx_state[1]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(timeout_zero_out_i_0),
        .I2(dl2_txrequesths),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__1_n_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__1_n_0 ),
        .Q(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h8A8F02008A8F0A00)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__1 
       (.I0(dl2_txrequesths),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ),
        .I2(dl_tx_state[1]),
        .I3(dl_tx_state[0]),
        .I4(dl2_txdatahs[7]),
        .I5(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .O(p_0_in_0));
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__1_n_0 ),
        .D(p_0_in_0),
        .Q(gen_eot_r),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  CARRY4 TRAIL_TIMEOUT0__120_carry
       (.CI(1'b0),
        .CO({TRAIL_TIMEOUT0__120_carry_n_0,TRAIL_TIMEOUT0__120_carry_n_1,TRAIL_TIMEOUT0__120_carry_n_2,TRAIL_TIMEOUT0__120_carry_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__120_carry_i_1__0_n_0,TRAIL_TIMEOUT0__120_carry_i_2__0_n_0,TRAIL_TIMEOUT0__120_carry_i_3__0_n_0,1'b0}),
        .O(NLW_TRAIL_TIMEOUT0__120_carry_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0__120_carry_i_4__1_n_0,TRAIL_TIMEOUT0__120_carry_i_5__1_n_0,TRAIL_TIMEOUT0__120_carry_i_6__1_n_0,TRAIL_TIMEOUT0__120_carry_i_7__1_n_0}));
  CARRY4 TRAIL_TIMEOUT0__120_carry__0
       (.CI(TRAIL_TIMEOUT0__120_carry_n_0),
        .CO({TRAIL_TIMEOUT0__120_carry__0_n_0,TRAIL_TIMEOUT0__120_carry__0_n_1,TRAIL_TIMEOUT0__120_carry__0_n_2,TRAIL_TIMEOUT0__120_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__120_carry__0_i_1__0_n_0,TRAIL_TIMEOUT0__120_carry__0_i_2__0_n_0,TRAIL_TIMEOUT0__120_carry__0_i_3__0_n_0,TRAIL_TIMEOUT0__120_carry__0_i_4__0_n_0}),
        .O(NLW_TRAIL_TIMEOUT0__120_carry__0_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0__120_carry__0_i_5__1_n_0,TRAIL_TIMEOUT0__120_carry__0_i_6__1_n_0,TRAIL_TIMEOUT0__120_carry__0_i_7__1_n_0,TRAIL_TIMEOUT0__120_carry__0_i_8__1_n_0}));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry__0_i_1__0
       (.I0(TRAIL_TIMEOUT0__92_carry_n_5),
        .I1(TRAIL_TIMEOUT1_n_93),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_1__0_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry__0_i_2__0
       (.I0(TRAIL_TIMEOUT0__92_carry_n_6),
        .I1(TRAIL_TIMEOUT1_n_94),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_2__0_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry__0_i_3__0
       (.I0(TRAIL_TIMEOUT0__92_carry_n_7),
        .I1(TRAIL_TIMEOUT1_n_95),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_3__0_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry__0_i_4__0
       (.I0(TRAIL_TIMEOUT0__60_carry_n_6),
        .I1(TRAIL_TIMEOUT1_n_96),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    TRAIL_TIMEOUT0__120_carry__0_i_5__1
       (.I0(TRAIL_TIMEOUT1_n_93),
        .I1(TRAIL_TIMEOUT0__92_carry_n_5),
        .I2(TRAIL_TIMEOUT0__92_carry_n_4),
        .I3(TRAIL_TIMEOUT1_n_92),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_5__1_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    TRAIL_TIMEOUT0__120_carry__0_i_6__1
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT0__92_carry_n_6),
        .I2(TRAIL_TIMEOUT0__92_carry_n_5),
        .I3(TRAIL_TIMEOUT1_n_93),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_6__1_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    TRAIL_TIMEOUT0__120_carry__0_i_7__1
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT0__92_carry_n_7),
        .I2(TRAIL_TIMEOUT0__92_carry_n_6),
        .I3(TRAIL_TIMEOUT1_n_94),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_7__1_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    TRAIL_TIMEOUT0__120_carry__0_i_8__1
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT0__60_carry_n_6),
        .I2(TRAIL_TIMEOUT0__92_carry_n_7),
        .I3(TRAIL_TIMEOUT1_n_95),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_8__1_n_0));
  CARRY4 TRAIL_TIMEOUT0__120_carry__1
       (.CI(TRAIL_TIMEOUT0__120_carry__0_n_0),
        .CO({TRAIL_TIMEOUT0__120_carry__1_n_0,TRAIL_TIMEOUT0__120_carry__1_n_1,TRAIL_TIMEOUT0__120_carry__1_n_2,TRAIL_TIMEOUT0__120_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__120_carry__1_i_1__0_n_0,TRAIL_TIMEOUT0__120_carry__1_i_2__0_n_0,TRAIL_TIMEOUT0__120_carry__1_i_3__0_n_0,TRAIL_TIMEOUT0__120_carry__1_i_4__0_n_0}),
        .O(NLW_TRAIL_TIMEOUT0__120_carry__1_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0__120_carry__1_i_5__1_n_0,TRAIL_TIMEOUT0__120_carry__1_i_6__1_n_0,TRAIL_TIMEOUT0__120_carry__1_i_7__1_n_0,TRAIL_TIMEOUT0__120_carry__1_i_8__1_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__1_i_1__0
       (.I0(TRAIL_TIMEOUT0__92_carry__0_n_5),
        .I1(TRAIL_TIMEOUT1_n_89),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__1_i_2__0
       (.I0(TRAIL_TIMEOUT0__92_carry__0_n_6),
        .I1(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__1_i_3__0
       (.I0(TRAIL_TIMEOUT0__92_carry__0_n_7),
        .I1(TRAIL_TIMEOUT1_n_91),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__1_i_4__0
       (.I0(TRAIL_TIMEOUT0__92_carry_n_4),
        .I1(TRAIL_TIMEOUT1_n_92),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_4__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__1_i_5__1
       (.I0(TRAIL_TIMEOUT1_n_89),
        .I1(TRAIL_TIMEOUT0__92_carry__0_n_5),
        .I2(TRAIL_TIMEOUT0__92_carry__0_n_4),
        .I3(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_5__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__1_i_6__1
       (.I0(TRAIL_TIMEOUT1_n_90),
        .I1(TRAIL_TIMEOUT0__92_carry__0_n_6),
        .I2(TRAIL_TIMEOUT0__92_carry__0_n_5),
        .I3(TRAIL_TIMEOUT1_n_89),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_6__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__1_i_7__1
       (.I0(TRAIL_TIMEOUT1_n_91),
        .I1(TRAIL_TIMEOUT0__92_carry__0_n_7),
        .I2(TRAIL_TIMEOUT0__92_carry__0_n_6),
        .I3(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_7__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__1_i_8__1
       (.I0(TRAIL_TIMEOUT1_n_92),
        .I1(TRAIL_TIMEOUT0__92_carry_n_4),
        .I2(TRAIL_TIMEOUT0__92_carry__0_n_7),
        .I3(TRAIL_TIMEOUT1_n_91),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_8__1_n_0));
  CARRY4 TRAIL_TIMEOUT0__120_carry__2
       (.CI(TRAIL_TIMEOUT0__120_carry__1_n_0),
        .CO({NLW_TRAIL_TIMEOUT0__120_carry__2_CO_UNCONNECTED[3:2],TRAIL_TIMEOUT0__120_carry__2_n_2,TRAIL_TIMEOUT0__120_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,TRAIL_TIMEOUT0__120_carry__2_i_1__0_n_0,TRAIL_TIMEOUT0__120_carry__2_i_2__0_n_0}),
        .O(NLW_TRAIL_TIMEOUT0__120_carry__2_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,TRAIL_TIMEOUT0__120_carry__2_i_3__1_n_0,TRAIL_TIMEOUT0__120_carry__2_i_4__1_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__2_i_1__0
       (.I0(TRAIL_TIMEOUT0__92_carry__1_n_7),
        .I1(TRAIL_TIMEOUT1_n_87),
        .O(TRAIL_TIMEOUT0__120_carry__2_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__2_i_2__0
       (.I0(TRAIL_TIMEOUT0__92_carry__0_n_4),
        .I1(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0__120_carry__2_i_2__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__2_i_3__1
       (.I0(TRAIL_TIMEOUT1_n_87),
        .I1(TRAIL_TIMEOUT0__92_carry__1_n_7),
        .I2(TRAIL_TIMEOUT0__92_carry__1_n_6),
        .I3(TRAIL_TIMEOUT1_n_86),
        .O(TRAIL_TIMEOUT0__120_carry__2_i_3__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__2_i_4__1
       (.I0(TRAIL_TIMEOUT1_n_88),
        .I1(TRAIL_TIMEOUT0__92_carry__0_n_4),
        .I2(TRAIL_TIMEOUT0__92_carry__1_n_7),
        .I3(TRAIL_TIMEOUT1_n_87),
        .O(TRAIL_TIMEOUT0__120_carry__2_i_4__1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry_i_1__0
       (.I0(TRAIL_TIMEOUT0__60_carry_n_7),
        .I1(TRAIL_TIMEOUT1_n_97),
        .O(TRAIL_TIMEOUT0__120_carry_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry_i_2__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_6),
        .I1(TRAIL_TIMEOUT1_n_98),
        .O(TRAIL_TIMEOUT0__120_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry_i_3__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT1_n_99),
        .O(TRAIL_TIMEOUT0__120_carry_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    TRAIL_TIMEOUT0__120_carry_i_4__1
       (.I0(TRAIL_TIMEOUT1_n_97),
        .I1(TRAIL_TIMEOUT0__60_carry_n_7),
        .I2(TRAIL_TIMEOUT0__60_carry_n_6),
        .I3(TRAIL_TIMEOUT1_n_96),
        .O(TRAIL_TIMEOUT0__120_carry_i_4__1_n_0));
  LUT4 #(
    .INIT(16'h4BB4)) 
    TRAIL_TIMEOUT0__120_carry_i_5__1
       (.I0(TRAIL_TIMEOUT1_n_98),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0__60_carry_n_7),
        .I3(TRAIL_TIMEOUT1_n_97),
        .O(TRAIL_TIMEOUT0__120_carry_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    TRAIL_TIMEOUT0__120_carry_i_6__1
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .I3(TRAIL_TIMEOUT1_n_98),
        .O(TRAIL_TIMEOUT0__120_carry_i_6__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    TRAIL_TIMEOUT0__120_carry_i_7__1
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__120_carry_i_7__1_n_0));
  CARRY4 TRAIL_TIMEOUT0__60_carry
       (.CI(1'b0),
        .CO({TRAIL_TIMEOUT0__60_carry_n_0,TRAIL_TIMEOUT0__60_carry_n_1,TRAIL_TIMEOUT0__60_carry_n_2,TRAIL_TIMEOUT0__60_carry_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__60_carry_i_1__1_n_0,TRAIL_TIMEOUT0__60_carry_i_2__1_n_0,TRAIL_TIMEOUT0__60_carry_i_3__1_n_0,1'b0}),
        .O({TRAIL_TIMEOUT0__60_carry_n_4,TRAIL_TIMEOUT0__60_carry_n_5,TRAIL_TIMEOUT0__60_carry_n_6,TRAIL_TIMEOUT0__60_carry_n_7}),
        .S({TRAIL_TIMEOUT0__60_carry_i_4__1_n_0,TRAIL_TIMEOUT0__60_carry_i_5__1_n_0,TRAIL_TIMEOUT0__60_carry_i_6__1_n_0,TRAIL_TIMEOUT0__60_carry_i_7__1_n_0}));
  CARRY4 TRAIL_TIMEOUT0__60_carry__0
       (.CI(TRAIL_TIMEOUT0__60_carry_n_0),
        .CO({TRAIL_TIMEOUT0__60_carry__0_n_0,TRAIL_TIMEOUT0__60_carry__0_n_1,TRAIL_TIMEOUT0__60_carry__0_n_2,TRAIL_TIMEOUT0__60_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__60_carry__0_i_1__1_n_0,TRAIL_TIMEOUT0__60_carry__0_i_2__1_n_0,TRAIL_TIMEOUT0__60_carry__0_i_3__1_n_0,TRAIL_TIMEOUT0__60_carry__0_i_4__1_n_0}),
        .O({TRAIL_TIMEOUT0__60_carry__0_n_4,TRAIL_TIMEOUT0__60_carry__0_n_5,TRAIL_TIMEOUT0__60_carry__0_n_6,TRAIL_TIMEOUT0__60_carry__0_n_7}),
        .S({TRAIL_TIMEOUT0__60_carry__0_i_5__1_n_0,TRAIL_TIMEOUT0__60_carry__0_i_6__1_n_0,TRAIL_TIMEOUT0__60_carry__0_i_7__1_n_0,TRAIL_TIMEOUT0__60_carry__0_i_8__1_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0__60_carry__0_i_1__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_1__1_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__60_carry__0_i_2__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_2__1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    TRAIL_TIMEOUT0__60_carry__0_i_3__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_5),
        .I2(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_3__1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    TRAIL_TIMEOUT0__60_carry__0_i_4__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_4__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__60_carry__0_i_5__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(TRAIL_TIMEOUT0_carry__5_n_4),
        .I3(TRAIL_TIMEOUT0_carry__5_n_6),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_5__1_n_0));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    TRAIL_TIMEOUT0__60_carry__0_i_6__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .I2(TRAIL_TIMEOUT0_carry__5_n_6),
        .I3(TRAIL_TIMEOUT0_carry__5_n_5),
        .I4(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_6__1_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__60_carry__0_i_7__1
       (.I0(TRAIL_TIMEOUT0__60_carry__0_i_3__1_n_0),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(TRAIL_TIMEOUT0_carry__5_n_4),
        .I3(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_7__1_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__60_carry__0_i_8__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_5),
        .I2(TRAIL_TIMEOUT0_carry__5_n_7),
        .I3(TRAIL_TIMEOUT0__60_carry__0_i_4__1_n_0),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_8__1_n_0));
  CARRY4 TRAIL_TIMEOUT0__60_carry__1
       (.CI(TRAIL_TIMEOUT0__60_carry__0_n_0),
        .CO({TRAIL_TIMEOUT0__60_carry__1_n_0,NLW_TRAIL_TIMEOUT0__60_carry__1_CO_UNCONNECTED[2],TRAIL_TIMEOUT0__60_carry__1_n_2,TRAIL_TIMEOUT0__60_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,TRAIL_TIMEOUT0_carry__5_n_4,TRAIL_TIMEOUT0_carry__5_n_5,TRAIL_TIMEOUT0__60_carry__1_i_1__1_n_0}),
        .O({NLW_TRAIL_TIMEOUT0__60_carry__1_O_UNCONNECTED[3],TRAIL_TIMEOUT0__60_carry__1_n_5,TRAIL_TIMEOUT0__60_carry__1_n_6,TRAIL_TIMEOUT0__60_carry__1_n_7}),
        .S({1'b1,TRAIL_TIMEOUT0__60_carry__1_i_2__1_n_0,TRAIL_TIMEOUT0__60_carry__1_i_3__1_n_0,TRAIL_TIMEOUT0__60_carry__1_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__60_carry__1_i_1__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__1_i_1__1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    TRAIL_TIMEOUT0__60_carry__1_i_2__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__1_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0__60_carry__1_i_3__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__1_i_3__1_n_0));
  LUT3 #(
    .INIT(8'h4B)) 
    TRAIL_TIMEOUT0__60_carry__1_i_4__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_4),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(TRAIL_TIMEOUT0_carry__5_n_5),
        .O(TRAIL_TIMEOUT0__60_carry__1_i_4__0_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__60_carry_i_1__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__60_carry_i_1__1_n_0));
  (* HLUTNM = "lutpair22" *) 
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__60_carry_i_2__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(TRAIL_TIMEOUT0__60_carry_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0__60_carry_i_3__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_6),
        .I1(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__60_carry_i_3__1_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__60_carry_i_4__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .I3(TRAIL_TIMEOUT0__60_carry_i_1__1_n_0),
        .O(TRAIL_TIMEOUT0__60_carry_i_4__1_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__60_carry_i_5__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .I3(TRAIL_TIMEOUT0__60_carry_i_2__1_n_0),
        .O(TRAIL_TIMEOUT0__60_carry_i_5__1_n_0));
  (* HLUTNM = "lutpair22" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    TRAIL_TIMEOUT0__60_carry_i_6__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .I3(TRAIL_TIMEOUT0_carry__4_n_5),
        .O(TRAIL_TIMEOUT0__60_carry_i_6__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    TRAIL_TIMEOUT0__60_carry_i_7__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__60_carry_i_7__1_n_0));
  CARRY4 TRAIL_TIMEOUT0__92_carry
       (.CI(1'b0),
        .CO({TRAIL_TIMEOUT0__92_carry_n_0,TRAIL_TIMEOUT0__92_carry_n_1,TRAIL_TIMEOUT0__92_carry_n_2,TRAIL_TIMEOUT0__92_carry_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__92_carry_i_1__1_n_0,TRAIL_TIMEOUT0__92_carry_i_2__0_n_0,TRAIL_TIMEOUT0__92_carry_i_3__0_n_0,1'b0}),
        .O({TRAIL_TIMEOUT0__92_carry_n_4,TRAIL_TIMEOUT0__92_carry_n_5,TRAIL_TIMEOUT0__92_carry_n_6,TRAIL_TIMEOUT0__92_carry_n_7}),
        .S({TRAIL_TIMEOUT0__92_carry_i_4__1_n_0,TRAIL_TIMEOUT0__92_carry_i_5__1_n_0,TRAIL_TIMEOUT0__92_carry_i_6__1_n_0,TRAIL_TIMEOUT0__92_carry_i_7__1_n_0}));
  CARRY4 TRAIL_TIMEOUT0__92_carry__0
       (.CI(TRAIL_TIMEOUT0__92_carry_n_0),
        .CO({TRAIL_TIMEOUT0__92_carry__0_n_0,TRAIL_TIMEOUT0__92_carry__0_n_1,TRAIL_TIMEOUT0__92_carry__0_n_2,TRAIL_TIMEOUT0__92_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__92_carry__0_i_1__1_n_0,TRAIL_TIMEOUT0__92_carry__0_i_2__1_n_0,TRAIL_TIMEOUT0__92_carry__0_i_3__1_n_0,TRAIL_TIMEOUT0__92_carry__0_i_4__1_n_0}),
        .O({TRAIL_TIMEOUT0__92_carry__0_n_4,TRAIL_TIMEOUT0__92_carry__0_n_5,TRAIL_TIMEOUT0__92_carry__0_n_6,TRAIL_TIMEOUT0__92_carry__0_n_7}),
        .S({TRAIL_TIMEOUT0__92_carry__0_i_5__1_n_0,TRAIL_TIMEOUT0__92_carry__0_i_6__1_n_0,TRAIL_TIMEOUT0__92_carry__0_i_7__1_n_0,TRAIL_TIMEOUT0__92_carry__0_i_8__1_n_0}));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__92_carry__0_i_1__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0__60_carry__1_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_1__1_n_0));
  (* HLUTNM = "lutpair23" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__92_carry__0_i_2__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_4),
        .I2(TRAIL_TIMEOUT0_carry__4_n_5),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_2__1_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__92_carry__0_i_3__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_5),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_3__1_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__92_carry__0_i_4__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_4__1_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__92_carry__0_i_5__1
       (.I0(TRAIL_TIMEOUT0__92_carry__0_i_1__1_n_0),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .I2(TRAIL_TIMEOUT0__60_carry__1_n_6),
        .I3(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__92_carry__0_i_6__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0__60_carry__1_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .I3(TRAIL_TIMEOUT0__92_carry__0_i_2__1_n_0),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_6__1_n_0));
  (* HLUTNM = "lutpair23" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__92_carry__0_i_7__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_4),
        .I2(TRAIL_TIMEOUT0_carry__4_n_5),
        .I3(TRAIL_TIMEOUT0__92_carry__0_i_3__1_n_0),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_7__1_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__92_carry__0_i_8__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_5),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .I3(TRAIL_TIMEOUT0__92_carry__0_i_4__1_n_0),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_8__1_n_0));
  CARRY4 TRAIL_TIMEOUT0__92_carry__1
       (.CI(TRAIL_TIMEOUT0__92_carry__0_n_0),
        .CO({NLW_TRAIL_TIMEOUT0__92_carry__1_CO_UNCONNECTED[3:1],TRAIL_TIMEOUT0__92_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,TRAIL_TIMEOUT0__92_carry__1_i_1__1_n_0}),
        .O({NLW_TRAIL_TIMEOUT0__92_carry__1_O_UNCONNECTED[3:2],TRAIL_TIMEOUT0__92_carry__1_n_6,TRAIL_TIMEOUT0__92_carry__1_n_7}),
        .S({1'b0,1'b0,TRAIL_TIMEOUT0__92_carry__1_i_2__1_n_0,TRAIL_TIMEOUT0__92_carry__1_i_3__1_n_0}));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__92_carry__1_i_1__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_4),
        .I1(TRAIL_TIMEOUT0__60_carry__1_n_6),
        .I2(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(TRAIL_TIMEOUT0__92_carry__1_i_1__1_n_0));
  LUT4 #(
    .INIT(16'hE11E)) 
    TRAIL_TIMEOUT0__92_carry__1_i_2__1
       (.I0(TRAIL_TIMEOUT0__60_carry__1_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(TRAIL_TIMEOUT0__60_carry__1_n_0),
        .I3(TRAIL_TIMEOUT0_carry__5_n_5),
        .O(TRAIL_TIMEOUT0__92_carry__1_i_2__1_n_0));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    TRAIL_TIMEOUT0__92_carry__1_i_3__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry__1_n_6),
        .I2(TRAIL_TIMEOUT0_carry__5_n_4),
        .I3(TRAIL_TIMEOUT0__60_carry__1_n_5),
        .I4(TRAIL_TIMEOUT0_carry__5_n_6),
        .O(TRAIL_TIMEOUT0__92_carry__1_i_3__1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    TRAIL_TIMEOUT0__92_carry_i_1__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__92_carry_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__92_carry_i_2__0
       (.I0(TRAIL_TIMEOUT0__60_carry_n_4),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(TRAIL_TIMEOUT0__92_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__92_carry_i_3__0
       (.I0(TRAIL_TIMEOUT0__60_carry_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__92_carry_i_3__0_n_0));
  LUT5 #(
    .INIT(32'h69966969)) 
    TRAIL_TIMEOUT0__92_carry_i_4__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .I3(TRAIL_TIMEOUT0_carry__4_n_5),
        .I4(TRAIL_TIMEOUT0__60_carry__0_n_7),
        .O(TRAIL_TIMEOUT0__92_carry_i_4__1_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__92_carry_i_5__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_6),
        .I1(TRAIL_TIMEOUT0__60_carry_n_4),
        .I2(TRAIL_TIMEOUT0__60_carry__0_n_7),
        .I3(TRAIL_TIMEOUT0_carry__4_n_5),
        .O(TRAIL_TIMEOUT0__92_carry_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    TRAIL_TIMEOUT0__92_carry_i_6__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry_n_5),
        .I2(TRAIL_TIMEOUT0__60_carry_n_4),
        .I3(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(TRAIL_TIMEOUT0__92_carry_i_6__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    TRAIL_TIMEOUT0__92_carry_i_7__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry_n_5),
        .O(TRAIL_TIMEOUT0__92_carry_i_7__1_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry
       (.CI(1'b0),
        .CO({TRAIL_TIMEOUT0_carry_n_0,TRAIL_TIMEOUT0_carry_n_1,TRAIL_TIMEOUT0_carry_n_2,TRAIL_TIMEOUT0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT1_n_104,TRAIL_TIMEOUT1_n_105,1'b0,1'b1}),
        .O(NLW_TRAIL_TIMEOUT0_carry_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry_i_1__1_n_0,TRAIL_TIMEOUT0_carry_i_2__1_n_0,TRAIL_TIMEOUT0_carry_i_3__1_n_0,TRAIL_TIMEOUT1_n_105}));
  CARRY4 TRAIL_TIMEOUT0_carry__0
       (.CI(TRAIL_TIMEOUT0_carry_n_0),
        .CO({TRAIL_TIMEOUT0_carry__0_n_0,TRAIL_TIMEOUT0_carry__0_n_1,TRAIL_TIMEOUT0_carry__0_n_2,TRAIL_TIMEOUT0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT1_n_100,TRAIL_TIMEOUT1_n_101,TRAIL_TIMEOUT1_n_102,TRAIL_TIMEOUT1_n_103}),
        .O(NLW_TRAIL_TIMEOUT0_carry__0_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry__0_i_1__1_n_0,TRAIL_TIMEOUT0_carry__0_i_2__1_n_0,TRAIL_TIMEOUT0_carry__0_i_3__1_n_0,TRAIL_TIMEOUT0_carry__0_i_4__1_n_0}));
  LUT3 #(
    .INIT(8'h69)) 
    TRAIL_TIMEOUT0_carry__0_i_1__1
       (.I0(TRAIL_TIMEOUT1_n_98),
        .I1(TRAIL_TIMEOUT1_n_105),
        .I2(TRAIL_TIMEOUT1_n_100),
        .O(TRAIL_TIMEOUT0_carry__0_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__0_i_2__1
       (.I0(TRAIL_TIMEOUT1_n_101),
        .I1(TRAIL_TIMEOUT1_n_99),
        .O(TRAIL_TIMEOUT0_carry__0_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__0_i_3__1
       (.I0(TRAIL_TIMEOUT1_n_102),
        .I1(TRAIL_TIMEOUT1_n_100),
        .O(TRAIL_TIMEOUT0_carry__0_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__0_i_4__1
       (.I0(TRAIL_TIMEOUT1_n_103),
        .I1(TRAIL_TIMEOUT1_n_101),
        .O(TRAIL_TIMEOUT0_carry__0_i_4__1_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__1
       (.CI(TRAIL_TIMEOUT0_carry__0_n_0),
        .CO({TRAIL_TIMEOUT0_carry__1_n_0,TRAIL_TIMEOUT0_carry__1_n_1,TRAIL_TIMEOUT0_carry__1_n_2,TRAIL_TIMEOUT0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0_carry__1_i_1__1_n_0,TRAIL_TIMEOUT0_carry__1_i_2__1_n_0,TRAIL_TIMEOUT0_carry__1_i_3__1_n_0,TRAIL_TIMEOUT0_carry__1_i_4__1_n_0}),
        .O(NLW_TRAIL_TIMEOUT0_carry__1_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry__1_i_5__1_n_0,TRAIL_TIMEOUT0_carry__1_i_6__1_n_0,TRAIL_TIMEOUT0_carry__1_i_7__1_n_0,TRAIL_TIMEOUT0_carry__1_i_8__1_n_0}));
  (* HLUTNM = "lutpair13" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0_carry__1_i_1__1
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT1_n_102),
        .I2(TRAIL_TIMEOUT1_n_97),
        .O(TRAIL_TIMEOUT0_carry__1_i_1__1_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0_carry__1_i_2__1
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT1_n_103),
        .I2(TRAIL_TIMEOUT1_n_98),
        .O(TRAIL_TIMEOUT0_carry__1_i_2__1_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__1_i_3__1
       (.I0(TRAIL_TIMEOUT1_n_104),
        .I1(TRAIL_TIMEOUT1_n_97),
        .I2(TRAIL_TIMEOUT1_n_99),
        .O(TRAIL_TIMEOUT0_carry__1_i_3__1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    TRAIL_TIMEOUT0_carry__1_i_4__1
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT1_n_97),
        .I2(TRAIL_TIMEOUT1_n_104),
        .O(TRAIL_TIMEOUT0_carry__1_i_4__1_n_0));
  (* HLUTNM = "lutpair14" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__1_i_5__1
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT1_n_101),
        .I2(TRAIL_TIMEOUT1_n_96),
        .I3(TRAIL_TIMEOUT0_carry__1_i_1__1_n_0),
        .O(TRAIL_TIMEOUT0_carry__1_i_5__1_n_0));
  (* HLUTNM = "lutpair13" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__1_i_6__1
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT1_n_102),
        .I2(TRAIL_TIMEOUT1_n_97),
        .I3(TRAIL_TIMEOUT0_carry__1_i_2__1_n_0),
        .O(TRAIL_TIMEOUT0_carry__1_i_6__1_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__1_i_7__1
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT1_n_103),
        .I2(TRAIL_TIMEOUT1_n_98),
        .I3(TRAIL_TIMEOUT0_carry__1_i_3__1_n_0),
        .O(TRAIL_TIMEOUT0_carry__1_i_7__1_n_0));
  LUT5 #(
    .INIT(32'h69966969)) 
    TRAIL_TIMEOUT0_carry__1_i_8__1
       (.I0(TRAIL_TIMEOUT1_n_104),
        .I1(TRAIL_TIMEOUT1_n_97),
        .I2(TRAIL_TIMEOUT1_n_99),
        .I3(TRAIL_TIMEOUT1_n_98),
        .I4(TRAIL_TIMEOUT1_n_105),
        .O(TRAIL_TIMEOUT0_carry__1_i_8__1_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__2
       (.CI(TRAIL_TIMEOUT0_carry__1_n_0),
        .CO({TRAIL_TIMEOUT0_carry__2_n_0,TRAIL_TIMEOUT0_carry__2_n_1,TRAIL_TIMEOUT0_carry__2_n_2,TRAIL_TIMEOUT0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0_carry__2_i_1__1_n_0,TRAIL_TIMEOUT0_carry__2_i_2__1_n_0,TRAIL_TIMEOUT0_carry__2_i_3__1_n_0,TRAIL_TIMEOUT0_carry__2_i_4__1_n_0}),
        .O(NLW_TRAIL_TIMEOUT0_carry__2_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry__2_i_5__1_n_0,TRAIL_TIMEOUT0_carry__2_i_6__1_n_0,TRAIL_TIMEOUT0_carry__2_i_7__1_n_0,TRAIL_TIMEOUT0_carry__2_i_8__1_n_0}));
  (* HLUTNM = "lutpair17" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__2_i_1__1
       (.I0(TRAIL_TIMEOUT1_n_98),
        .I1(TRAIL_TIMEOUT1_n_91),
        .I2(TRAIL_TIMEOUT1_n_93),
        .O(TRAIL_TIMEOUT0_carry__2_i_1__1_n_0));
  (* HLUTNM = "lutpair16" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__2_i_2__1
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT1_n_92),
        .I2(TRAIL_TIMEOUT1_n_94),
        .O(TRAIL_TIMEOUT0_carry__2_i_2__1_n_0));
  (* HLUTNM = "lutpair15" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0_carry__2_i_3__1
       (.I0(TRAIL_TIMEOUT1_n_93),
        .I1(TRAIL_TIMEOUT1_n_100),
        .I2(TRAIL_TIMEOUT1_n_95),
        .O(TRAIL_TIMEOUT0_carry__2_i_3__1_n_0));
  (* HLUTNM = "lutpair14" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0_carry__2_i_4__1
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT1_n_101),
        .I2(TRAIL_TIMEOUT1_n_96),
        .O(TRAIL_TIMEOUT0_carry__2_i_4__1_n_0));
  (* HLUTNM = "lutpair18" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__2_i_5__1
       (.I0(TRAIL_TIMEOUT1_n_97),
        .I1(TRAIL_TIMEOUT1_n_90),
        .I2(TRAIL_TIMEOUT1_n_92),
        .I3(TRAIL_TIMEOUT0_carry__2_i_1__1_n_0),
        .O(TRAIL_TIMEOUT0_carry__2_i_5__1_n_0));
  (* HLUTNM = "lutpair17" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__2_i_6__1
       (.I0(TRAIL_TIMEOUT1_n_98),
        .I1(TRAIL_TIMEOUT1_n_91),
        .I2(TRAIL_TIMEOUT1_n_93),
        .I3(TRAIL_TIMEOUT0_carry__2_i_2__1_n_0),
        .O(TRAIL_TIMEOUT0_carry__2_i_6__1_n_0));
  (* HLUTNM = "lutpair16" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__2_i_7__1
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT1_n_92),
        .I2(TRAIL_TIMEOUT1_n_94),
        .I3(TRAIL_TIMEOUT0_carry__2_i_3__1_n_0),
        .O(TRAIL_TIMEOUT0_carry__2_i_7__1_n_0));
  (* HLUTNM = "lutpair15" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__2_i_8__1
       (.I0(TRAIL_TIMEOUT1_n_93),
        .I1(TRAIL_TIMEOUT1_n_100),
        .I2(TRAIL_TIMEOUT1_n_95),
        .I3(TRAIL_TIMEOUT0_carry__2_i_4__1_n_0),
        .O(TRAIL_TIMEOUT0_carry__2_i_8__1_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__3
       (.CI(TRAIL_TIMEOUT0_carry__2_n_0),
        .CO({TRAIL_TIMEOUT0_carry__3_n_0,TRAIL_TIMEOUT0_carry__3_n_1,TRAIL_TIMEOUT0_carry__3_n_2,TRAIL_TIMEOUT0_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0_carry__3_i_1__1_n_0,TRAIL_TIMEOUT0_carry__3_i_2__1_n_0,TRAIL_TIMEOUT0_carry__3_i_3__1_n_0,TRAIL_TIMEOUT0_carry__3_i_4__1_n_0}),
        .O(NLW_TRAIL_TIMEOUT0_carry__3_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry__3_i_5__1_n_0,TRAIL_TIMEOUT0_carry__3_i_6__1_n_0,TRAIL_TIMEOUT0_carry__3_i_7__1_n_0,TRAIL_TIMEOUT0_carry__3_i_8__1_n_0}));
  (* HLUTNM = "lutpair21" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__3_i_1__1
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT1_n_87),
        .I2(TRAIL_TIMEOUT1_n_89),
        .O(TRAIL_TIMEOUT0_carry__3_i_1__1_n_0));
  (* HLUTNM = "lutpair20" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__3_i_2__1
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT1_n_88),
        .I2(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0_carry__3_i_2__1_n_0));
  (* HLUTNM = "lutpair19" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__3_i_3__1
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT1_n_89),
        .I2(TRAIL_TIMEOUT1_n_91),
        .O(TRAIL_TIMEOUT0_carry__3_i_3__1_n_0));
  (* HLUTNM = "lutpair18" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__3_i_4__1
       (.I0(TRAIL_TIMEOUT1_n_97),
        .I1(TRAIL_TIMEOUT1_n_90),
        .I2(TRAIL_TIMEOUT1_n_92),
        .O(TRAIL_TIMEOUT0_carry__3_i_4__1_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__3_i_5__1
       (.I0(TRAIL_TIMEOUT0_carry__3_i_1__1_n_0),
        .I1(TRAIL_TIMEOUT1_n_93),
        .I2(TRAIL_TIMEOUT1_n_86),
        .I3(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0_carry__3_i_5__1_n_0));
  (* HLUTNM = "lutpair21" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__3_i_6__1
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT1_n_87),
        .I2(TRAIL_TIMEOUT1_n_89),
        .I3(TRAIL_TIMEOUT0_carry__3_i_2__1_n_0),
        .O(TRAIL_TIMEOUT0_carry__3_i_6__1_n_0));
  (* HLUTNM = "lutpair20" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__3_i_7__1
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT1_n_88),
        .I2(TRAIL_TIMEOUT1_n_90),
        .I3(TRAIL_TIMEOUT0_carry__3_i_3__1_n_0),
        .O(TRAIL_TIMEOUT0_carry__3_i_7__1_n_0));
  (* HLUTNM = "lutpair19" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__3_i_8__1
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT1_n_89),
        .I2(TRAIL_TIMEOUT1_n_91),
        .I3(TRAIL_TIMEOUT0_carry__3_i_4__1_n_0),
        .O(TRAIL_TIMEOUT0_carry__3_i_8__1_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__4
       (.CI(TRAIL_TIMEOUT0_carry__3_n_0),
        .CO({TRAIL_TIMEOUT0_carry__4_n_0,TRAIL_TIMEOUT0_carry__4_n_1,TRAIL_TIMEOUT0_carry__4_n_2,TRAIL_TIMEOUT0_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT1_n_90,TRAIL_TIMEOUT0_carry__4_i_1__1_n_0,TRAIL_TIMEOUT0_carry__4_i_2__1_n_0,TRAIL_TIMEOUT0_carry__4_i_3__1_n_0}),
        .O({TRAIL_TIMEOUT0_carry__4_n_4,TRAIL_TIMEOUT0_carry__4_n_5,TRAIL_TIMEOUT0_carry__4_n_6,TRAIL_TIMEOUT0_carry__4_n_7}),
        .S({TRAIL_TIMEOUT0_carry__4_i_4__1_n_0,TRAIL_TIMEOUT0_carry__4_i_5__1_n_0,TRAIL_TIMEOUT0_carry__4_i_6__1_n_0,TRAIL_TIMEOUT0_carry__4_i_7__1_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    TRAIL_TIMEOUT0_carry__4_i_1__1
       (.I0(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0_carry__4_i_1__1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    TRAIL_TIMEOUT0_carry__4_i_2__1
       (.I0(TRAIL_TIMEOUT1_n_92),
        .I1(TRAIL_TIMEOUT1_n_87),
        .O(TRAIL_TIMEOUT0_carry__4_i_2__1_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__4_i_3__1
       (.I0(TRAIL_TIMEOUT1_n_93),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0_carry__4_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__4_i_4__1
       (.I0(TRAIL_TIMEOUT1_n_90),
        .I1(TRAIL_TIMEOUT1_n_89),
        .O(TRAIL_TIMEOUT0_carry__4_i_4__1_n_0));
  LUT3 #(
    .INIT(8'hE1)) 
    TRAIL_TIMEOUT0_carry__4_i_5__1
       (.I0(TRAIL_TIMEOUT1_n_86),
        .I1(TRAIL_TIMEOUT1_n_91),
        .I2(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0_carry__4_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h1EE1)) 
    TRAIL_TIMEOUT0_carry__4_i_6__1
       (.I0(TRAIL_TIMEOUT1_n_87),
        .I1(TRAIL_TIMEOUT1_n_92),
        .I2(TRAIL_TIMEOUT1_n_86),
        .I3(TRAIL_TIMEOUT1_n_91),
        .O(TRAIL_TIMEOUT0_carry__4_i_6__1_n_0));
  LUT5 #(
    .INIT(32'h4DB2B24D)) 
    TRAIL_TIMEOUT0_carry__4_i_7__1
       (.I0(TRAIL_TIMEOUT1_n_88),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(TRAIL_TIMEOUT1_n_93),
        .I3(TRAIL_TIMEOUT1_n_87),
        .I4(TRAIL_TIMEOUT1_n_92),
        .O(TRAIL_TIMEOUT0_carry__4_i_7__1_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__5
       (.CI(TRAIL_TIMEOUT0_carry__4_n_0),
        .CO({NLW_TRAIL_TIMEOUT0_carry__5_CO_UNCONNECTED[3],TRAIL_TIMEOUT0_carry__5_n_1,TRAIL_TIMEOUT0_carry__5_n_2,TRAIL_TIMEOUT0_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,TRAIL_TIMEOUT1_n_87,TRAIL_TIMEOUT1_n_88,TRAIL_TIMEOUT1_n_89}),
        .O({TRAIL_TIMEOUT0_carry__5_n_4,TRAIL_TIMEOUT0_carry__5_n_5,TRAIL_TIMEOUT0_carry__5_n_6,TRAIL_TIMEOUT0_carry__5_n_7}),
        .S({TRAIL_TIMEOUT0_carry__5_i_1__1_n_0,TRAIL_TIMEOUT0_carry__5_i_2__1_n_0,TRAIL_TIMEOUT0_carry__5_i_3__1_n_0,TRAIL_TIMEOUT0_carry__5_i_4__1_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    TRAIL_TIMEOUT0_carry__5_i_1__1
       (.I0(TRAIL_TIMEOUT1_n_86),
        .O(TRAIL_TIMEOUT0_carry__5_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__5_i_2__1
       (.I0(TRAIL_TIMEOUT1_n_87),
        .I1(TRAIL_TIMEOUT1_n_86),
        .O(TRAIL_TIMEOUT0_carry__5_i_2__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__5_i_3__1
       (.I0(TRAIL_TIMEOUT1_n_88),
        .I1(TRAIL_TIMEOUT1_n_87),
        .O(TRAIL_TIMEOUT0_carry__5_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__5_i_4__1
       (.I0(TRAIL_TIMEOUT1_n_89),
        .I1(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0_carry__5_i_4__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry_i_1__1
       (.I0(TRAIL_TIMEOUT1_n_104),
        .I1(TRAIL_TIMEOUT1_n_102),
        .O(TRAIL_TIMEOUT0_carry_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry_i_2__1
       (.I0(TRAIL_TIMEOUT1_n_105),
        .I1(TRAIL_TIMEOUT1_n_103),
        .O(TRAIL_TIMEOUT0_carry_i_2__1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    TRAIL_TIMEOUT0_carry_i_3__1
       (.I0(TRAIL_TIMEOUT1_n_104),
        .O(TRAIL_TIMEOUT0_carry_i_3__1_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-13 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    TRAIL_TIMEOUT1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_TRAIL_TIMEOUT1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_TRAIL_TIMEOUT1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_TRAIL_TIMEOUT1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_TRAIL_TIMEOUT1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_TRAIL_TIMEOUT1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_TRAIL_TIMEOUT1_OVERFLOW_UNCONNECTED),
        .P({NLW_TRAIL_TIMEOUT1_P_UNCONNECTED[47:20],TRAIL_TIMEOUT1_n_86,TRAIL_TIMEOUT1_n_87,TRAIL_TIMEOUT1_n_88,TRAIL_TIMEOUT1_n_89,TRAIL_TIMEOUT1_n_90,TRAIL_TIMEOUT1_n_91,TRAIL_TIMEOUT1_n_92,TRAIL_TIMEOUT1_n_93,TRAIL_TIMEOUT1_n_94,TRAIL_TIMEOUT1_n_95,TRAIL_TIMEOUT1_n_96,TRAIL_TIMEOUT1_n_97,TRAIL_TIMEOUT1_n_98,TRAIL_TIMEOUT1_n_99,TRAIL_TIMEOUT1_n_100,TRAIL_TIMEOUT1_n_101,TRAIL_TIMEOUT1_n_102,TRAIL_TIMEOUT1_n_103,TRAIL_TIMEOUT1_n_104,TRAIL_TIMEOUT1_n_105}),
        .PATTERNBDETECT(NLW_TRAIL_TIMEOUT1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_TRAIL_TIMEOUT1_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_TRAIL_TIMEOUT1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_TRAIL_TIMEOUT1_UNDERFLOW_UNCONNECTED));
  LUT6 #(
    .INIT(64'h00000000AEAE00AE)) 
    dl_txrequesths_posedge_r_i_1__1
       (.I0(dl_txrequesths_posedge_r_reg_n_0),
        .I1(dl2_txrequesths),
        .I2(dl_txrequesths_r),
        .I3(dl_tx_state[0]),
        .I4(dl_tx_state[1]),
        .I5(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ),
        .O(dl_txrequesths_posedge_r_i_1__1_n_0));
  FDRE dl_txrequesths_posedge_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl_txrequesths_posedge_r_i_1__1_n_0),
        .Q(dl_txrequesths_posedge_r_reg_n_0),
        .R(1'b0));
  FDRE dl_txrequesths_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl2_txrequesths),
        .Q(dl_txrequesths_r),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hC8FF)) 
    hs_xfer_done_i_1__1
       (.I0(hs_xfer_done_i),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ),
        .I2(time_out_trail),
        .I3(out),
        .O(hs_xfer_done_i_1__1_n_0));
  FDRE hs_xfer_done_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(hs_xfer_done_i_1__1_n_0),
        .Q(hs_xfer_done_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \pkt_cnt[0]_i_1__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(dl2_txrequesths),
        .O(pkt_cnt0));
  CARRY4 time_out_trail0_carry
       (.CI(1'b0),
        .CO({time_out_trail0_carry_n_0,time_out_trail0_carry_n_1,time_out_trail0_carry_n_2,time_out_trail0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_time_out_trail0_carry_O_UNCONNECTED[3:0]),
        .S({time_out_trail0_carry_i_1__1_n_0,time_out_trail0_carry_i_2__1_n_0,time_out_trail0_carry_i_3__1_n_0,time_out_trail0_carry_i_4__1_n_0}));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT5 #(
    .INIT(32'h60000000)) 
    time_out_trail0_carry_i_10__1
       (.I0(time_out_trail0_carry_i_12__1_n_0),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .I3(TRAIL_TIMEOUT0_carry__4_n_5),
        .I4(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(time_out_trail0_carry_i_10__1_n_0));
  LUT6 #(
    .INIT(64'h9666966696666666)) 
    time_out_trail0_carry_i_11__1
       (.I0(trail_count_reg[3]),
        .I1(TRAIL_TIMEOUT0_carry__4_n_4),
        .I2(TRAIL_TIMEOUT0_carry__4_n_5),
        .I3(TRAIL_TIMEOUT0_carry__4_n_6),
        .I4(TRAIL_TIMEOUT0_carry__4_n_7),
        .I5(time_out_trail0_carry_i_12__1_n_0),
        .O(time_out_trail0_carry_i_11__1_n_0));
  LUT3 #(
    .INIT(8'h45)) 
    time_out_trail0_carry_i_12__1
       (.I0(TRAIL_TIMEOUT0__120_carry__2_n_2),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(TRAIL_TIMEOUT0__92_carry__1_n_6),
        .O(time_out_trail0_carry_i_12__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    time_out_trail0_carry_i_13__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(trail_count_reg[2]),
        .O(time_out_trail0_carry_i_13__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h7)) 
    time_out_trail0_carry_i_14__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_6),
        .I1(TRAIL_TIMEOUT0_carry__4_n_5),
        .O(time_out_trail0_carry_i_14__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    time_out_trail0_carry_i_15__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(time_out_trail0_carry_i_15__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    time_out_trail0_carry_i_16__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_5),
        .I3(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(time_out_trail0_carry_i_16__1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    time_out_trail0_carry_i_1__1
       (.I0(trail_count_reg[9]),
        .O(time_out_trail0_carry_i_1__1_n_0));
  LUT6 #(
    .INIT(64'h0000100042210884)) 
    time_out_trail0_carry_i_2__1
       (.I0(trail_count_reg[6]),
        .I1(trail_count_reg[7]),
        .I2(time_out_trail0_carry_i_5__1_n_0),
        .I3(time_out_trail0_carry_i_6__1_n_0),
        .I4(time_out_trail0_carry_i_7__1_n_0),
        .I5(trail_count_reg[8]),
        .O(time_out_trail0_carry_i_2__1_n_0));
  LUT6 #(
    .INIT(64'h0000000006909009)) 
    time_out_trail0_carry_i_3__1
       (.I0(time_out_trail0_carry_i_8__0_n_0),
        .I1(trail_count_reg[5]),
        .I2(trail_count_reg[4]),
        .I3(time_out_trail0_carry_i_9__1_n_0),
        .I4(time_out_trail0_carry_i_10__1_n_0),
        .I5(time_out_trail0_carry_i_11__1_n_0),
        .O(time_out_trail0_carry_i_3__1_n_0));
  LUT6 #(
    .INIT(64'h2009400002200440)) 
    time_out_trail0_carry_i_4__1
       (.I0(trail_count_reg[1]),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .I3(time_out_trail0_carry_i_12__1_n_0),
        .I4(time_out_trail0_carry_i_13__1_n_0),
        .I5(trail_count_reg[0]),
        .O(time_out_trail0_carry_i_4__1_n_0));
  LUT6 #(
    .INIT(64'h1020000000000000)) 
    time_out_trail0_carry_i_5__1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(time_out_trail0_carry_i_14__1_n_0),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .I3(time_out_trail0_carry_i_12__1_n_0),
        .I4(TRAIL_TIMEOUT0_carry__5_n_7),
        .I5(TRAIL_TIMEOUT0_carry__5_n_6),
        .O(time_out_trail0_carry_i_5__1_n_0));
  LUT6 #(
    .INIT(64'hA6AAAAAAAAAAAAAA)) 
    time_out_trail0_carry_i_6__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(time_out_trail0_carry_i_15__1_n_0),
        .I3(TRAIL_TIMEOUT0_carry__4_n_4),
        .I4(time_out_trail0_carry_i_12__1_n_0),
        .I5(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(time_out_trail0_carry_i_6__1_n_0));
  LUT6 #(
    .INIT(64'h5555955555555555)) 
    time_out_trail0_carry_i_7__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_4),
        .I1(TRAIL_TIMEOUT0_carry__5_n_5),
        .I2(TRAIL_TIMEOUT0_carry__5_n_7),
        .I3(time_out_trail0_carry_i_12__1_n_0),
        .I4(time_out_trail0_carry_i_16__1_n_0),
        .I5(TRAIL_TIMEOUT0_carry__5_n_6),
        .O(time_out_trail0_carry_i_7__1_n_0));
  LUT5 #(
    .INIT(32'hAAAA6AAA)) 
    time_out_trail0_carry_i_8__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(time_out_trail0_carry_i_12__1_n_0),
        .I3(TRAIL_TIMEOUT0_carry__4_n_4),
        .I4(time_out_trail0_carry_i_15__1_n_0),
        .O(time_out_trail0_carry_i_8__0_n_0));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    time_out_trail0_carry_i_9__1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_7),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .I3(TRAIL_TIMEOUT0_carry__4_n_5),
        .I4(TRAIL_TIMEOUT0_carry__4_n_4),
        .I5(time_out_trail0_carry_i_12__1_n_0),
        .O(time_out_trail0_carry_i_9__1_n_0));
  LUT5 #(
    .INIT(32'h0000EAA0)) 
    time_out_trail_i_1__2
       (.I0(time_out_trail),
        .I1(time_out_trail0_carry_n_0),
        .I2(dl_tx_state[1]),
        .I3(dl_tx_state[0]),
        .I4(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ),
        .O(time_out_trail_i_1__2_n_0));
  FDRE time_out_trail_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(time_out_trail_i_1__2_n_0),
        .Q(time_out_trail),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \trail_count[0]_i_1__2 
       (.I0(trail_count_reg[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \trail_count[1]_i_1__2 
       (.I0(trail_count_reg[0]),
        .I1(trail_count_reg[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \trail_count[2]_i_1__2 
       (.I0(trail_count_reg[2]),
        .I1(trail_count_reg[0]),
        .I2(trail_count_reg[1]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \trail_count[3]_i_1__2 
       (.I0(trail_count_reg[3]),
        .I1(trail_count_reg[1]),
        .I2(trail_count_reg[0]),
        .I3(trail_count_reg[2]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \trail_count[4]_i_1__2 
       (.I0(trail_count_reg[4]),
        .I1(trail_count_reg[2]),
        .I2(trail_count_reg[0]),
        .I3(trail_count_reg[1]),
        .I4(trail_count_reg[3]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \trail_count[5]_i_1__2 
       (.I0(trail_count_reg[5]),
        .I1(trail_count_reg[4]),
        .I2(trail_count_reg[2]),
        .I3(trail_count_reg[0]),
        .I4(trail_count_reg[1]),
        .I5(trail_count_reg[3]),
        .O(\trail_count[5]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'hA6)) 
    \trail_count[6]_i_1__2 
       (.I0(trail_count_reg[6]),
        .I1(trail_count_reg[5]),
        .I2(\trail_count[9]_i_4__1_n_0 ),
        .O(\trail_count[6]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT4 #(
    .INIT(16'hA6AA)) 
    \trail_count[7]_i_1__2 
       (.I0(trail_count_reg[7]),
        .I1(trail_count_reg[6]),
        .I2(\trail_count[9]_i_4__1_n_0 ),
        .I3(trail_count_reg[5]),
        .O(\trail_count[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT5 #(
    .INIT(32'hA6AAAAAA)) 
    \trail_count[8]_i_1__2 
       (.I0(trail_count_reg[8]),
        .I1(trail_count_reg[5]),
        .I2(\trail_count[9]_i_4__1_n_0 ),
        .I3(trail_count_reg[6]),
        .I4(trail_count_reg[7]),
        .O(p_0_in[8]));
  LUT3 #(
    .INIT(8'hAB)) 
    \trail_count[9]_i_1__2 
       (.I0(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[1]),
        .O(\trail_count[9]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \trail_count[9]_i_2__2 
       (.I0(time_out_trail0_carry_n_0),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[1]),
        .O(\trail_count[9]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hAA6AAAAAAAAAAAAA)) 
    \trail_count[9]_i_3__2 
       (.I0(trail_count_reg[9]),
        .I1(trail_count_reg[7]),
        .I2(trail_count_reg[6]),
        .I3(\trail_count[9]_i_4__1_n_0 ),
        .I4(trail_count_reg[5]),
        .I5(trail_count_reg[8]),
        .O(p_0_in[9]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \trail_count[9]_i_4__1 
       (.I0(trail_count_reg[3]),
        .I1(trail_count_reg[1]),
        .I2(trail_count_reg[0]),
        .I3(trail_count_reg[2]),
        .I4(trail_count_reg[4]),
        .O(\trail_count[9]_i_4__1_n_0 ));
  FDRE \trail_count_reg[0] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__2_n_0 ),
        .D(p_0_in[0]),
        .Q(trail_count_reg[0]),
        .R(\trail_count[9]_i_1__2_n_0 ));
  FDRE \trail_count_reg[1] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__2_n_0 ),
        .D(p_0_in[1]),
        .Q(trail_count_reg[1]),
        .R(\trail_count[9]_i_1__2_n_0 ));
  FDRE \trail_count_reg[2] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__2_n_0 ),
        .D(p_0_in[2]),
        .Q(trail_count_reg[2]),
        .R(\trail_count[9]_i_1__2_n_0 ));
  FDRE \trail_count_reg[3] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__2_n_0 ),
        .D(p_0_in[3]),
        .Q(trail_count_reg[3]),
        .R(\trail_count[9]_i_1__2_n_0 ));
  FDRE \trail_count_reg[4] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__2_n_0 ),
        .D(p_0_in[4]),
        .Q(trail_count_reg[4]),
        .R(\trail_count[9]_i_1__2_n_0 ));
  FDRE \trail_count_reg[5] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__2_n_0 ),
        .D(\trail_count[5]_i_1__2_n_0 ),
        .Q(trail_count_reg[5]),
        .R(\trail_count[9]_i_1__2_n_0 ));
  FDRE \trail_count_reg[6] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__2_n_0 ),
        .D(\trail_count[6]_i_1__2_n_0 ),
        .Q(trail_count_reg[6]),
        .R(\trail_count[9]_i_1__2_n_0 ));
  FDRE \trail_count_reg[7] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__2_n_0 ),
        .D(\trail_count[7]_i_1__2_n_0 ),
        .Q(trail_count_reg[7]),
        .R(\trail_count[9]_i_1__2_n_0 ));
  FDRE \trail_count_reg[8] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__2_n_0 ),
        .D(p_0_in[8]),
        .Q(trail_count_reg[8]),
        .R(\trail_count[9]_i_1__2_n_0 ));
  FDRE \trail_count_reg[9] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__2_n_0 ),
        .D(p_0_in[9]),
        .Q(trail_count_reg[9]),
        .R(\trail_count[9]_i_1__2_n_0 ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_hs_datapath_7series" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_hs_datapath_7series_51
   (\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ,
    hs_xfer_done_i,
    pkt_cnt0,
    tx_dl1_hs_dp,
    \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ,
    dl1_txrequesths,
    tx_div4_clk,
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ,
    dl1_txdatahs,
    timeout_zero_out_i_0,
    \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ,
    out);
  output \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ;
  output hs_xfer_done_i;
  output pkt_cnt0;
  output [7:0]tx_dl1_hs_dp;
  input \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ;
  input dl1_txrequesths;
  input tx_div4_clk;
  input \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ;
  input [7:0]dl1_txdatahs;
  input timeout_zero_out_i_0;
  input \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ;
  input out;

  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_2__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_state[1]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ;
  wire TRAIL_TIMEOUT0__120_carry__0_i_1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_3_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_4_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_5__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_6__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_7__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_8__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_n_1;
  wire TRAIL_TIMEOUT0__120_carry__0_n_2;
  wire TRAIL_TIMEOUT0__120_carry__0_n_3;
  wire TRAIL_TIMEOUT0__120_carry__1_i_1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_3_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_4_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_5__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_6__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_7__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_8__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_n_1;
  wire TRAIL_TIMEOUT0__120_carry__1_n_2;
  wire TRAIL_TIMEOUT0__120_carry__1_n_3;
  wire TRAIL_TIMEOUT0__120_carry__2_i_1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__2_i_2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__2_i_3__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__2_i_4__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__2_n_2;
  wire TRAIL_TIMEOUT0__120_carry__2_n_3;
  wire TRAIL_TIMEOUT0__120_carry_i_1_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_2_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_3_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_4__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_5__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_6__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_7__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry_n_0;
  wire TRAIL_TIMEOUT0__120_carry_n_1;
  wire TRAIL_TIMEOUT0__120_carry_n_2;
  wire TRAIL_TIMEOUT0__120_carry_n_3;
  wire TRAIL_TIMEOUT0__60_carry__0_i_1__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_2__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_3__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_4__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_5__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_6__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_7__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_8__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_n_1;
  wire TRAIL_TIMEOUT0__60_carry__0_n_2;
  wire TRAIL_TIMEOUT0__60_carry__0_n_3;
  wire TRAIL_TIMEOUT0__60_carry__0_n_4;
  wire TRAIL_TIMEOUT0__60_carry__0_n_5;
  wire TRAIL_TIMEOUT0__60_carry__0_n_6;
  wire TRAIL_TIMEOUT0__60_carry__0_n_7;
  wire TRAIL_TIMEOUT0__60_carry__1_i_1__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_i_2__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_i_3__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_i_4_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_n_2;
  wire TRAIL_TIMEOUT0__60_carry__1_n_3;
  wire TRAIL_TIMEOUT0__60_carry__1_n_5;
  wire TRAIL_TIMEOUT0__60_carry__1_n_6;
  wire TRAIL_TIMEOUT0__60_carry__1_n_7;
  wire TRAIL_TIMEOUT0__60_carry_i_1__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_2__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_3__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_4__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_5__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_6__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_7__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry_n_0;
  wire TRAIL_TIMEOUT0__60_carry_n_1;
  wire TRAIL_TIMEOUT0__60_carry_n_2;
  wire TRAIL_TIMEOUT0__60_carry_n_3;
  wire TRAIL_TIMEOUT0__60_carry_n_4;
  wire TRAIL_TIMEOUT0__60_carry_n_5;
  wire TRAIL_TIMEOUT0__60_carry_n_6;
  wire TRAIL_TIMEOUT0__60_carry_n_7;
  wire TRAIL_TIMEOUT0__92_carry__0_i_1__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_2__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_3__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_4__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_5__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_6__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_7__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_8__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_n_1;
  wire TRAIL_TIMEOUT0__92_carry__0_n_2;
  wire TRAIL_TIMEOUT0__92_carry__0_n_3;
  wire TRAIL_TIMEOUT0__92_carry__0_n_4;
  wire TRAIL_TIMEOUT0__92_carry__0_n_5;
  wire TRAIL_TIMEOUT0__92_carry__0_n_6;
  wire TRAIL_TIMEOUT0__92_carry__0_n_7;
  wire TRAIL_TIMEOUT0__92_carry__1_i_1__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry__1_i_2__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry__1_i_3__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry__1_n_3;
  wire TRAIL_TIMEOUT0__92_carry__1_n_6;
  wire TRAIL_TIMEOUT0__92_carry__1_n_7;
  wire TRAIL_TIMEOUT0__92_carry_i_1__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_2_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_3_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_4__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_5__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_6__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_7__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry_n_0;
  wire TRAIL_TIMEOUT0__92_carry_n_1;
  wire TRAIL_TIMEOUT0__92_carry_n_2;
  wire TRAIL_TIMEOUT0__92_carry_n_3;
  wire TRAIL_TIMEOUT0__92_carry_n_4;
  wire TRAIL_TIMEOUT0__92_carry_n_5;
  wire TRAIL_TIMEOUT0__92_carry_n_6;
  wire TRAIL_TIMEOUT0__92_carry_n_7;
  wire TRAIL_TIMEOUT0_carry__0_i_1__0_n_0;
  wire TRAIL_TIMEOUT0_carry__0_i_2__0_n_0;
  wire TRAIL_TIMEOUT0_carry__0_i_3__0_n_0;
  wire TRAIL_TIMEOUT0_carry__0_i_4__0_n_0;
  wire TRAIL_TIMEOUT0_carry__0_n_0;
  wire TRAIL_TIMEOUT0_carry__0_n_1;
  wire TRAIL_TIMEOUT0_carry__0_n_2;
  wire TRAIL_TIMEOUT0_carry__0_n_3;
  wire TRAIL_TIMEOUT0_carry__1_i_1__0_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_2__0_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_3__0_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_4__0_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_5__0_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_6__0_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_7__0_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_8__0_n_0;
  wire TRAIL_TIMEOUT0_carry__1_n_0;
  wire TRAIL_TIMEOUT0_carry__1_n_1;
  wire TRAIL_TIMEOUT0_carry__1_n_2;
  wire TRAIL_TIMEOUT0_carry__1_n_3;
  wire TRAIL_TIMEOUT0_carry__2_i_1__0_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_2__0_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_3__0_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_4__0_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_5__0_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_6__0_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_7__0_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_8__0_n_0;
  wire TRAIL_TIMEOUT0_carry__2_n_0;
  wire TRAIL_TIMEOUT0_carry__2_n_1;
  wire TRAIL_TIMEOUT0_carry__2_n_2;
  wire TRAIL_TIMEOUT0_carry__2_n_3;
  wire TRAIL_TIMEOUT0_carry__3_i_1__0_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_2__0_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_3__0_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_4__0_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_5__0_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_6__0_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_7__0_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_8__0_n_0;
  wire TRAIL_TIMEOUT0_carry__3_n_0;
  wire TRAIL_TIMEOUT0_carry__3_n_1;
  wire TRAIL_TIMEOUT0_carry__3_n_2;
  wire TRAIL_TIMEOUT0_carry__3_n_3;
  wire TRAIL_TIMEOUT0_carry__4_i_1__0_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_2__0_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_3__0_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_4__0_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_5__0_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_6__0_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_7__0_n_0;
  wire TRAIL_TIMEOUT0_carry__4_n_0;
  wire TRAIL_TIMEOUT0_carry__4_n_1;
  wire TRAIL_TIMEOUT0_carry__4_n_2;
  wire TRAIL_TIMEOUT0_carry__4_n_3;
  wire TRAIL_TIMEOUT0_carry__4_n_4;
  wire TRAIL_TIMEOUT0_carry__4_n_5;
  wire TRAIL_TIMEOUT0_carry__4_n_6;
  wire TRAIL_TIMEOUT0_carry__4_n_7;
  wire TRAIL_TIMEOUT0_carry__5_i_1__0_n_0;
  wire TRAIL_TIMEOUT0_carry__5_i_2__0_n_0;
  wire TRAIL_TIMEOUT0_carry__5_i_3__0_n_0;
  wire TRAIL_TIMEOUT0_carry__5_i_4__0_n_0;
  wire TRAIL_TIMEOUT0_carry__5_n_1;
  wire TRAIL_TIMEOUT0_carry__5_n_2;
  wire TRAIL_TIMEOUT0_carry__5_n_3;
  wire TRAIL_TIMEOUT0_carry__5_n_4;
  wire TRAIL_TIMEOUT0_carry__5_n_5;
  wire TRAIL_TIMEOUT0_carry__5_n_6;
  wire TRAIL_TIMEOUT0_carry__5_n_7;
  wire TRAIL_TIMEOUT0_carry_i_1__0_n_0;
  wire TRAIL_TIMEOUT0_carry_i_2__0_n_0;
  wire TRAIL_TIMEOUT0_carry_i_3__0_n_0;
  wire TRAIL_TIMEOUT0_carry_n_0;
  wire TRAIL_TIMEOUT0_carry_n_1;
  wire TRAIL_TIMEOUT0_carry_n_2;
  wire TRAIL_TIMEOUT0_carry_n_3;
  wire TRAIL_TIMEOUT1_n_100;
  wire TRAIL_TIMEOUT1_n_101;
  wire TRAIL_TIMEOUT1_n_102;
  wire TRAIL_TIMEOUT1_n_103;
  wire TRAIL_TIMEOUT1_n_104;
  wire TRAIL_TIMEOUT1_n_105;
  wire TRAIL_TIMEOUT1_n_86;
  wire TRAIL_TIMEOUT1_n_87;
  wire TRAIL_TIMEOUT1_n_88;
  wire TRAIL_TIMEOUT1_n_89;
  wire TRAIL_TIMEOUT1_n_90;
  wire TRAIL_TIMEOUT1_n_91;
  wire TRAIL_TIMEOUT1_n_92;
  wire TRAIL_TIMEOUT1_n_93;
  wire TRAIL_TIMEOUT1_n_94;
  wire TRAIL_TIMEOUT1_n_95;
  wire TRAIL_TIMEOUT1_n_96;
  wire TRAIL_TIMEOUT1_n_97;
  wire TRAIL_TIMEOUT1_n_98;
  wire TRAIL_TIMEOUT1_n_99;
  wire [7:0]dl1_txdatahs;
  wire dl1_txrequesths;
  wire [7:0]dl_tx_hs_dp0_in;
  wire [1:0]dl_tx_state;
  wire dl_txrequesths_posedge_r_i_1__0_n_0;
  wire dl_txrequesths_posedge_r_reg_n_0;
  wire dl_txrequesths_r;
  wire [7:7]gen_eot_r;
  wire hs_xfer_done_i;
  wire hs_xfer_done_i_1__0_n_0;
  wire out;
  wire [9:0]p_0_in;
  wire [7:7]p_0_in_0;
  wire pkt_cnt0;
  wire time_out_trail;
  wire time_out_trail0_carry_i_10__0_n_0;
  wire time_out_trail0_carry_i_11__0_n_0;
  wire time_out_trail0_carry_i_12__0_n_0;
  wire time_out_trail0_carry_i_13__0_n_0;
  wire time_out_trail0_carry_i_14__0_n_0;
  wire time_out_trail0_carry_i_15__0_n_0;
  wire time_out_trail0_carry_i_16__0_n_0;
  wire time_out_trail0_carry_i_1__0_n_0;
  wire time_out_trail0_carry_i_2__0_n_0;
  wire time_out_trail0_carry_i_3__0_n_0;
  wire time_out_trail0_carry_i_4__0_n_0;
  wire time_out_trail0_carry_i_5__0_n_0;
  wire time_out_trail0_carry_i_6__0_n_0;
  wire time_out_trail0_carry_i_7__0_n_0;
  wire time_out_trail0_carry_i_8_n_0;
  wire time_out_trail0_carry_i_9__0_n_0;
  wire time_out_trail0_carry_n_0;
  wire time_out_trail0_carry_n_1;
  wire time_out_trail0_carry_n_2;
  wire time_out_trail0_carry_n_3;
  wire time_out_trail_i_1__1_n_0;
  wire timeout_zero_out_i_0;
  wire \trail_count[5]_i_1__1_n_0 ;
  wire \trail_count[6]_i_1__1_n_0 ;
  wire \trail_count[7]_i_1__1_n_0 ;
  wire \trail_count[9]_i_1__1_n_0 ;
  wire \trail_count[9]_i_2__1_n_0 ;
  wire \trail_count[9]_i_4__0_n_0 ;
  wire [9:0]trail_count_reg;
  wire tx_div4_clk;
  wire [7:0]tx_dl1_hs_dp;
  wire [3:0]NLW_TRAIL_TIMEOUT0__120_carry_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0__120_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0__120_carry__1_O_UNCONNECTED;
  wire [3:2]NLW_TRAIL_TIMEOUT0__120_carry__2_CO_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0__120_carry__2_O_UNCONNECTED;
  wire [2:2]NLW_TRAIL_TIMEOUT0__60_carry__1_CO_UNCONNECTED;
  wire [3:3]NLW_TRAIL_TIMEOUT0__60_carry__1_O_UNCONNECTED;
  wire [3:1]NLW_TRAIL_TIMEOUT0__92_carry__1_CO_UNCONNECTED;
  wire [3:2]NLW_TRAIL_TIMEOUT0__92_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry__2_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry__3_O_UNCONNECTED;
  wire [3:3]NLW_TRAIL_TIMEOUT0_carry__5_CO_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_OVERFLOW_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_PATTERNDETECT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_TRAIL_TIMEOUT1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_TRAIL_TIMEOUT1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT1_CARRYOUT_UNCONNECTED;
  wire [47:20]NLW_TRAIL_TIMEOUT1_P_UNCONNECTED;
  wire [47:0]NLW_TRAIL_TIMEOUT1_PCOUT_UNCONNECTED;
  wire [3:0]NLW_time_out_trail0_carry_O_UNCONNECTED;

  LUT6 #(
    .INIT(64'hC800CFFF880088AA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1__0 
       (.I0(dl_tx_state[1]),
        .I1(dl1_txdatahs[0]),
        .I2(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(gen_eot_r),
        .I5(dl_tx_state[0]),
        .O(dl_tx_hs_dp0_in[0]));
  LUT6 #(
    .INIT(64'hC800CFFF880088AA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1__0 
       (.I0(dl_tx_state[1]),
        .I1(dl1_txdatahs[1]),
        .I2(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(gen_eot_r),
        .I5(dl_tx_state[0]),
        .O(dl_tx_hs_dp0_in[1]));
  LUT6 #(
    .INIT(64'hC800CFFF880088AA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1__0 
       (.I0(dl_tx_state[1]),
        .I1(dl1_txdatahs[2]),
        .I2(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(gen_eot_r),
        .I5(dl_tx_state[0]),
        .O(dl_tx_hs_dp0_in[2]));
  LUT6 #(
    .INIT(64'h00000000EE0C0C0C)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__0_n_0 ),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6_n_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(dl1_txdatahs[3]),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7_n_0 ),
        .O(dl_tx_hs_dp0_in[3]));
  LUT6 #(
    .INIT(64'h00000000EE0C0C0C)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__0_n_0 ),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6_n_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(dl1_txdatahs[4]),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7_n_0 ),
        .O(dl_tx_hs_dp0_in[4]));
  LUT6 #(
    .INIT(64'h00000000EE0C0C0C)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__0_n_0 ),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6_n_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(dl1_txdatahs[5]),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7_n_0 ),
        .O(dl_tx_hs_dp0_in[5]));
  LUT6 #(
    .INIT(64'hC800CFFF880088AA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1__0 
       (.I0(dl_tx_state[1]),
        .I1(dl1_txdatahs[6]),
        .I2(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(gen_eot_r),
        .I5(dl_tx_state[0]),
        .O(dl_tx_hs_dp0_in[6]));
  LUT6 #(
    .INIT(64'hBEAABEBEBABABEBE)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__0_n_0 ),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[1]),
        .I3(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I4(dl1_txrequesths),
        .I5(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000E000EAAA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__0_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I3(dl1_txdatahs[7]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6_n_0 ),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7_n_0 ),
        .O(dl_tx_hs_dp0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT5 #(
    .INIT(32'h11111011)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__0 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[1]),
        .I2(dl_txrequesths_posedge_r_reg_n_0),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ),
        .I4(timeout_zero_out_i_0),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT5 #(
    .INIT(32'h55557FFF)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__0 
       (.I0(dl_tx_state[0]),
        .I1(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I2(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ),
        .I3(dl1_txrequesths),
        .I4(gen_eot_r),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__0_n_0 ));
  LUT4 #(
    .INIT(16'hAA80)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6 
       (.I0(dl_tx_state[1]),
        .I1(dl1_txrequesths),
        .I2(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ),
        .I3(gen_eot_r),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[1]),
        .I2(timeout_zero_out_i_0),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_7_n_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__0_n_0 ),
        .D(dl_tx_hs_dp0_in[0]),
        .Q(tx_dl1_hs_dp[0]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[1] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__0_n_0 ),
        .D(dl_tx_hs_dp0_in[1]),
        .Q(tx_dl1_hs_dp[1]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[2] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__0_n_0 ),
        .D(dl_tx_hs_dp0_in[2]),
        .Q(tx_dl1_hs_dp[2]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[3] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__0_n_0 ),
        .D(dl_tx_hs_dp0_in[3]),
        .Q(tx_dl1_hs_dp[3]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[4] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__0_n_0 ),
        .D(dl_tx_hs_dp0_in[4]),
        .Q(tx_dl1_hs_dp[4]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[5] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__0_n_0 ),
        .D(dl_tx_hs_dp0_in[5]),
        .Q(tx_dl1_hs_dp[5]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__0_n_0 ),
        .D(dl_tx_hs_dp0_in[6]),
        .Q(tx_dl1_hs_dp[6]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[7] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__0_n_0 ),
        .D(dl_tx_hs_dp0_in[7]),
        .Q(tx_dl1_hs_dp[7]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  LUT6 #(
    .INIT(64'h1133FFFF30FC0000)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_1__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(dl_tx_state[1]),
        .I2(timeout_zero_out_i_0),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6]_0 ),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_2__0_n_0 ),
        .I5(dl_tx_state[0]),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT4 #(
    .INIT(16'hFF80)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_2__0 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[0]),
        .I2(time_out_trail),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT4 #(
    .INIT(16'h662A)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state[1]_i_1__0 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[0]),
        .I2(time_out_trail),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_state[1]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_1__0_n_0 ),
        .Q(dl_tx_state[0]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_state[1]_i_1__0_n_0 ),
        .Q(dl_tx_state[1]),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(timeout_zero_out_i_0),
        .I2(dl1_txrequesths),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__0_n_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__0_n_0 ),
        .Q(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h8A8F02008A8F0A00)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__0 
       (.I0(dl1_txrequesths),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ),
        .I2(dl_tx_state[1]),
        .I3(dl_tx_state[0]),
        .I4(dl1_txdatahs[7]),
        .I5(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .O(p_0_in_0));
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__0_n_0 ),
        .D(p_0_in_0),
        .Q(gen_eot_r),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  CARRY4 TRAIL_TIMEOUT0__120_carry
       (.CI(1'b0),
        .CO({TRAIL_TIMEOUT0__120_carry_n_0,TRAIL_TIMEOUT0__120_carry_n_1,TRAIL_TIMEOUT0__120_carry_n_2,TRAIL_TIMEOUT0__120_carry_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__120_carry_i_1_n_0,TRAIL_TIMEOUT0__120_carry_i_2_n_0,TRAIL_TIMEOUT0__120_carry_i_3_n_0,1'b0}),
        .O(NLW_TRAIL_TIMEOUT0__120_carry_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0__120_carry_i_4__0_n_0,TRAIL_TIMEOUT0__120_carry_i_5__0_n_0,TRAIL_TIMEOUT0__120_carry_i_6__0_n_0,TRAIL_TIMEOUT0__120_carry_i_7__0_n_0}));
  CARRY4 TRAIL_TIMEOUT0__120_carry__0
       (.CI(TRAIL_TIMEOUT0__120_carry_n_0),
        .CO({TRAIL_TIMEOUT0__120_carry__0_n_0,TRAIL_TIMEOUT0__120_carry__0_n_1,TRAIL_TIMEOUT0__120_carry__0_n_2,TRAIL_TIMEOUT0__120_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__120_carry__0_i_1_n_0,TRAIL_TIMEOUT0__120_carry__0_i_2_n_0,TRAIL_TIMEOUT0__120_carry__0_i_3_n_0,TRAIL_TIMEOUT0__120_carry__0_i_4_n_0}),
        .O(NLW_TRAIL_TIMEOUT0__120_carry__0_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0__120_carry__0_i_5__0_n_0,TRAIL_TIMEOUT0__120_carry__0_i_6__0_n_0,TRAIL_TIMEOUT0__120_carry__0_i_7__0_n_0,TRAIL_TIMEOUT0__120_carry__0_i_8__0_n_0}));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry__0_i_1
       (.I0(TRAIL_TIMEOUT0__92_carry_n_5),
        .I1(TRAIL_TIMEOUT1_n_93),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry__0_i_2
       (.I0(TRAIL_TIMEOUT0__92_carry_n_6),
        .I1(TRAIL_TIMEOUT1_n_94),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry__0_i_3
       (.I0(TRAIL_TIMEOUT0__92_carry_n_7),
        .I1(TRAIL_TIMEOUT1_n_95),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry__0_i_4
       (.I0(TRAIL_TIMEOUT0__60_carry_n_6),
        .I1(TRAIL_TIMEOUT1_n_96),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    TRAIL_TIMEOUT0__120_carry__0_i_5__0
       (.I0(TRAIL_TIMEOUT1_n_93),
        .I1(TRAIL_TIMEOUT0__92_carry_n_5),
        .I2(TRAIL_TIMEOUT0__92_carry_n_4),
        .I3(TRAIL_TIMEOUT1_n_92),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_5__0_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    TRAIL_TIMEOUT0__120_carry__0_i_6__0
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT0__92_carry_n_6),
        .I2(TRAIL_TIMEOUT0__92_carry_n_5),
        .I3(TRAIL_TIMEOUT1_n_93),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_6__0_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    TRAIL_TIMEOUT0__120_carry__0_i_7__0
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT0__92_carry_n_7),
        .I2(TRAIL_TIMEOUT0__92_carry_n_6),
        .I3(TRAIL_TIMEOUT1_n_94),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_7__0_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    TRAIL_TIMEOUT0__120_carry__0_i_8__0
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT0__60_carry_n_6),
        .I2(TRAIL_TIMEOUT0__92_carry_n_7),
        .I3(TRAIL_TIMEOUT1_n_95),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_8__0_n_0));
  CARRY4 TRAIL_TIMEOUT0__120_carry__1
       (.CI(TRAIL_TIMEOUT0__120_carry__0_n_0),
        .CO({TRAIL_TIMEOUT0__120_carry__1_n_0,TRAIL_TIMEOUT0__120_carry__1_n_1,TRAIL_TIMEOUT0__120_carry__1_n_2,TRAIL_TIMEOUT0__120_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__120_carry__1_i_1_n_0,TRAIL_TIMEOUT0__120_carry__1_i_2_n_0,TRAIL_TIMEOUT0__120_carry__1_i_3_n_0,TRAIL_TIMEOUT0__120_carry__1_i_4_n_0}),
        .O(NLW_TRAIL_TIMEOUT0__120_carry__1_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0__120_carry__1_i_5__0_n_0,TRAIL_TIMEOUT0__120_carry__1_i_6__0_n_0,TRAIL_TIMEOUT0__120_carry__1_i_7__0_n_0,TRAIL_TIMEOUT0__120_carry__1_i_8__0_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__1_i_1
       (.I0(TRAIL_TIMEOUT0__92_carry__0_n_5),
        .I1(TRAIL_TIMEOUT1_n_89),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__1_i_2
       (.I0(TRAIL_TIMEOUT0__92_carry__0_n_6),
        .I1(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__1_i_3
       (.I0(TRAIL_TIMEOUT0__92_carry__0_n_7),
        .I1(TRAIL_TIMEOUT1_n_91),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__1_i_4
       (.I0(TRAIL_TIMEOUT0__92_carry_n_4),
        .I1(TRAIL_TIMEOUT1_n_92),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_4_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__1_i_5__0
       (.I0(TRAIL_TIMEOUT1_n_89),
        .I1(TRAIL_TIMEOUT0__92_carry__0_n_5),
        .I2(TRAIL_TIMEOUT0__92_carry__0_n_4),
        .I3(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_5__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__1_i_6__0
       (.I0(TRAIL_TIMEOUT1_n_90),
        .I1(TRAIL_TIMEOUT0__92_carry__0_n_6),
        .I2(TRAIL_TIMEOUT0__92_carry__0_n_5),
        .I3(TRAIL_TIMEOUT1_n_89),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_6__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__1_i_7__0
       (.I0(TRAIL_TIMEOUT1_n_91),
        .I1(TRAIL_TIMEOUT0__92_carry__0_n_7),
        .I2(TRAIL_TIMEOUT0__92_carry__0_n_6),
        .I3(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_7__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__1_i_8__0
       (.I0(TRAIL_TIMEOUT1_n_92),
        .I1(TRAIL_TIMEOUT0__92_carry_n_4),
        .I2(TRAIL_TIMEOUT0__92_carry__0_n_7),
        .I3(TRAIL_TIMEOUT1_n_91),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_8__0_n_0));
  CARRY4 TRAIL_TIMEOUT0__120_carry__2
       (.CI(TRAIL_TIMEOUT0__120_carry__1_n_0),
        .CO({NLW_TRAIL_TIMEOUT0__120_carry__2_CO_UNCONNECTED[3:2],TRAIL_TIMEOUT0__120_carry__2_n_2,TRAIL_TIMEOUT0__120_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,TRAIL_TIMEOUT0__120_carry__2_i_1_n_0,TRAIL_TIMEOUT0__120_carry__2_i_2_n_0}),
        .O(NLW_TRAIL_TIMEOUT0__120_carry__2_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,TRAIL_TIMEOUT0__120_carry__2_i_3__0_n_0,TRAIL_TIMEOUT0__120_carry__2_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__2_i_1
       (.I0(TRAIL_TIMEOUT0__92_carry__1_n_7),
        .I1(TRAIL_TIMEOUT1_n_87),
        .O(TRAIL_TIMEOUT0__120_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__2_i_2
       (.I0(TRAIL_TIMEOUT0__92_carry__0_n_4),
        .I1(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0__120_carry__2_i_2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__2_i_3__0
       (.I0(TRAIL_TIMEOUT1_n_87),
        .I1(TRAIL_TIMEOUT0__92_carry__1_n_7),
        .I2(TRAIL_TIMEOUT0__92_carry__1_n_6),
        .I3(TRAIL_TIMEOUT1_n_86),
        .O(TRAIL_TIMEOUT0__120_carry__2_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__2_i_4__0
       (.I0(TRAIL_TIMEOUT1_n_88),
        .I1(TRAIL_TIMEOUT0__92_carry__0_n_4),
        .I2(TRAIL_TIMEOUT0__92_carry__1_n_7),
        .I3(TRAIL_TIMEOUT1_n_87),
        .O(TRAIL_TIMEOUT0__120_carry__2_i_4__0_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry_i_1
       (.I0(TRAIL_TIMEOUT0__60_carry_n_7),
        .I1(TRAIL_TIMEOUT1_n_97),
        .O(TRAIL_TIMEOUT0__120_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry_i_2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_6),
        .I1(TRAIL_TIMEOUT1_n_98),
        .O(TRAIL_TIMEOUT0__120_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry_i_3
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT1_n_99),
        .O(TRAIL_TIMEOUT0__120_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    TRAIL_TIMEOUT0__120_carry_i_4__0
       (.I0(TRAIL_TIMEOUT1_n_97),
        .I1(TRAIL_TIMEOUT0__60_carry_n_7),
        .I2(TRAIL_TIMEOUT0__60_carry_n_6),
        .I3(TRAIL_TIMEOUT1_n_96),
        .O(TRAIL_TIMEOUT0__120_carry_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h4BB4)) 
    TRAIL_TIMEOUT0__120_carry_i_5__0
       (.I0(TRAIL_TIMEOUT1_n_98),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0__60_carry_n_7),
        .I3(TRAIL_TIMEOUT1_n_97),
        .O(TRAIL_TIMEOUT0__120_carry_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    TRAIL_TIMEOUT0__120_carry_i_6__0
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .I3(TRAIL_TIMEOUT1_n_98),
        .O(TRAIL_TIMEOUT0__120_carry_i_6__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    TRAIL_TIMEOUT0__120_carry_i_7__0
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__120_carry_i_7__0_n_0));
  CARRY4 TRAIL_TIMEOUT0__60_carry
       (.CI(1'b0),
        .CO({TRAIL_TIMEOUT0__60_carry_n_0,TRAIL_TIMEOUT0__60_carry_n_1,TRAIL_TIMEOUT0__60_carry_n_2,TRAIL_TIMEOUT0__60_carry_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__60_carry_i_1__0_n_0,TRAIL_TIMEOUT0__60_carry_i_2__0_n_0,TRAIL_TIMEOUT0__60_carry_i_3__0_n_0,1'b0}),
        .O({TRAIL_TIMEOUT0__60_carry_n_4,TRAIL_TIMEOUT0__60_carry_n_5,TRAIL_TIMEOUT0__60_carry_n_6,TRAIL_TIMEOUT0__60_carry_n_7}),
        .S({TRAIL_TIMEOUT0__60_carry_i_4__0_n_0,TRAIL_TIMEOUT0__60_carry_i_5__0_n_0,TRAIL_TIMEOUT0__60_carry_i_6__0_n_0,TRAIL_TIMEOUT0__60_carry_i_7__0_n_0}));
  CARRY4 TRAIL_TIMEOUT0__60_carry__0
       (.CI(TRAIL_TIMEOUT0__60_carry_n_0),
        .CO({TRAIL_TIMEOUT0__60_carry__0_n_0,TRAIL_TIMEOUT0__60_carry__0_n_1,TRAIL_TIMEOUT0__60_carry__0_n_2,TRAIL_TIMEOUT0__60_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__60_carry__0_i_1__0_n_0,TRAIL_TIMEOUT0__60_carry__0_i_2__0_n_0,TRAIL_TIMEOUT0__60_carry__0_i_3__0_n_0,TRAIL_TIMEOUT0__60_carry__0_i_4__0_n_0}),
        .O({TRAIL_TIMEOUT0__60_carry__0_n_4,TRAIL_TIMEOUT0__60_carry__0_n_5,TRAIL_TIMEOUT0__60_carry__0_n_6,TRAIL_TIMEOUT0__60_carry__0_n_7}),
        .S({TRAIL_TIMEOUT0__60_carry__0_i_5__0_n_0,TRAIL_TIMEOUT0__60_carry__0_i_6__0_n_0,TRAIL_TIMEOUT0__60_carry__0_i_7__0_n_0,TRAIL_TIMEOUT0__60_carry__0_i_8__0_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0__60_carry__0_i_1__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_1__0_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__60_carry__0_i_2__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_2__0_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    TRAIL_TIMEOUT0__60_carry__0_i_3__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_5),
        .I2(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_3__0_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    TRAIL_TIMEOUT0__60_carry__0_i_4__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_4__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__60_carry__0_i_5__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(TRAIL_TIMEOUT0_carry__5_n_4),
        .I3(TRAIL_TIMEOUT0_carry__5_n_6),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_5__0_n_0));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    TRAIL_TIMEOUT0__60_carry__0_i_6__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .I2(TRAIL_TIMEOUT0_carry__5_n_6),
        .I3(TRAIL_TIMEOUT0_carry__5_n_5),
        .I4(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__60_carry__0_i_7__0
       (.I0(TRAIL_TIMEOUT0__60_carry__0_i_3__0_n_0),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(TRAIL_TIMEOUT0_carry__5_n_4),
        .I3(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__60_carry__0_i_8__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_5),
        .I2(TRAIL_TIMEOUT0_carry__5_n_7),
        .I3(TRAIL_TIMEOUT0__60_carry__0_i_4__0_n_0),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_8__0_n_0));
  CARRY4 TRAIL_TIMEOUT0__60_carry__1
       (.CI(TRAIL_TIMEOUT0__60_carry__0_n_0),
        .CO({TRAIL_TIMEOUT0__60_carry__1_n_0,NLW_TRAIL_TIMEOUT0__60_carry__1_CO_UNCONNECTED[2],TRAIL_TIMEOUT0__60_carry__1_n_2,TRAIL_TIMEOUT0__60_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,TRAIL_TIMEOUT0_carry__5_n_4,TRAIL_TIMEOUT0_carry__5_n_5,TRAIL_TIMEOUT0__60_carry__1_i_1__0_n_0}),
        .O({NLW_TRAIL_TIMEOUT0__60_carry__1_O_UNCONNECTED[3],TRAIL_TIMEOUT0__60_carry__1_n_5,TRAIL_TIMEOUT0__60_carry__1_n_6,TRAIL_TIMEOUT0__60_carry__1_n_7}),
        .S({1'b1,TRAIL_TIMEOUT0__60_carry__1_i_2__0_n_0,TRAIL_TIMEOUT0__60_carry__1_i_3__0_n_0,TRAIL_TIMEOUT0__60_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__60_carry__1_i_1__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__1_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    TRAIL_TIMEOUT0__60_carry__1_i_2__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__1_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0__60_carry__1_i_3__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__1_i_3__0_n_0));
  LUT3 #(
    .INIT(8'h4B)) 
    TRAIL_TIMEOUT0__60_carry__1_i_4
       (.I0(TRAIL_TIMEOUT0_carry__5_n_4),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(TRAIL_TIMEOUT0_carry__5_n_5),
        .O(TRAIL_TIMEOUT0__60_carry__1_i_4_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__60_carry_i_1__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__60_carry_i_1__0_n_0));
  (* HLUTNM = "lutpair10" *) 
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__60_carry_i_2__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(TRAIL_TIMEOUT0__60_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0__60_carry_i_3__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_6),
        .I1(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__60_carry_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__60_carry_i_4__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .I3(TRAIL_TIMEOUT0__60_carry_i_1__0_n_0),
        .O(TRAIL_TIMEOUT0__60_carry_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__60_carry_i_5__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .I3(TRAIL_TIMEOUT0__60_carry_i_2__0_n_0),
        .O(TRAIL_TIMEOUT0__60_carry_i_5__0_n_0));
  (* HLUTNM = "lutpair10" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    TRAIL_TIMEOUT0__60_carry_i_6__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .I3(TRAIL_TIMEOUT0_carry__4_n_5),
        .O(TRAIL_TIMEOUT0__60_carry_i_6__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    TRAIL_TIMEOUT0__60_carry_i_7__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__60_carry_i_7__0_n_0));
  CARRY4 TRAIL_TIMEOUT0__92_carry
       (.CI(1'b0),
        .CO({TRAIL_TIMEOUT0__92_carry_n_0,TRAIL_TIMEOUT0__92_carry_n_1,TRAIL_TIMEOUT0__92_carry_n_2,TRAIL_TIMEOUT0__92_carry_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__92_carry_i_1__0_n_0,TRAIL_TIMEOUT0__92_carry_i_2_n_0,TRAIL_TIMEOUT0__92_carry_i_3_n_0,1'b0}),
        .O({TRAIL_TIMEOUT0__92_carry_n_4,TRAIL_TIMEOUT0__92_carry_n_5,TRAIL_TIMEOUT0__92_carry_n_6,TRAIL_TIMEOUT0__92_carry_n_7}),
        .S({TRAIL_TIMEOUT0__92_carry_i_4__0_n_0,TRAIL_TIMEOUT0__92_carry_i_5__0_n_0,TRAIL_TIMEOUT0__92_carry_i_6__0_n_0,TRAIL_TIMEOUT0__92_carry_i_7__0_n_0}));
  CARRY4 TRAIL_TIMEOUT0__92_carry__0
       (.CI(TRAIL_TIMEOUT0__92_carry_n_0),
        .CO({TRAIL_TIMEOUT0__92_carry__0_n_0,TRAIL_TIMEOUT0__92_carry__0_n_1,TRAIL_TIMEOUT0__92_carry__0_n_2,TRAIL_TIMEOUT0__92_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__92_carry__0_i_1__0_n_0,TRAIL_TIMEOUT0__92_carry__0_i_2__0_n_0,TRAIL_TIMEOUT0__92_carry__0_i_3__0_n_0,TRAIL_TIMEOUT0__92_carry__0_i_4__0_n_0}),
        .O({TRAIL_TIMEOUT0__92_carry__0_n_4,TRAIL_TIMEOUT0__92_carry__0_n_5,TRAIL_TIMEOUT0__92_carry__0_n_6,TRAIL_TIMEOUT0__92_carry__0_n_7}),
        .S({TRAIL_TIMEOUT0__92_carry__0_i_5__0_n_0,TRAIL_TIMEOUT0__92_carry__0_i_6__0_n_0,TRAIL_TIMEOUT0__92_carry__0_i_7__0_n_0,TRAIL_TIMEOUT0__92_carry__0_i_8__0_n_0}));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__92_carry__0_i_1__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0__60_carry__1_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_1__0_n_0));
  (* HLUTNM = "lutpair11" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__92_carry__0_i_2__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_4),
        .I2(TRAIL_TIMEOUT0_carry__4_n_5),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_2__0_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__92_carry__0_i_3__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_5),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_3__0_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__92_carry__0_i_4__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__92_carry__0_i_5__0
       (.I0(TRAIL_TIMEOUT0__92_carry__0_i_1__0_n_0),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .I2(TRAIL_TIMEOUT0__60_carry__1_n_6),
        .I3(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__92_carry__0_i_6__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0__60_carry__1_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .I3(TRAIL_TIMEOUT0__92_carry__0_i_2__0_n_0),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_6__0_n_0));
  (* HLUTNM = "lutpair11" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__92_carry__0_i_7__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_4),
        .I2(TRAIL_TIMEOUT0_carry__4_n_5),
        .I3(TRAIL_TIMEOUT0__92_carry__0_i_3__0_n_0),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0__92_carry__0_i_8__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_5),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .I3(TRAIL_TIMEOUT0__92_carry__0_i_4__0_n_0),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_8__0_n_0));
  CARRY4 TRAIL_TIMEOUT0__92_carry__1
       (.CI(TRAIL_TIMEOUT0__92_carry__0_n_0),
        .CO({NLW_TRAIL_TIMEOUT0__92_carry__1_CO_UNCONNECTED[3:1],TRAIL_TIMEOUT0__92_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,TRAIL_TIMEOUT0__92_carry__1_i_1__0_n_0}),
        .O({NLW_TRAIL_TIMEOUT0__92_carry__1_O_UNCONNECTED[3:2],TRAIL_TIMEOUT0__92_carry__1_n_6,TRAIL_TIMEOUT0__92_carry__1_n_7}),
        .S({1'b0,1'b0,TRAIL_TIMEOUT0__92_carry__1_i_2__0_n_0,TRAIL_TIMEOUT0__92_carry__1_i_3__0_n_0}));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0__92_carry__1_i_1__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_4),
        .I1(TRAIL_TIMEOUT0__60_carry__1_n_6),
        .I2(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(TRAIL_TIMEOUT0__92_carry__1_i_1__0_n_0));
  LUT4 #(
    .INIT(16'hE11E)) 
    TRAIL_TIMEOUT0__92_carry__1_i_2__0
       (.I0(TRAIL_TIMEOUT0__60_carry__1_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(TRAIL_TIMEOUT0__60_carry__1_n_0),
        .I3(TRAIL_TIMEOUT0_carry__5_n_5),
        .O(TRAIL_TIMEOUT0__92_carry__1_i_2__0_n_0));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    TRAIL_TIMEOUT0__92_carry__1_i_3__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry__1_n_6),
        .I2(TRAIL_TIMEOUT0_carry__5_n_4),
        .I3(TRAIL_TIMEOUT0__60_carry__1_n_5),
        .I4(TRAIL_TIMEOUT0_carry__5_n_6),
        .O(TRAIL_TIMEOUT0__92_carry__1_i_3__0_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    TRAIL_TIMEOUT0__92_carry_i_1__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__92_carry_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__92_carry_i_2
       (.I0(TRAIL_TIMEOUT0__60_carry_n_4),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(TRAIL_TIMEOUT0__92_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__92_carry_i_3
       (.I0(TRAIL_TIMEOUT0__60_carry_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__92_carry_i_3_n_0));
  LUT5 #(
    .INIT(32'h69966969)) 
    TRAIL_TIMEOUT0__92_carry_i_4__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0__60_carry__0_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .I3(TRAIL_TIMEOUT0_carry__4_n_5),
        .I4(TRAIL_TIMEOUT0__60_carry__0_n_7),
        .O(TRAIL_TIMEOUT0__92_carry_i_4__0_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__92_carry_i_5__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_6),
        .I1(TRAIL_TIMEOUT0__60_carry_n_4),
        .I2(TRAIL_TIMEOUT0__60_carry__0_n_7),
        .I3(TRAIL_TIMEOUT0_carry__4_n_5),
        .O(TRAIL_TIMEOUT0__92_carry_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    TRAIL_TIMEOUT0__92_carry_i_6__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry_n_5),
        .I2(TRAIL_TIMEOUT0__60_carry_n_4),
        .I3(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(TRAIL_TIMEOUT0__92_carry_i_6__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    TRAIL_TIMEOUT0__92_carry_i_7__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry_n_5),
        .O(TRAIL_TIMEOUT0__92_carry_i_7__0_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry
       (.CI(1'b0),
        .CO({TRAIL_TIMEOUT0_carry_n_0,TRAIL_TIMEOUT0_carry_n_1,TRAIL_TIMEOUT0_carry_n_2,TRAIL_TIMEOUT0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT1_n_104,TRAIL_TIMEOUT1_n_105,1'b0,1'b1}),
        .O(NLW_TRAIL_TIMEOUT0_carry_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry_i_1__0_n_0,TRAIL_TIMEOUT0_carry_i_2__0_n_0,TRAIL_TIMEOUT0_carry_i_3__0_n_0,TRAIL_TIMEOUT1_n_105}));
  CARRY4 TRAIL_TIMEOUT0_carry__0
       (.CI(TRAIL_TIMEOUT0_carry_n_0),
        .CO({TRAIL_TIMEOUT0_carry__0_n_0,TRAIL_TIMEOUT0_carry__0_n_1,TRAIL_TIMEOUT0_carry__0_n_2,TRAIL_TIMEOUT0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT1_n_100,TRAIL_TIMEOUT1_n_101,TRAIL_TIMEOUT1_n_102,TRAIL_TIMEOUT1_n_103}),
        .O(NLW_TRAIL_TIMEOUT0_carry__0_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry__0_i_1__0_n_0,TRAIL_TIMEOUT0_carry__0_i_2__0_n_0,TRAIL_TIMEOUT0_carry__0_i_3__0_n_0,TRAIL_TIMEOUT0_carry__0_i_4__0_n_0}));
  LUT3 #(
    .INIT(8'h69)) 
    TRAIL_TIMEOUT0_carry__0_i_1__0
       (.I0(TRAIL_TIMEOUT1_n_98),
        .I1(TRAIL_TIMEOUT1_n_105),
        .I2(TRAIL_TIMEOUT1_n_100),
        .O(TRAIL_TIMEOUT0_carry__0_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__0_i_2__0
       (.I0(TRAIL_TIMEOUT1_n_101),
        .I1(TRAIL_TIMEOUT1_n_99),
        .O(TRAIL_TIMEOUT0_carry__0_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__0_i_3__0
       (.I0(TRAIL_TIMEOUT1_n_102),
        .I1(TRAIL_TIMEOUT1_n_100),
        .O(TRAIL_TIMEOUT0_carry__0_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__0_i_4__0
       (.I0(TRAIL_TIMEOUT1_n_103),
        .I1(TRAIL_TIMEOUT1_n_101),
        .O(TRAIL_TIMEOUT0_carry__0_i_4__0_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__1
       (.CI(TRAIL_TIMEOUT0_carry__0_n_0),
        .CO({TRAIL_TIMEOUT0_carry__1_n_0,TRAIL_TIMEOUT0_carry__1_n_1,TRAIL_TIMEOUT0_carry__1_n_2,TRAIL_TIMEOUT0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0_carry__1_i_1__0_n_0,TRAIL_TIMEOUT0_carry__1_i_2__0_n_0,TRAIL_TIMEOUT0_carry__1_i_3__0_n_0,TRAIL_TIMEOUT0_carry__1_i_4__0_n_0}),
        .O(NLW_TRAIL_TIMEOUT0_carry__1_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry__1_i_5__0_n_0,TRAIL_TIMEOUT0_carry__1_i_6__0_n_0,TRAIL_TIMEOUT0_carry__1_i_7__0_n_0,TRAIL_TIMEOUT0_carry__1_i_8__0_n_0}));
  (* HLUTNM = "lutpair1" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0_carry__1_i_1__0
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT1_n_102),
        .I2(TRAIL_TIMEOUT1_n_97),
        .O(TRAIL_TIMEOUT0_carry__1_i_1__0_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0_carry__1_i_2__0
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT1_n_103),
        .I2(TRAIL_TIMEOUT1_n_98),
        .O(TRAIL_TIMEOUT0_carry__1_i_2__0_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__1_i_3__0
       (.I0(TRAIL_TIMEOUT1_n_104),
        .I1(TRAIL_TIMEOUT1_n_97),
        .I2(TRAIL_TIMEOUT1_n_99),
        .O(TRAIL_TIMEOUT0_carry__1_i_3__0_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    TRAIL_TIMEOUT0_carry__1_i_4__0
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT1_n_97),
        .I2(TRAIL_TIMEOUT1_n_104),
        .O(TRAIL_TIMEOUT0_carry__1_i_4__0_n_0));
  (* HLUTNM = "lutpair2" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__1_i_5__0
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT1_n_101),
        .I2(TRAIL_TIMEOUT1_n_96),
        .I3(TRAIL_TIMEOUT0_carry__1_i_1__0_n_0),
        .O(TRAIL_TIMEOUT0_carry__1_i_5__0_n_0));
  (* HLUTNM = "lutpair1" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__1_i_6__0
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT1_n_102),
        .I2(TRAIL_TIMEOUT1_n_97),
        .I3(TRAIL_TIMEOUT0_carry__1_i_2__0_n_0),
        .O(TRAIL_TIMEOUT0_carry__1_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__1_i_7__0
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT1_n_103),
        .I2(TRAIL_TIMEOUT1_n_98),
        .I3(TRAIL_TIMEOUT0_carry__1_i_3__0_n_0),
        .O(TRAIL_TIMEOUT0_carry__1_i_7__0_n_0));
  LUT5 #(
    .INIT(32'h69966969)) 
    TRAIL_TIMEOUT0_carry__1_i_8__0
       (.I0(TRAIL_TIMEOUT1_n_104),
        .I1(TRAIL_TIMEOUT1_n_97),
        .I2(TRAIL_TIMEOUT1_n_99),
        .I3(TRAIL_TIMEOUT1_n_98),
        .I4(TRAIL_TIMEOUT1_n_105),
        .O(TRAIL_TIMEOUT0_carry__1_i_8__0_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__2
       (.CI(TRAIL_TIMEOUT0_carry__1_n_0),
        .CO({TRAIL_TIMEOUT0_carry__2_n_0,TRAIL_TIMEOUT0_carry__2_n_1,TRAIL_TIMEOUT0_carry__2_n_2,TRAIL_TIMEOUT0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0_carry__2_i_1__0_n_0,TRAIL_TIMEOUT0_carry__2_i_2__0_n_0,TRAIL_TIMEOUT0_carry__2_i_3__0_n_0,TRAIL_TIMEOUT0_carry__2_i_4__0_n_0}),
        .O(NLW_TRAIL_TIMEOUT0_carry__2_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry__2_i_5__0_n_0,TRAIL_TIMEOUT0_carry__2_i_6__0_n_0,TRAIL_TIMEOUT0_carry__2_i_7__0_n_0,TRAIL_TIMEOUT0_carry__2_i_8__0_n_0}));
  (* HLUTNM = "lutpair5" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__2_i_1__0
       (.I0(TRAIL_TIMEOUT1_n_98),
        .I1(TRAIL_TIMEOUT1_n_91),
        .I2(TRAIL_TIMEOUT1_n_93),
        .O(TRAIL_TIMEOUT0_carry__2_i_1__0_n_0));
  (* HLUTNM = "lutpair4" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__2_i_2__0
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT1_n_92),
        .I2(TRAIL_TIMEOUT1_n_94),
        .O(TRAIL_TIMEOUT0_carry__2_i_2__0_n_0));
  (* HLUTNM = "lutpair3" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0_carry__2_i_3__0
       (.I0(TRAIL_TIMEOUT1_n_93),
        .I1(TRAIL_TIMEOUT1_n_100),
        .I2(TRAIL_TIMEOUT1_n_95),
        .O(TRAIL_TIMEOUT0_carry__2_i_3__0_n_0));
  (* HLUTNM = "lutpair2" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    TRAIL_TIMEOUT0_carry__2_i_4__0
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT1_n_101),
        .I2(TRAIL_TIMEOUT1_n_96),
        .O(TRAIL_TIMEOUT0_carry__2_i_4__0_n_0));
  (* HLUTNM = "lutpair6" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__2_i_5__0
       (.I0(TRAIL_TIMEOUT1_n_97),
        .I1(TRAIL_TIMEOUT1_n_90),
        .I2(TRAIL_TIMEOUT1_n_92),
        .I3(TRAIL_TIMEOUT0_carry__2_i_1__0_n_0),
        .O(TRAIL_TIMEOUT0_carry__2_i_5__0_n_0));
  (* HLUTNM = "lutpair5" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__2_i_6__0
       (.I0(TRAIL_TIMEOUT1_n_98),
        .I1(TRAIL_TIMEOUT1_n_91),
        .I2(TRAIL_TIMEOUT1_n_93),
        .I3(TRAIL_TIMEOUT0_carry__2_i_2__0_n_0),
        .O(TRAIL_TIMEOUT0_carry__2_i_6__0_n_0));
  (* HLUTNM = "lutpair4" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__2_i_7__0
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT1_n_92),
        .I2(TRAIL_TIMEOUT1_n_94),
        .I3(TRAIL_TIMEOUT0_carry__2_i_3__0_n_0),
        .O(TRAIL_TIMEOUT0_carry__2_i_7__0_n_0));
  (* HLUTNM = "lutpair3" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__2_i_8__0
       (.I0(TRAIL_TIMEOUT1_n_93),
        .I1(TRAIL_TIMEOUT1_n_100),
        .I2(TRAIL_TIMEOUT1_n_95),
        .I3(TRAIL_TIMEOUT0_carry__2_i_4__0_n_0),
        .O(TRAIL_TIMEOUT0_carry__2_i_8__0_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__3
       (.CI(TRAIL_TIMEOUT0_carry__2_n_0),
        .CO({TRAIL_TIMEOUT0_carry__3_n_0,TRAIL_TIMEOUT0_carry__3_n_1,TRAIL_TIMEOUT0_carry__3_n_2,TRAIL_TIMEOUT0_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0_carry__3_i_1__0_n_0,TRAIL_TIMEOUT0_carry__3_i_2__0_n_0,TRAIL_TIMEOUT0_carry__3_i_3__0_n_0,TRAIL_TIMEOUT0_carry__3_i_4__0_n_0}),
        .O(NLW_TRAIL_TIMEOUT0_carry__3_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry__3_i_5__0_n_0,TRAIL_TIMEOUT0_carry__3_i_6__0_n_0,TRAIL_TIMEOUT0_carry__3_i_7__0_n_0,TRAIL_TIMEOUT0_carry__3_i_8__0_n_0}));
  (* HLUTNM = "lutpair9" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__3_i_1__0
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT1_n_87),
        .I2(TRAIL_TIMEOUT1_n_89),
        .O(TRAIL_TIMEOUT0_carry__3_i_1__0_n_0));
  (* HLUTNM = "lutpair8" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__3_i_2__0
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT1_n_88),
        .I2(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0_carry__3_i_2__0_n_0));
  (* HLUTNM = "lutpair7" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__3_i_3__0
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT1_n_89),
        .I2(TRAIL_TIMEOUT1_n_91),
        .O(TRAIL_TIMEOUT0_carry__3_i_3__0_n_0));
  (* HLUTNM = "lutpair6" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__3_i_4__0
       (.I0(TRAIL_TIMEOUT1_n_97),
        .I1(TRAIL_TIMEOUT1_n_90),
        .I2(TRAIL_TIMEOUT1_n_92),
        .O(TRAIL_TIMEOUT0_carry__3_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__3_i_5__0
       (.I0(TRAIL_TIMEOUT0_carry__3_i_1__0_n_0),
        .I1(TRAIL_TIMEOUT1_n_93),
        .I2(TRAIL_TIMEOUT1_n_86),
        .I3(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0_carry__3_i_5__0_n_0));
  (* HLUTNM = "lutpair9" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__3_i_6__0
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT1_n_87),
        .I2(TRAIL_TIMEOUT1_n_89),
        .I3(TRAIL_TIMEOUT0_carry__3_i_2__0_n_0),
        .O(TRAIL_TIMEOUT0_carry__3_i_6__0_n_0));
  (* HLUTNM = "lutpair8" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__3_i_7__0
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT1_n_88),
        .I2(TRAIL_TIMEOUT1_n_90),
        .I3(TRAIL_TIMEOUT0_carry__3_i_3__0_n_0),
        .O(TRAIL_TIMEOUT0_carry__3_i_7__0_n_0));
  (* HLUTNM = "lutpair7" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    TRAIL_TIMEOUT0_carry__3_i_8__0
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT1_n_89),
        .I2(TRAIL_TIMEOUT1_n_91),
        .I3(TRAIL_TIMEOUT0_carry__3_i_4__0_n_0),
        .O(TRAIL_TIMEOUT0_carry__3_i_8__0_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__4
       (.CI(TRAIL_TIMEOUT0_carry__3_n_0),
        .CO({TRAIL_TIMEOUT0_carry__4_n_0,TRAIL_TIMEOUT0_carry__4_n_1,TRAIL_TIMEOUT0_carry__4_n_2,TRAIL_TIMEOUT0_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT1_n_90,TRAIL_TIMEOUT0_carry__4_i_1__0_n_0,TRAIL_TIMEOUT0_carry__4_i_2__0_n_0,TRAIL_TIMEOUT0_carry__4_i_3__0_n_0}),
        .O({TRAIL_TIMEOUT0_carry__4_n_4,TRAIL_TIMEOUT0_carry__4_n_5,TRAIL_TIMEOUT0_carry__4_n_6,TRAIL_TIMEOUT0_carry__4_n_7}),
        .S({TRAIL_TIMEOUT0_carry__4_i_4__0_n_0,TRAIL_TIMEOUT0_carry__4_i_5__0_n_0,TRAIL_TIMEOUT0_carry__4_i_6__0_n_0,TRAIL_TIMEOUT0_carry__4_i_7__0_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    TRAIL_TIMEOUT0_carry__4_i_1__0
       (.I0(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0_carry__4_i_1__0_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    TRAIL_TIMEOUT0_carry__4_i_2__0
       (.I0(TRAIL_TIMEOUT1_n_92),
        .I1(TRAIL_TIMEOUT1_n_87),
        .O(TRAIL_TIMEOUT0_carry__4_i_2__0_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__4_i_3__0
       (.I0(TRAIL_TIMEOUT1_n_93),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0_carry__4_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__4_i_4__0
       (.I0(TRAIL_TIMEOUT1_n_90),
        .I1(TRAIL_TIMEOUT1_n_89),
        .O(TRAIL_TIMEOUT0_carry__4_i_4__0_n_0));
  LUT3 #(
    .INIT(8'hE1)) 
    TRAIL_TIMEOUT0_carry__4_i_5__0
       (.I0(TRAIL_TIMEOUT1_n_86),
        .I1(TRAIL_TIMEOUT1_n_91),
        .I2(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0_carry__4_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h1EE1)) 
    TRAIL_TIMEOUT0_carry__4_i_6__0
       (.I0(TRAIL_TIMEOUT1_n_87),
        .I1(TRAIL_TIMEOUT1_n_92),
        .I2(TRAIL_TIMEOUT1_n_86),
        .I3(TRAIL_TIMEOUT1_n_91),
        .O(TRAIL_TIMEOUT0_carry__4_i_6__0_n_0));
  LUT5 #(
    .INIT(32'h4DB2B24D)) 
    TRAIL_TIMEOUT0_carry__4_i_7__0
       (.I0(TRAIL_TIMEOUT1_n_88),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(TRAIL_TIMEOUT1_n_93),
        .I3(TRAIL_TIMEOUT1_n_87),
        .I4(TRAIL_TIMEOUT1_n_92),
        .O(TRAIL_TIMEOUT0_carry__4_i_7__0_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__5
       (.CI(TRAIL_TIMEOUT0_carry__4_n_0),
        .CO({NLW_TRAIL_TIMEOUT0_carry__5_CO_UNCONNECTED[3],TRAIL_TIMEOUT0_carry__5_n_1,TRAIL_TIMEOUT0_carry__5_n_2,TRAIL_TIMEOUT0_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,TRAIL_TIMEOUT1_n_87,TRAIL_TIMEOUT1_n_88,TRAIL_TIMEOUT1_n_89}),
        .O({TRAIL_TIMEOUT0_carry__5_n_4,TRAIL_TIMEOUT0_carry__5_n_5,TRAIL_TIMEOUT0_carry__5_n_6,TRAIL_TIMEOUT0_carry__5_n_7}),
        .S({TRAIL_TIMEOUT0_carry__5_i_1__0_n_0,TRAIL_TIMEOUT0_carry__5_i_2__0_n_0,TRAIL_TIMEOUT0_carry__5_i_3__0_n_0,TRAIL_TIMEOUT0_carry__5_i_4__0_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    TRAIL_TIMEOUT0_carry__5_i_1__0
       (.I0(TRAIL_TIMEOUT1_n_86),
        .O(TRAIL_TIMEOUT0_carry__5_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__5_i_2__0
       (.I0(TRAIL_TIMEOUT1_n_87),
        .I1(TRAIL_TIMEOUT1_n_86),
        .O(TRAIL_TIMEOUT0_carry__5_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__5_i_3__0
       (.I0(TRAIL_TIMEOUT1_n_88),
        .I1(TRAIL_TIMEOUT1_n_87),
        .O(TRAIL_TIMEOUT0_carry__5_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__5_i_4__0
       (.I0(TRAIL_TIMEOUT1_n_89),
        .I1(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0_carry__5_i_4__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry_i_1__0
       (.I0(TRAIL_TIMEOUT1_n_104),
        .I1(TRAIL_TIMEOUT1_n_102),
        .O(TRAIL_TIMEOUT0_carry_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry_i_2__0
       (.I0(TRAIL_TIMEOUT1_n_105),
        .I1(TRAIL_TIMEOUT1_n_103),
        .O(TRAIL_TIMEOUT0_carry_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    TRAIL_TIMEOUT0_carry_i_3__0
       (.I0(TRAIL_TIMEOUT1_n_104),
        .O(TRAIL_TIMEOUT0_carry_i_3__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-13 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    TRAIL_TIMEOUT1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_TRAIL_TIMEOUT1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_TRAIL_TIMEOUT1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_TRAIL_TIMEOUT1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_TRAIL_TIMEOUT1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_TRAIL_TIMEOUT1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_TRAIL_TIMEOUT1_OVERFLOW_UNCONNECTED),
        .P({NLW_TRAIL_TIMEOUT1_P_UNCONNECTED[47:20],TRAIL_TIMEOUT1_n_86,TRAIL_TIMEOUT1_n_87,TRAIL_TIMEOUT1_n_88,TRAIL_TIMEOUT1_n_89,TRAIL_TIMEOUT1_n_90,TRAIL_TIMEOUT1_n_91,TRAIL_TIMEOUT1_n_92,TRAIL_TIMEOUT1_n_93,TRAIL_TIMEOUT1_n_94,TRAIL_TIMEOUT1_n_95,TRAIL_TIMEOUT1_n_96,TRAIL_TIMEOUT1_n_97,TRAIL_TIMEOUT1_n_98,TRAIL_TIMEOUT1_n_99,TRAIL_TIMEOUT1_n_100,TRAIL_TIMEOUT1_n_101,TRAIL_TIMEOUT1_n_102,TRAIL_TIMEOUT1_n_103,TRAIL_TIMEOUT1_n_104,TRAIL_TIMEOUT1_n_105}),
        .PATTERNBDETECT(NLW_TRAIL_TIMEOUT1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_TRAIL_TIMEOUT1_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_TRAIL_TIMEOUT1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_TRAIL_TIMEOUT1_UNDERFLOW_UNCONNECTED));
  LUT6 #(
    .INIT(64'h00000000AEAE00AE)) 
    dl_txrequesths_posedge_r_i_1__0
       (.I0(dl_txrequesths_posedge_r_reg_n_0),
        .I1(dl1_txrequesths),
        .I2(dl_txrequesths_r),
        .I3(dl_tx_state[0]),
        .I4(dl_tx_state[1]),
        .I5(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ),
        .O(dl_txrequesths_posedge_r_i_1__0_n_0));
  FDRE dl_txrequesths_posedge_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl_txrequesths_posedge_r_i_1__0_n_0),
        .Q(dl_txrequesths_posedge_r_reg_n_0),
        .R(1'b0));
  FDRE dl_txrequesths_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl1_txrequesths),
        .Q(dl_txrequesths_r),
        .R(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hC8FF)) 
    hs_xfer_done_i_1__0
       (.I0(hs_xfer_done_i),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_1 ),
        .I2(time_out_trail),
        .I3(out),
        .O(hs_xfer_done_i_1__0_n_0));
  FDRE hs_xfer_done_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(hs_xfer_done_i_1__0_n_0),
        .Q(hs_xfer_done_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \pkt_cnt[0]_i_1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(dl1_txrequesths),
        .O(pkt_cnt0));
  CARRY4 time_out_trail0_carry
       (.CI(1'b0),
        .CO({time_out_trail0_carry_n_0,time_out_trail0_carry_n_1,time_out_trail0_carry_n_2,time_out_trail0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_time_out_trail0_carry_O_UNCONNECTED[3:0]),
        .S({time_out_trail0_carry_i_1__0_n_0,time_out_trail0_carry_i_2__0_n_0,time_out_trail0_carry_i_3__0_n_0,time_out_trail0_carry_i_4__0_n_0}));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT5 #(
    .INIT(32'h60000000)) 
    time_out_trail0_carry_i_10__0
       (.I0(time_out_trail0_carry_i_12__0_n_0),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .I3(TRAIL_TIMEOUT0_carry__4_n_5),
        .I4(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(time_out_trail0_carry_i_10__0_n_0));
  LUT6 #(
    .INIT(64'h9666966696666666)) 
    time_out_trail0_carry_i_11__0
       (.I0(trail_count_reg[3]),
        .I1(TRAIL_TIMEOUT0_carry__4_n_4),
        .I2(TRAIL_TIMEOUT0_carry__4_n_5),
        .I3(TRAIL_TIMEOUT0_carry__4_n_6),
        .I4(TRAIL_TIMEOUT0_carry__4_n_7),
        .I5(time_out_trail0_carry_i_12__0_n_0),
        .O(time_out_trail0_carry_i_11__0_n_0));
  LUT3 #(
    .INIT(8'h45)) 
    time_out_trail0_carry_i_12__0
       (.I0(TRAIL_TIMEOUT0__120_carry__2_n_2),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(TRAIL_TIMEOUT0__92_carry__1_n_6),
        .O(time_out_trail0_carry_i_12__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    time_out_trail0_carry_i_13__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(trail_count_reg[2]),
        .O(time_out_trail0_carry_i_13__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h7)) 
    time_out_trail0_carry_i_14__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_6),
        .I1(TRAIL_TIMEOUT0_carry__4_n_5),
        .O(time_out_trail0_carry_i_14__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    time_out_trail0_carry_i_15__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(time_out_trail0_carry_i_15__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    time_out_trail0_carry_i_16__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_5),
        .I3(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(time_out_trail0_carry_i_16__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    time_out_trail0_carry_i_1__0
       (.I0(trail_count_reg[9]),
        .O(time_out_trail0_carry_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h0000100042210884)) 
    time_out_trail0_carry_i_2__0
       (.I0(trail_count_reg[6]),
        .I1(trail_count_reg[7]),
        .I2(time_out_trail0_carry_i_5__0_n_0),
        .I3(time_out_trail0_carry_i_6__0_n_0),
        .I4(time_out_trail0_carry_i_7__0_n_0),
        .I5(trail_count_reg[8]),
        .O(time_out_trail0_carry_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h0000000006909009)) 
    time_out_trail0_carry_i_3__0
       (.I0(time_out_trail0_carry_i_8_n_0),
        .I1(trail_count_reg[5]),
        .I2(trail_count_reg[4]),
        .I3(time_out_trail0_carry_i_9__0_n_0),
        .I4(time_out_trail0_carry_i_10__0_n_0),
        .I5(time_out_trail0_carry_i_11__0_n_0),
        .O(time_out_trail0_carry_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h2009400002200440)) 
    time_out_trail0_carry_i_4__0
       (.I0(trail_count_reg[1]),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .I3(time_out_trail0_carry_i_12__0_n_0),
        .I4(time_out_trail0_carry_i_13__0_n_0),
        .I5(trail_count_reg[0]),
        .O(time_out_trail0_carry_i_4__0_n_0));
  LUT6 #(
    .INIT(64'h1020000000000000)) 
    time_out_trail0_carry_i_5__0
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(time_out_trail0_carry_i_14__0_n_0),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .I3(time_out_trail0_carry_i_12__0_n_0),
        .I4(TRAIL_TIMEOUT0_carry__5_n_7),
        .I5(TRAIL_TIMEOUT0_carry__5_n_6),
        .O(time_out_trail0_carry_i_5__0_n_0));
  LUT6 #(
    .INIT(64'hA6AAAAAAAAAAAAAA)) 
    time_out_trail0_carry_i_6__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(time_out_trail0_carry_i_15__0_n_0),
        .I3(TRAIL_TIMEOUT0_carry__4_n_4),
        .I4(time_out_trail0_carry_i_12__0_n_0),
        .I5(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(time_out_trail0_carry_i_6__0_n_0));
  LUT6 #(
    .INIT(64'h5555955555555555)) 
    time_out_trail0_carry_i_7__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_4),
        .I1(TRAIL_TIMEOUT0_carry__5_n_5),
        .I2(TRAIL_TIMEOUT0_carry__5_n_7),
        .I3(time_out_trail0_carry_i_12__0_n_0),
        .I4(time_out_trail0_carry_i_16__0_n_0),
        .I5(TRAIL_TIMEOUT0_carry__5_n_6),
        .O(time_out_trail0_carry_i_7__0_n_0));
  LUT5 #(
    .INIT(32'hAAAA6AAA)) 
    time_out_trail0_carry_i_8
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(time_out_trail0_carry_i_12__0_n_0),
        .I3(TRAIL_TIMEOUT0_carry__4_n_4),
        .I4(time_out_trail0_carry_i_15__0_n_0),
        .O(time_out_trail0_carry_i_8_n_0));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    time_out_trail0_carry_i_9__0
       (.I0(TRAIL_TIMEOUT0_carry__5_n_7),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .I3(TRAIL_TIMEOUT0_carry__4_n_5),
        .I4(TRAIL_TIMEOUT0_carry__4_n_4),
        .I5(time_out_trail0_carry_i_12__0_n_0),
        .O(time_out_trail0_carry_i_9__0_n_0));
  LUT5 #(
    .INIT(32'h0000EAA0)) 
    time_out_trail_i_1__1
       (.I0(time_out_trail),
        .I1(time_out_trail0_carry_n_0),
        .I2(dl_tx_state[1]),
        .I3(dl_tx_state[0]),
        .I4(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ),
        .O(time_out_trail_i_1__1_n_0));
  FDRE time_out_trail_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(time_out_trail_i_1__1_n_0),
        .Q(time_out_trail),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \trail_count[0]_i_1__1 
       (.I0(trail_count_reg[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \trail_count[1]_i_1__1 
       (.I0(trail_count_reg[0]),
        .I1(trail_count_reg[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \trail_count[2]_i_1__1 
       (.I0(trail_count_reg[2]),
        .I1(trail_count_reg[0]),
        .I2(trail_count_reg[1]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \trail_count[3]_i_1__1 
       (.I0(trail_count_reg[3]),
        .I1(trail_count_reg[1]),
        .I2(trail_count_reg[0]),
        .I3(trail_count_reg[2]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \trail_count[4]_i_1__1 
       (.I0(trail_count_reg[4]),
        .I1(trail_count_reg[2]),
        .I2(trail_count_reg[0]),
        .I3(trail_count_reg[1]),
        .I4(trail_count_reg[3]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \trail_count[5]_i_1__1 
       (.I0(trail_count_reg[5]),
        .I1(trail_count_reg[4]),
        .I2(trail_count_reg[2]),
        .I3(trail_count_reg[0]),
        .I4(trail_count_reg[1]),
        .I5(trail_count_reg[3]),
        .O(\trail_count[5]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hA6)) 
    \trail_count[6]_i_1__1 
       (.I0(trail_count_reg[6]),
        .I1(trail_count_reg[5]),
        .I2(\trail_count[9]_i_4__0_n_0 ),
        .O(\trail_count[6]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT4 #(
    .INIT(16'hA6AA)) 
    \trail_count[7]_i_1__1 
       (.I0(trail_count_reg[7]),
        .I1(trail_count_reg[6]),
        .I2(\trail_count[9]_i_4__0_n_0 ),
        .I3(trail_count_reg[5]),
        .O(\trail_count[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT5 #(
    .INIT(32'hA6AAAAAA)) 
    \trail_count[8]_i_1__1 
       (.I0(trail_count_reg[8]),
        .I1(trail_count_reg[5]),
        .I2(\trail_count[9]_i_4__0_n_0 ),
        .I3(trail_count_reg[6]),
        .I4(trail_count_reg[7]),
        .O(p_0_in[8]));
  LUT3 #(
    .INIT(8'hAB)) 
    \trail_count[9]_i_1__1 
       (.I0(\HS_BYTE_XFER_BLK2.gen_eot_r_reg[7]_0 ),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[1]),
        .O(\trail_count[9]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \trail_count[9]_i_2__1 
       (.I0(time_out_trail0_carry_n_0),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[1]),
        .O(\trail_count[9]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hAA6AAAAAAAAAAAAA)) 
    \trail_count[9]_i_3__1 
       (.I0(trail_count_reg[9]),
        .I1(trail_count_reg[7]),
        .I2(trail_count_reg[6]),
        .I3(\trail_count[9]_i_4__0_n_0 ),
        .I4(trail_count_reg[5]),
        .I5(trail_count_reg[8]),
        .O(p_0_in[9]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \trail_count[9]_i_4__0 
       (.I0(trail_count_reg[3]),
        .I1(trail_count_reg[1]),
        .I2(trail_count_reg[0]),
        .I3(trail_count_reg[2]),
        .I4(trail_count_reg[4]),
        .O(\trail_count[9]_i_4__0_n_0 ));
  FDRE \trail_count_reg[0] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__1_n_0 ),
        .D(p_0_in[0]),
        .Q(trail_count_reg[0]),
        .R(\trail_count[9]_i_1__1_n_0 ));
  FDRE \trail_count_reg[1] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__1_n_0 ),
        .D(p_0_in[1]),
        .Q(trail_count_reg[1]),
        .R(\trail_count[9]_i_1__1_n_0 ));
  FDRE \trail_count_reg[2] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__1_n_0 ),
        .D(p_0_in[2]),
        .Q(trail_count_reg[2]),
        .R(\trail_count[9]_i_1__1_n_0 ));
  FDRE \trail_count_reg[3] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__1_n_0 ),
        .D(p_0_in[3]),
        .Q(trail_count_reg[3]),
        .R(\trail_count[9]_i_1__1_n_0 ));
  FDRE \trail_count_reg[4] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__1_n_0 ),
        .D(p_0_in[4]),
        .Q(trail_count_reg[4]),
        .R(\trail_count[9]_i_1__1_n_0 ));
  FDRE \trail_count_reg[5] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__1_n_0 ),
        .D(\trail_count[5]_i_1__1_n_0 ),
        .Q(trail_count_reg[5]),
        .R(\trail_count[9]_i_1__1_n_0 ));
  FDRE \trail_count_reg[6] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__1_n_0 ),
        .D(\trail_count[6]_i_1__1_n_0 ),
        .Q(trail_count_reg[6]),
        .R(\trail_count[9]_i_1__1_n_0 ));
  FDRE \trail_count_reg[7] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__1_n_0 ),
        .D(\trail_count[7]_i_1__1_n_0 ),
        .Q(trail_count_reg[7]),
        .R(\trail_count[9]_i_1__1_n_0 ));
  FDRE \trail_count_reg[8] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__1_n_0 ),
        .D(p_0_in[8]),
        .Q(trail_count_reg[8]),
        .R(\trail_count[9]_i_1__1_n_0 ));
  FDRE \trail_count_reg[9] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__1_n_0 ),
        .D(p_0_in[9]),
        .Q(trail_count_reg[9]),
        .R(\trail_count[9]_i_1__1_n_0 ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_hs_datapath_7series" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_hs_datapath_7series_71
   (\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ,
    hs_xfer_done_i,
    time_out_zero_reg_0,
    pkt_cnt0,
    tx_dl0_hs_dp,
    en_hs_datapath_r_reg_0,
    dl0_txrequesths,
    tx_div4_clk,
    out,
    hs_xfer_done_reg_0,
    dl0_txdatahs,
    \HS_BYTE_XFER_BLK2.dl_tx_state_reg[0]_0 );
  output \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ;
  output hs_xfer_done_i;
  output time_out_zero_reg_0;
  output pkt_cnt0;
  output [7:0]tx_dl0_hs_dp;
  input en_hs_datapath_r_reg_0;
  input dl0_txrequesths;
  input tx_div4_clk;
  input out;
  input hs_xfer_done_reg_0;
  input [7:0]dl0_txdatahs;
  input \HS_BYTE_XFER_BLK2.dl_tx_state_reg[0]_0 ;

  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_state[1]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_state_reg[0]_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ;
  wire TRAIL_TIMEOUT0__120_carry__0_i_1__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_2__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_3__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_4__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_5_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_6_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_7_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_i_8_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_n_0;
  wire TRAIL_TIMEOUT0__120_carry__0_n_1;
  wire TRAIL_TIMEOUT0__120_carry__0_n_2;
  wire TRAIL_TIMEOUT0__120_carry__0_n_3;
  wire TRAIL_TIMEOUT0__120_carry__1_i_1__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_2__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_3__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_4__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_5_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_6_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_7_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_i_8_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_n_0;
  wire TRAIL_TIMEOUT0__120_carry__1_n_1;
  wire TRAIL_TIMEOUT0__120_carry__1_n_2;
  wire TRAIL_TIMEOUT0__120_carry__1_n_3;
  wire TRAIL_TIMEOUT0__120_carry__2_i_1__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__2_i_2__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry__2_i_3_n_0;
  wire TRAIL_TIMEOUT0__120_carry__2_i_4_n_0;
  wire TRAIL_TIMEOUT0__120_carry__2_n_2;
  wire TRAIL_TIMEOUT0__120_carry__2_n_3;
  wire TRAIL_TIMEOUT0__120_carry_i_1__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_2__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_3__2_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_4_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_5_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_6_n_0;
  wire TRAIL_TIMEOUT0__120_carry_i_7_n_0;
  wire TRAIL_TIMEOUT0__120_carry_n_0;
  wire TRAIL_TIMEOUT0__120_carry_n_1;
  wire TRAIL_TIMEOUT0__120_carry_n_2;
  wire TRAIL_TIMEOUT0__120_carry_n_3;
  wire TRAIL_TIMEOUT0__60_carry__0_i_1_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_2_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_3_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_4_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_5_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_6_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_7_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_i_8_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_n_0;
  wire TRAIL_TIMEOUT0__60_carry__0_n_1;
  wire TRAIL_TIMEOUT0__60_carry__0_n_2;
  wire TRAIL_TIMEOUT0__60_carry__0_n_3;
  wire TRAIL_TIMEOUT0__60_carry__0_n_4;
  wire TRAIL_TIMEOUT0__60_carry__0_n_5;
  wire TRAIL_TIMEOUT0__60_carry__0_n_6;
  wire TRAIL_TIMEOUT0__60_carry__0_n_7;
  wire TRAIL_TIMEOUT0__60_carry__1_i_1_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_i_2_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_i_3_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_i_4__2_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_n_0;
  wire TRAIL_TIMEOUT0__60_carry__1_n_2;
  wire TRAIL_TIMEOUT0__60_carry__1_n_3;
  wire TRAIL_TIMEOUT0__60_carry__1_n_5;
  wire TRAIL_TIMEOUT0__60_carry__1_n_6;
  wire TRAIL_TIMEOUT0__60_carry__1_n_7;
  wire TRAIL_TIMEOUT0__60_carry_i_1_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_2_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_3_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_4_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_5_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_6_n_0;
  wire TRAIL_TIMEOUT0__60_carry_i_7_n_0;
  wire TRAIL_TIMEOUT0__60_carry_n_0;
  wire TRAIL_TIMEOUT0__60_carry_n_1;
  wire TRAIL_TIMEOUT0__60_carry_n_2;
  wire TRAIL_TIMEOUT0__60_carry_n_3;
  wire TRAIL_TIMEOUT0__60_carry_n_4;
  wire TRAIL_TIMEOUT0__60_carry_n_5;
  wire TRAIL_TIMEOUT0__60_carry_n_6;
  wire TRAIL_TIMEOUT0__60_carry_n_7;
  wire TRAIL_TIMEOUT0__92_carry__0_i_1_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_2_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_3_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_4_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_5_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_6_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_7_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_i_8_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_n_0;
  wire TRAIL_TIMEOUT0__92_carry__0_n_1;
  wire TRAIL_TIMEOUT0__92_carry__0_n_2;
  wire TRAIL_TIMEOUT0__92_carry__0_n_3;
  wire TRAIL_TIMEOUT0__92_carry__0_n_4;
  wire TRAIL_TIMEOUT0__92_carry__0_n_5;
  wire TRAIL_TIMEOUT0__92_carry__0_n_6;
  wire TRAIL_TIMEOUT0__92_carry__0_n_7;
  wire TRAIL_TIMEOUT0__92_carry__1_i_1_n_0;
  wire TRAIL_TIMEOUT0__92_carry__1_i_2_n_0;
  wire TRAIL_TIMEOUT0__92_carry__1_i_3_n_0;
  wire TRAIL_TIMEOUT0__92_carry__1_n_3;
  wire TRAIL_TIMEOUT0__92_carry__1_n_6;
  wire TRAIL_TIMEOUT0__92_carry__1_n_7;
  wire TRAIL_TIMEOUT0__92_carry_i_1_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_2__2_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_3__2_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_4_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_5_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_6_n_0;
  wire TRAIL_TIMEOUT0__92_carry_i_7_n_0;
  wire TRAIL_TIMEOUT0__92_carry_n_0;
  wire TRAIL_TIMEOUT0__92_carry_n_1;
  wire TRAIL_TIMEOUT0__92_carry_n_2;
  wire TRAIL_TIMEOUT0__92_carry_n_3;
  wire TRAIL_TIMEOUT0__92_carry_n_4;
  wire TRAIL_TIMEOUT0__92_carry_n_5;
  wire TRAIL_TIMEOUT0__92_carry_n_6;
  wire TRAIL_TIMEOUT0__92_carry_n_7;
  wire TRAIL_TIMEOUT0_carry__0_i_1_n_0;
  wire TRAIL_TIMEOUT0_carry__0_i_2_n_0;
  wire TRAIL_TIMEOUT0_carry__0_i_3_n_0;
  wire TRAIL_TIMEOUT0_carry__0_i_4_n_0;
  wire TRAIL_TIMEOUT0_carry__0_n_0;
  wire TRAIL_TIMEOUT0_carry__0_n_1;
  wire TRAIL_TIMEOUT0_carry__0_n_2;
  wire TRAIL_TIMEOUT0_carry__0_n_3;
  wire TRAIL_TIMEOUT0_carry__1_i_1_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_2_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_3_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_4_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_5_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_6_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_7_n_0;
  wire TRAIL_TIMEOUT0_carry__1_i_8_n_0;
  wire TRAIL_TIMEOUT0_carry__1_n_0;
  wire TRAIL_TIMEOUT0_carry__1_n_1;
  wire TRAIL_TIMEOUT0_carry__1_n_2;
  wire TRAIL_TIMEOUT0_carry__1_n_3;
  wire TRAIL_TIMEOUT0_carry__2_i_1_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_2_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_3_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_4_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_5_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_6_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_7_n_0;
  wire TRAIL_TIMEOUT0_carry__2_i_8_n_0;
  wire TRAIL_TIMEOUT0_carry__2_n_0;
  wire TRAIL_TIMEOUT0_carry__2_n_1;
  wire TRAIL_TIMEOUT0_carry__2_n_2;
  wire TRAIL_TIMEOUT0_carry__2_n_3;
  wire TRAIL_TIMEOUT0_carry__3_i_1_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_2_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_3_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_4_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_5_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_6_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_7_n_0;
  wire TRAIL_TIMEOUT0_carry__3_i_8_n_0;
  wire TRAIL_TIMEOUT0_carry__3_n_0;
  wire TRAIL_TIMEOUT0_carry__3_n_1;
  wire TRAIL_TIMEOUT0_carry__3_n_2;
  wire TRAIL_TIMEOUT0_carry__3_n_3;
  wire TRAIL_TIMEOUT0_carry__4_i_1_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_2_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_3_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_4_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_5_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_6_n_0;
  wire TRAIL_TIMEOUT0_carry__4_i_7_n_0;
  wire TRAIL_TIMEOUT0_carry__4_n_0;
  wire TRAIL_TIMEOUT0_carry__4_n_1;
  wire TRAIL_TIMEOUT0_carry__4_n_2;
  wire TRAIL_TIMEOUT0_carry__4_n_3;
  wire TRAIL_TIMEOUT0_carry__4_n_4;
  wire TRAIL_TIMEOUT0_carry__4_n_5;
  wire TRAIL_TIMEOUT0_carry__4_n_6;
  wire TRAIL_TIMEOUT0_carry__4_n_7;
  wire TRAIL_TIMEOUT0_carry__5_i_1_n_0;
  wire TRAIL_TIMEOUT0_carry__5_i_2_n_0;
  wire TRAIL_TIMEOUT0_carry__5_i_3_n_0;
  wire TRAIL_TIMEOUT0_carry__5_i_4_n_0;
  wire TRAIL_TIMEOUT0_carry__5_n_1;
  wire TRAIL_TIMEOUT0_carry__5_n_2;
  wire TRAIL_TIMEOUT0_carry__5_n_3;
  wire TRAIL_TIMEOUT0_carry__5_n_4;
  wire TRAIL_TIMEOUT0_carry__5_n_5;
  wire TRAIL_TIMEOUT0_carry__5_n_6;
  wire TRAIL_TIMEOUT0_carry__5_n_7;
  wire TRAIL_TIMEOUT0_carry_i_1_n_0;
  wire TRAIL_TIMEOUT0_carry_i_2_n_0;
  wire TRAIL_TIMEOUT0_carry_i_3_n_0;
  wire TRAIL_TIMEOUT0_carry_n_0;
  wire TRAIL_TIMEOUT0_carry_n_1;
  wire TRAIL_TIMEOUT0_carry_n_2;
  wire TRAIL_TIMEOUT0_carry_n_3;
  wire TRAIL_TIMEOUT1_n_100;
  wire TRAIL_TIMEOUT1_n_101;
  wire TRAIL_TIMEOUT1_n_102;
  wire TRAIL_TIMEOUT1_n_103;
  wire TRAIL_TIMEOUT1_n_104;
  wire TRAIL_TIMEOUT1_n_105;
  wire TRAIL_TIMEOUT1_n_86;
  wire TRAIL_TIMEOUT1_n_87;
  wire TRAIL_TIMEOUT1_n_88;
  wire TRAIL_TIMEOUT1_n_89;
  wire TRAIL_TIMEOUT1_n_90;
  wire TRAIL_TIMEOUT1_n_91;
  wire TRAIL_TIMEOUT1_n_92;
  wire TRAIL_TIMEOUT1_n_93;
  wire TRAIL_TIMEOUT1_n_94;
  wire TRAIL_TIMEOUT1_n_95;
  wire TRAIL_TIMEOUT1_n_96;
  wire TRAIL_TIMEOUT1_n_97;
  wire TRAIL_TIMEOUT1_n_98;
  wire TRAIL_TIMEOUT1_n_99;
  wire ZERO_TIMEOUT0__104_carry__0_i_1_n_0;
  wire ZERO_TIMEOUT0__104_carry__0_i_2_n_0;
  wire ZERO_TIMEOUT0__104_carry__0_i_3_n_0;
  wire ZERO_TIMEOUT0__104_carry__0_i_4_n_0;
  wire ZERO_TIMEOUT0__104_carry__0_i_5_n_0;
  wire ZERO_TIMEOUT0__104_carry__0_i_6_n_0;
  wire ZERO_TIMEOUT0__104_carry__0_i_7_n_0;
  wire ZERO_TIMEOUT0__104_carry__0_i_8_n_0;
  wire ZERO_TIMEOUT0__104_carry__0_n_0;
  wire ZERO_TIMEOUT0__104_carry__0_n_1;
  wire ZERO_TIMEOUT0__104_carry__0_n_2;
  wire ZERO_TIMEOUT0__104_carry__0_n_3;
  wire ZERO_TIMEOUT0__104_carry__0_n_4;
  wire ZERO_TIMEOUT0__104_carry__0_n_5;
  wire ZERO_TIMEOUT0__104_carry__0_n_6;
  wire ZERO_TIMEOUT0__104_carry__0_n_7;
  wire ZERO_TIMEOUT0__104_carry__1_i_1_n_0;
  wire ZERO_TIMEOUT0__104_carry__1_i_2_n_0;
  wire ZERO_TIMEOUT0__104_carry__1_i_3_n_0;
  wire ZERO_TIMEOUT0__104_carry__1_i_4_n_0;
  wire ZERO_TIMEOUT0__104_carry__1_i_5_n_0;
  wire ZERO_TIMEOUT0__104_carry__1_i_6_n_0;
  wire ZERO_TIMEOUT0__104_carry__1_i_7_n_0;
  wire ZERO_TIMEOUT0__104_carry__1_n_1;
  wire ZERO_TIMEOUT0__104_carry__1_n_2;
  wire ZERO_TIMEOUT0__104_carry__1_n_3;
  wire ZERO_TIMEOUT0__104_carry__1_n_4;
  wire ZERO_TIMEOUT0__104_carry__1_n_5;
  wire ZERO_TIMEOUT0__104_carry__1_n_6;
  wire ZERO_TIMEOUT0__104_carry__1_n_7;
  wire ZERO_TIMEOUT0__104_carry_i_1_n_0;
  wire ZERO_TIMEOUT0__104_carry_i_2_n_0;
  wire ZERO_TIMEOUT0__104_carry_i_3_n_0;
  wire ZERO_TIMEOUT0__104_carry_i_4_n_0;
  wire ZERO_TIMEOUT0__104_carry_i_5_n_0;
  wire ZERO_TIMEOUT0__104_carry_i_6_n_0;
  wire ZERO_TIMEOUT0__104_carry_i_7_n_0;
  wire ZERO_TIMEOUT0__104_carry_n_0;
  wire ZERO_TIMEOUT0__104_carry_n_1;
  wire ZERO_TIMEOUT0__104_carry_n_2;
  wire ZERO_TIMEOUT0__104_carry_n_3;
  wire ZERO_TIMEOUT0__104_carry_n_4;
  wire ZERO_TIMEOUT0__104_carry_n_5;
  wire ZERO_TIMEOUT0__104_carry_n_6;
  wire ZERO_TIMEOUT0__104_carry_n_7;
  wire ZERO_TIMEOUT0__138_carry__0_i_1_n_0;
  wire ZERO_TIMEOUT0__138_carry__0_i_2_n_0;
  wire ZERO_TIMEOUT0__138_carry__0_i_3_n_0;
  wire ZERO_TIMEOUT0__138_carry__0_i_4_n_0;
  wire ZERO_TIMEOUT0__138_carry__0_i_5_n_0;
  wire ZERO_TIMEOUT0__138_carry__0_i_6_n_0;
  wire ZERO_TIMEOUT0__138_carry__0_i_7_n_0;
  wire ZERO_TIMEOUT0__138_carry__0_i_8_n_0;
  wire ZERO_TIMEOUT0__138_carry__0_n_0;
  wire ZERO_TIMEOUT0__138_carry__0_n_1;
  wire ZERO_TIMEOUT0__138_carry__0_n_2;
  wire ZERO_TIMEOUT0__138_carry__0_n_3;
  wire ZERO_TIMEOUT0__138_carry__1_i_1_n_0;
  wire ZERO_TIMEOUT0__138_carry__1_i_2_n_0;
  wire ZERO_TIMEOUT0__138_carry__1_i_3_n_0;
  wire ZERO_TIMEOUT0__138_carry__1_i_4_n_0;
  wire ZERO_TIMEOUT0__138_carry__1_i_5_n_0;
  wire ZERO_TIMEOUT0__138_carry__1_i_6_n_0;
  wire ZERO_TIMEOUT0__138_carry__1_i_7_n_0;
  wire ZERO_TIMEOUT0__138_carry__1_i_8_n_0;
  wire ZERO_TIMEOUT0__138_carry__1_n_0;
  wire ZERO_TIMEOUT0__138_carry__1_n_1;
  wire ZERO_TIMEOUT0__138_carry__1_n_2;
  wire ZERO_TIMEOUT0__138_carry__1_n_3;
  wire ZERO_TIMEOUT0__138_carry__2_i_1_n_0;
  wire ZERO_TIMEOUT0__138_carry__2_i_2_n_0;
  wire ZERO_TIMEOUT0__138_carry__2_i_3_n_0;
  wire ZERO_TIMEOUT0__138_carry__2_i_4_n_0;
  wire ZERO_TIMEOUT0__138_carry__2_i_5_n_0;
  wire ZERO_TIMEOUT0__138_carry__2_i_6_n_0;
  wire ZERO_TIMEOUT0__138_carry__2_i_7_n_0;
  wire ZERO_TIMEOUT0__138_carry__2_i_8_n_0;
  wire ZERO_TIMEOUT0__138_carry__2_n_0;
  wire ZERO_TIMEOUT0__138_carry__2_n_1;
  wire ZERO_TIMEOUT0__138_carry__2_n_2;
  wire ZERO_TIMEOUT0__138_carry__2_n_3;
  wire ZERO_TIMEOUT0__138_carry_i_1_n_0;
  wire ZERO_TIMEOUT0__138_carry_i_2_n_0;
  wire ZERO_TIMEOUT0__138_carry_i_3_n_0;
  wire ZERO_TIMEOUT0__138_carry_i_4_n_0;
  wire ZERO_TIMEOUT0__138_carry_i_5_n_0;
  wire ZERO_TIMEOUT0__138_carry_i_6_n_0;
  wire ZERO_TIMEOUT0__138_carry_i_7_n_0;
  wire ZERO_TIMEOUT0__138_carry_n_0;
  wire ZERO_TIMEOUT0__138_carry_n_1;
  wire ZERO_TIMEOUT0__138_carry_n_2;
  wire ZERO_TIMEOUT0__138_carry_n_3;
  wire ZERO_TIMEOUT0__66_carry__0_i_1_n_0;
  wire ZERO_TIMEOUT0__66_carry__0_i_2_n_0;
  wire ZERO_TIMEOUT0__66_carry__0_i_3_n_0;
  wire ZERO_TIMEOUT0__66_carry__0_i_4_n_0;
  wire ZERO_TIMEOUT0__66_carry__0_i_5_n_0;
  wire ZERO_TIMEOUT0__66_carry__0_i_6_n_0;
  wire ZERO_TIMEOUT0__66_carry__0_i_7_n_0;
  wire ZERO_TIMEOUT0__66_carry__0_i_8_n_0;
  wire ZERO_TIMEOUT0__66_carry__0_n_0;
  wire ZERO_TIMEOUT0__66_carry__0_n_1;
  wire ZERO_TIMEOUT0__66_carry__0_n_2;
  wire ZERO_TIMEOUT0__66_carry__0_n_3;
  wire ZERO_TIMEOUT0__66_carry__0_n_4;
  wire ZERO_TIMEOUT0__66_carry__0_n_5;
  wire ZERO_TIMEOUT0__66_carry__0_n_6;
  wire ZERO_TIMEOUT0__66_carry__0_n_7;
  wire ZERO_TIMEOUT0__66_carry__1_i_1_n_0;
  wire ZERO_TIMEOUT0__66_carry__1_i_2_n_0;
  wire ZERO_TIMEOUT0__66_carry__1_i_3_n_0;
  wire ZERO_TIMEOUT0__66_carry__1_i_4_n_0;
  wire ZERO_TIMEOUT0__66_carry__1_i_5_n_0;
  wire ZERO_TIMEOUT0__66_carry__1_i_6_n_0;
  wire ZERO_TIMEOUT0__66_carry__1_i_7_n_0;
  wire ZERO_TIMEOUT0__66_carry__1_n_0;
  wire ZERO_TIMEOUT0__66_carry__1_n_1;
  wire ZERO_TIMEOUT0__66_carry__1_n_2;
  wire ZERO_TIMEOUT0__66_carry__1_n_3;
  wire ZERO_TIMEOUT0__66_carry__1_n_4;
  wire ZERO_TIMEOUT0__66_carry__1_n_5;
  wire ZERO_TIMEOUT0__66_carry__1_n_6;
  wire ZERO_TIMEOUT0__66_carry__1_n_7;
  wire ZERO_TIMEOUT0__66_carry__2_i_1_n_0;
  wire ZERO_TIMEOUT0__66_carry__2_n_2;
  wire ZERO_TIMEOUT0__66_carry__2_n_7;
  wire ZERO_TIMEOUT0__66_carry_i_1_n_0;
  wire ZERO_TIMEOUT0__66_carry_i_2_n_0;
  wire ZERO_TIMEOUT0__66_carry_i_3_n_0;
  wire ZERO_TIMEOUT0__66_carry_i_4_n_0;
  wire ZERO_TIMEOUT0__66_carry_i_5_n_0;
  wire ZERO_TIMEOUT0__66_carry_i_6_n_0;
  wire ZERO_TIMEOUT0__66_carry_i_7_n_0;
  wire ZERO_TIMEOUT0__66_carry_n_0;
  wire ZERO_TIMEOUT0__66_carry_n_1;
  wire ZERO_TIMEOUT0__66_carry_n_2;
  wire ZERO_TIMEOUT0__66_carry_n_3;
  wire ZERO_TIMEOUT0__66_carry_n_4;
  wire ZERO_TIMEOUT0__66_carry_n_5;
  wire ZERO_TIMEOUT0__66_carry_n_6;
  wire ZERO_TIMEOUT0__66_carry_n_7;
  wire ZERO_TIMEOUT0_carry__0_i_1_n_0;
  wire ZERO_TIMEOUT0_carry__0_i_2_n_0;
  wire ZERO_TIMEOUT0_carry__0_i_3_n_0;
  wire ZERO_TIMEOUT0_carry__0_i_4_n_0;
  wire ZERO_TIMEOUT0_carry__0_n_0;
  wire ZERO_TIMEOUT0_carry__0_n_1;
  wire ZERO_TIMEOUT0_carry__0_n_2;
  wire ZERO_TIMEOUT0_carry__0_n_3;
  wire ZERO_TIMEOUT0_carry__1_i_1_n_0;
  wire ZERO_TIMEOUT0_carry__1_i_2_n_0;
  wire ZERO_TIMEOUT0_carry__1_i_3_n_0;
  wire ZERO_TIMEOUT0_carry__1_i_4_n_0;
  wire ZERO_TIMEOUT0_carry__1_i_5_n_0;
  wire ZERO_TIMEOUT0_carry__1_i_6_n_0;
  wire ZERO_TIMEOUT0_carry__1_i_7_n_0;
  wire ZERO_TIMEOUT0_carry__1_i_8_n_0;
  wire ZERO_TIMEOUT0_carry__1_n_0;
  wire ZERO_TIMEOUT0_carry__1_n_1;
  wire ZERO_TIMEOUT0_carry__1_n_2;
  wire ZERO_TIMEOUT0_carry__1_n_3;
  wire ZERO_TIMEOUT0_carry__2_i_1_n_0;
  wire ZERO_TIMEOUT0_carry__2_i_2_n_0;
  wire ZERO_TIMEOUT0_carry__2_i_3_n_0;
  wire ZERO_TIMEOUT0_carry__2_i_4_n_0;
  wire ZERO_TIMEOUT0_carry__2_i_5_n_0;
  wire ZERO_TIMEOUT0_carry__2_i_6_n_0;
  wire ZERO_TIMEOUT0_carry__2_i_7_n_0;
  wire ZERO_TIMEOUT0_carry__2_i_8_n_0;
  wire ZERO_TIMEOUT0_carry__2_n_0;
  wire ZERO_TIMEOUT0_carry__2_n_1;
  wire ZERO_TIMEOUT0_carry__2_n_2;
  wire ZERO_TIMEOUT0_carry__2_n_3;
  wire ZERO_TIMEOUT0_carry__3_i_1_n_0;
  wire ZERO_TIMEOUT0_carry__3_i_2_n_0;
  wire ZERO_TIMEOUT0_carry__3_i_3_n_0;
  wire ZERO_TIMEOUT0_carry__3_i_4_n_0;
  wire ZERO_TIMEOUT0_carry__3_i_5_n_0;
  wire ZERO_TIMEOUT0_carry__3_i_6_n_0;
  wire ZERO_TIMEOUT0_carry__3_i_7_n_0;
  wire ZERO_TIMEOUT0_carry__3_i_8_n_0;
  wire ZERO_TIMEOUT0_carry__3_n_0;
  wire ZERO_TIMEOUT0_carry__3_n_1;
  wire ZERO_TIMEOUT0_carry__3_n_2;
  wire ZERO_TIMEOUT0_carry__3_n_3;
  wire ZERO_TIMEOUT0_carry__4_i_1_n_0;
  wire ZERO_TIMEOUT0_carry__4_i_2_n_0;
  wire ZERO_TIMEOUT0_carry__4_i_3_n_0;
  wire ZERO_TIMEOUT0_carry__4_i_4_n_0;
  wire ZERO_TIMEOUT0_carry__4_i_5_n_0;
  wire ZERO_TIMEOUT0_carry__4_i_6_n_0;
  wire ZERO_TIMEOUT0_carry__4_i_7_n_0;
  wire ZERO_TIMEOUT0_carry__4_i_8_n_0;
  wire ZERO_TIMEOUT0_carry__4_n_0;
  wire ZERO_TIMEOUT0_carry__4_n_1;
  wire ZERO_TIMEOUT0_carry__4_n_2;
  wire ZERO_TIMEOUT0_carry__4_n_3;
  wire ZERO_TIMEOUT0_carry__4_n_4;
  wire ZERO_TIMEOUT0_carry__4_n_5;
  wire ZERO_TIMEOUT0_carry__4_n_6;
  wire ZERO_TIMEOUT0_carry__4_n_7;
  wire ZERO_TIMEOUT0_carry__5_i_1_n_0;
  wire ZERO_TIMEOUT0_carry__5_i_2_n_0;
  wire ZERO_TIMEOUT0_carry__5_i_3_n_0;
  wire ZERO_TIMEOUT0_carry__5_i_4_n_0;
  wire ZERO_TIMEOUT0_carry__5_i_5_n_0;
  wire ZERO_TIMEOUT0_carry__5_n_0;
  wire ZERO_TIMEOUT0_carry__5_n_1;
  wire ZERO_TIMEOUT0_carry__5_n_2;
  wire ZERO_TIMEOUT0_carry__5_n_3;
  wire ZERO_TIMEOUT0_carry__5_n_4;
  wire ZERO_TIMEOUT0_carry__5_n_5;
  wire ZERO_TIMEOUT0_carry__5_n_6;
  wire ZERO_TIMEOUT0_carry__5_n_7;
  wire ZERO_TIMEOUT0_carry__6_i_1_n_0;
  wire ZERO_TIMEOUT0_carry__6_i_2_n_0;
  wire ZERO_TIMEOUT0_carry__6_n_3;
  wire ZERO_TIMEOUT0_carry__6_n_6;
  wire ZERO_TIMEOUT0_carry__6_n_7;
  wire ZERO_TIMEOUT0_carry_i_1_n_0;
  wire ZERO_TIMEOUT0_carry_i_2_n_0;
  wire ZERO_TIMEOUT0_carry_i_3_n_0;
  wire ZERO_TIMEOUT0_carry_n_0;
  wire ZERO_TIMEOUT0_carry_n_1;
  wire ZERO_TIMEOUT0_carry_n_2;
  wire ZERO_TIMEOUT0_carry_n_3;
  wire ZERO_TIMEOUT1_n_100;
  wire ZERO_TIMEOUT1_n_101;
  wire ZERO_TIMEOUT1_n_102;
  wire ZERO_TIMEOUT1_n_103;
  wire ZERO_TIMEOUT1_n_104;
  wire ZERO_TIMEOUT1_n_105;
  wire ZERO_TIMEOUT1_n_84;
  wire ZERO_TIMEOUT1_n_85;
  wire ZERO_TIMEOUT1_n_86;
  wire ZERO_TIMEOUT1_n_87;
  wire ZERO_TIMEOUT1_n_88;
  wire ZERO_TIMEOUT1_n_89;
  wire ZERO_TIMEOUT1_n_90;
  wire ZERO_TIMEOUT1_n_91;
  wire ZERO_TIMEOUT1_n_92;
  wire ZERO_TIMEOUT1_n_93;
  wire ZERO_TIMEOUT1_n_94;
  wire ZERO_TIMEOUT1_n_95;
  wire ZERO_TIMEOUT1_n_96;
  wire ZERO_TIMEOUT1_n_97;
  wire ZERO_TIMEOUT1_n_98;
  wire ZERO_TIMEOUT1_n_99;
  wire [7:0]dl0_txdatahs;
  wire dl0_txrequesths;
  wire [7:0]dl_tx_hs_dp0_in;
  wire [1:0]dl_tx_state;
  wire dl_txrequesths_posedge_r_i_1_n_0;
  wire dl_txrequesths_posedge_r_reg_n_0;
  wire dl_txrequesths_r;
  wire en_hs_datapath_posedge_r;
  wire en_hs_datapath_posedge_r_i_1_n_0;
  wire en_hs_datapath_r;
  wire en_hs_datapath_r_reg_0;
  wire [7:7]gen_eot_r;
  wire hs_xfer_done_i;
  wire hs_xfer_done_i_1_n_0;
  wire hs_xfer_done_reg_0;
  wire i__carry_i_10_n_0;
  wire i__carry_i_11_n_0;
  wire i__carry_i_12_n_0;
  wire i__carry_i_13_n_0;
  wire i__carry_i_14_n_0;
  wire i__carry_i_15_n_0;
  wire i__carry_i_16_n_0;
  wire i__carry_i_17_n_0;
  wire i__carry_i_18_n_0;
  wire i__carry_i_19_n_0;
  wire i__carry_i_1_n_0;
  wire i__carry_i_20_n_0;
  wire i__carry_i_21_n_0;
  wire i__carry_i_2_n_0;
  wire i__carry_i_3_n_0;
  wire i__carry_i_4_n_0;
  wire i__carry_i_5_n_0;
  wire i__carry_i_6_n_0;
  wire i__carry_i_7_n_0;
  wire i__carry_i_8_n_0;
  wire i__carry_i_9_n_0;
  wire out;
  wire [9:0]p_0_in;
  wire [7:7]p_0_in_0;
  wire pkt_cnt0;
  wire time_out_trail;
  wire time_out_trail0_carry_i_10_n_0;
  wire time_out_trail0_carry_i_11_n_0;
  wire time_out_trail0_carry_i_12_n_0;
  wire time_out_trail0_carry_i_13_n_0;
  wire time_out_trail0_carry_i_14_n_0;
  wire time_out_trail0_carry_i_15_n_0;
  wire time_out_trail0_carry_i_16_n_0;
  wire time_out_trail0_carry_i_17_n_0;
  wire time_out_trail0_carry_i_18_n_0;
  wire time_out_trail0_carry_i_19_n_0;
  wire time_out_trail0_carry_i_1_n_0;
  wire time_out_trail0_carry_i_20_n_0;
  wire time_out_trail0_carry_i_21_n_0;
  wire time_out_trail0_carry_i_22_n_0;
  wire time_out_trail0_carry_i_2_n_0;
  wire time_out_trail0_carry_i_3_n_0;
  wire time_out_trail0_carry_i_4_n_0;
  wire time_out_trail0_carry_i_5_n_0;
  wire time_out_trail0_carry_i_6_n_0;
  wire time_out_trail0_carry_i_7_n_0;
  wire time_out_trail0_carry_i_8__2_n_0;
  wire time_out_trail0_carry_i_9_n_0;
  wire time_out_trail0_carry_n_0;
  wire time_out_trail0_carry_n_1;
  wire time_out_trail0_carry_n_2;
  wire time_out_trail0_carry_n_3;
  wire time_out_trail_i_1__0_n_0;
  wire time_out_zero0;
  wire \time_out_zero0_inferred__0/i__carry_n_0 ;
  wire \time_out_zero0_inferred__0/i__carry_n_1 ;
  wire \time_out_zero0_inferred__0/i__carry_n_2 ;
  wire \time_out_zero0_inferred__0/i__carry_n_3 ;
  wire time_out_zero_i_1__0_n_0;
  wire time_out_zero_reg_0;
  wire \trail_count[7]_i_2_n_0 ;
  wire \trail_count[9]_i_1__0_n_0 ;
  wire \trail_count[9]_i_2__0_n_0 ;
  wire \trail_count[9]_i_4_n_0 ;
  wire [9:0]trail_count_reg;
  wire tx_div4_clk;
  wire [7:0]tx_dl0_hs_dp;
  wire zero_count;
  wire \zero_count[0]_i_4_n_0 ;
  wire [11:0]zero_count_reg;
  wire \zero_count_reg[0]_i_3_n_0 ;
  wire \zero_count_reg[0]_i_3_n_1 ;
  wire \zero_count_reg[0]_i_3_n_2 ;
  wire \zero_count_reg[0]_i_3_n_3 ;
  wire \zero_count_reg[0]_i_3_n_4 ;
  wire \zero_count_reg[0]_i_3_n_5 ;
  wire \zero_count_reg[0]_i_3_n_6 ;
  wire \zero_count_reg[0]_i_3_n_7 ;
  wire \zero_count_reg[4]_i_1_n_0 ;
  wire \zero_count_reg[4]_i_1_n_1 ;
  wire \zero_count_reg[4]_i_1_n_2 ;
  wire \zero_count_reg[4]_i_1_n_3 ;
  wire \zero_count_reg[4]_i_1_n_4 ;
  wire \zero_count_reg[4]_i_1_n_5 ;
  wire \zero_count_reg[4]_i_1_n_6 ;
  wire \zero_count_reg[4]_i_1_n_7 ;
  wire \zero_count_reg[8]_i_1_n_1 ;
  wire \zero_count_reg[8]_i_1_n_2 ;
  wire \zero_count_reg[8]_i_1_n_3 ;
  wire \zero_count_reg[8]_i_1_n_4 ;
  wire \zero_count_reg[8]_i_1_n_5 ;
  wire \zero_count_reg[8]_i_1_n_6 ;
  wire \zero_count_reg[8]_i_1_n_7 ;
  wire [3:0]NLW_TRAIL_TIMEOUT0__120_carry_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0__120_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0__120_carry__1_O_UNCONNECTED;
  wire [3:2]NLW_TRAIL_TIMEOUT0__120_carry__2_CO_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0__120_carry__2_O_UNCONNECTED;
  wire [2:2]NLW_TRAIL_TIMEOUT0__60_carry__1_CO_UNCONNECTED;
  wire [3:3]NLW_TRAIL_TIMEOUT0__60_carry__1_O_UNCONNECTED;
  wire [3:1]NLW_TRAIL_TIMEOUT0__92_carry__1_CO_UNCONNECTED;
  wire [3:2]NLW_TRAIL_TIMEOUT0__92_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry__2_O_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT0_carry__3_O_UNCONNECTED;
  wire [3:3]NLW_TRAIL_TIMEOUT0_carry__5_CO_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_OVERFLOW_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_PATTERNDETECT_UNCONNECTED;
  wire NLW_TRAIL_TIMEOUT1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_TRAIL_TIMEOUT1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_TRAIL_TIMEOUT1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_TRAIL_TIMEOUT1_CARRYOUT_UNCONNECTED;
  wire [47:20]NLW_TRAIL_TIMEOUT1_P_UNCONNECTED;
  wire [47:0]NLW_TRAIL_TIMEOUT1_PCOUT_UNCONNECTED;
  wire [3:3]NLW_ZERO_TIMEOUT0__104_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_ZERO_TIMEOUT0__138_carry_O_UNCONNECTED;
  wire [3:0]NLW_ZERO_TIMEOUT0__138_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_ZERO_TIMEOUT0__138_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_ZERO_TIMEOUT0__138_carry__2_O_UNCONNECTED;
  wire [3:0]NLW_ZERO_TIMEOUT0__66_carry__2_CO_UNCONNECTED;
  wire [3:1]NLW_ZERO_TIMEOUT0__66_carry__2_O_UNCONNECTED;
  wire [3:0]NLW_ZERO_TIMEOUT0_carry_O_UNCONNECTED;
  wire [3:0]NLW_ZERO_TIMEOUT0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_ZERO_TIMEOUT0_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_ZERO_TIMEOUT0_carry__2_O_UNCONNECTED;
  wire [3:0]NLW_ZERO_TIMEOUT0_carry__3_O_UNCONNECTED;
  wire [3:1]NLW_ZERO_TIMEOUT0_carry__6_CO_UNCONNECTED;
  wire [3:2]NLW_ZERO_TIMEOUT0_carry__6_O_UNCONNECTED;
  wire NLW_ZERO_TIMEOUT1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_ZERO_TIMEOUT1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_ZERO_TIMEOUT1_OVERFLOW_UNCONNECTED;
  wire NLW_ZERO_TIMEOUT1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_ZERO_TIMEOUT1_PATTERNDETECT_UNCONNECTED;
  wire NLW_ZERO_TIMEOUT1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_ZERO_TIMEOUT1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_ZERO_TIMEOUT1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_ZERO_TIMEOUT1_CARRYOUT_UNCONNECTED;
  wire [47:22]NLW_ZERO_TIMEOUT1_P_UNCONNECTED;
  wire [47:0]NLW_ZERO_TIMEOUT1_PCOUT_UNCONNECTED;
  wire [3:0]NLW_time_out_trail0_carry_O_UNCONNECTED;
  wire [3:0]\NLW_time_out_zero0_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:3]\NLW_zero_count_reg[8]_i_1_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h3A3A3B333A003A00)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1 
       (.I0(dl0_txdatahs[0]),
        .I1(gen_eot_r),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_state_reg[0]_0 ),
        .I3(dl_tx_state[1]),
        .I4(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I5(dl_tx_state[0]),
        .O(dl_tx_hs_dp0_in[0]));
  LUT6 #(
    .INIT(64'h3A3A3B333A003A00)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1 
       (.I0(dl0_txdatahs[1]),
        .I1(gen_eot_r),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_state_reg[0]_0 ),
        .I3(dl_tx_state[1]),
        .I4(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I5(dl_tx_state[0]),
        .O(dl_tx_hs_dp0_in[1]));
  LUT6 #(
    .INIT(64'h3A3A3B333A003A00)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1 
       (.I0(dl0_txdatahs[2]),
        .I1(gen_eot_r),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_state_reg[0]_0 ),
        .I3(dl_tx_state[1]),
        .I4(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I5(dl_tx_state[0]),
        .O(dl_tx_hs_dp0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1 
       (.I0(dl0_txdatahs[3]),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4_n_0 ),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5_n_0 ),
        .O(dl_tx_hs_dp0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1 
       (.I0(dl0_txdatahs[4]),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4_n_0 ),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5_n_0 ),
        .O(dl_tx_hs_dp0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1 
       (.I0(dl0_txdatahs[5]),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4_n_0 ),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5_n_0 ),
        .O(dl_tx_hs_dp0_in[5]));
  LUT6 #(
    .INIT(64'h3A3A3B333A003A00)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1 
       (.I0(dl0_txdatahs[6]),
        .I1(gen_eot_r),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_state_reg[0]_0 ),
        .I3(dl_tx_state[1]),
        .I4(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I5(dl_tx_state[0]),
        .O(dl_tx_hs_dp0_in[6]));
  LUT5 #(
    .INIT(32'hAFEBABAB)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3_n_0 ),
        .I1(out),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[1]),
        .I4(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2 
       (.I0(dl0_txdatahs[7]),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4_n_0 ),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5_n_0 ),
        .O(dl_tx_hs_dp0_in[7]));
  LUT5 #(
    .INIT(32'h000F0FEE)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3 
       (.I0(time_out_zero_reg_0),
        .I1(dl_txrequesths_posedge_r_reg_n_0),
        .I2(dl0_txrequesths),
        .I3(dl_tx_state[0]),
        .I4(dl_tx_state[1]),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8088FFFF80008000)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4 
       (.I0(out),
        .I1(dl0_txrequesths),
        .I2(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I3(dl_tx_state[0]),
        .I4(gen_eot_r),
        .I5(dl_tx_state[1]),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h505051FF50505100)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5 
       (.I0(gen_eot_r),
        .I1(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I2(\HS_BYTE_XFER_BLK2.dl_tx_state_reg[0]_0 ),
        .I3(dl_tx_state[0]),
        .I4(dl_tx_state[1]),
        .I5(time_out_zero_reg_0),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5_n_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1_n_0 ),
        .D(dl_tx_hs_dp0_in[0]),
        .Q(tx_dl0_hs_dp[0]),
        .R(en_hs_datapath_r_reg_0));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[1] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1_n_0 ),
        .D(dl_tx_hs_dp0_in[1]),
        .Q(tx_dl0_hs_dp[1]),
        .R(en_hs_datapath_r_reg_0));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[2] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1_n_0 ),
        .D(dl_tx_hs_dp0_in[2]),
        .Q(tx_dl0_hs_dp[2]),
        .R(en_hs_datapath_r_reg_0));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[3] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1_n_0 ),
        .D(dl_tx_hs_dp0_in[3]),
        .Q(tx_dl0_hs_dp[3]),
        .R(en_hs_datapath_r_reg_0));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[4] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1_n_0 ),
        .D(dl_tx_hs_dp0_in[4]),
        .Q(tx_dl0_hs_dp[4]),
        .R(en_hs_datapath_r_reg_0));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[5] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1_n_0 ),
        .D(dl_tx_hs_dp0_in[5]),
        .Q(tx_dl0_hs_dp[5]),
        .R(en_hs_datapath_r_reg_0));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1_n_0 ),
        .D(dl_tx_hs_dp0_in[6]),
        .Q(tx_dl0_hs_dp[6]),
        .R(en_hs_datapath_r_reg_0));
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[7] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1_n_0 ),
        .D(dl_tx_hs_dp0_in[7]),
        .Q(tx_dl0_hs_dp[7]),
        .R(en_hs_datapath_r_reg_0));
  LUT6 #(
    .INIT(64'h2323FFFFBB880000)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_state_reg[0]_0 ),
        .I1(dl_tx_state[1]),
        .I2(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I3(time_out_zero_reg_0),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_2_n_0 ),
        .I5(dl_tx_state[0]),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEFFFAAFEEAFAAAF)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3_n_0 ),
        .I1(time_out_trail),
        .I2(out),
        .I3(dl_tx_state[0]),
        .I4(dl_tx_state[1]),
        .I5(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h11FFFA0011FFAA00)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state[1]_i_1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3_n_0 ),
        .I1(time_out_trail),
        .I2(out),
        .I3(dl_tx_state[0]),
        .I4(dl_tx_state[1]),
        .I5(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_state[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_state[0]_i_1_n_0 ),
        .Q(dl_tx_state[0]),
        .R(en_hs_datapath_r_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    \HS_BYTE_XFER_BLK2.dl_tx_state_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_state[1]_i_1_n_0 ),
        .Q(dl_tx_state[1]),
        .R(en_hs_datapath_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'h4440)) 
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1 
       (.I0(en_hs_datapath_r_reg_0),
        .I1(dl0_txrequesths),
        .I2(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I3(time_out_zero_reg_0),
        .O(\HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1_n_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1_n_0 ),
        .Q(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hABAB0B0B00080808)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1 
       (.I0(dl0_txrequesths),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[1]),
        .I3(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I4(out),
        .I5(dl0_txdatahs[7]),
        .O(p_0_in_0));
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1_n_0 ),
        .D(p_0_in_0),
        .Q(gen_eot_r),
        .R(en_hs_datapath_r_reg_0));
  CARRY4 TRAIL_TIMEOUT0__120_carry
       (.CI(1'b0),
        .CO({TRAIL_TIMEOUT0__120_carry_n_0,TRAIL_TIMEOUT0__120_carry_n_1,TRAIL_TIMEOUT0__120_carry_n_2,TRAIL_TIMEOUT0__120_carry_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__120_carry_i_1__2_n_0,TRAIL_TIMEOUT0__120_carry_i_2__2_n_0,TRAIL_TIMEOUT0__120_carry_i_3__2_n_0,1'b0}),
        .O(NLW_TRAIL_TIMEOUT0__120_carry_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0__120_carry_i_4_n_0,TRAIL_TIMEOUT0__120_carry_i_5_n_0,TRAIL_TIMEOUT0__120_carry_i_6_n_0,TRAIL_TIMEOUT0__120_carry_i_7_n_0}));
  CARRY4 TRAIL_TIMEOUT0__120_carry__0
       (.CI(TRAIL_TIMEOUT0__120_carry_n_0),
        .CO({TRAIL_TIMEOUT0__120_carry__0_n_0,TRAIL_TIMEOUT0__120_carry__0_n_1,TRAIL_TIMEOUT0__120_carry__0_n_2,TRAIL_TIMEOUT0__120_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__120_carry__0_i_1__2_n_0,TRAIL_TIMEOUT0__120_carry__0_i_2__2_n_0,TRAIL_TIMEOUT0__120_carry__0_i_3__2_n_0,TRAIL_TIMEOUT0__120_carry__0_i_4__2_n_0}),
        .O(NLW_TRAIL_TIMEOUT0__120_carry__0_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0__120_carry__0_i_5_n_0,TRAIL_TIMEOUT0__120_carry__0_i_6_n_0,TRAIL_TIMEOUT0__120_carry__0_i_7_n_0,TRAIL_TIMEOUT0__120_carry__0_i_8_n_0}));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry__0_i_1__2
       (.I0(TRAIL_TIMEOUT0__92_carry_n_5),
        .I1(TRAIL_TIMEOUT1_n_93),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_1__2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry__0_i_2__2
       (.I0(TRAIL_TIMEOUT0__92_carry_n_6),
        .I1(TRAIL_TIMEOUT1_n_94),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_2__2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry__0_i_3__2
       (.I0(TRAIL_TIMEOUT0__92_carry_n_7),
        .I1(TRAIL_TIMEOUT1_n_95),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_3__2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry__0_i_4__2
       (.I0(TRAIL_TIMEOUT0__60_carry_n_6),
        .I1(TRAIL_TIMEOUT1_n_96),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_4__2_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    TRAIL_TIMEOUT0__120_carry__0_i_5
       (.I0(TRAIL_TIMEOUT1_n_93),
        .I1(TRAIL_TIMEOUT0__92_carry_n_5),
        .I2(TRAIL_TIMEOUT1_n_92),
        .I3(TRAIL_TIMEOUT0__92_carry_n_4),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    TRAIL_TIMEOUT0__120_carry__0_i_6
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT0__92_carry_n_6),
        .I2(TRAIL_TIMEOUT0__92_carry_n_5),
        .I3(TRAIL_TIMEOUT1_n_93),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_6_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    TRAIL_TIMEOUT0__120_carry__0_i_7
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT0__92_carry_n_7),
        .I2(TRAIL_TIMEOUT0__92_carry_n_6),
        .I3(TRAIL_TIMEOUT1_n_94),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_7_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    TRAIL_TIMEOUT0__120_carry__0_i_8
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT0__60_carry_n_6),
        .I2(TRAIL_TIMEOUT0__92_carry_n_7),
        .I3(TRAIL_TIMEOUT1_n_95),
        .O(TRAIL_TIMEOUT0__120_carry__0_i_8_n_0));
  CARRY4 TRAIL_TIMEOUT0__120_carry__1
       (.CI(TRAIL_TIMEOUT0__120_carry__0_n_0),
        .CO({TRAIL_TIMEOUT0__120_carry__1_n_0,TRAIL_TIMEOUT0__120_carry__1_n_1,TRAIL_TIMEOUT0__120_carry__1_n_2,TRAIL_TIMEOUT0__120_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__120_carry__1_i_1__2_n_0,TRAIL_TIMEOUT0__120_carry__1_i_2__2_n_0,TRAIL_TIMEOUT0__120_carry__1_i_3__2_n_0,TRAIL_TIMEOUT0__120_carry__1_i_4__2_n_0}),
        .O(NLW_TRAIL_TIMEOUT0__120_carry__1_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0__120_carry__1_i_5_n_0,TRAIL_TIMEOUT0__120_carry__1_i_6_n_0,TRAIL_TIMEOUT0__120_carry__1_i_7_n_0,TRAIL_TIMEOUT0__120_carry__1_i_8_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__1_i_1__2
       (.I0(TRAIL_TIMEOUT0__92_carry__0_n_5),
        .I1(TRAIL_TIMEOUT1_n_89),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__1_i_2__2
       (.I0(TRAIL_TIMEOUT0__92_carry__0_n_6),
        .I1(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_2__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__1_i_3__2
       (.I0(TRAIL_TIMEOUT0__92_carry__0_n_7),
        .I1(TRAIL_TIMEOUT1_n_91),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_3__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__1_i_4__2
       (.I0(TRAIL_TIMEOUT0__92_carry_n_4),
        .I1(TRAIL_TIMEOUT1_n_92),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_4__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__1_i_5
       (.I0(TRAIL_TIMEOUT1_n_89),
        .I1(TRAIL_TIMEOUT0__92_carry__0_n_5),
        .I2(TRAIL_TIMEOUT1_n_88),
        .I3(TRAIL_TIMEOUT0__92_carry__0_n_4),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_5_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__1_i_6
       (.I0(TRAIL_TIMEOUT1_n_90),
        .I1(TRAIL_TIMEOUT0__92_carry__0_n_6),
        .I2(TRAIL_TIMEOUT1_n_89),
        .I3(TRAIL_TIMEOUT0__92_carry__0_n_5),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_6_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__1_i_7
       (.I0(TRAIL_TIMEOUT1_n_91),
        .I1(TRAIL_TIMEOUT0__92_carry__0_n_7),
        .I2(TRAIL_TIMEOUT1_n_90),
        .I3(TRAIL_TIMEOUT0__92_carry__0_n_6),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_7_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__1_i_8
       (.I0(TRAIL_TIMEOUT1_n_92),
        .I1(TRAIL_TIMEOUT0__92_carry_n_4),
        .I2(TRAIL_TIMEOUT1_n_91),
        .I3(TRAIL_TIMEOUT0__92_carry__0_n_7),
        .O(TRAIL_TIMEOUT0__120_carry__1_i_8_n_0));
  CARRY4 TRAIL_TIMEOUT0__120_carry__2
       (.CI(TRAIL_TIMEOUT0__120_carry__1_n_0),
        .CO({NLW_TRAIL_TIMEOUT0__120_carry__2_CO_UNCONNECTED[3:2],TRAIL_TIMEOUT0__120_carry__2_n_2,TRAIL_TIMEOUT0__120_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,TRAIL_TIMEOUT0__120_carry__2_i_1__2_n_0,TRAIL_TIMEOUT0__120_carry__2_i_2__2_n_0}),
        .O(NLW_TRAIL_TIMEOUT0__120_carry__2_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,TRAIL_TIMEOUT0__120_carry__2_i_3_n_0,TRAIL_TIMEOUT0__120_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__2_i_1__2
       (.I0(TRAIL_TIMEOUT0__92_carry__1_n_7),
        .I1(TRAIL_TIMEOUT1_n_87),
        .O(TRAIL_TIMEOUT0__120_carry__2_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry__2_i_2__2
       (.I0(TRAIL_TIMEOUT0__92_carry__0_n_4),
        .I1(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0__120_carry__2_i_2__2_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__2_i_3
       (.I0(TRAIL_TIMEOUT1_n_87),
        .I1(TRAIL_TIMEOUT0__92_carry__1_n_7),
        .I2(TRAIL_TIMEOUT1_n_86),
        .I3(TRAIL_TIMEOUT0__92_carry__1_n_6),
        .O(TRAIL_TIMEOUT0__120_carry__2_i_3_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__120_carry__2_i_4
       (.I0(TRAIL_TIMEOUT1_n_88),
        .I1(TRAIL_TIMEOUT0__92_carry__0_n_4),
        .I2(TRAIL_TIMEOUT1_n_87),
        .I3(TRAIL_TIMEOUT0__92_carry__1_n_7),
        .O(TRAIL_TIMEOUT0__120_carry__2_i_4_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry_i_1__2
       (.I0(TRAIL_TIMEOUT0__60_carry_n_7),
        .I1(TRAIL_TIMEOUT1_n_97),
        .O(TRAIL_TIMEOUT0__120_carry_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__120_carry_i_2__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_6),
        .I1(TRAIL_TIMEOUT1_n_98),
        .O(TRAIL_TIMEOUT0__120_carry_i_2__2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__120_carry_i_3__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT1_n_99),
        .O(TRAIL_TIMEOUT0__120_carry_i_3__2_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    TRAIL_TIMEOUT0__120_carry_i_4
       (.I0(TRAIL_TIMEOUT1_n_97),
        .I1(TRAIL_TIMEOUT0__60_carry_n_7),
        .I2(TRAIL_TIMEOUT0__60_carry_n_6),
        .I3(TRAIL_TIMEOUT1_n_96),
        .O(TRAIL_TIMEOUT0__120_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h4BB4)) 
    TRAIL_TIMEOUT0__120_carry_i_5
       (.I0(TRAIL_TIMEOUT1_n_98),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .I2(TRAIL_TIMEOUT0__60_carry_n_7),
        .I3(TRAIL_TIMEOUT1_n_97),
        .O(TRAIL_TIMEOUT0__120_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    TRAIL_TIMEOUT0__120_carry_i_6
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .I2(TRAIL_TIMEOUT1_n_98),
        .I3(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(TRAIL_TIMEOUT0__120_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    TRAIL_TIMEOUT0__120_carry_i_7
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__120_carry_i_7_n_0));
  CARRY4 TRAIL_TIMEOUT0__60_carry
       (.CI(1'b0),
        .CO({TRAIL_TIMEOUT0__60_carry_n_0,TRAIL_TIMEOUT0__60_carry_n_1,TRAIL_TIMEOUT0__60_carry_n_2,TRAIL_TIMEOUT0__60_carry_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__60_carry_i_1_n_0,TRAIL_TIMEOUT0__60_carry_i_2_n_0,TRAIL_TIMEOUT0__60_carry_i_3_n_0,1'b0}),
        .O({TRAIL_TIMEOUT0__60_carry_n_4,TRAIL_TIMEOUT0__60_carry_n_5,TRAIL_TIMEOUT0__60_carry_n_6,TRAIL_TIMEOUT0__60_carry_n_7}),
        .S({TRAIL_TIMEOUT0__60_carry_i_4_n_0,TRAIL_TIMEOUT0__60_carry_i_5_n_0,TRAIL_TIMEOUT0__60_carry_i_6_n_0,TRAIL_TIMEOUT0__60_carry_i_7_n_0}));
  CARRY4 TRAIL_TIMEOUT0__60_carry__0
       (.CI(TRAIL_TIMEOUT0__60_carry_n_0),
        .CO({TRAIL_TIMEOUT0__60_carry__0_n_0,TRAIL_TIMEOUT0__60_carry__0_n_1,TRAIL_TIMEOUT0__60_carry__0_n_2,TRAIL_TIMEOUT0__60_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__60_carry__0_i_1_n_0,TRAIL_TIMEOUT0__60_carry__0_i_2_n_0,TRAIL_TIMEOUT0__60_carry__0_i_3_n_0,TRAIL_TIMEOUT0__60_carry__0_i_4_n_0}),
        .O({TRAIL_TIMEOUT0__60_carry__0_n_4,TRAIL_TIMEOUT0__60_carry__0_n_5,TRAIL_TIMEOUT0__60_carry__0_n_6,TRAIL_TIMEOUT0__60_carry__0_n_7}),
        .S({TRAIL_TIMEOUT0__60_carry__0_i_5_n_0,TRAIL_TIMEOUT0__60_carry__0_i_6_n_0,TRAIL_TIMEOUT0__60_carry__0_i_7_n_0,TRAIL_TIMEOUT0__60_carry__0_i_8_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__60_carry__0_i_1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_7),
        .I1(TRAIL_TIMEOUT0_carry__5_n_5),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    TRAIL_TIMEOUT0__60_carry__0_i_2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_4),
        .I1(TRAIL_TIMEOUT0_carry__4_n_4),
        .I2(TRAIL_TIMEOUT0_carry__5_n_6),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    TRAIL_TIMEOUT0__60_carry__0_i_3
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_5),
        .I2(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_3_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    TRAIL_TIMEOUT0__60_carry__0_i_4
       (.I0(TRAIL_TIMEOUT0_carry__4_n_6),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__60_carry__0_i_5
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(TRAIL_TIMEOUT0_carry__5_n_6),
        .I3(TRAIL_TIMEOUT0_carry__5_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_5_n_0));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    TRAIL_TIMEOUT0__60_carry__0_i_6
       (.I0(TRAIL_TIMEOUT0_carry__5_n_6),
        .I1(TRAIL_TIMEOUT0_carry__4_n_4),
        .I2(TRAIL_TIMEOUT0_carry__5_n_4),
        .I3(TRAIL_TIMEOUT0_carry__5_n_7),
        .I4(TRAIL_TIMEOUT0_carry__5_n_5),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_6_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    TRAIL_TIMEOUT0__60_carry__0_i_7
       (.I0(TRAIL_TIMEOUT0_carry__5_n_7),
        .I1(TRAIL_TIMEOUT0_carry__4_n_5),
        .I2(TRAIL_TIMEOUT0_carry__5_n_5),
        .I3(TRAIL_TIMEOUT0_carry__5_n_6),
        .I4(TRAIL_TIMEOUT0_carry__4_n_4),
        .I5(TRAIL_TIMEOUT0_carry__5_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_7_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    TRAIL_TIMEOUT0__60_carry__0_i_8
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .I3(TRAIL_TIMEOUT0_carry__5_n_7),
        .I4(TRAIL_TIMEOUT0_carry__4_n_5),
        .I5(TRAIL_TIMEOUT0_carry__5_n_5),
        .O(TRAIL_TIMEOUT0__60_carry__0_i_8_n_0));
  CARRY4 TRAIL_TIMEOUT0__60_carry__1
       (.CI(TRAIL_TIMEOUT0__60_carry__0_n_0),
        .CO({TRAIL_TIMEOUT0__60_carry__1_n_0,NLW_TRAIL_TIMEOUT0__60_carry__1_CO_UNCONNECTED[2],TRAIL_TIMEOUT0__60_carry__1_n_2,TRAIL_TIMEOUT0__60_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,TRAIL_TIMEOUT0_carry__5_n_4,TRAIL_TIMEOUT0_carry__5_n_5,TRAIL_TIMEOUT0__60_carry__1_i_1_n_0}),
        .O({NLW_TRAIL_TIMEOUT0__60_carry__1_O_UNCONNECTED[3],TRAIL_TIMEOUT0__60_carry__1_n_5,TRAIL_TIMEOUT0__60_carry__1_n_6,TRAIL_TIMEOUT0__60_carry__1_n_7}),
        .S({1'b1,TRAIL_TIMEOUT0__60_carry__1_i_2_n_0,TRAIL_TIMEOUT0__60_carry__1_i_3_n_0,TRAIL_TIMEOUT0__60_carry__1_i_4__2_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    TRAIL_TIMEOUT0__60_carry__1_i_1
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .O(TRAIL_TIMEOUT0__60_carry__1_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    TRAIL_TIMEOUT0__60_carry__1_i_2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0__60_carry__1_i_3
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .O(TRAIL_TIMEOUT0__60_carry__1_i_3_n_0));
  LUT3 #(
    .INIT(8'h4B)) 
    TRAIL_TIMEOUT0__60_carry__1_i_4__2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_4),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(TRAIL_TIMEOUT0_carry__5_n_5),
        .O(TRAIL_TIMEOUT0__60_carry__1_i_4__2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    TRAIL_TIMEOUT0__60_carry_i_1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_5),
        .O(TRAIL_TIMEOUT0__60_carry_i_1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    TRAIL_TIMEOUT0__60_carry_i_2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT0_carry__4_n_5),
        .I2(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(TRAIL_TIMEOUT0__60_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__60_carry_i_3
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__60_carry_i_3_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    TRAIL_TIMEOUT0__60_carry_i_4
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .I3(TRAIL_TIMEOUT0_carry__5_n_6),
        .I4(TRAIL_TIMEOUT0_carry__4_n_4),
        .I5(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(TRAIL_TIMEOUT0__60_carry_i_4_n_0));
  LUT5 #(
    .INIT(32'h69966969)) 
    TRAIL_TIMEOUT0__60_carry_i_5
       (.I0(TRAIL_TIMEOUT0_carry__5_n_7),
        .I1(TRAIL_TIMEOUT0_carry__4_n_5),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .I3(TRAIL_TIMEOUT0_carry__4_n_6),
        .I4(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__60_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    TRAIL_TIMEOUT0__60_carry_i_6
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT0_carry__4_n_5),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .I3(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__60_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    TRAIL_TIMEOUT0__60_carry_i_7
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__60_carry_i_7_n_0));
  CARRY4 TRAIL_TIMEOUT0__92_carry
       (.CI(1'b0),
        .CO({TRAIL_TIMEOUT0__92_carry_n_0,TRAIL_TIMEOUT0__92_carry_n_1,TRAIL_TIMEOUT0__92_carry_n_2,TRAIL_TIMEOUT0__92_carry_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__92_carry_i_1_n_0,TRAIL_TIMEOUT0__92_carry_i_2__2_n_0,TRAIL_TIMEOUT0__92_carry_i_3__2_n_0,1'b0}),
        .O({TRAIL_TIMEOUT0__92_carry_n_4,TRAIL_TIMEOUT0__92_carry_n_5,TRAIL_TIMEOUT0__92_carry_n_6,TRAIL_TIMEOUT0__92_carry_n_7}),
        .S({TRAIL_TIMEOUT0__92_carry_i_4_n_0,TRAIL_TIMEOUT0__92_carry_i_5_n_0,TRAIL_TIMEOUT0__92_carry_i_6_n_0,TRAIL_TIMEOUT0__92_carry_i_7_n_0}));
  CARRY4 TRAIL_TIMEOUT0__92_carry__0
       (.CI(TRAIL_TIMEOUT0__92_carry_n_0),
        .CO({TRAIL_TIMEOUT0__92_carry__0_n_0,TRAIL_TIMEOUT0__92_carry__0_n_1,TRAIL_TIMEOUT0__92_carry__0_n_2,TRAIL_TIMEOUT0__92_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0__92_carry__0_i_1_n_0,TRAIL_TIMEOUT0__92_carry__0_i_2_n_0,TRAIL_TIMEOUT0__92_carry__0_i_3_n_0,TRAIL_TIMEOUT0__92_carry__0_i_4_n_0}),
        .O({TRAIL_TIMEOUT0__92_carry__0_n_4,TRAIL_TIMEOUT0__92_carry__0_n_5,TRAIL_TIMEOUT0__92_carry__0_n_6,TRAIL_TIMEOUT0__92_carry__0_n_7}),
        .S({TRAIL_TIMEOUT0__92_carry__0_i_5_n_0,TRAIL_TIMEOUT0__92_carry__0_i_6_n_0,TRAIL_TIMEOUT0__92_carry__0_i_7_n_0,TRAIL_TIMEOUT0__92_carry__0_i_8_n_0}));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0__92_carry__0_i_1
       (.I0(TRAIL_TIMEOUT0__60_carry__1_n_7),
        .I1(TRAIL_TIMEOUT0_carry__5_n_5),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_1_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0__92_carry__0_i_2
       (.I0(TRAIL_TIMEOUT0__60_carry__0_n_4),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(TRAIL_TIMEOUT0_carry__4_n_5),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_2_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0__92_carry__0_i_3
       (.I0(TRAIL_TIMEOUT0__60_carry__0_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_3_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0__92_carry__0_i_4
       (.I0(TRAIL_TIMEOUT0__60_carry__0_n_6),
        .I1(TRAIL_TIMEOUT0_carry__4_n_4),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_4_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    TRAIL_TIMEOUT0__92_carry__0_i_5
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0_carry__5_n_5),
        .I2(TRAIL_TIMEOUT0__60_carry__1_n_7),
        .I3(TRAIL_TIMEOUT0__60_carry__1_n_6),
        .I4(TRAIL_TIMEOUT0_carry__5_n_4),
        .I5(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_5_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    TRAIL_TIMEOUT0__92_carry__0_i_6
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(TRAIL_TIMEOUT0__60_carry__0_n_4),
        .I3(TRAIL_TIMEOUT0__60_carry__1_n_7),
        .I4(TRAIL_TIMEOUT0_carry__5_n_5),
        .I5(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_6_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    TRAIL_TIMEOUT0__92_carry__0_i_7
       (.I0(TRAIL_TIMEOUT0_carry__4_n_6),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(TRAIL_TIMEOUT0__60_carry__0_n_5),
        .I3(TRAIL_TIMEOUT0__60_carry__0_n_4),
        .I4(TRAIL_TIMEOUT0_carry__5_n_6),
        .I5(TRAIL_TIMEOUT0_carry__4_n_5),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_7_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    TRAIL_TIMEOUT0__92_carry__0_i_8
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT0_carry__4_n_4),
        .I2(TRAIL_TIMEOUT0__60_carry__0_n_6),
        .I3(TRAIL_TIMEOUT0__60_carry__0_n_5),
        .I4(TRAIL_TIMEOUT0_carry__5_n_7),
        .I5(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(TRAIL_TIMEOUT0__92_carry__0_i_8_n_0));
  CARRY4 TRAIL_TIMEOUT0__92_carry__1
       (.CI(TRAIL_TIMEOUT0__92_carry__0_n_0),
        .CO({NLW_TRAIL_TIMEOUT0__92_carry__1_CO_UNCONNECTED[3:1],TRAIL_TIMEOUT0__92_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,TRAIL_TIMEOUT0__92_carry__1_i_1_n_0}),
        .O({NLW_TRAIL_TIMEOUT0__92_carry__1_O_UNCONNECTED[3:2],TRAIL_TIMEOUT0__92_carry__1_n_6,TRAIL_TIMEOUT0__92_carry__1_n_7}),
        .S({1'b0,1'b0,TRAIL_TIMEOUT0__92_carry__1_i_2_n_0,TRAIL_TIMEOUT0__92_carry__1_i_3_n_0}));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0__92_carry__1_i_1
       (.I0(TRAIL_TIMEOUT0__60_carry__1_n_6),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .I2(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(TRAIL_TIMEOUT0__92_carry__1_i_1_n_0));
  LUT4 #(
    .INIT(16'h9996)) 
    TRAIL_TIMEOUT0__92_carry__1_i_2
       (.I0(TRAIL_TIMEOUT0_carry__5_n_5),
        .I1(TRAIL_TIMEOUT0__60_carry__1_n_0),
        .I2(TRAIL_TIMEOUT0_carry__5_n_6),
        .I3(TRAIL_TIMEOUT0__60_carry__1_n_5),
        .O(TRAIL_TIMEOUT0__92_carry__1_i_2_n_0));
  LUT5 #(
    .INIT(32'h4DB2B24D)) 
    TRAIL_TIMEOUT0__92_carry__1_i_3
       (.I0(TRAIL_TIMEOUT0_carry__5_n_7),
        .I1(TRAIL_TIMEOUT0_carry__5_n_4),
        .I2(TRAIL_TIMEOUT0__60_carry__1_n_6),
        .I3(TRAIL_TIMEOUT0__60_carry__1_n_5),
        .I4(TRAIL_TIMEOUT0_carry__5_n_6),
        .O(TRAIL_TIMEOUT0__92_carry__1_i_3_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    TRAIL_TIMEOUT0__92_carry_i_1
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .I2(TRAIL_TIMEOUT0__60_carry__0_n_6),
        .O(TRAIL_TIMEOUT0__92_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    TRAIL_TIMEOUT0__92_carry_i_2__2
       (.I0(TRAIL_TIMEOUT0__60_carry_n_4),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(TRAIL_TIMEOUT0__92_carry_i_2__2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    TRAIL_TIMEOUT0__92_carry_i_3__2
       (.I0(TRAIL_TIMEOUT0__60_carry_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(TRAIL_TIMEOUT0__92_carry_i_3__2_n_0));
  LUT5 #(
    .INIT(32'h69966969)) 
    TRAIL_TIMEOUT0__92_carry_i_4
       (.I0(TRAIL_TIMEOUT0__60_carry__0_n_6),
        .I1(TRAIL_TIMEOUT0_carry__4_n_7),
        .I2(TRAIL_TIMEOUT0_carry__4_n_4),
        .I3(TRAIL_TIMEOUT0_carry__4_n_5),
        .I4(TRAIL_TIMEOUT0__60_carry__0_n_7),
        .O(TRAIL_TIMEOUT0__92_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    TRAIL_TIMEOUT0__92_carry_i_5
       (.I0(TRAIL_TIMEOUT0_carry__4_n_6),
        .I1(TRAIL_TIMEOUT0__60_carry_n_4),
        .I2(TRAIL_TIMEOUT0_carry__4_n_5),
        .I3(TRAIL_TIMEOUT0__60_carry__0_n_7),
        .O(TRAIL_TIMEOUT0__92_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    TRAIL_TIMEOUT0__92_carry_i_6
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry_n_5),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .I3(TRAIL_TIMEOUT0__60_carry_n_4),
        .O(TRAIL_TIMEOUT0__92_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    TRAIL_TIMEOUT0__92_carry_i_7
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT0__60_carry_n_5),
        .O(TRAIL_TIMEOUT0__92_carry_i_7_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry
       (.CI(1'b0),
        .CO({TRAIL_TIMEOUT0_carry_n_0,TRAIL_TIMEOUT0_carry_n_1,TRAIL_TIMEOUT0_carry_n_2,TRAIL_TIMEOUT0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT1_n_104,TRAIL_TIMEOUT1_n_105,1'b0,1'b1}),
        .O(NLW_TRAIL_TIMEOUT0_carry_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry_i_1_n_0,TRAIL_TIMEOUT0_carry_i_2_n_0,TRAIL_TIMEOUT0_carry_i_3_n_0,TRAIL_TIMEOUT1_n_105}));
  CARRY4 TRAIL_TIMEOUT0_carry__0
       (.CI(TRAIL_TIMEOUT0_carry_n_0),
        .CO({TRAIL_TIMEOUT0_carry__0_n_0,TRAIL_TIMEOUT0_carry__0_n_1,TRAIL_TIMEOUT0_carry__0_n_2,TRAIL_TIMEOUT0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT1_n_100,TRAIL_TIMEOUT1_n_101,TRAIL_TIMEOUT1_n_102,TRAIL_TIMEOUT1_n_103}),
        .O(NLW_TRAIL_TIMEOUT0_carry__0_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry__0_i_1_n_0,TRAIL_TIMEOUT0_carry__0_i_2_n_0,TRAIL_TIMEOUT0_carry__0_i_3_n_0,TRAIL_TIMEOUT0_carry__0_i_4_n_0}));
  LUT3 #(
    .INIT(8'h69)) 
    TRAIL_TIMEOUT0_carry__0_i_1
       (.I0(TRAIL_TIMEOUT1_n_98),
        .I1(TRAIL_TIMEOUT1_n_105),
        .I2(TRAIL_TIMEOUT1_n_100),
        .O(TRAIL_TIMEOUT0_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__0_i_2
       (.I0(TRAIL_TIMEOUT1_n_101),
        .I1(TRAIL_TIMEOUT1_n_99),
        .O(TRAIL_TIMEOUT0_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__0_i_3
       (.I0(TRAIL_TIMEOUT1_n_102),
        .I1(TRAIL_TIMEOUT1_n_100),
        .O(TRAIL_TIMEOUT0_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__0_i_4
       (.I0(TRAIL_TIMEOUT1_n_103),
        .I1(TRAIL_TIMEOUT1_n_101),
        .O(TRAIL_TIMEOUT0_carry__0_i_4_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__1
       (.CI(TRAIL_TIMEOUT0_carry__0_n_0),
        .CO({TRAIL_TIMEOUT0_carry__1_n_0,TRAIL_TIMEOUT0_carry__1_n_1,TRAIL_TIMEOUT0_carry__1_n_2,TRAIL_TIMEOUT0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0_carry__1_i_1_n_0,TRAIL_TIMEOUT0_carry__1_i_2_n_0,TRAIL_TIMEOUT0_carry__1_i_3_n_0,TRAIL_TIMEOUT0_carry__1_i_4_n_0}),
        .O(NLW_TRAIL_TIMEOUT0_carry__1_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry__1_i_5_n_0,TRAIL_TIMEOUT0_carry__1_i_6_n_0,TRAIL_TIMEOUT0_carry__1_i_7_n_0,TRAIL_TIMEOUT0_carry__1_i_8_n_0}));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__1_i_1
       (.I0(TRAIL_TIMEOUT1_n_102),
        .I1(TRAIL_TIMEOUT1_n_95),
        .I2(TRAIL_TIMEOUT1_n_97),
        .O(TRAIL_TIMEOUT0_carry__1_i_1_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__1_i_2
       (.I0(TRAIL_TIMEOUT1_n_103),
        .I1(TRAIL_TIMEOUT1_n_96),
        .I2(TRAIL_TIMEOUT1_n_98),
        .O(TRAIL_TIMEOUT0_carry__1_i_2_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__1_i_3
       (.I0(TRAIL_TIMEOUT1_n_104),
        .I1(TRAIL_TIMEOUT1_n_97),
        .I2(TRAIL_TIMEOUT1_n_99),
        .O(TRAIL_TIMEOUT0_carry__1_i_3_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    TRAIL_TIMEOUT0_carry__1_i_4
       (.I0(TRAIL_TIMEOUT1_n_97),
        .I1(TRAIL_TIMEOUT1_n_99),
        .I2(TRAIL_TIMEOUT1_n_104),
        .O(TRAIL_TIMEOUT0_carry__1_i_4_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    TRAIL_TIMEOUT0_carry__1_i_5
       (.I0(TRAIL_TIMEOUT1_n_97),
        .I1(TRAIL_TIMEOUT1_n_95),
        .I2(TRAIL_TIMEOUT1_n_102),
        .I3(TRAIL_TIMEOUT1_n_101),
        .I4(TRAIL_TIMEOUT1_n_96),
        .I5(TRAIL_TIMEOUT1_n_94),
        .O(TRAIL_TIMEOUT0_carry__1_i_5_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    TRAIL_TIMEOUT0_carry__1_i_6
       (.I0(TRAIL_TIMEOUT1_n_98),
        .I1(TRAIL_TIMEOUT1_n_96),
        .I2(TRAIL_TIMEOUT1_n_103),
        .I3(TRAIL_TIMEOUT1_n_102),
        .I4(TRAIL_TIMEOUT1_n_97),
        .I5(TRAIL_TIMEOUT1_n_95),
        .O(TRAIL_TIMEOUT0_carry__1_i_6_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    TRAIL_TIMEOUT0_carry__1_i_7
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT1_n_97),
        .I2(TRAIL_TIMEOUT1_n_104),
        .I3(TRAIL_TIMEOUT1_n_103),
        .I4(TRAIL_TIMEOUT1_n_98),
        .I5(TRAIL_TIMEOUT1_n_96),
        .O(TRAIL_TIMEOUT0_carry__1_i_7_n_0));
  LUT5 #(
    .INIT(32'h69966969)) 
    TRAIL_TIMEOUT0_carry__1_i_8
       (.I0(TRAIL_TIMEOUT1_n_104),
        .I1(TRAIL_TIMEOUT1_n_99),
        .I2(TRAIL_TIMEOUT1_n_97),
        .I3(TRAIL_TIMEOUT1_n_98),
        .I4(TRAIL_TIMEOUT1_n_105),
        .O(TRAIL_TIMEOUT0_carry__1_i_8_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__2
       (.CI(TRAIL_TIMEOUT0_carry__1_n_0),
        .CO({TRAIL_TIMEOUT0_carry__2_n_0,TRAIL_TIMEOUT0_carry__2_n_1,TRAIL_TIMEOUT0_carry__2_n_2,TRAIL_TIMEOUT0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0_carry__2_i_1_n_0,TRAIL_TIMEOUT0_carry__2_i_2_n_0,TRAIL_TIMEOUT0_carry__2_i_3_n_0,TRAIL_TIMEOUT0_carry__2_i_4_n_0}),
        .O(NLW_TRAIL_TIMEOUT0_carry__2_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry__2_i_5_n_0,TRAIL_TIMEOUT0_carry__2_i_6_n_0,TRAIL_TIMEOUT0_carry__2_i_7_n_0,TRAIL_TIMEOUT0_carry__2_i_8_n_0}));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__2_i_1
       (.I0(TRAIL_TIMEOUT1_n_98),
        .I1(TRAIL_TIMEOUT1_n_91),
        .I2(TRAIL_TIMEOUT1_n_93),
        .O(TRAIL_TIMEOUT0_carry__2_i_1_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__2_i_2
       (.I0(TRAIL_TIMEOUT1_n_99),
        .I1(TRAIL_TIMEOUT1_n_92),
        .I2(TRAIL_TIMEOUT1_n_94),
        .O(TRAIL_TIMEOUT0_carry__2_i_2_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__2_i_3
       (.I0(TRAIL_TIMEOUT1_n_100),
        .I1(TRAIL_TIMEOUT1_n_93),
        .I2(TRAIL_TIMEOUT1_n_95),
        .O(TRAIL_TIMEOUT0_carry__2_i_3_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__2_i_4
       (.I0(TRAIL_TIMEOUT1_n_101),
        .I1(TRAIL_TIMEOUT1_n_94),
        .I2(TRAIL_TIMEOUT1_n_96),
        .O(TRAIL_TIMEOUT0_carry__2_i_4_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    TRAIL_TIMEOUT0_carry__2_i_5
       (.I0(TRAIL_TIMEOUT1_n_93),
        .I1(TRAIL_TIMEOUT1_n_91),
        .I2(TRAIL_TIMEOUT1_n_98),
        .I3(TRAIL_TIMEOUT1_n_97),
        .I4(TRAIL_TIMEOUT1_n_92),
        .I5(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0_carry__2_i_5_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    TRAIL_TIMEOUT0_carry__2_i_6
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT1_n_92),
        .I2(TRAIL_TIMEOUT1_n_99),
        .I3(TRAIL_TIMEOUT1_n_98),
        .I4(TRAIL_TIMEOUT1_n_93),
        .I5(TRAIL_TIMEOUT1_n_91),
        .O(TRAIL_TIMEOUT0_carry__2_i_6_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    TRAIL_TIMEOUT0_carry__2_i_7
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT1_n_93),
        .I2(TRAIL_TIMEOUT1_n_100),
        .I3(TRAIL_TIMEOUT1_n_99),
        .I4(TRAIL_TIMEOUT1_n_94),
        .I5(TRAIL_TIMEOUT1_n_92),
        .O(TRAIL_TIMEOUT0_carry__2_i_7_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    TRAIL_TIMEOUT0_carry__2_i_8
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT1_n_94),
        .I2(TRAIL_TIMEOUT1_n_101),
        .I3(TRAIL_TIMEOUT1_n_100),
        .I4(TRAIL_TIMEOUT1_n_95),
        .I5(TRAIL_TIMEOUT1_n_93),
        .O(TRAIL_TIMEOUT0_carry__2_i_8_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__3
       (.CI(TRAIL_TIMEOUT0_carry__2_n_0),
        .CO({TRAIL_TIMEOUT0_carry__3_n_0,TRAIL_TIMEOUT0_carry__3_n_1,TRAIL_TIMEOUT0_carry__3_n_2,TRAIL_TIMEOUT0_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT0_carry__3_i_1_n_0,TRAIL_TIMEOUT0_carry__3_i_2_n_0,TRAIL_TIMEOUT0_carry__3_i_3_n_0,TRAIL_TIMEOUT0_carry__3_i_4_n_0}),
        .O(NLW_TRAIL_TIMEOUT0_carry__3_O_UNCONNECTED[3:0]),
        .S({TRAIL_TIMEOUT0_carry__3_i_5_n_0,TRAIL_TIMEOUT0_carry__3_i_6_n_0,TRAIL_TIMEOUT0_carry__3_i_7_n_0,TRAIL_TIMEOUT0_carry__3_i_8_n_0}));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__3_i_1
       (.I0(TRAIL_TIMEOUT1_n_94),
        .I1(TRAIL_TIMEOUT1_n_87),
        .I2(TRAIL_TIMEOUT1_n_89),
        .O(TRAIL_TIMEOUT0_carry__3_i_1_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__3_i_2
       (.I0(TRAIL_TIMEOUT1_n_95),
        .I1(TRAIL_TIMEOUT1_n_88),
        .I2(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0_carry__3_i_2_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__3_i_3
       (.I0(TRAIL_TIMEOUT1_n_96),
        .I1(TRAIL_TIMEOUT1_n_89),
        .I2(TRAIL_TIMEOUT1_n_91),
        .O(TRAIL_TIMEOUT0_carry__3_i_3_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__3_i_4
       (.I0(TRAIL_TIMEOUT1_n_97),
        .I1(TRAIL_TIMEOUT1_n_90),
        .I2(TRAIL_TIMEOUT1_n_92),
        .O(TRAIL_TIMEOUT0_carry__3_i_4_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    TRAIL_TIMEOUT0_carry__3_i_5
       (.I0(TRAIL_TIMEOUT1_n_89),
        .I1(TRAIL_TIMEOUT1_n_87),
        .I2(TRAIL_TIMEOUT1_n_94),
        .I3(TRAIL_TIMEOUT1_n_93),
        .I4(TRAIL_TIMEOUT1_n_88),
        .I5(TRAIL_TIMEOUT1_n_86),
        .O(TRAIL_TIMEOUT0_carry__3_i_5_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    TRAIL_TIMEOUT0_carry__3_i_6
       (.I0(TRAIL_TIMEOUT1_n_90),
        .I1(TRAIL_TIMEOUT1_n_88),
        .I2(TRAIL_TIMEOUT1_n_95),
        .I3(TRAIL_TIMEOUT1_n_94),
        .I4(TRAIL_TIMEOUT1_n_89),
        .I5(TRAIL_TIMEOUT1_n_87),
        .O(TRAIL_TIMEOUT0_carry__3_i_6_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    TRAIL_TIMEOUT0_carry__3_i_7
       (.I0(TRAIL_TIMEOUT1_n_91),
        .I1(TRAIL_TIMEOUT1_n_89),
        .I2(TRAIL_TIMEOUT1_n_96),
        .I3(TRAIL_TIMEOUT1_n_95),
        .I4(TRAIL_TIMEOUT1_n_90),
        .I5(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0_carry__3_i_7_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    TRAIL_TIMEOUT0_carry__3_i_8
       (.I0(TRAIL_TIMEOUT1_n_92),
        .I1(TRAIL_TIMEOUT1_n_90),
        .I2(TRAIL_TIMEOUT1_n_97),
        .I3(TRAIL_TIMEOUT1_n_96),
        .I4(TRAIL_TIMEOUT1_n_91),
        .I5(TRAIL_TIMEOUT1_n_89),
        .O(TRAIL_TIMEOUT0_carry__3_i_8_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__4
       (.CI(TRAIL_TIMEOUT0_carry__3_n_0),
        .CO({TRAIL_TIMEOUT0_carry__4_n_0,TRAIL_TIMEOUT0_carry__4_n_1,TRAIL_TIMEOUT0_carry__4_n_2,TRAIL_TIMEOUT0_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI({TRAIL_TIMEOUT1_n_90,TRAIL_TIMEOUT0_carry__4_i_1_n_0,TRAIL_TIMEOUT0_carry__4_i_2_n_0,TRAIL_TIMEOUT0_carry__4_i_3_n_0}),
        .O({TRAIL_TIMEOUT0_carry__4_n_4,TRAIL_TIMEOUT0_carry__4_n_5,TRAIL_TIMEOUT0_carry__4_n_6,TRAIL_TIMEOUT0_carry__4_n_7}),
        .S({TRAIL_TIMEOUT0_carry__4_i_4_n_0,TRAIL_TIMEOUT0_carry__4_i_5_n_0,TRAIL_TIMEOUT0_carry__4_i_6_n_0,TRAIL_TIMEOUT0_carry__4_i_7_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    TRAIL_TIMEOUT0_carry__4_i_1
       (.I0(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0_carry__4_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    TRAIL_TIMEOUT0_carry__4_i_2
       (.I0(TRAIL_TIMEOUT1_n_87),
        .I1(TRAIL_TIMEOUT1_n_92),
        .O(TRAIL_TIMEOUT0_carry__4_i_2_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    TRAIL_TIMEOUT0_carry__4_i_3
       (.I0(TRAIL_TIMEOUT1_n_93),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0_carry__4_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__4_i_4
       (.I0(TRAIL_TIMEOUT1_n_90),
        .I1(TRAIL_TIMEOUT1_n_89),
        .O(TRAIL_TIMEOUT0_carry__4_i_4_n_0));
  LUT3 #(
    .INIT(8'hE1)) 
    TRAIL_TIMEOUT0_carry__4_i_5
       (.I0(TRAIL_TIMEOUT1_n_91),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(TRAIL_TIMEOUT1_n_90),
        .O(TRAIL_TIMEOUT0_carry__4_i_5_n_0));
  LUT4 #(
    .INIT(16'h1EE1)) 
    TRAIL_TIMEOUT0_carry__4_i_6
       (.I0(TRAIL_TIMEOUT1_n_92),
        .I1(TRAIL_TIMEOUT1_n_87),
        .I2(TRAIL_TIMEOUT1_n_86),
        .I3(TRAIL_TIMEOUT1_n_91),
        .O(TRAIL_TIMEOUT0_carry__4_i_6_n_0));
  LUT5 #(
    .INIT(32'h4DB2B24D)) 
    TRAIL_TIMEOUT0_carry__4_i_7
       (.I0(TRAIL_TIMEOUT1_n_88),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(TRAIL_TIMEOUT1_n_93),
        .I3(TRAIL_TIMEOUT1_n_87),
        .I4(TRAIL_TIMEOUT1_n_92),
        .O(TRAIL_TIMEOUT0_carry__4_i_7_n_0));
  CARRY4 TRAIL_TIMEOUT0_carry__5
       (.CI(TRAIL_TIMEOUT0_carry__4_n_0),
        .CO({NLW_TRAIL_TIMEOUT0_carry__5_CO_UNCONNECTED[3],TRAIL_TIMEOUT0_carry__5_n_1,TRAIL_TIMEOUT0_carry__5_n_2,TRAIL_TIMEOUT0_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,TRAIL_TIMEOUT1_n_87,TRAIL_TIMEOUT1_n_88,TRAIL_TIMEOUT1_n_89}),
        .O({TRAIL_TIMEOUT0_carry__5_n_4,TRAIL_TIMEOUT0_carry__5_n_5,TRAIL_TIMEOUT0_carry__5_n_6,TRAIL_TIMEOUT0_carry__5_n_7}),
        .S({TRAIL_TIMEOUT0_carry__5_i_1_n_0,TRAIL_TIMEOUT0_carry__5_i_2_n_0,TRAIL_TIMEOUT0_carry__5_i_3_n_0,TRAIL_TIMEOUT0_carry__5_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    TRAIL_TIMEOUT0_carry__5_i_1
       (.I0(TRAIL_TIMEOUT1_n_86),
        .O(TRAIL_TIMEOUT0_carry__5_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__5_i_2
       (.I0(TRAIL_TIMEOUT1_n_87),
        .I1(TRAIL_TIMEOUT1_n_86),
        .O(TRAIL_TIMEOUT0_carry__5_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__5_i_3
       (.I0(TRAIL_TIMEOUT1_n_88),
        .I1(TRAIL_TIMEOUT1_n_87),
        .O(TRAIL_TIMEOUT0_carry__5_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry__5_i_4
       (.I0(TRAIL_TIMEOUT1_n_89),
        .I1(TRAIL_TIMEOUT1_n_88),
        .O(TRAIL_TIMEOUT0_carry__5_i_4_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry_i_1
       (.I0(TRAIL_TIMEOUT1_n_104),
        .I1(TRAIL_TIMEOUT1_n_102),
        .O(TRAIL_TIMEOUT0_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    TRAIL_TIMEOUT0_carry_i_2
       (.I0(TRAIL_TIMEOUT1_n_105),
        .I1(TRAIL_TIMEOUT1_n_103),
        .O(TRAIL_TIMEOUT0_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    TRAIL_TIMEOUT0_carry_i_3
       (.I0(TRAIL_TIMEOUT1_n_104),
        .O(TRAIL_TIMEOUT0_carry_i_3_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-13 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    TRAIL_TIMEOUT1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_TRAIL_TIMEOUT1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_TRAIL_TIMEOUT1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_TRAIL_TIMEOUT1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_TRAIL_TIMEOUT1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_TRAIL_TIMEOUT1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_TRAIL_TIMEOUT1_OVERFLOW_UNCONNECTED),
        .P({NLW_TRAIL_TIMEOUT1_P_UNCONNECTED[47:20],TRAIL_TIMEOUT1_n_86,TRAIL_TIMEOUT1_n_87,TRAIL_TIMEOUT1_n_88,TRAIL_TIMEOUT1_n_89,TRAIL_TIMEOUT1_n_90,TRAIL_TIMEOUT1_n_91,TRAIL_TIMEOUT1_n_92,TRAIL_TIMEOUT1_n_93,TRAIL_TIMEOUT1_n_94,TRAIL_TIMEOUT1_n_95,TRAIL_TIMEOUT1_n_96,TRAIL_TIMEOUT1_n_97,TRAIL_TIMEOUT1_n_98,TRAIL_TIMEOUT1_n_99,TRAIL_TIMEOUT1_n_100,TRAIL_TIMEOUT1_n_101,TRAIL_TIMEOUT1_n_102,TRAIL_TIMEOUT1_n_103,TRAIL_TIMEOUT1_n_104,TRAIL_TIMEOUT1_n_105}),
        .PATTERNBDETECT(NLW_TRAIL_TIMEOUT1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_TRAIL_TIMEOUT1_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_TRAIL_TIMEOUT1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_TRAIL_TIMEOUT1_UNDERFLOW_UNCONNECTED));
  CARRY4 ZERO_TIMEOUT0__104_carry
       (.CI(1'b0),
        .CO({ZERO_TIMEOUT0__104_carry_n_0,ZERO_TIMEOUT0__104_carry_n_1,ZERO_TIMEOUT0__104_carry_n_2,ZERO_TIMEOUT0__104_carry_n_3}),
        .CYINIT(1'b0),
        .DI({ZERO_TIMEOUT0__104_carry_i_1_n_0,ZERO_TIMEOUT0__104_carry_i_2_n_0,ZERO_TIMEOUT0__104_carry_i_3_n_0,1'b0}),
        .O({ZERO_TIMEOUT0__104_carry_n_4,ZERO_TIMEOUT0__104_carry_n_5,ZERO_TIMEOUT0__104_carry_n_6,ZERO_TIMEOUT0__104_carry_n_7}),
        .S({ZERO_TIMEOUT0__104_carry_i_4_n_0,ZERO_TIMEOUT0__104_carry_i_5_n_0,ZERO_TIMEOUT0__104_carry_i_6_n_0,ZERO_TIMEOUT0__104_carry_i_7_n_0}));
  CARRY4 ZERO_TIMEOUT0__104_carry__0
       (.CI(ZERO_TIMEOUT0__104_carry_n_0),
        .CO({ZERO_TIMEOUT0__104_carry__0_n_0,ZERO_TIMEOUT0__104_carry__0_n_1,ZERO_TIMEOUT0__104_carry__0_n_2,ZERO_TIMEOUT0__104_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({ZERO_TIMEOUT0__104_carry__0_i_1_n_0,ZERO_TIMEOUT0__104_carry__0_i_2_n_0,ZERO_TIMEOUT0__104_carry__0_i_3_n_0,ZERO_TIMEOUT0__104_carry__0_i_4_n_0}),
        .O({ZERO_TIMEOUT0__104_carry__0_n_4,ZERO_TIMEOUT0__104_carry__0_n_5,ZERO_TIMEOUT0__104_carry__0_n_6,ZERO_TIMEOUT0__104_carry__0_n_7}),
        .S({ZERO_TIMEOUT0__104_carry__0_i_5_n_0,ZERO_TIMEOUT0__104_carry__0_i_6_n_0,ZERO_TIMEOUT0__104_carry__0_i_7_n_0,ZERO_TIMEOUT0__104_carry__0_i_8_n_0}));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0__104_carry__0_i_1
       (.I0(ZERO_TIMEOUT0__66_carry__1_n_7),
        .I1(ZERO_TIMEOUT0_carry__5_n_5),
        .I2(ZERO_TIMEOUT0_carry__4_n_4),
        .O(ZERO_TIMEOUT0__104_carry__0_i_1_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0__104_carry__0_i_2
       (.I0(ZERO_TIMEOUT0__66_carry__0_n_4),
        .I1(ZERO_TIMEOUT0_carry__5_n_6),
        .I2(ZERO_TIMEOUT0_carry__4_n_5),
        .O(ZERO_TIMEOUT0__104_carry__0_i_2_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0__104_carry__0_i_3
       (.I0(ZERO_TIMEOUT0__66_carry__0_n_5),
        .I1(ZERO_TIMEOUT0_carry__5_n_7),
        .I2(ZERO_TIMEOUT0_carry__4_n_6),
        .O(ZERO_TIMEOUT0__104_carry__0_i_3_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0__104_carry__0_i_4
       (.I0(ZERO_TIMEOUT0__66_carry__0_n_6),
        .I1(ZERO_TIMEOUT0_carry__4_n_4),
        .I2(ZERO_TIMEOUT0_carry__4_n_7),
        .O(ZERO_TIMEOUT0__104_carry__0_i_4_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0__104_carry__0_i_5
       (.I0(ZERO_TIMEOUT0_carry__4_n_4),
        .I1(ZERO_TIMEOUT0_carry__5_n_5),
        .I2(ZERO_TIMEOUT0__66_carry__1_n_7),
        .I3(ZERO_TIMEOUT0__66_carry__1_n_6),
        .I4(ZERO_TIMEOUT0_carry__5_n_4),
        .I5(ZERO_TIMEOUT0_carry__5_n_7),
        .O(ZERO_TIMEOUT0__104_carry__0_i_5_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0__104_carry__0_i_6
       (.I0(ZERO_TIMEOUT0_carry__4_n_5),
        .I1(ZERO_TIMEOUT0_carry__5_n_6),
        .I2(ZERO_TIMEOUT0__66_carry__0_n_4),
        .I3(ZERO_TIMEOUT0__66_carry__1_n_7),
        .I4(ZERO_TIMEOUT0_carry__5_n_5),
        .I5(ZERO_TIMEOUT0_carry__4_n_4),
        .O(ZERO_TIMEOUT0__104_carry__0_i_6_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0__104_carry__0_i_7
       (.I0(ZERO_TIMEOUT0_carry__4_n_6),
        .I1(ZERO_TIMEOUT0_carry__5_n_7),
        .I2(ZERO_TIMEOUT0__66_carry__0_n_5),
        .I3(ZERO_TIMEOUT0__66_carry__0_n_4),
        .I4(ZERO_TIMEOUT0_carry__5_n_6),
        .I5(ZERO_TIMEOUT0_carry__4_n_5),
        .O(ZERO_TIMEOUT0__104_carry__0_i_7_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0__104_carry__0_i_8
       (.I0(ZERO_TIMEOUT0_carry__4_n_7),
        .I1(ZERO_TIMEOUT0_carry__4_n_4),
        .I2(ZERO_TIMEOUT0__66_carry__0_n_6),
        .I3(ZERO_TIMEOUT0__66_carry__0_n_5),
        .I4(ZERO_TIMEOUT0_carry__5_n_7),
        .I5(ZERO_TIMEOUT0_carry__4_n_6),
        .O(ZERO_TIMEOUT0__104_carry__0_i_8_n_0));
  CARRY4 ZERO_TIMEOUT0__104_carry__1
       (.CI(ZERO_TIMEOUT0__104_carry__0_n_0),
        .CO({NLW_ZERO_TIMEOUT0__104_carry__1_CO_UNCONNECTED[3],ZERO_TIMEOUT0__104_carry__1_n_1,ZERO_TIMEOUT0__104_carry__1_n_2,ZERO_TIMEOUT0__104_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,ZERO_TIMEOUT0__104_carry__1_i_1_n_0,ZERO_TIMEOUT0__104_carry__1_i_2_n_0,ZERO_TIMEOUT0__104_carry__1_i_3_n_0}),
        .O({ZERO_TIMEOUT0__104_carry__1_n_4,ZERO_TIMEOUT0__104_carry__1_n_5,ZERO_TIMEOUT0__104_carry__1_n_6,ZERO_TIMEOUT0__104_carry__1_n_7}),
        .S({ZERO_TIMEOUT0__104_carry__1_i_4_n_0,ZERO_TIMEOUT0__104_carry__1_i_5_n_0,ZERO_TIMEOUT0__104_carry__1_i_6_n_0,ZERO_TIMEOUT0__104_carry__1_i_7_n_0}));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0__104_carry__1_i_1
       (.I0(ZERO_TIMEOUT0__66_carry__1_n_4),
        .I1(ZERO_TIMEOUT0_carry__6_n_6),
        .I2(ZERO_TIMEOUT0_carry__5_n_5),
        .O(ZERO_TIMEOUT0__104_carry__1_i_1_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0__104_carry__1_i_2
       (.I0(ZERO_TIMEOUT0__66_carry__1_n_5),
        .I1(ZERO_TIMEOUT0_carry__6_n_7),
        .I2(ZERO_TIMEOUT0_carry__5_n_6),
        .O(ZERO_TIMEOUT0__104_carry__1_i_2_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0__104_carry__1_i_3
       (.I0(ZERO_TIMEOUT0__66_carry__1_n_6),
        .I1(ZERO_TIMEOUT0_carry__5_n_4),
        .I2(ZERO_TIMEOUT0_carry__5_n_7),
        .O(ZERO_TIMEOUT0__104_carry__1_i_3_n_0));
  LUT4 #(
    .INIT(16'h9996)) 
    ZERO_TIMEOUT0__104_carry__1_i_4
       (.I0(ZERO_TIMEOUT0_carry__6_n_7),
        .I1(ZERO_TIMEOUT0__66_carry__2_n_2),
        .I2(ZERO_TIMEOUT0_carry__5_n_4),
        .I3(ZERO_TIMEOUT0__66_carry__2_n_7),
        .O(ZERO_TIMEOUT0__104_carry__1_i_4_n_0));
  LUT5 #(
    .INIT(32'h4DB2B24D)) 
    ZERO_TIMEOUT0__104_carry__1_i_5
       (.I0(ZERO_TIMEOUT0_carry__5_n_5),
        .I1(ZERO_TIMEOUT0_carry__6_n_6),
        .I2(ZERO_TIMEOUT0__66_carry__1_n_4),
        .I3(ZERO_TIMEOUT0__66_carry__2_n_7),
        .I4(ZERO_TIMEOUT0_carry__5_n_4),
        .O(ZERO_TIMEOUT0__104_carry__1_i_5_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0__104_carry__1_i_6
       (.I0(ZERO_TIMEOUT0_carry__5_n_6),
        .I1(ZERO_TIMEOUT0_carry__6_n_7),
        .I2(ZERO_TIMEOUT0__66_carry__1_n_5),
        .I3(ZERO_TIMEOUT0__66_carry__1_n_4),
        .I4(ZERO_TIMEOUT0_carry__6_n_6),
        .I5(ZERO_TIMEOUT0_carry__5_n_5),
        .O(ZERO_TIMEOUT0__104_carry__1_i_6_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0__104_carry__1_i_7
       (.I0(ZERO_TIMEOUT0_carry__5_n_7),
        .I1(ZERO_TIMEOUT0_carry__5_n_4),
        .I2(ZERO_TIMEOUT0__66_carry__1_n_6),
        .I3(ZERO_TIMEOUT0__66_carry__1_n_5),
        .I4(ZERO_TIMEOUT0_carry__6_n_7),
        .I5(ZERO_TIMEOUT0_carry__5_n_6),
        .O(ZERO_TIMEOUT0__104_carry__1_i_7_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    ZERO_TIMEOUT0__104_carry_i_1
       (.I0(ZERO_TIMEOUT0_carry__4_n_4),
        .I1(ZERO_TIMEOUT0_carry__4_n_7),
        .I2(ZERO_TIMEOUT0__66_carry__0_n_6),
        .O(ZERO_TIMEOUT0__104_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    ZERO_TIMEOUT0__104_carry_i_2
       (.I0(ZERO_TIMEOUT0__66_carry_n_4),
        .I1(ZERO_TIMEOUT0_carry__4_n_6),
        .O(ZERO_TIMEOUT0__104_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    ZERO_TIMEOUT0__104_carry_i_3
       (.I0(ZERO_TIMEOUT0__66_carry_n_5),
        .I1(ZERO_TIMEOUT0_carry__4_n_7),
        .O(ZERO_TIMEOUT0__104_carry_i_3_n_0));
  LUT5 #(
    .INIT(32'h69966969)) 
    ZERO_TIMEOUT0__104_carry_i_4
       (.I0(ZERO_TIMEOUT0__66_carry__0_n_6),
        .I1(ZERO_TIMEOUT0_carry__4_n_7),
        .I2(ZERO_TIMEOUT0_carry__4_n_4),
        .I3(ZERO_TIMEOUT0_carry__4_n_5),
        .I4(ZERO_TIMEOUT0__66_carry__0_n_7),
        .O(ZERO_TIMEOUT0__104_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    ZERO_TIMEOUT0__104_carry_i_5
       (.I0(ZERO_TIMEOUT0_carry__4_n_6),
        .I1(ZERO_TIMEOUT0__66_carry_n_4),
        .I2(ZERO_TIMEOUT0_carry__4_n_5),
        .I3(ZERO_TIMEOUT0__66_carry__0_n_7),
        .O(ZERO_TIMEOUT0__104_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    ZERO_TIMEOUT0__104_carry_i_6
       (.I0(ZERO_TIMEOUT0_carry__4_n_7),
        .I1(ZERO_TIMEOUT0__66_carry_n_5),
        .I2(ZERO_TIMEOUT0_carry__4_n_6),
        .I3(ZERO_TIMEOUT0__66_carry_n_4),
        .O(ZERO_TIMEOUT0__104_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    ZERO_TIMEOUT0__104_carry_i_7
       (.I0(ZERO_TIMEOUT0_carry__4_n_7),
        .I1(ZERO_TIMEOUT0__66_carry_n_5),
        .O(ZERO_TIMEOUT0__104_carry_i_7_n_0));
  CARRY4 ZERO_TIMEOUT0__138_carry
       (.CI(1'b0),
        .CO({ZERO_TIMEOUT0__138_carry_n_0,ZERO_TIMEOUT0__138_carry_n_1,ZERO_TIMEOUT0__138_carry_n_2,ZERO_TIMEOUT0__138_carry_n_3}),
        .CYINIT(1'b0),
        .DI({ZERO_TIMEOUT0__138_carry_i_1_n_0,ZERO_TIMEOUT0__138_carry_i_2_n_0,ZERO_TIMEOUT0__138_carry_i_3_n_0,1'b0}),
        .O(NLW_ZERO_TIMEOUT0__138_carry_O_UNCONNECTED[3:0]),
        .S({ZERO_TIMEOUT0__138_carry_i_4_n_0,ZERO_TIMEOUT0__138_carry_i_5_n_0,ZERO_TIMEOUT0__138_carry_i_6_n_0,ZERO_TIMEOUT0__138_carry_i_7_n_0}));
  CARRY4 ZERO_TIMEOUT0__138_carry__0
       (.CI(ZERO_TIMEOUT0__138_carry_n_0),
        .CO({ZERO_TIMEOUT0__138_carry__0_n_0,ZERO_TIMEOUT0__138_carry__0_n_1,ZERO_TIMEOUT0__138_carry__0_n_2,ZERO_TIMEOUT0__138_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({ZERO_TIMEOUT0__138_carry__0_i_1_n_0,ZERO_TIMEOUT0__138_carry__0_i_2_n_0,ZERO_TIMEOUT0__138_carry__0_i_3_n_0,ZERO_TIMEOUT0__138_carry__0_i_4_n_0}),
        .O(NLW_ZERO_TIMEOUT0__138_carry__0_O_UNCONNECTED[3:0]),
        .S({ZERO_TIMEOUT0__138_carry__0_i_5_n_0,ZERO_TIMEOUT0__138_carry__0_i_6_n_0,ZERO_TIMEOUT0__138_carry__0_i_7_n_0,ZERO_TIMEOUT0__138_carry__0_i_8_n_0}));
  LUT2 #(
    .INIT(4'hB)) 
    ZERO_TIMEOUT0__138_carry__0_i_1
       (.I0(ZERO_TIMEOUT0__104_carry_n_5),
        .I1(ZERO_TIMEOUT1_n_93),
        .O(ZERO_TIMEOUT0__138_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    ZERO_TIMEOUT0__138_carry__0_i_2
       (.I0(ZERO_TIMEOUT0__104_carry_n_6),
        .I1(ZERO_TIMEOUT1_n_94),
        .O(ZERO_TIMEOUT0__138_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    ZERO_TIMEOUT0__138_carry__0_i_3
       (.I0(ZERO_TIMEOUT0__104_carry_n_7),
        .I1(ZERO_TIMEOUT1_n_95),
        .O(ZERO_TIMEOUT0__138_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    ZERO_TIMEOUT0__138_carry__0_i_4
       (.I0(ZERO_TIMEOUT0__66_carry_n_6),
        .I1(ZERO_TIMEOUT1_n_96),
        .O(ZERO_TIMEOUT0__138_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    ZERO_TIMEOUT0__138_carry__0_i_5
       (.I0(ZERO_TIMEOUT1_n_93),
        .I1(ZERO_TIMEOUT0__104_carry_n_5),
        .I2(ZERO_TIMEOUT1_n_92),
        .I3(ZERO_TIMEOUT0__104_carry_n_4),
        .O(ZERO_TIMEOUT0__138_carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    ZERO_TIMEOUT0__138_carry__0_i_6
       (.I0(ZERO_TIMEOUT1_n_94),
        .I1(ZERO_TIMEOUT0__104_carry_n_6),
        .I2(ZERO_TIMEOUT0__104_carry_n_5),
        .I3(ZERO_TIMEOUT1_n_93),
        .O(ZERO_TIMEOUT0__138_carry__0_i_6_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    ZERO_TIMEOUT0__138_carry__0_i_7
       (.I0(ZERO_TIMEOUT1_n_95),
        .I1(ZERO_TIMEOUT0__104_carry_n_7),
        .I2(ZERO_TIMEOUT0__104_carry_n_6),
        .I3(ZERO_TIMEOUT1_n_94),
        .O(ZERO_TIMEOUT0__138_carry__0_i_7_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    ZERO_TIMEOUT0__138_carry__0_i_8
       (.I0(ZERO_TIMEOUT1_n_96),
        .I1(ZERO_TIMEOUT0__66_carry_n_6),
        .I2(ZERO_TIMEOUT0__104_carry_n_7),
        .I3(ZERO_TIMEOUT1_n_95),
        .O(ZERO_TIMEOUT0__138_carry__0_i_8_n_0));
  CARRY4 ZERO_TIMEOUT0__138_carry__1
       (.CI(ZERO_TIMEOUT0__138_carry__0_n_0),
        .CO({ZERO_TIMEOUT0__138_carry__1_n_0,ZERO_TIMEOUT0__138_carry__1_n_1,ZERO_TIMEOUT0__138_carry__1_n_2,ZERO_TIMEOUT0__138_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({ZERO_TIMEOUT0__138_carry__1_i_1_n_0,ZERO_TIMEOUT0__138_carry__1_i_2_n_0,ZERO_TIMEOUT0__138_carry__1_i_3_n_0,ZERO_TIMEOUT0__138_carry__1_i_4_n_0}),
        .O(NLW_ZERO_TIMEOUT0__138_carry__1_O_UNCONNECTED[3:0]),
        .S({ZERO_TIMEOUT0__138_carry__1_i_5_n_0,ZERO_TIMEOUT0__138_carry__1_i_6_n_0,ZERO_TIMEOUT0__138_carry__1_i_7_n_0,ZERO_TIMEOUT0__138_carry__1_i_8_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    ZERO_TIMEOUT0__138_carry__1_i_1
       (.I0(ZERO_TIMEOUT0__104_carry__0_n_5),
        .I1(ZERO_TIMEOUT1_n_89),
        .O(ZERO_TIMEOUT0__138_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    ZERO_TIMEOUT0__138_carry__1_i_2
       (.I0(ZERO_TIMEOUT0__104_carry__0_n_6),
        .I1(ZERO_TIMEOUT1_n_90),
        .O(ZERO_TIMEOUT0__138_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    ZERO_TIMEOUT0__138_carry__1_i_3
       (.I0(ZERO_TIMEOUT0__104_carry__0_n_7),
        .I1(ZERO_TIMEOUT1_n_91),
        .O(ZERO_TIMEOUT0__138_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    ZERO_TIMEOUT0__138_carry__1_i_4
       (.I0(ZERO_TIMEOUT0__104_carry_n_4),
        .I1(ZERO_TIMEOUT1_n_92),
        .O(ZERO_TIMEOUT0__138_carry__1_i_4_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    ZERO_TIMEOUT0__138_carry__1_i_5
       (.I0(ZERO_TIMEOUT1_n_89),
        .I1(ZERO_TIMEOUT0__104_carry__0_n_5),
        .I2(ZERO_TIMEOUT1_n_88),
        .I3(ZERO_TIMEOUT0__104_carry__0_n_4),
        .O(ZERO_TIMEOUT0__138_carry__1_i_5_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    ZERO_TIMEOUT0__138_carry__1_i_6
       (.I0(ZERO_TIMEOUT1_n_90),
        .I1(ZERO_TIMEOUT0__104_carry__0_n_6),
        .I2(ZERO_TIMEOUT1_n_89),
        .I3(ZERO_TIMEOUT0__104_carry__0_n_5),
        .O(ZERO_TIMEOUT0__138_carry__1_i_6_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    ZERO_TIMEOUT0__138_carry__1_i_7
       (.I0(ZERO_TIMEOUT1_n_91),
        .I1(ZERO_TIMEOUT0__104_carry__0_n_7),
        .I2(ZERO_TIMEOUT1_n_90),
        .I3(ZERO_TIMEOUT0__104_carry__0_n_6),
        .O(ZERO_TIMEOUT0__138_carry__1_i_7_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    ZERO_TIMEOUT0__138_carry__1_i_8
       (.I0(ZERO_TIMEOUT1_n_92),
        .I1(ZERO_TIMEOUT0__104_carry_n_4),
        .I2(ZERO_TIMEOUT1_n_91),
        .I3(ZERO_TIMEOUT0__104_carry__0_n_7),
        .O(ZERO_TIMEOUT0__138_carry__1_i_8_n_0));
  CARRY4 ZERO_TIMEOUT0__138_carry__2
       (.CI(ZERO_TIMEOUT0__138_carry__1_n_0),
        .CO({ZERO_TIMEOUT0__138_carry__2_n_0,ZERO_TIMEOUT0__138_carry__2_n_1,ZERO_TIMEOUT0__138_carry__2_n_2,ZERO_TIMEOUT0__138_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({ZERO_TIMEOUT0__138_carry__2_i_1_n_0,ZERO_TIMEOUT0__138_carry__2_i_2_n_0,ZERO_TIMEOUT0__138_carry__2_i_3_n_0,ZERO_TIMEOUT0__138_carry__2_i_4_n_0}),
        .O(NLW_ZERO_TIMEOUT0__138_carry__2_O_UNCONNECTED[3:0]),
        .S({ZERO_TIMEOUT0__138_carry__2_i_5_n_0,ZERO_TIMEOUT0__138_carry__2_i_6_n_0,ZERO_TIMEOUT0__138_carry__2_i_7_n_0,ZERO_TIMEOUT0__138_carry__2_i_8_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    ZERO_TIMEOUT0__138_carry__2_i_1
       (.I0(ZERO_TIMEOUT0__104_carry__1_n_5),
        .I1(ZERO_TIMEOUT1_n_85),
        .O(ZERO_TIMEOUT0__138_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    ZERO_TIMEOUT0__138_carry__2_i_2
       (.I0(ZERO_TIMEOUT0__104_carry__1_n_6),
        .I1(ZERO_TIMEOUT1_n_86),
        .O(ZERO_TIMEOUT0__138_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    ZERO_TIMEOUT0__138_carry__2_i_3
       (.I0(ZERO_TIMEOUT0__104_carry__1_n_7),
        .I1(ZERO_TIMEOUT1_n_87),
        .O(ZERO_TIMEOUT0__138_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    ZERO_TIMEOUT0__138_carry__2_i_4
       (.I0(ZERO_TIMEOUT0__104_carry__0_n_4),
        .I1(ZERO_TIMEOUT1_n_88),
        .O(ZERO_TIMEOUT0__138_carry__2_i_4_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    ZERO_TIMEOUT0__138_carry__2_i_5
       (.I0(ZERO_TIMEOUT1_n_85),
        .I1(ZERO_TIMEOUT0__104_carry__1_n_5),
        .I2(ZERO_TIMEOUT1_n_84),
        .I3(ZERO_TIMEOUT0__104_carry__1_n_4),
        .O(ZERO_TIMEOUT0__138_carry__2_i_5_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    ZERO_TIMEOUT0__138_carry__2_i_6
       (.I0(ZERO_TIMEOUT1_n_86),
        .I1(ZERO_TIMEOUT0__104_carry__1_n_6),
        .I2(ZERO_TIMEOUT1_n_85),
        .I3(ZERO_TIMEOUT0__104_carry__1_n_5),
        .O(ZERO_TIMEOUT0__138_carry__2_i_6_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    ZERO_TIMEOUT0__138_carry__2_i_7
       (.I0(ZERO_TIMEOUT1_n_87),
        .I1(ZERO_TIMEOUT0__104_carry__1_n_7),
        .I2(ZERO_TIMEOUT1_n_86),
        .I3(ZERO_TIMEOUT0__104_carry__1_n_6),
        .O(ZERO_TIMEOUT0__138_carry__2_i_7_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    ZERO_TIMEOUT0__138_carry__2_i_8
       (.I0(ZERO_TIMEOUT1_n_88),
        .I1(ZERO_TIMEOUT0__104_carry__0_n_4),
        .I2(ZERO_TIMEOUT1_n_87),
        .I3(ZERO_TIMEOUT0__104_carry__1_n_7),
        .O(ZERO_TIMEOUT0__138_carry__2_i_8_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    ZERO_TIMEOUT0__138_carry_i_1
       (.I0(ZERO_TIMEOUT0__66_carry_n_7),
        .I1(ZERO_TIMEOUT1_n_97),
        .O(ZERO_TIMEOUT0__138_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    ZERO_TIMEOUT0__138_carry_i_2
       (.I0(ZERO_TIMEOUT0_carry__4_n_6),
        .I1(ZERO_TIMEOUT1_n_98),
        .O(ZERO_TIMEOUT0__138_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    ZERO_TIMEOUT0__138_carry_i_3
       (.I0(ZERO_TIMEOUT0_carry__4_n_7),
        .I1(ZERO_TIMEOUT1_n_99),
        .O(ZERO_TIMEOUT0__138_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    ZERO_TIMEOUT0__138_carry_i_4
       (.I0(ZERO_TIMEOUT1_n_97),
        .I1(ZERO_TIMEOUT0__66_carry_n_7),
        .I2(ZERO_TIMEOUT0__66_carry_n_6),
        .I3(ZERO_TIMEOUT1_n_96),
        .O(ZERO_TIMEOUT0__138_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h4BB4)) 
    ZERO_TIMEOUT0__138_carry_i_5
       (.I0(ZERO_TIMEOUT1_n_98),
        .I1(ZERO_TIMEOUT0_carry__4_n_6),
        .I2(ZERO_TIMEOUT0__66_carry_n_7),
        .I3(ZERO_TIMEOUT1_n_97),
        .O(ZERO_TIMEOUT0__138_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    ZERO_TIMEOUT0__138_carry_i_6
       (.I0(ZERO_TIMEOUT1_n_99),
        .I1(ZERO_TIMEOUT0_carry__4_n_7),
        .I2(ZERO_TIMEOUT1_n_98),
        .I3(ZERO_TIMEOUT0_carry__4_n_6),
        .O(ZERO_TIMEOUT0__138_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    ZERO_TIMEOUT0__138_carry_i_7
       (.I0(ZERO_TIMEOUT1_n_99),
        .I1(ZERO_TIMEOUT0_carry__4_n_7),
        .O(ZERO_TIMEOUT0__138_carry_i_7_n_0));
  CARRY4 ZERO_TIMEOUT0__66_carry
       (.CI(1'b0),
        .CO({ZERO_TIMEOUT0__66_carry_n_0,ZERO_TIMEOUT0__66_carry_n_1,ZERO_TIMEOUT0__66_carry_n_2,ZERO_TIMEOUT0__66_carry_n_3}),
        .CYINIT(1'b0),
        .DI({ZERO_TIMEOUT0__66_carry_i_1_n_0,ZERO_TIMEOUT0__66_carry_i_2_n_0,ZERO_TIMEOUT0__66_carry_i_3_n_0,1'b0}),
        .O({ZERO_TIMEOUT0__66_carry_n_4,ZERO_TIMEOUT0__66_carry_n_5,ZERO_TIMEOUT0__66_carry_n_6,ZERO_TIMEOUT0__66_carry_n_7}),
        .S({ZERO_TIMEOUT0__66_carry_i_4_n_0,ZERO_TIMEOUT0__66_carry_i_5_n_0,ZERO_TIMEOUT0__66_carry_i_6_n_0,ZERO_TIMEOUT0__66_carry_i_7_n_0}));
  CARRY4 ZERO_TIMEOUT0__66_carry__0
       (.CI(ZERO_TIMEOUT0__66_carry_n_0),
        .CO({ZERO_TIMEOUT0__66_carry__0_n_0,ZERO_TIMEOUT0__66_carry__0_n_1,ZERO_TIMEOUT0__66_carry__0_n_2,ZERO_TIMEOUT0__66_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({ZERO_TIMEOUT0__66_carry__0_i_1_n_0,ZERO_TIMEOUT0__66_carry__0_i_2_n_0,ZERO_TIMEOUT0__66_carry__0_i_3_n_0,ZERO_TIMEOUT0__66_carry__0_i_4_n_0}),
        .O({ZERO_TIMEOUT0__66_carry__0_n_4,ZERO_TIMEOUT0__66_carry__0_n_5,ZERO_TIMEOUT0__66_carry__0_n_6,ZERO_TIMEOUT0__66_carry__0_n_7}),
        .S({ZERO_TIMEOUT0__66_carry__0_i_5_n_0,ZERO_TIMEOUT0__66_carry__0_i_6_n_0,ZERO_TIMEOUT0__66_carry__0_i_7_n_0,ZERO_TIMEOUT0__66_carry__0_i_8_n_0}));
  LUT3 #(
    .INIT(8'h8E)) 
    ZERO_TIMEOUT0__66_carry__0_i_1
       (.I0(ZERO_TIMEOUT0_carry__5_n_7),
        .I1(ZERO_TIMEOUT0_carry__6_n_7),
        .I2(ZERO_TIMEOUT0_carry__5_n_5),
        .O(ZERO_TIMEOUT0__66_carry__0_i_1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    ZERO_TIMEOUT0__66_carry__0_i_2
       (.I0(ZERO_TIMEOUT0_carry__5_n_4),
        .I1(ZERO_TIMEOUT0_carry__4_n_4),
        .I2(ZERO_TIMEOUT0_carry__5_n_6),
        .O(ZERO_TIMEOUT0__66_carry__0_i_2_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    ZERO_TIMEOUT0__66_carry__0_i_3
       (.I0(ZERO_TIMEOUT0_carry__5_n_5),
        .I1(ZERO_TIMEOUT0_carry__4_n_5),
        .I2(ZERO_TIMEOUT0_carry__5_n_7),
        .O(ZERO_TIMEOUT0__66_carry__0_i_3_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    ZERO_TIMEOUT0__66_carry__0_i_4
       (.I0(ZERO_TIMEOUT0_carry__4_n_6),
        .I1(ZERO_TIMEOUT0_carry__5_n_6),
        .I2(ZERO_TIMEOUT0_carry__4_n_4),
        .O(ZERO_TIMEOUT0__66_carry__0_i_4_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    ZERO_TIMEOUT0__66_carry__0_i_5
       (.I0(ZERO_TIMEOUT0_carry__5_n_5),
        .I1(ZERO_TIMEOUT0_carry__6_n_7),
        .I2(ZERO_TIMEOUT0_carry__5_n_7),
        .I3(ZERO_TIMEOUT0_carry__5_n_4),
        .I4(ZERO_TIMEOUT0_carry__5_n_6),
        .I5(ZERO_TIMEOUT0_carry__6_n_6),
        .O(ZERO_TIMEOUT0__66_carry__0_i_5_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    ZERO_TIMEOUT0__66_carry__0_i_6
       (.I0(ZERO_TIMEOUT0_carry__5_n_6),
        .I1(ZERO_TIMEOUT0_carry__4_n_4),
        .I2(ZERO_TIMEOUT0_carry__5_n_4),
        .I3(ZERO_TIMEOUT0_carry__5_n_7),
        .I4(ZERO_TIMEOUT0_carry__5_n_5),
        .I5(ZERO_TIMEOUT0_carry__6_n_7),
        .O(ZERO_TIMEOUT0__66_carry__0_i_6_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    ZERO_TIMEOUT0__66_carry__0_i_7
       (.I0(ZERO_TIMEOUT0_carry__5_n_7),
        .I1(ZERO_TIMEOUT0_carry__4_n_5),
        .I2(ZERO_TIMEOUT0_carry__5_n_5),
        .I3(ZERO_TIMEOUT0_carry__4_n_4),
        .I4(ZERO_TIMEOUT0_carry__5_n_6),
        .I5(ZERO_TIMEOUT0_carry__5_n_4),
        .O(ZERO_TIMEOUT0__66_carry__0_i_7_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    ZERO_TIMEOUT0__66_carry__0_i_8
       (.I0(ZERO_TIMEOUT0_carry__4_n_4),
        .I1(ZERO_TIMEOUT0_carry__5_n_6),
        .I2(ZERO_TIMEOUT0_carry__4_n_6),
        .I3(ZERO_TIMEOUT0_carry__5_n_7),
        .I4(ZERO_TIMEOUT0_carry__4_n_5),
        .I5(ZERO_TIMEOUT0_carry__5_n_5),
        .O(ZERO_TIMEOUT0__66_carry__0_i_8_n_0));
  CARRY4 ZERO_TIMEOUT0__66_carry__1
       (.CI(ZERO_TIMEOUT0__66_carry__0_n_0),
        .CO({ZERO_TIMEOUT0__66_carry__1_n_0,ZERO_TIMEOUT0__66_carry__1_n_1,ZERO_TIMEOUT0__66_carry__1_n_2,ZERO_TIMEOUT0__66_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({ZERO_TIMEOUT0_carry__6_n_7,ZERO_TIMEOUT0__66_carry__1_i_1_n_0,ZERO_TIMEOUT0__66_carry__1_i_2_n_0,ZERO_TIMEOUT0__66_carry__1_i_3_n_0}),
        .O({ZERO_TIMEOUT0__66_carry__1_n_4,ZERO_TIMEOUT0__66_carry__1_n_5,ZERO_TIMEOUT0__66_carry__1_n_6,ZERO_TIMEOUT0__66_carry__1_n_7}),
        .S({ZERO_TIMEOUT0__66_carry__1_i_4_n_0,ZERO_TIMEOUT0__66_carry__1_i_5_n_0,ZERO_TIMEOUT0__66_carry__1_i_6_n_0,ZERO_TIMEOUT0__66_carry__1_i_7_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    ZERO_TIMEOUT0__66_carry__1_i_1
       (.I0(ZERO_TIMEOUT0_carry__6_n_7),
        .O(ZERO_TIMEOUT0__66_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    ZERO_TIMEOUT0__66_carry__1_i_2
       (.I0(ZERO_TIMEOUT0_carry__5_n_5),
        .I1(ZERO_TIMEOUT0_carry__6_n_7),
        .O(ZERO_TIMEOUT0__66_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    ZERO_TIMEOUT0__66_carry__1_i_3
       (.I0(ZERO_TIMEOUT0_carry__5_n_5),
        .I1(ZERO_TIMEOUT0_carry__6_n_7),
        .O(ZERO_TIMEOUT0__66_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    ZERO_TIMEOUT0__66_carry__1_i_4
       (.I0(ZERO_TIMEOUT0_carry__6_n_7),
        .I1(ZERO_TIMEOUT0_carry__6_n_6),
        .O(ZERO_TIMEOUT0__66_carry__1_i_4_n_0));
  LUT3 #(
    .INIT(8'h4B)) 
    ZERO_TIMEOUT0__66_carry__1_i_5
       (.I0(ZERO_TIMEOUT0_carry__6_n_6),
        .I1(ZERO_TIMEOUT0_carry__5_n_4),
        .I2(ZERO_TIMEOUT0_carry__6_n_7),
        .O(ZERO_TIMEOUT0__66_carry__1_i_5_n_0));
  LUT4 #(
    .INIT(16'hD22D)) 
    ZERO_TIMEOUT0__66_carry__1_i_6
       (.I0(ZERO_TIMEOUT0_carry__5_n_5),
        .I1(ZERO_TIMEOUT0_carry__6_n_7),
        .I2(ZERO_TIMEOUT0_carry__5_n_4),
        .I3(ZERO_TIMEOUT0_carry__6_n_6),
        .O(ZERO_TIMEOUT0__66_carry__1_i_6_n_0));
  LUT5 #(
    .INIT(32'h4DB2B24D)) 
    ZERO_TIMEOUT0__66_carry__1_i_7
       (.I0(ZERO_TIMEOUT0_carry__5_n_6),
        .I1(ZERO_TIMEOUT0_carry__5_n_4),
        .I2(ZERO_TIMEOUT0_carry__6_n_6),
        .I3(ZERO_TIMEOUT0_carry__6_n_7),
        .I4(ZERO_TIMEOUT0_carry__5_n_5),
        .O(ZERO_TIMEOUT0__66_carry__1_i_7_n_0));
  CARRY4 ZERO_TIMEOUT0__66_carry__2
       (.CI(ZERO_TIMEOUT0__66_carry__1_n_0),
        .CO({NLW_ZERO_TIMEOUT0__66_carry__2_CO_UNCONNECTED[3:2],ZERO_TIMEOUT0__66_carry__2_n_2,NLW_ZERO_TIMEOUT0__66_carry__2_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,ZERO_TIMEOUT0_carry__6_n_6}),
        .O({NLW_ZERO_TIMEOUT0__66_carry__2_O_UNCONNECTED[3:1],ZERO_TIMEOUT0__66_carry__2_n_7}),
        .S({1'b0,1'b0,1'b1,ZERO_TIMEOUT0__66_carry__2_i_1_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    ZERO_TIMEOUT0__66_carry__2_i_1
       (.I0(ZERO_TIMEOUT0_carry__6_n_6),
        .O(ZERO_TIMEOUT0__66_carry__2_i_1_n_0));
  LUT3 #(
    .INIT(8'h8E)) 
    ZERO_TIMEOUT0__66_carry_i_1
       (.I0(ZERO_TIMEOUT0_carry__4_n_7),
        .I1(ZERO_TIMEOUT0_carry__5_n_7),
        .I2(ZERO_TIMEOUT0_carry__4_n_5),
        .O(ZERO_TIMEOUT0__66_carry_i_1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    ZERO_TIMEOUT0__66_carry_i_2
       (.I0(ZERO_TIMEOUT0_carry__4_n_7),
        .I1(ZERO_TIMEOUT0_carry__4_n_5),
        .I2(ZERO_TIMEOUT0_carry__5_n_7),
        .O(ZERO_TIMEOUT0__66_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    ZERO_TIMEOUT0__66_carry_i_3
       (.I0(ZERO_TIMEOUT0_carry__4_n_5),
        .I1(ZERO_TIMEOUT0_carry__4_n_7),
        .O(ZERO_TIMEOUT0__66_carry_i_3_n_0));
  LUT6 #(
    .INIT(64'hD42B2BD42BD4D42B)) 
    ZERO_TIMEOUT0__66_carry_i_4
       (.I0(ZERO_TIMEOUT0_carry__4_n_5),
        .I1(ZERO_TIMEOUT0_carry__5_n_7),
        .I2(ZERO_TIMEOUT0_carry__4_n_7),
        .I3(ZERO_TIMEOUT0_carry__4_n_6),
        .I4(ZERO_TIMEOUT0_carry__5_n_6),
        .I5(ZERO_TIMEOUT0_carry__4_n_4),
        .O(ZERO_TIMEOUT0__66_carry_i_4_n_0));
  LUT5 #(
    .INIT(32'h69966969)) 
    ZERO_TIMEOUT0__66_carry_i_5
       (.I0(ZERO_TIMEOUT0_carry__5_n_7),
        .I1(ZERO_TIMEOUT0_carry__4_n_5),
        .I2(ZERO_TIMEOUT0_carry__4_n_7),
        .I3(ZERO_TIMEOUT0_carry__4_n_6),
        .I4(ZERO_TIMEOUT0_carry__4_n_4),
        .O(ZERO_TIMEOUT0__66_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    ZERO_TIMEOUT0__66_carry_i_6
       (.I0(ZERO_TIMEOUT0_carry__4_n_7),
        .I1(ZERO_TIMEOUT0_carry__4_n_5),
        .I2(ZERO_TIMEOUT0_carry__4_n_6),
        .I3(ZERO_TIMEOUT0_carry__4_n_4),
        .O(ZERO_TIMEOUT0__66_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    ZERO_TIMEOUT0__66_carry_i_7
       (.I0(ZERO_TIMEOUT0_carry__4_n_5),
        .I1(ZERO_TIMEOUT0_carry__4_n_7),
        .O(ZERO_TIMEOUT0__66_carry_i_7_n_0));
  CARRY4 ZERO_TIMEOUT0_carry
       (.CI(1'b0),
        .CO({ZERO_TIMEOUT0_carry_n_0,ZERO_TIMEOUT0_carry_n_1,ZERO_TIMEOUT0_carry_n_2,ZERO_TIMEOUT0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({ZERO_TIMEOUT1_n_104,ZERO_TIMEOUT1_n_105,1'b0,1'b1}),
        .O(NLW_ZERO_TIMEOUT0_carry_O_UNCONNECTED[3:0]),
        .S({ZERO_TIMEOUT0_carry_i_1_n_0,ZERO_TIMEOUT0_carry_i_2_n_0,ZERO_TIMEOUT0_carry_i_3_n_0,ZERO_TIMEOUT1_n_105}));
  CARRY4 ZERO_TIMEOUT0_carry__0
       (.CI(ZERO_TIMEOUT0_carry_n_0),
        .CO({ZERO_TIMEOUT0_carry__0_n_0,ZERO_TIMEOUT0_carry__0_n_1,ZERO_TIMEOUT0_carry__0_n_2,ZERO_TIMEOUT0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({ZERO_TIMEOUT1_n_100,ZERO_TIMEOUT1_n_101,ZERO_TIMEOUT1_n_102,ZERO_TIMEOUT1_n_103}),
        .O(NLW_ZERO_TIMEOUT0_carry__0_O_UNCONNECTED[3:0]),
        .S({ZERO_TIMEOUT0_carry__0_i_1_n_0,ZERO_TIMEOUT0_carry__0_i_2_n_0,ZERO_TIMEOUT0_carry__0_i_3_n_0,ZERO_TIMEOUT0_carry__0_i_4_n_0}));
  LUT3 #(
    .INIT(8'h69)) 
    ZERO_TIMEOUT0_carry__0_i_1
       (.I0(ZERO_TIMEOUT1_n_98),
        .I1(ZERO_TIMEOUT1_n_105),
        .I2(ZERO_TIMEOUT1_n_100),
        .O(ZERO_TIMEOUT0_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    ZERO_TIMEOUT0_carry__0_i_2
       (.I0(ZERO_TIMEOUT1_n_101),
        .I1(ZERO_TIMEOUT1_n_99),
        .O(ZERO_TIMEOUT0_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    ZERO_TIMEOUT0_carry__0_i_3
       (.I0(ZERO_TIMEOUT1_n_102),
        .I1(ZERO_TIMEOUT1_n_100),
        .O(ZERO_TIMEOUT0_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    ZERO_TIMEOUT0_carry__0_i_4
       (.I0(ZERO_TIMEOUT1_n_103),
        .I1(ZERO_TIMEOUT1_n_101),
        .O(ZERO_TIMEOUT0_carry__0_i_4_n_0));
  CARRY4 ZERO_TIMEOUT0_carry__1
       (.CI(ZERO_TIMEOUT0_carry__0_n_0),
        .CO({ZERO_TIMEOUT0_carry__1_n_0,ZERO_TIMEOUT0_carry__1_n_1,ZERO_TIMEOUT0_carry__1_n_2,ZERO_TIMEOUT0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({ZERO_TIMEOUT0_carry__1_i_1_n_0,ZERO_TIMEOUT0_carry__1_i_2_n_0,ZERO_TIMEOUT0_carry__1_i_3_n_0,ZERO_TIMEOUT0_carry__1_i_4_n_0}),
        .O(NLW_ZERO_TIMEOUT0_carry__1_O_UNCONNECTED[3:0]),
        .S({ZERO_TIMEOUT0_carry__1_i_5_n_0,ZERO_TIMEOUT0_carry__1_i_6_n_0,ZERO_TIMEOUT0_carry__1_i_7_n_0,ZERO_TIMEOUT0_carry__1_i_8_n_0}));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0_carry__1_i_1
       (.I0(ZERO_TIMEOUT1_n_102),
        .I1(ZERO_TIMEOUT1_n_95),
        .I2(ZERO_TIMEOUT1_n_97),
        .O(ZERO_TIMEOUT0_carry__1_i_1_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0_carry__1_i_2
       (.I0(ZERO_TIMEOUT1_n_103),
        .I1(ZERO_TIMEOUT1_n_96),
        .I2(ZERO_TIMEOUT1_n_98),
        .O(ZERO_TIMEOUT0_carry__1_i_2_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0_carry__1_i_3
       (.I0(ZERO_TIMEOUT1_n_104),
        .I1(ZERO_TIMEOUT1_n_97),
        .I2(ZERO_TIMEOUT1_n_99),
        .O(ZERO_TIMEOUT0_carry__1_i_3_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    ZERO_TIMEOUT0_carry__1_i_4
       (.I0(ZERO_TIMEOUT1_n_97),
        .I1(ZERO_TIMEOUT1_n_99),
        .I2(ZERO_TIMEOUT1_n_104),
        .O(ZERO_TIMEOUT0_carry__1_i_4_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0_carry__1_i_5
       (.I0(ZERO_TIMEOUT1_n_97),
        .I1(ZERO_TIMEOUT1_n_95),
        .I2(ZERO_TIMEOUT1_n_102),
        .I3(ZERO_TIMEOUT1_n_101),
        .I4(ZERO_TIMEOUT1_n_96),
        .I5(ZERO_TIMEOUT1_n_94),
        .O(ZERO_TIMEOUT0_carry__1_i_5_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0_carry__1_i_6
       (.I0(ZERO_TIMEOUT1_n_98),
        .I1(ZERO_TIMEOUT1_n_96),
        .I2(ZERO_TIMEOUT1_n_103),
        .I3(ZERO_TIMEOUT1_n_102),
        .I4(ZERO_TIMEOUT1_n_97),
        .I5(ZERO_TIMEOUT1_n_95),
        .O(ZERO_TIMEOUT0_carry__1_i_6_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0_carry__1_i_7
       (.I0(ZERO_TIMEOUT1_n_99),
        .I1(ZERO_TIMEOUT1_n_97),
        .I2(ZERO_TIMEOUT1_n_104),
        .I3(ZERO_TIMEOUT1_n_103),
        .I4(ZERO_TIMEOUT1_n_98),
        .I5(ZERO_TIMEOUT1_n_96),
        .O(ZERO_TIMEOUT0_carry__1_i_7_n_0));
  LUT5 #(
    .INIT(32'h69966969)) 
    ZERO_TIMEOUT0_carry__1_i_8
       (.I0(ZERO_TIMEOUT1_n_104),
        .I1(ZERO_TIMEOUT1_n_99),
        .I2(ZERO_TIMEOUT1_n_97),
        .I3(ZERO_TIMEOUT1_n_98),
        .I4(ZERO_TIMEOUT1_n_105),
        .O(ZERO_TIMEOUT0_carry__1_i_8_n_0));
  CARRY4 ZERO_TIMEOUT0_carry__2
       (.CI(ZERO_TIMEOUT0_carry__1_n_0),
        .CO({ZERO_TIMEOUT0_carry__2_n_0,ZERO_TIMEOUT0_carry__2_n_1,ZERO_TIMEOUT0_carry__2_n_2,ZERO_TIMEOUT0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({ZERO_TIMEOUT0_carry__2_i_1_n_0,ZERO_TIMEOUT0_carry__2_i_2_n_0,ZERO_TIMEOUT0_carry__2_i_3_n_0,ZERO_TIMEOUT0_carry__2_i_4_n_0}),
        .O(NLW_ZERO_TIMEOUT0_carry__2_O_UNCONNECTED[3:0]),
        .S({ZERO_TIMEOUT0_carry__2_i_5_n_0,ZERO_TIMEOUT0_carry__2_i_6_n_0,ZERO_TIMEOUT0_carry__2_i_7_n_0,ZERO_TIMEOUT0_carry__2_i_8_n_0}));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0_carry__2_i_1
       (.I0(ZERO_TIMEOUT1_n_98),
        .I1(ZERO_TIMEOUT1_n_91),
        .I2(ZERO_TIMEOUT1_n_93),
        .O(ZERO_TIMEOUT0_carry__2_i_1_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0_carry__2_i_2
       (.I0(ZERO_TIMEOUT1_n_99),
        .I1(ZERO_TIMEOUT1_n_92),
        .I2(ZERO_TIMEOUT1_n_94),
        .O(ZERO_TIMEOUT0_carry__2_i_2_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0_carry__2_i_3
       (.I0(ZERO_TIMEOUT1_n_100),
        .I1(ZERO_TIMEOUT1_n_93),
        .I2(ZERO_TIMEOUT1_n_95),
        .O(ZERO_TIMEOUT0_carry__2_i_3_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0_carry__2_i_4
       (.I0(ZERO_TIMEOUT1_n_101),
        .I1(ZERO_TIMEOUT1_n_94),
        .I2(ZERO_TIMEOUT1_n_96),
        .O(ZERO_TIMEOUT0_carry__2_i_4_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0_carry__2_i_5
       (.I0(ZERO_TIMEOUT1_n_93),
        .I1(ZERO_TIMEOUT1_n_91),
        .I2(ZERO_TIMEOUT1_n_98),
        .I3(ZERO_TIMEOUT1_n_97),
        .I4(ZERO_TIMEOUT1_n_92),
        .I5(ZERO_TIMEOUT1_n_90),
        .O(ZERO_TIMEOUT0_carry__2_i_5_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0_carry__2_i_6
       (.I0(ZERO_TIMEOUT1_n_94),
        .I1(ZERO_TIMEOUT1_n_92),
        .I2(ZERO_TIMEOUT1_n_99),
        .I3(ZERO_TIMEOUT1_n_98),
        .I4(ZERO_TIMEOUT1_n_93),
        .I5(ZERO_TIMEOUT1_n_91),
        .O(ZERO_TIMEOUT0_carry__2_i_6_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0_carry__2_i_7
       (.I0(ZERO_TIMEOUT1_n_95),
        .I1(ZERO_TIMEOUT1_n_93),
        .I2(ZERO_TIMEOUT1_n_100),
        .I3(ZERO_TIMEOUT1_n_99),
        .I4(ZERO_TIMEOUT1_n_94),
        .I5(ZERO_TIMEOUT1_n_92),
        .O(ZERO_TIMEOUT0_carry__2_i_7_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0_carry__2_i_8
       (.I0(ZERO_TIMEOUT1_n_96),
        .I1(ZERO_TIMEOUT1_n_94),
        .I2(ZERO_TIMEOUT1_n_101),
        .I3(ZERO_TIMEOUT1_n_100),
        .I4(ZERO_TIMEOUT1_n_95),
        .I5(ZERO_TIMEOUT1_n_93),
        .O(ZERO_TIMEOUT0_carry__2_i_8_n_0));
  CARRY4 ZERO_TIMEOUT0_carry__3
       (.CI(ZERO_TIMEOUT0_carry__2_n_0),
        .CO({ZERO_TIMEOUT0_carry__3_n_0,ZERO_TIMEOUT0_carry__3_n_1,ZERO_TIMEOUT0_carry__3_n_2,ZERO_TIMEOUT0_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({ZERO_TIMEOUT0_carry__3_i_1_n_0,ZERO_TIMEOUT0_carry__3_i_2_n_0,ZERO_TIMEOUT0_carry__3_i_3_n_0,ZERO_TIMEOUT0_carry__3_i_4_n_0}),
        .O(NLW_ZERO_TIMEOUT0_carry__3_O_UNCONNECTED[3:0]),
        .S({ZERO_TIMEOUT0_carry__3_i_5_n_0,ZERO_TIMEOUT0_carry__3_i_6_n_0,ZERO_TIMEOUT0_carry__3_i_7_n_0,ZERO_TIMEOUT0_carry__3_i_8_n_0}));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0_carry__3_i_1
       (.I0(ZERO_TIMEOUT1_n_94),
        .I1(ZERO_TIMEOUT1_n_87),
        .I2(ZERO_TIMEOUT1_n_89),
        .O(ZERO_TIMEOUT0_carry__3_i_1_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0_carry__3_i_2
       (.I0(ZERO_TIMEOUT1_n_95),
        .I1(ZERO_TIMEOUT1_n_88),
        .I2(ZERO_TIMEOUT1_n_90),
        .O(ZERO_TIMEOUT0_carry__3_i_2_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0_carry__3_i_3
       (.I0(ZERO_TIMEOUT1_n_96),
        .I1(ZERO_TIMEOUT1_n_89),
        .I2(ZERO_TIMEOUT1_n_91),
        .O(ZERO_TIMEOUT0_carry__3_i_3_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0_carry__3_i_4
       (.I0(ZERO_TIMEOUT1_n_97),
        .I1(ZERO_TIMEOUT1_n_90),
        .I2(ZERO_TIMEOUT1_n_92),
        .O(ZERO_TIMEOUT0_carry__3_i_4_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0_carry__3_i_5
       (.I0(ZERO_TIMEOUT1_n_89),
        .I1(ZERO_TIMEOUT1_n_87),
        .I2(ZERO_TIMEOUT1_n_94),
        .I3(ZERO_TIMEOUT1_n_93),
        .I4(ZERO_TIMEOUT1_n_88),
        .I5(ZERO_TIMEOUT1_n_86),
        .O(ZERO_TIMEOUT0_carry__3_i_5_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0_carry__3_i_6
       (.I0(ZERO_TIMEOUT1_n_90),
        .I1(ZERO_TIMEOUT1_n_88),
        .I2(ZERO_TIMEOUT1_n_95),
        .I3(ZERO_TIMEOUT1_n_94),
        .I4(ZERO_TIMEOUT1_n_89),
        .I5(ZERO_TIMEOUT1_n_87),
        .O(ZERO_TIMEOUT0_carry__3_i_6_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0_carry__3_i_7
       (.I0(ZERO_TIMEOUT1_n_91),
        .I1(ZERO_TIMEOUT1_n_89),
        .I2(ZERO_TIMEOUT1_n_96),
        .I3(ZERO_TIMEOUT1_n_95),
        .I4(ZERO_TIMEOUT1_n_90),
        .I5(ZERO_TIMEOUT1_n_88),
        .O(ZERO_TIMEOUT0_carry__3_i_7_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0_carry__3_i_8
       (.I0(ZERO_TIMEOUT1_n_92),
        .I1(ZERO_TIMEOUT1_n_90),
        .I2(ZERO_TIMEOUT1_n_97),
        .I3(ZERO_TIMEOUT1_n_96),
        .I4(ZERO_TIMEOUT1_n_91),
        .I5(ZERO_TIMEOUT1_n_89),
        .O(ZERO_TIMEOUT0_carry__3_i_8_n_0));
  CARRY4 ZERO_TIMEOUT0_carry__4
       (.CI(ZERO_TIMEOUT0_carry__3_n_0),
        .CO({ZERO_TIMEOUT0_carry__4_n_0,ZERO_TIMEOUT0_carry__4_n_1,ZERO_TIMEOUT0_carry__4_n_2,ZERO_TIMEOUT0_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI({ZERO_TIMEOUT0_carry__4_i_1_n_0,ZERO_TIMEOUT0_carry__4_i_2_n_0,ZERO_TIMEOUT0_carry__4_i_3_n_0,ZERO_TIMEOUT0_carry__4_i_4_n_0}),
        .O({ZERO_TIMEOUT0_carry__4_n_4,ZERO_TIMEOUT0_carry__4_n_5,ZERO_TIMEOUT0_carry__4_n_6,ZERO_TIMEOUT0_carry__4_n_7}),
        .S({ZERO_TIMEOUT0_carry__4_i_5_n_0,ZERO_TIMEOUT0_carry__4_i_6_n_0,ZERO_TIMEOUT0_carry__4_i_7_n_0,ZERO_TIMEOUT0_carry__4_i_8_n_0}));
  LUT2 #(
    .INIT(4'hE)) 
    ZERO_TIMEOUT0_carry__4_i_1
       (.I0(ZERO_TIMEOUT1_n_85),
        .I1(ZERO_TIMEOUT1_n_90),
        .O(ZERO_TIMEOUT0_carry__4_i_1_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0_carry__4_i_2
       (.I0(ZERO_TIMEOUT1_n_91),
        .I1(ZERO_TIMEOUT1_n_84),
        .I2(ZERO_TIMEOUT1_n_86),
        .O(ZERO_TIMEOUT0_carry__4_i_2_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0_carry__4_i_3
       (.I0(ZERO_TIMEOUT1_n_92),
        .I1(ZERO_TIMEOUT1_n_85),
        .I2(ZERO_TIMEOUT1_n_87),
        .O(ZERO_TIMEOUT0_carry__4_i_3_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    ZERO_TIMEOUT0_carry__4_i_4
       (.I0(ZERO_TIMEOUT1_n_93),
        .I1(ZERO_TIMEOUT1_n_86),
        .I2(ZERO_TIMEOUT1_n_88),
        .O(ZERO_TIMEOUT0_carry__4_i_4_n_0));
  LUT4 #(
    .INIT(16'h1EE1)) 
    ZERO_TIMEOUT0_carry__4_i_5
       (.I0(ZERO_TIMEOUT1_n_90),
        .I1(ZERO_TIMEOUT1_n_85),
        .I2(ZERO_TIMEOUT1_n_84),
        .I3(ZERO_TIMEOUT1_n_89),
        .O(ZERO_TIMEOUT0_carry__4_i_5_n_0));
  LUT5 #(
    .INIT(32'h4DB2B24D)) 
    ZERO_TIMEOUT0_carry__4_i_6
       (.I0(ZERO_TIMEOUT1_n_86),
        .I1(ZERO_TIMEOUT1_n_84),
        .I2(ZERO_TIMEOUT1_n_91),
        .I3(ZERO_TIMEOUT1_n_85),
        .I4(ZERO_TIMEOUT1_n_90),
        .O(ZERO_TIMEOUT0_carry__4_i_6_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0_carry__4_i_7
       (.I0(ZERO_TIMEOUT1_n_87),
        .I1(ZERO_TIMEOUT1_n_85),
        .I2(ZERO_TIMEOUT1_n_92),
        .I3(ZERO_TIMEOUT1_n_91),
        .I4(ZERO_TIMEOUT1_n_86),
        .I5(ZERO_TIMEOUT1_n_84),
        .O(ZERO_TIMEOUT0_carry__4_i_7_n_0));
  LUT6 #(
    .INIT(64'hB24D4DB24DB2B24D)) 
    ZERO_TIMEOUT0_carry__4_i_8
       (.I0(ZERO_TIMEOUT1_n_88),
        .I1(ZERO_TIMEOUT1_n_86),
        .I2(ZERO_TIMEOUT1_n_93),
        .I3(ZERO_TIMEOUT1_n_92),
        .I4(ZERO_TIMEOUT1_n_87),
        .I5(ZERO_TIMEOUT1_n_85),
        .O(ZERO_TIMEOUT0_carry__4_i_8_n_0));
  CARRY4 ZERO_TIMEOUT0_carry__5
       (.CI(ZERO_TIMEOUT0_carry__4_n_0),
        .CO({ZERO_TIMEOUT0_carry__5_n_0,ZERO_TIMEOUT0_carry__5_n_1,ZERO_TIMEOUT0_carry__5_n_2,ZERO_TIMEOUT0_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI({ZERO_TIMEOUT1_n_86,ZERO_TIMEOUT1_n_87,ZERO_TIMEOUT1_n_88,ZERO_TIMEOUT0_carry__5_i_1_n_0}),
        .O({ZERO_TIMEOUT0_carry__5_n_4,ZERO_TIMEOUT0_carry__5_n_5,ZERO_TIMEOUT0_carry__5_n_6,ZERO_TIMEOUT0_carry__5_n_7}),
        .S({ZERO_TIMEOUT0_carry__5_i_2_n_0,ZERO_TIMEOUT0_carry__5_i_3_n_0,ZERO_TIMEOUT0_carry__5_i_4_n_0,ZERO_TIMEOUT0_carry__5_i_5_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    ZERO_TIMEOUT0_carry__5_i_1
       (.I0(ZERO_TIMEOUT1_n_88),
        .O(ZERO_TIMEOUT0_carry__5_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    ZERO_TIMEOUT0_carry__5_i_2
       (.I0(ZERO_TIMEOUT1_n_86),
        .I1(ZERO_TIMEOUT1_n_85),
        .O(ZERO_TIMEOUT0_carry__5_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    ZERO_TIMEOUT0_carry__5_i_3
       (.I0(ZERO_TIMEOUT1_n_87),
        .I1(ZERO_TIMEOUT1_n_86),
        .O(ZERO_TIMEOUT0_carry__5_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    ZERO_TIMEOUT0_carry__5_i_4
       (.I0(ZERO_TIMEOUT1_n_88),
        .I1(ZERO_TIMEOUT1_n_87),
        .O(ZERO_TIMEOUT0_carry__5_i_4_n_0));
  LUT3 #(
    .INIT(8'hE1)) 
    ZERO_TIMEOUT0_carry__5_i_5
       (.I0(ZERO_TIMEOUT1_n_89),
        .I1(ZERO_TIMEOUT1_n_84),
        .I2(ZERO_TIMEOUT1_n_88),
        .O(ZERO_TIMEOUT0_carry__5_i_5_n_0));
  CARRY4 ZERO_TIMEOUT0_carry__6
       (.CI(ZERO_TIMEOUT0_carry__5_n_0),
        .CO({NLW_ZERO_TIMEOUT0_carry__6_CO_UNCONNECTED[3:1],ZERO_TIMEOUT0_carry__6_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,ZERO_TIMEOUT1_n_85}),
        .O({NLW_ZERO_TIMEOUT0_carry__6_O_UNCONNECTED[3:2],ZERO_TIMEOUT0_carry__6_n_6,ZERO_TIMEOUT0_carry__6_n_7}),
        .S({1'b0,1'b0,ZERO_TIMEOUT0_carry__6_i_1_n_0,ZERO_TIMEOUT0_carry__6_i_2_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    ZERO_TIMEOUT0_carry__6_i_1
       (.I0(ZERO_TIMEOUT1_n_84),
        .O(ZERO_TIMEOUT0_carry__6_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    ZERO_TIMEOUT0_carry__6_i_2
       (.I0(ZERO_TIMEOUT1_n_85),
        .I1(ZERO_TIMEOUT1_n_84),
        .O(ZERO_TIMEOUT0_carry__6_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    ZERO_TIMEOUT0_carry_i_1
       (.I0(ZERO_TIMEOUT1_n_104),
        .I1(ZERO_TIMEOUT1_n_102),
        .O(ZERO_TIMEOUT0_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    ZERO_TIMEOUT0_carry_i_2
       (.I0(ZERO_TIMEOUT1_n_105),
        .I1(ZERO_TIMEOUT1_n_103),
        .O(ZERO_TIMEOUT0_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    ZERO_TIMEOUT0_carry_i_3
       (.I0(ZERO_TIMEOUT1_n_104),
        .O(ZERO_TIMEOUT0_carry_i_3_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-13 {cell *THIS*}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    ZERO_TIMEOUT1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b1}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_ZERO_TIMEOUT1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_ZERO_TIMEOUT1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_ZERO_TIMEOUT1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_ZERO_TIMEOUT1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_ZERO_TIMEOUT1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_ZERO_TIMEOUT1_OVERFLOW_UNCONNECTED),
        .P({NLW_ZERO_TIMEOUT1_P_UNCONNECTED[47:22],ZERO_TIMEOUT1_n_84,ZERO_TIMEOUT1_n_85,ZERO_TIMEOUT1_n_86,ZERO_TIMEOUT1_n_87,ZERO_TIMEOUT1_n_88,ZERO_TIMEOUT1_n_89,ZERO_TIMEOUT1_n_90,ZERO_TIMEOUT1_n_91,ZERO_TIMEOUT1_n_92,ZERO_TIMEOUT1_n_93,ZERO_TIMEOUT1_n_94,ZERO_TIMEOUT1_n_95,ZERO_TIMEOUT1_n_96,ZERO_TIMEOUT1_n_97,ZERO_TIMEOUT1_n_98,ZERO_TIMEOUT1_n_99,ZERO_TIMEOUT1_n_100,ZERO_TIMEOUT1_n_101,ZERO_TIMEOUT1_n_102,ZERO_TIMEOUT1_n_103,ZERO_TIMEOUT1_n_104,ZERO_TIMEOUT1_n_105}),
        .PATTERNBDETECT(NLW_ZERO_TIMEOUT1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_ZERO_TIMEOUT1_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_ZERO_TIMEOUT1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_ZERO_TIMEOUT1_UNDERFLOW_UNCONNECTED));
  LUT6 #(
    .INIT(64'h00AE00AE000000AE)) 
    dl_txrequesths_posedge_r_i_1
       (.I0(dl_txrequesths_posedge_r_reg_n_0),
        .I1(dl0_txrequesths),
        .I2(dl_txrequesths_r),
        .I3(en_hs_datapath_r_reg_0),
        .I4(dl_tx_state[0]),
        .I5(dl_tx_state[1]),
        .O(dl_txrequesths_posedge_r_i_1_n_0));
  FDRE dl_txrequesths_posedge_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl_txrequesths_posedge_r_i_1_n_0),
        .Q(dl_txrequesths_posedge_r_reg_n_0),
        .R(1'b0));
  FDRE dl_txrequesths_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl0_txrequesths),
        .Q(dl_txrequesths_r),
        .R(en_hs_datapath_r_reg_0));
  LUT6 #(
    .INIT(64'h00AE00AE000000AE)) 
    en_hs_datapath_posedge_r_i_1
       (.I0(en_hs_datapath_posedge_r),
        .I1(out),
        .I2(en_hs_datapath_r),
        .I3(en_hs_datapath_r_reg_0),
        .I4(dl_tx_state[0]),
        .I5(dl_tx_state[1]),
        .O(en_hs_datapath_posedge_r_i_1_n_0));
  FDRE en_hs_datapath_posedge_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(en_hs_datapath_posedge_r_i_1_n_0),
        .Q(en_hs_datapath_posedge_r),
        .R(1'b0));
  FDRE en_hs_datapath_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(out),
        .Q(en_hs_datapath_r),
        .R(en_hs_datapath_r_reg_0));
  LUT4 #(
    .INIT(16'hC8FF)) 
    hs_xfer_done_i_1
       (.I0(hs_xfer_done_i),
        .I1(out),
        .I2(time_out_trail),
        .I3(hs_xfer_done_reg_0),
        .O(hs_xfer_done_i_1_n_0));
  FDRE hs_xfer_done_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(hs_xfer_done_i_1_n_0),
        .Q(hs_xfer_done_i),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000092)) 
    i__carry_i_1
       (.I0(zero_count_reg[9]),
        .I1(ZERO_TIMEOUT0_carry__6_n_6),
        .I2(i__carry_i_5_n_0),
        .I3(zero_count_reg[10]),
        .I4(zero_count_reg[11]),
        .I5(i__carry_i_6_n_0),
        .O(i__carry_i_1_n_0));
  LUT6 #(
    .INIT(64'hACA0A0ACAAAAAAAA)) 
    i__carry_i_10
       (.I0(i__carry_i_20_n_0),
        .I1(i__carry_i_21_n_0),
        .I2(i__carry_i_19_n_0),
        .I3(zero_count_reg[5]),
        .I4(ZERO_TIMEOUT0_carry__5_n_6),
        .I5(i__carry_i_13_n_0),
        .O(i__carry_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT5 #(
    .INIT(32'h000088A8)) 
    i__carry_i_11
       (.I0(zero_count_reg[0]),
        .I1(ZERO_TIMEOUT0__138_carry__2_n_0),
        .I2(ZERO_TIMEOUT0__104_carry__1_n_4),
        .I3(ZERO_TIMEOUT1_n_84),
        .I4(ZERO_TIMEOUT0_carry__4_n_7),
        .O(i__carry_i_11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT5 #(
    .INIT(32'h559A0045)) 
    i__carry_i_12
       (.I0(zero_count_reg[0]),
        .I1(ZERO_TIMEOUT1_n_84),
        .I2(ZERO_TIMEOUT0__104_carry__1_n_4),
        .I3(ZERO_TIMEOUT0__138_carry__2_n_0),
        .I4(ZERO_TIMEOUT0_carry__4_n_7),
        .O(i__carry_i_12_n_0));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'hAAEF)) 
    i__carry_i_13
       (.I0(ZERO_TIMEOUT0_carry__4_n_7),
        .I1(ZERO_TIMEOUT1_n_84),
        .I2(ZERO_TIMEOUT0__104_carry__1_n_4),
        .I3(ZERO_TIMEOUT0__138_carry__2_n_0),
        .O(i__carry_i_13_n_0));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    i__carry_i_14
       (.I0(ZERO_TIMEOUT0_carry__5_n_7),
        .I1(ZERO_TIMEOUT0_carry__4_n_5),
        .I2(ZERO_TIMEOUT0_carry__4_n_6),
        .I3(ZERO_TIMEOUT0_carry__4_n_4),
        .I4(ZERO_TIMEOUT0_carry__5_n_6),
        .O(i__carry_i_14_n_0));
  LUT6 #(
    .INIT(64'h0400000000000000)) 
    i__carry_i_15
       (.I0(zero_count_reg[9]),
        .I1(ZERO_TIMEOUT0_carry__6_n_6),
        .I2(zero_count_reg[11]),
        .I3(ZERO_TIMEOUT0_carry__5_n_4),
        .I4(ZERO_TIMEOUT0_carry__6_n_7),
        .I5(ZERO_TIMEOUT0_carry__5_n_5),
        .O(i__carry_i_15_n_0));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'hAE)) 
    i__carry_i_16
       (.I0(ZERO_TIMEOUT0__138_carry__2_n_0),
        .I1(ZERO_TIMEOUT0__104_carry__1_n_4),
        .I2(ZERO_TIMEOUT1_n_84),
        .O(i__carry_i_16_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_17
       (.I0(zero_count_reg[8]),
        .I1(ZERO_TIMEOUT0_carry__6_n_7),
        .I2(zero_count_reg[7]),
        .I3(ZERO_TIMEOUT0_carry__5_n_4),
        .I4(ZERO_TIMEOUT0_carry__5_n_5),
        .I5(zero_count_reg[6]),
        .O(i__carry_i_17_n_0));
  LUT4 #(
    .INIT(16'h0290)) 
    i__carry_i_18
       (.I0(zero_count_reg[7]),
        .I1(ZERO_TIMEOUT0_carry__5_n_4),
        .I2(zero_count_reg[6]),
        .I3(ZERO_TIMEOUT0_carry__5_n_5),
        .O(i__carry_i_18_n_0));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h7)) 
    i__carry_i_19
       (.I0(ZERO_TIMEOUT0_carry__4_n_5),
        .I1(ZERO_TIMEOUT0_carry__4_n_6),
        .O(i__carry_i_19_n_0));
  LUT4 #(
    .INIT(16'hFF02)) 
    i__carry_i_2
       (.I0(i__carry_i_7_n_0),
        .I1(zero_count_reg[6]),
        .I2(zero_count_reg[7]),
        .I3(i__carry_i_8_n_0),
        .O(i__carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_20
       (.I0(zero_count_reg[5]),
        .I1(ZERO_TIMEOUT0_carry__5_n_6),
        .I2(zero_count_reg[4]),
        .I3(ZERO_TIMEOUT0_carry__5_n_7),
        .I4(ZERO_TIMEOUT0_carry__4_n_4),
        .I5(zero_count_reg[3]),
        .O(i__carry_i_20_n_0));
  LUT4 #(
    .INIT(16'h0290)) 
    i__carry_i_21
       (.I0(zero_count_reg[4]),
        .I1(ZERO_TIMEOUT0_carry__5_n_7),
        .I2(zero_count_reg[3]),
        .I3(ZERO_TIMEOUT0_carry__4_n_4),
        .O(i__carry_i_21_n_0));
  LUT4 #(
    .INIT(16'hFF02)) 
    i__carry_i_3
       (.I0(i__carry_i_9_n_0),
        .I1(zero_count_reg[3]),
        .I2(zero_count_reg[4]),
        .I3(i__carry_i_10_n_0),
        .O(i__carry_i_3_n_0));
  LUT6 #(
    .INIT(64'h823CC38282000082)) 
    i__carry_i_4
       (.I0(i__carry_i_11_n_0),
        .I1(zero_count_reg[2]),
        .I2(ZERO_TIMEOUT0_carry__4_n_5),
        .I3(zero_count_reg[1]),
        .I4(ZERO_TIMEOUT0_carry__4_n_6),
        .I5(i__carry_i_12_n_0),
        .O(i__carry_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    i__carry_i_5
       (.I0(ZERO_TIMEOUT0_carry__5_n_4),
        .I1(ZERO_TIMEOUT0_carry__6_n_7),
        .I2(ZERO_TIMEOUT0_carry__5_n_5),
        .I3(i__carry_i_13_n_0),
        .I4(i__carry_i_14_n_0),
        .O(i__carry_i_5_n_0));
  LUT5 #(
    .INIT(32'h40040040)) 
    i__carry_i_6
       (.I0(i__carry_i_14_n_0),
        .I1(i__carry_i_15_n_0),
        .I2(ZERO_TIMEOUT0_carry__4_n_7),
        .I3(i__carry_i_16_n_0),
        .I4(zero_count_reg[10]),
        .O(i__carry_i_6_n_0));
  LUT6 #(
    .INIT(64'h0000000048000000)) 
    i__carry_i_7
       (.I0(zero_count_reg[8]),
        .I1(ZERO_TIMEOUT0_carry__5_n_4),
        .I2(ZERO_TIMEOUT0_carry__6_n_7),
        .I3(ZERO_TIMEOUT0_carry__5_n_5),
        .I4(i__carry_i_13_n_0),
        .I5(i__carry_i_14_n_0),
        .O(i__carry_i_7_n_0));
  LUT6 #(
    .INIT(64'hAAC3AA00AAAAAAAA)) 
    i__carry_i_8
       (.I0(i__carry_i_17_n_0),
        .I1(ZERO_TIMEOUT0_carry__6_n_7),
        .I2(zero_count_reg[8]),
        .I3(i__carry_i_14_n_0),
        .I4(i__carry_i_18_n_0),
        .I5(i__carry_i_13_n_0),
        .O(i__carry_i_8_n_0));
  LUT6 #(
    .INIT(64'h0060000000000000)) 
    i__carry_i_9
       (.I0(zero_count_reg[5]),
        .I1(ZERO_TIMEOUT0_carry__5_n_6),
        .I2(ZERO_TIMEOUT0_carry__4_n_4),
        .I3(i__carry_i_19_n_0),
        .I4(ZERO_TIMEOUT0_carry__5_n_7),
        .I5(i__carry_i_13_n_0),
        .O(i__carry_i_9_n_0));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \pkt_cnt[0]_i_2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(dl0_txrequesths),
        .O(pkt_cnt0));
  CARRY4 time_out_trail0_carry
       (.CI(1'b0),
        .CO({time_out_trail0_carry_n_0,time_out_trail0_carry_n_1,time_out_trail0_carry_n_2,time_out_trail0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_time_out_trail0_carry_O_UNCONNECTED[3:0]),
        .S({time_out_trail0_carry_i_1_n_0,time_out_trail0_carry_i_2_n_0,time_out_trail0_carry_i_3_n_0,time_out_trail0_carry_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    time_out_trail0_carry_i_1
       (.I0(trail_count_reg[9]),
        .O(time_out_trail0_carry_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT5 #(
    .INIT(32'h41000041)) 
    time_out_trail0_carry_i_10
       (.I0(trail_count_reg[8]),
        .I1(trail_count_reg[7]),
        .I2(TRAIL_TIMEOUT0_carry__5_n_4),
        .I3(TRAIL_TIMEOUT0_carry__5_n_5),
        .I4(trail_count_reg[6]),
        .O(time_out_trail0_carry_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT5 #(
    .INIT(32'h00004800)) 
    time_out_trail0_carry_i_11
       (.I0(trail_count_reg[5]),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(TRAIL_TIMEOUT0_carry__5_n_6),
        .I3(TRAIL_TIMEOUT0_carry__4_n_4),
        .I4(time_out_trail0_carry_i_18_n_0),
        .O(time_out_trail0_carry_i_11_n_0));
  LUT6 #(
    .INIT(64'hACA0A0ACAAAAAAAA)) 
    time_out_trail0_carry_i_12
       (.I0(time_out_trail0_carry_i_19_n_0),
        .I1(time_out_trail0_carry_i_20_n_0),
        .I2(time_out_trail0_carry_i_7_n_0),
        .I3(trail_count_reg[5]),
        .I4(TRAIL_TIMEOUT0_carry__5_n_6),
        .I5(time_out_trail0_carry_i_8__2_n_0),
        .O(time_out_trail0_carry_i_12_n_0));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h7)) 
    time_out_trail0_carry_i_13
       (.I0(trail_count_reg[0]),
        .I1(trail_count_reg[1]),
        .O(time_out_trail0_carry_i_13_n_0));
  LUT6 #(
    .INIT(64'h00222200F00000F0)) 
    time_out_trail0_carry_i_14
       (.I0(time_out_trail0_carry_i_21_n_0),
        .I1(trail_count_reg[1]),
        .I2(time_out_trail0_carry_i_22_n_0),
        .I3(TRAIL_TIMEOUT0_carry__4_n_5),
        .I4(trail_count_reg[2]),
        .I5(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(time_out_trail0_carry_i_14_n_0));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    time_out_trail0_carry_i_15
       (.I0(trail_count_reg[6]),
        .I1(TRAIL_TIMEOUT0_carry__5_n_5),
        .I2(trail_count_reg[7]),
        .I3(TRAIL_TIMEOUT0_carry__5_n_4),
        .O(time_out_trail0_carry_i_15_n_0));
  LUT3 #(
    .INIT(8'hAE)) 
    time_out_trail0_carry_i_16
       (.I0(TRAIL_TIMEOUT0__120_carry__2_n_2),
        .I1(TRAIL_TIMEOUT0__92_carry__1_n_6),
        .I2(TRAIL_TIMEOUT1_n_86),
        .O(time_out_trail0_carry_i_16_n_0));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT5 #(
    .INIT(32'h02000002)) 
    time_out_trail0_carry_i_17
       (.I0(trail_count_reg[6]),
        .I1(TRAIL_TIMEOUT0_carry__5_n_5),
        .I2(trail_count_reg[8]),
        .I3(TRAIL_TIMEOUT0_carry__5_n_4),
        .I4(trail_count_reg[7]),
        .O(time_out_trail0_carry_i_17_n_0));
  LUT6 #(
    .INIT(64'h77777777F7F7FFF7)) 
    time_out_trail0_carry_i_18
       (.I0(TRAIL_TIMEOUT0_carry__4_n_6),
        .I1(TRAIL_TIMEOUT0_carry__4_n_5),
        .I2(TRAIL_TIMEOUT0__120_carry__2_n_2),
        .I3(TRAIL_TIMEOUT0__92_carry__1_n_6),
        .I4(TRAIL_TIMEOUT1_n_86),
        .I5(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(time_out_trail0_carry_i_18_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    time_out_trail0_carry_i_19
       (.I0(trail_count_reg[5]),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(trail_count_reg[4]),
        .I3(TRAIL_TIMEOUT0_carry__5_n_7),
        .I4(TRAIL_TIMEOUT0_carry__4_n_4),
        .I5(trail_count_reg[3]),
        .O(time_out_trail0_carry_i_19_n_0));
  LUT6 #(
    .INIT(64'hFFFFFEFF00000E0A)) 
    time_out_trail0_carry_i_2
       (.I0(time_out_trail0_carry_i_5_n_0),
        .I1(time_out_trail0_carry_i_6_n_0),
        .I2(time_out_trail0_carry_i_7_n_0),
        .I3(time_out_trail0_carry_i_8__2_n_0),
        .I4(time_out_trail0_carry_i_9_n_0),
        .I5(time_out_trail0_carry_i_10_n_0),
        .O(time_out_trail0_carry_i_2_n_0));
  LUT4 #(
    .INIT(16'h0290)) 
    time_out_trail0_carry_i_20
       (.I0(trail_count_reg[4]),
        .I1(TRAIL_TIMEOUT0_carry__5_n_7),
        .I2(trail_count_reg[3]),
        .I3(TRAIL_TIMEOUT0_carry__4_n_4),
        .O(time_out_trail0_carry_i_20_n_0));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT5 #(
    .INIT(32'h559A0045)) 
    time_out_trail0_carry_i_21
       (.I0(trail_count_reg[0]),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(TRAIL_TIMEOUT0__92_carry__1_n_6),
        .I3(TRAIL_TIMEOUT0__120_carry__2_n_2),
        .I4(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(time_out_trail0_carry_i_21_n_0));
  LUT6 #(
    .INIT(64'h2222828844442422)) 
    time_out_trail0_carry_i_22
       (.I0(trail_count_reg[1]),
        .I1(trail_count_reg[0]),
        .I2(TRAIL_TIMEOUT1_n_86),
        .I3(TRAIL_TIMEOUT0__92_carry__1_n_6),
        .I4(TRAIL_TIMEOUT0__120_carry__2_n_2),
        .I5(TRAIL_TIMEOUT0_carry__4_n_7),
        .O(time_out_trail0_carry_i_22_n_0));
  LUT4 #(
    .INIT(16'hFF02)) 
    time_out_trail0_carry_i_3
       (.I0(time_out_trail0_carry_i_11_n_0),
        .I1(trail_count_reg[3]),
        .I2(trail_count_reg[4]),
        .I3(time_out_trail0_carry_i_12_n_0),
        .O(time_out_trail0_carry_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00004010)) 
    time_out_trail0_carry_i_4
       (.I0(time_out_trail0_carry_i_13_n_0),
        .I1(TRAIL_TIMEOUT0_carry__4_n_5),
        .I2(TRAIL_TIMEOUT0_carry__4_n_6),
        .I3(trail_count_reg[2]),
        .I4(time_out_trail0_carry_i_8__2_n_0),
        .I5(time_out_trail0_carry_i_14_n_0),
        .O(time_out_trail0_carry_i_4_n_0));
  LUT5 #(
    .INIT(32'hF0FF8048)) 
    time_out_trail0_carry_i_5
       (.I0(trail_count_reg[8]),
        .I1(time_out_trail0_carry_i_15_n_0),
        .I2(TRAIL_TIMEOUT0_carry__4_n_7),
        .I3(time_out_trail0_carry_i_16_n_0),
        .I4(time_out_trail0_carry_i_17_n_0),
        .O(time_out_trail0_carry_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT5 #(
    .INIT(32'h00040000)) 
    time_out_trail0_carry_i_6
       (.I0(trail_count_reg[6]),
        .I1(trail_count_reg[7]),
        .I2(trail_count_reg[8]),
        .I3(TRAIL_TIMEOUT0_carry__5_n_4),
        .I4(TRAIL_TIMEOUT0_carry__5_n_5),
        .O(time_out_trail0_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    time_out_trail0_carry_i_7
       (.I0(TRAIL_TIMEOUT0_carry__4_n_5),
        .I1(TRAIL_TIMEOUT0_carry__4_n_6),
        .O(time_out_trail0_carry_i_7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'hAAEF)) 
    time_out_trail0_carry_i_8__2
       (.I0(TRAIL_TIMEOUT0_carry__4_n_7),
        .I1(TRAIL_TIMEOUT1_n_86),
        .I2(TRAIL_TIMEOUT0__92_carry__1_n_6),
        .I3(TRAIL_TIMEOUT0__120_carry__2_n_2),
        .O(time_out_trail0_carry_i_8__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    time_out_trail0_carry_i_9
       (.I0(TRAIL_TIMEOUT0_carry__4_n_4),
        .I1(TRAIL_TIMEOUT0_carry__5_n_6),
        .I2(TRAIL_TIMEOUT0_carry__5_n_7),
        .O(time_out_trail0_carry_i_9_n_0));
  LUT5 #(
    .INIT(32'h54505000)) 
    time_out_trail_i_1__0
       (.I0(en_hs_datapath_r_reg_0),
        .I1(time_out_trail0_carry_n_0),
        .I2(time_out_trail),
        .I3(dl_tx_state[1]),
        .I4(dl_tx_state[0]),
        .O(time_out_trail_i_1__0_n_0));
  FDRE time_out_trail_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(time_out_trail_i_1__0_n_0),
        .Q(time_out_trail),
        .R(1'b0));
  CARRY4 \time_out_zero0_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\time_out_zero0_inferred__0/i__carry_n_0 ,\time_out_zero0_inferred__0/i__carry_n_1 ,\time_out_zero0_inferred__0/i__carry_n_2 ,\time_out_zero0_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_time_out_zero0_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_1_n_0,i__carry_i_2_n_0,i__carry_i_3_n_0,i__carry_i_4_n_0}));
  LUT5 #(
    .INIT(32'h0000EAAA)) 
    time_out_zero_i_1__0
       (.I0(time_out_zero_reg_0),
        .I1(dl_txrequesths_posedge_r_reg_n_0),
        .I2(en_hs_datapath_posedge_r),
        .I3(\time_out_zero0_inferred__0/i__carry_n_0 ),
        .I4(time_out_zero0),
        .O(time_out_zero_i_1__0_n_0));
  FDRE time_out_zero_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(time_out_zero_i_1__0_n_0),
        .Q(time_out_zero_reg_0),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \trail_count[0]_i_1__0 
       (.I0(trail_count_reg[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \trail_count[1]_i_1__0 
       (.I0(trail_count_reg[0]),
        .I1(trail_count_reg[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \trail_count[2]_i_1__0 
       (.I0(trail_count_reg[1]),
        .I1(trail_count_reg[0]),
        .I2(trail_count_reg[2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \trail_count[3]_i_1__0 
       (.I0(trail_count_reg[2]),
        .I1(trail_count_reg[0]),
        .I2(trail_count_reg[1]),
        .I3(trail_count_reg[3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \trail_count[4]_i_1__0 
       (.I0(trail_count_reg[3]),
        .I1(trail_count_reg[1]),
        .I2(trail_count_reg[0]),
        .I3(trail_count_reg[2]),
        .I4(trail_count_reg[4]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \trail_count[5]_i_1__0 
       (.I0(trail_count_reg[4]),
        .I1(trail_count_reg[2]),
        .I2(trail_count_reg[0]),
        .I3(trail_count_reg[1]),
        .I4(trail_count_reg[3]),
        .I5(trail_count_reg[5]),
        .O(p_0_in[5]));
  LUT5 #(
    .INIT(32'hF7FF0800)) 
    \trail_count[6]_i_1__0 
       (.I0(trail_count_reg[5]),
        .I1(trail_count_reg[3]),
        .I2(\trail_count[7]_i_2_n_0 ),
        .I3(trail_count_reg[4]),
        .I4(trail_count_reg[6]),
        .O(p_0_in[6]));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \trail_count[7]_i_1__0 
       (.I0(trail_count_reg[6]),
        .I1(trail_count_reg[4]),
        .I2(\trail_count[7]_i_2_n_0 ),
        .I3(trail_count_reg[3]),
        .I4(trail_count_reg[5]),
        .I5(trail_count_reg[7]),
        .O(p_0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \trail_count[7]_i_2 
       (.I0(trail_count_reg[1]),
        .I1(trail_count_reg[0]),
        .I2(trail_count_reg[2]),
        .O(\trail_count[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'hDF20)) 
    \trail_count[8]_i_1__0 
       (.I0(trail_count_reg[7]),
        .I1(\trail_count[9]_i_4_n_0 ),
        .I2(trail_count_reg[6]),
        .I3(trail_count_reg[8]),
        .O(p_0_in[8]));
  LUT3 #(
    .INIT(8'hAB)) 
    \trail_count[9]_i_1__0 
       (.I0(en_hs_datapath_r_reg_0),
        .I1(dl_tx_state[1]),
        .I2(dl_tx_state[0]),
        .O(\trail_count[9]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \trail_count[9]_i_2__0 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[0]),
        .I2(time_out_trail0_carry_n_0),
        .O(\trail_count[9]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT5 #(
    .INIT(32'hF7FF0800)) 
    \trail_count[9]_i_3__0 
       (.I0(trail_count_reg[8]),
        .I1(trail_count_reg[6]),
        .I2(\trail_count[9]_i_4_n_0 ),
        .I3(trail_count_reg[7]),
        .I4(trail_count_reg[9]),
        .O(p_0_in[9]));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \trail_count[9]_i_4 
       (.I0(trail_count_reg[4]),
        .I1(trail_count_reg[2]),
        .I2(trail_count_reg[0]),
        .I3(trail_count_reg[1]),
        .I4(trail_count_reg[3]),
        .I5(trail_count_reg[5]),
        .O(\trail_count[9]_i_4_n_0 ));
  FDRE \trail_count_reg[0] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__0_n_0 ),
        .D(p_0_in[0]),
        .Q(trail_count_reg[0]),
        .R(\trail_count[9]_i_1__0_n_0 ));
  FDRE \trail_count_reg[1] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__0_n_0 ),
        .D(p_0_in[1]),
        .Q(trail_count_reg[1]),
        .R(\trail_count[9]_i_1__0_n_0 ));
  FDRE \trail_count_reg[2] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__0_n_0 ),
        .D(p_0_in[2]),
        .Q(trail_count_reg[2]),
        .R(\trail_count[9]_i_1__0_n_0 ));
  FDRE \trail_count_reg[3] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__0_n_0 ),
        .D(p_0_in[3]),
        .Q(trail_count_reg[3]),
        .R(\trail_count[9]_i_1__0_n_0 ));
  FDRE \trail_count_reg[4] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__0_n_0 ),
        .D(p_0_in[4]),
        .Q(trail_count_reg[4]),
        .R(\trail_count[9]_i_1__0_n_0 ));
  FDRE \trail_count_reg[5] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__0_n_0 ),
        .D(p_0_in[5]),
        .Q(trail_count_reg[5]),
        .R(\trail_count[9]_i_1__0_n_0 ));
  FDRE \trail_count_reg[6] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__0_n_0 ),
        .D(p_0_in[6]),
        .Q(trail_count_reg[6]),
        .R(\trail_count[9]_i_1__0_n_0 ));
  FDRE \trail_count_reg[7] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__0_n_0 ),
        .D(p_0_in[7]),
        .Q(trail_count_reg[7]),
        .R(\trail_count[9]_i_1__0_n_0 ));
  FDRE \trail_count_reg[8] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__0_n_0 ),
        .D(p_0_in[8]),
        .Q(trail_count_reg[8]),
        .R(\trail_count[9]_i_1__0_n_0 ));
  FDRE \trail_count_reg[9] 
       (.C(tx_div4_clk),
        .CE(\trail_count[9]_i_2__0_n_0 ),
        .D(p_0_in[9]),
        .Q(trail_count_reg[9]),
        .R(\trail_count[9]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'h4FFF)) 
    \zero_count[0]_i_1__0 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[1]),
        .I2(dl0_txrequesths),
        .I3(out),
        .O(time_out_zero0));
  LUT3 #(
    .INIT(8'h08)) 
    \zero_count[0]_i_2 
       (.I0(dl_txrequesths_posedge_r_reg_n_0),
        .I1(en_hs_datapath_posedge_r),
        .I2(\time_out_zero0_inferred__0/i__carry_n_0 ),
        .O(zero_count));
  LUT1 #(
    .INIT(2'h1)) 
    \zero_count[0]_i_4 
       (.I0(zero_count_reg[0]),
        .O(\zero_count[0]_i_4_n_0 ));
  FDRE \zero_count_reg[0] 
       (.C(tx_div4_clk),
        .CE(zero_count),
        .D(\zero_count_reg[0]_i_3_n_7 ),
        .Q(zero_count_reg[0]),
        .R(time_out_zero0));
  CARRY4 \zero_count_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\zero_count_reg[0]_i_3_n_0 ,\zero_count_reg[0]_i_3_n_1 ,\zero_count_reg[0]_i_3_n_2 ,\zero_count_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\zero_count_reg[0]_i_3_n_4 ,\zero_count_reg[0]_i_3_n_5 ,\zero_count_reg[0]_i_3_n_6 ,\zero_count_reg[0]_i_3_n_7 }),
        .S({zero_count_reg[3:1],\zero_count[0]_i_4_n_0 }));
  FDRE \zero_count_reg[10] 
       (.C(tx_div4_clk),
        .CE(zero_count),
        .D(\zero_count_reg[8]_i_1_n_5 ),
        .Q(zero_count_reg[10]),
        .R(time_out_zero0));
  FDRE \zero_count_reg[11] 
       (.C(tx_div4_clk),
        .CE(zero_count),
        .D(\zero_count_reg[8]_i_1_n_4 ),
        .Q(zero_count_reg[11]),
        .R(time_out_zero0));
  FDRE \zero_count_reg[1] 
       (.C(tx_div4_clk),
        .CE(zero_count),
        .D(\zero_count_reg[0]_i_3_n_6 ),
        .Q(zero_count_reg[1]),
        .R(time_out_zero0));
  FDRE \zero_count_reg[2] 
       (.C(tx_div4_clk),
        .CE(zero_count),
        .D(\zero_count_reg[0]_i_3_n_5 ),
        .Q(zero_count_reg[2]),
        .R(time_out_zero0));
  FDRE \zero_count_reg[3] 
       (.C(tx_div4_clk),
        .CE(zero_count),
        .D(\zero_count_reg[0]_i_3_n_4 ),
        .Q(zero_count_reg[3]),
        .R(time_out_zero0));
  FDRE \zero_count_reg[4] 
       (.C(tx_div4_clk),
        .CE(zero_count),
        .D(\zero_count_reg[4]_i_1_n_7 ),
        .Q(zero_count_reg[4]),
        .R(time_out_zero0));
  CARRY4 \zero_count_reg[4]_i_1 
       (.CI(\zero_count_reg[0]_i_3_n_0 ),
        .CO({\zero_count_reg[4]_i_1_n_0 ,\zero_count_reg[4]_i_1_n_1 ,\zero_count_reg[4]_i_1_n_2 ,\zero_count_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\zero_count_reg[4]_i_1_n_4 ,\zero_count_reg[4]_i_1_n_5 ,\zero_count_reg[4]_i_1_n_6 ,\zero_count_reg[4]_i_1_n_7 }),
        .S(zero_count_reg[7:4]));
  FDRE \zero_count_reg[5] 
       (.C(tx_div4_clk),
        .CE(zero_count),
        .D(\zero_count_reg[4]_i_1_n_6 ),
        .Q(zero_count_reg[5]),
        .R(time_out_zero0));
  FDRE \zero_count_reg[6] 
       (.C(tx_div4_clk),
        .CE(zero_count),
        .D(\zero_count_reg[4]_i_1_n_5 ),
        .Q(zero_count_reg[6]),
        .R(time_out_zero0));
  FDRE \zero_count_reg[7] 
       (.C(tx_div4_clk),
        .CE(zero_count),
        .D(\zero_count_reg[4]_i_1_n_4 ),
        .Q(zero_count_reg[7]),
        .R(time_out_zero0));
  FDRE \zero_count_reg[8] 
       (.C(tx_div4_clk),
        .CE(zero_count),
        .D(\zero_count_reg[8]_i_1_n_7 ),
        .Q(zero_count_reg[8]),
        .R(time_out_zero0));
  CARRY4 \zero_count_reg[8]_i_1 
       (.CI(\zero_count_reg[4]_i_1_n_0 ),
        .CO({\NLW_zero_count_reg[8]_i_1_CO_UNCONNECTED [3],\zero_count_reg[8]_i_1_n_1 ,\zero_count_reg[8]_i_1_n_2 ,\zero_count_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\zero_count_reg[8]_i_1_n_4 ,\zero_count_reg[8]_i_1_n_5 ,\zero_count_reg[8]_i_1_n_6 ,\zero_count_reg[8]_i_1_n_7 }),
        .S(zero_count_reg[11:8]));
  FDRE \zero_count_reg[9] 
       (.C(tx_div4_clk),
        .CE(zero_count),
        .D(\zero_count_reg[8]_i_1_n_6 ),
        .Q(zero_count_reg[9]),
        .R(time_out_zero0));
endmodule

(* C_DPHY_LANES = "4" *) (* C_EN_HS_OBUFTDS = "FALSE" *) (* DowngradeIPIdentifiedWarnings = "yes" *) 
(* MTBF_SYNC_STAGES = "3" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_ioi_7series
   (core_clk,
    clk_in,
    clk_in_phase_sft,
    clk_div_in,
    clk90_div_in,
    io_reset,
    clk_out_from_device,
    data_out_from_device,
    en_hs_tst,
    cl_tst_clk_in,
    dl_tst_clk_in,
    data_hs_txp,
    data_hs_txn,
    clk_hs_txp,
    clk_hs_txn);
  input core_clk;
  input clk_in;
  input clk_in_phase_sft;
  input clk_div_in;
  input clk90_div_in;
  input io_reset;
  input [7:0]clk_out_from_device;
  input [31:0]data_out_from_device;
  input [8:0]en_hs_tst;
  input cl_tst_clk_in;
  input dl_tst_clk_in;
  output [3:0]data_hs_txp;
  output [3:0]data_hs_txn;
  output clk_hs_txp;
  output clk_hs_txn;

  wire clk90_active_r1;
  wire clk90_active_r1_i_1_n_0;
  wire clk90_div_in;
  wire clk_active_r1;
  wire clk_active_r1_i_1_n_0;
  wire clk_div_in;
  wire clk_fwd_out;
  wire clk_hs_txn;
  wire clk_hs_txp;
  wire clk_in;
  wire clk_in_phase_sft;
  wire [7:0]clk_out_from_device;
  wire [3:0]data_hs_txn;
  wire [3:0]data_hs_txp;
  wire [31:0]data_out_from_device;
  wire data_out_to_pins_int_0;
  wire data_out_to_pins_int_1;
  wire data_out_to_pins_int_2;
  wire data_out_to_pins_int_3;
  wire io_rst90_2clks_r;
  wire io_rst90_2clks_r_i_1_n_0;
  wire io_rst_2clks_r;
  wire io_rst_2clks_r_i_1_n_0;
  wire NLW_clk_fwd_OFB_UNCONNECTED;
  wire NLW_clk_fwd_SHIFTOUT1_UNCONNECTED;
  wire NLW_clk_fwd_SHIFTOUT2_UNCONNECTED;
  wire NLW_clk_fwd_TBYTEOUT_UNCONNECTED;
  wire NLW_clk_fwd_TFB_UNCONNECTED;
  wire NLW_clk_fwd_TQ_UNCONNECTED;
  wire NLW_dl0_oserdese2_master_OFB_UNCONNECTED;
  wire NLW_dl0_oserdese2_master_SHIFTOUT1_UNCONNECTED;
  wire NLW_dl0_oserdese2_master_SHIFTOUT2_UNCONNECTED;
  wire NLW_dl0_oserdese2_master_TBYTEOUT_UNCONNECTED;
  wire NLW_dl0_oserdese2_master_TFB_UNCONNECTED;
  wire NLW_dl0_oserdese2_master_TQ_UNCONNECTED;
  wire \NLW_dl1_obufds_inst.dl1_oserdese2_master_OFB_UNCONNECTED ;
  wire \NLW_dl1_obufds_inst.dl1_oserdese2_master_SHIFTOUT1_UNCONNECTED ;
  wire \NLW_dl1_obufds_inst.dl1_oserdese2_master_SHIFTOUT2_UNCONNECTED ;
  wire \NLW_dl1_obufds_inst.dl1_oserdese2_master_TBYTEOUT_UNCONNECTED ;
  wire \NLW_dl1_obufds_inst.dl1_oserdese2_master_TFB_UNCONNECTED ;
  wire \NLW_dl1_obufds_inst.dl1_oserdese2_master_TQ_UNCONNECTED ;
  wire \NLW_dl2_obufds_inst.dl2_oserdese2_master_OFB_UNCONNECTED ;
  wire \NLW_dl2_obufds_inst.dl2_oserdese2_master_SHIFTOUT1_UNCONNECTED ;
  wire \NLW_dl2_obufds_inst.dl2_oserdese2_master_SHIFTOUT2_UNCONNECTED ;
  wire \NLW_dl2_obufds_inst.dl2_oserdese2_master_TBYTEOUT_UNCONNECTED ;
  wire \NLW_dl2_obufds_inst.dl2_oserdese2_master_TFB_UNCONNECTED ;
  wire \NLW_dl2_obufds_inst.dl2_oserdese2_master_TQ_UNCONNECTED ;
  wire \NLW_dl3_obufds_inst.dl3_oserdese2_master_OFB_UNCONNECTED ;
  wire \NLW_dl3_obufds_inst.dl3_oserdese2_master_SHIFTOUT1_UNCONNECTED ;
  wire \NLW_dl3_obufds_inst.dl3_oserdese2_master_SHIFTOUT2_UNCONNECTED ;
  wire \NLW_dl3_obufds_inst.dl3_oserdese2_master_TBYTEOUT_UNCONNECTED ;
  wire \NLW_dl3_obufds_inst.dl3_oserdese2_master_TFB_UNCONNECTED ;
  wire \NLW_dl3_obufds_inst.dl3_oserdese2_master_TQ_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'hE)) 
    clk90_active_r1_i_1
       (.I0(clk90_active_r1),
        .I1(io_rst90_2clks_r),
        .O(clk90_active_r1_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    clk90_active_r1_reg
       (.C(clk90_div_in),
        .CE(1'b1),
        .D(clk90_active_r1_i_1_n_0),
        .Q(clk90_active_r1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'hE)) 
    clk_active_r1_i_1
       (.I0(clk_active_r1),
        .I1(io_rst_2clks_r),
        .O(clk_active_r1_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    clk_active_r1_reg
       (.C(clk_div_in),
        .CE(1'b1),
        .D(clk_active_r1_i_1_n_0),
        .Q(clk_active_r1),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("SDR"),
    .DATA_WIDTH(4),
    .INIT_OQ(1'b0),
    .INIT_TQ(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("MASTER"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    clk_fwd
       (.CLK(clk_in),
        .CLKDIV(clk_div_in),
        .D1(1'b0),
        .D2(clk_out_from_device[1]),
        .D3(1'b0),
        .D4(clk_out_from_device[1]),
        .D5(1'b0),
        .D6(clk_out_from_device[1]),
        .D7(1'b0),
        .D8(clk_out_from_device[1]),
        .OCE(1'b1),
        .OFB(NLW_clk_fwd_OFB_UNCONNECTED),
        .OQ(clk_fwd_out),
        .RST(io_rst_2clks_r),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(NLW_clk_fwd_SHIFTOUT1_UNCONNECTED),
        .SHIFTOUT2(NLW_clk_fwd_SHIFTOUT2_UNCONNECTED),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_clk_fwd_TBYTEOUT_UNCONNECTED),
        .TCE(1'b0),
        .TFB(NLW_clk_fwd_TFB_UNCONNECTED),
        .TQ(NLW_clk_fwd_TQ_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("SDR"),
    .DATA_WIDTH(8),
    .INIT_OQ(1'b0),
    .INIT_TQ(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("MASTER"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    dl0_oserdese2_master
       (.CLK(clk_in_phase_sft),
        .CLKDIV(clk90_div_in),
        .D1(data_out_from_device[0]),
        .D2(data_out_from_device[1]),
        .D3(data_out_from_device[2]),
        .D4(data_out_from_device[3]),
        .D5(data_out_from_device[4]),
        .D6(data_out_from_device[5]),
        .D7(data_out_from_device[6]),
        .D8(data_out_from_device[7]),
        .OCE(1'b1),
        .OFB(NLW_dl0_oserdese2_master_OFB_UNCONNECTED),
        .OQ(data_out_to_pins_int_0),
        .RST(io_rst90_2clks_r),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(NLW_dl0_oserdese2_master_SHIFTOUT1_UNCONNECTED),
        .SHIFTOUT2(NLW_dl0_oserdese2_master_SHIFTOUT2_UNCONNECTED),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_dl0_oserdese2_master_TBYTEOUT_UNCONNECTED),
        .TCE(1'b0),
        .TFB(NLW_dl0_oserdese2_master_TFB_UNCONNECTED),
        .TQ(NLW_dl0_oserdese2_master_TQ_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("SDR"),
    .DATA_WIDTH(8),
    .INIT_OQ(1'b0),
    .INIT_TQ(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("MASTER"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    \dl1_obufds_inst.dl1_oserdese2_master 
       (.CLK(clk_in_phase_sft),
        .CLKDIV(clk90_div_in),
        .D1(data_out_from_device[8]),
        .D2(data_out_from_device[9]),
        .D3(data_out_from_device[10]),
        .D4(data_out_from_device[11]),
        .D5(data_out_from_device[12]),
        .D6(data_out_from_device[13]),
        .D7(data_out_from_device[14]),
        .D8(data_out_from_device[15]),
        .OCE(1'b1),
        .OFB(\NLW_dl1_obufds_inst.dl1_oserdese2_master_OFB_UNCONNECTED ),
        .OQ(data_out_to_pins_int_1),
        .RST(io_rst90_2clks_r),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(\NLW_dl1_obufds_inst.dl1_oserdese2_master_SHIFTOUT1_UNCONNECTED ),
        .SHIFTOUT2(\NLW_dl1_obufds_inst.dl1_oserdese2_master_SHIFTOUT2_UNCONNECTED ),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(\NLW_dl1_obufds_inst.dl1_oserdese2_master_TBYTEOUT_UNCONNECTED ),
        .TCE(1'b0),
        .TFB(\NLW_dl1_obufds_inst.dl1_oserdese2_master_TFB_UNCONNECTED ),
        .TQ(\NLW_dl1_obufds_inst.dl1_oserdese2_master_TQ_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* XILINX_LEGACY_PRIM = "OBUFDS" *) 
  OBUFDS #(
    .IOSTANDARD("DEFAULT")) 
    \dl1_obufds_inst.obufds_dl1_inst 
       (.I(data_out_to_pins_int_1),
        .O(data_hs_txp[1]),
        .OB(data_hs_txn[1]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("SDR"),
    .DATA_WIDTH(8),
    .INIT_OQ(1'b0),
    .INIT_TQ(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("MASTER"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    \dl2_obufds_inst.dl2_oserdese2_master 
       (.CLK(clk_in_phase_sft),
        .CLKDIV(clk90_div_in),
        .D1(data_out_from_device[16]),
        .D2(data_out_from_device[17]),
        .D3(data_out_from_device[18]),
        .D4(data_out_from_device[19]),
        .D5(data_out_from_device[20]),
        .D6(data_out_from_device[21]),
        .D7(data_out_from_device[22]),
        .D8(data_out_from_device[23]),
        .OCE(1'b1),
        .OFB(\NLW_dl2_obufds_inst.dl2_oserdese2_master_OFB_UNCONNECTED ),
        .OQ(data_out_to_pins_int_2),
        .RST(io_rst90_2clks_r),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(\NLW_dl2_obufds_inst.dl2_oserdese2_master_SHIFTOUT1_UNCONNECTED ),
        .SHIFTOUT2(\NLW_dl2_obufds_inst.dl2_oserdese2_master_SHIFTOUT2_UNCONNECTED ),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(\NLW_dl2_obufds_inst.dl2_oserdese2_master_TBYTEOUT_UNCONNECTED ),
        .TCE(1'b0),
        .TFB(\NLW_dl2_obufds_inst.dl2_oserdese2_master_TFB_UNCONNECTED ),
        .TQ(\NLW_dl2_obufds_inst.dl2_oserdese2_master_TQ_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* XILINX_LEGACY_PRIM = "OBUFDS" *) 
  OBUFDS #(
    .IOSTANDARD("DEFAULT")) 
    \dl2_obufds_inst.obufds_dl2_inst 
       (.I(data_out_to_pins_int_2),
        .O(data_hs_txp[2]),
        .OB(data_hs_txn[2]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("SDR"),
    .DATA_WIDTH(8),
    .INIT_OQ(1'b0),
    .INIT_TQ(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("MASTER"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    \dl3_obufds_inst.dl3_oserdese2_master 
       (.CLK(clk_in_phase_sft),
        .CLKDIV(clk90_div_in),
        .D1(data_out_from_device[24]),
        .D2(data_out_from_device[25]),
        .D3(data_out_from_device[26]),
        .D4(data_out_from_device[27]),
        .D5(data_out_from_device[28]),
        .D6(data_out_from_device[29]),
        .D7(data_out_from_device[30]),
        .D8(data_out_from_device[31]),
        .OCE(1'b1),
        .OFB(\NLW_dl3_obufds_inst.dl3_oserdese2_master_OFB_UNCONNECTED ),
        .OQ(data_out_to_pins_int_3),
        .RST(io_rst90_2clks_r),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(\NLW_dl3_obufds_inst.dl3_oserdese2_master_SHIFTOUT1_UNCONNECTED ),
        .SHIFTOUT2(\NLW_dl3_obufds_inst.dl3_oserdese2_master_SHIFTOUT2_UNCONNECTED ),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(\NLW_dl3_obufds_inst.dl3_oserdese2_master_TBYTEOUT_UNCONNECTED ),
        .TCE(1'b0),
        .TFB(\NLW_dl3_obufds_inst.dl3_oserdese2_master_TFB_UNCONNECTED ),
        .TQ(\NLW_dl3_obufds_inst.dl3_oserdese2_master_TQ_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* XILINX_LEGACY_PRIM = "OBUFDS" *) 
  OBUFDS #(
    .IOSTANDARD("DEFAULT")) 
    \dl3_obufds_inst.obufds_dl3_inst 
       (.I(data_out_to_pins_int_3),
        .O(data_hs_txp[3]),
        .OB(data_hs_txn[3]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT1 #(
    .INIT(2'h1)) 
    io_rst90_2clks_r_i_1
       (.I0(clk90_active_r1),
        .O(io_rst90_2clks_r_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    io_rst90_2clks_r_reg
       (.C(clk90_div_in),
        .CE(1'b1),
        .D(io_rst90_2clks_r_i_1_n_0),
        .Q(io_rst90_2clks_r),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT1 #(
    .INIT(2'h1)) 
    io_rst_2clks_r_i_1
       (.I0(clk_active_r1),
        .O(io_rst_2clks_r_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    io_rst_2clks_r_reg
       (.C(clk_div_in),
        .CE(1'b1),
        .D(io_rst_2clks_r_i_1_n_0),
        .Q(io_rst_2clks_r),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* XILINX_LEGACY_PRIM = "OBUFDS" *) 
  OBUFDS #(
    .IOSTANDARD("DEFAULT")) 
    obufds_clk_inst
       (.I(clk_fwd_out),
        .O(clk_hs_txp),
        .OB(clk_hs_txn));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* XILINX_LEGACY_PRIM = "OBUFDS" *) 
  OBUFDS #(
    .IOSTANDARD("DEFAULT")) 
    obufds_dl0_inst
       (.I(data_out_to_pins_int_0),
        .O(data_hs_txp[0]),
        .OB(data_hs_txn[0]));
endmodule

(* ASSERT_ALL_RESETS = "3'b001" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* MMCM_USED = "TRUE" *) 
(* MTBF_SYNC_STAGES = "3" *) (* RELEASE_MMCM_RESET = "3'b010" *) (* RELEASE_TXPLL_RESET = "3'b011" *) 
(* RESET_FSM_DONE = "3'b101" *) (* RST_BEGIN = "3'b000" *) (* STABLE_CLK_PERIOD = "5.000000" *) 
(* TIME_OUT = "40000" *) (* TXPLL_USED = "TRUE" *) (* WAIT_FOR_ENABLE = "3'b100" *) 
(* WATCHDOG_TIMEOUT = "200000" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_rst_logic
   (core_clk,
    core_rst,
    srst,
    dphyen,
    mmcm_lock,
    txpll_lock,
    phy_rdy,
    mmcm_rst,
    txpll_rst,
    phy_rst,
    system_rst_div4clk,
    system_rst_byteclk,
    system_rst_escclk,
    system_rst);
  input core_clk;
  input core_rst;
  input srst;
  input dphyen;
  input mmcm_lock;
  input txpll_lock;
  input phy_rdy;
  output mmcm_rst;
  output txpll_rst;
  output phy_rst;
  (* dont_touch = "true" *) output system_rst_div4clk;
  (* dont_touch = "true" *) output system_rst_byteclk;
  (* dont_touch = "true" *) output system_rst_escclk;
  (* dont_touch = "true" *) output system_rst;

  wire \<const0> ;
  wire \FSM_sequential_rst_blk_state[0]_i_2_n_0 ;
  wire \FSM_sequential_rst_blk_state[0]_i_4_n_0 ;
  wire \FSM_sequential_rst_blk_state[1]_i_3_n_0 ;
  wire core_clk;
  wire core_rst;
  wire core_rst_sync;
  wire dphyen;
  wire mmcm_lock;
  wire mmcm_lock_sync;
  wire mmcm_lock_sync_i_n_1;
  wire mmcm_lock_sync_i_n_2;
  wire mmcm_lock_sync_i_n_3;
  wire mmcm_lock_sync_i_n_4;
  wire mmcm_lock_sync_i_n_5;
  wire mmcm_lock_sync_i_n_6;
  wire mmcm_lock_sync_i_n_7;
  wire mmcm_rst;
  wire reset_timer_r;
  wire [2:0]rst_blk_state__0;
  wire srst;
  (* DONT_TOUCH *) wire system_rst;
  (* DONT_TOUCH *) wire system_rst_byteclk;
  (* DONT_TOUCH *) wire system_rst_div4clk;
  (* DONT_TOUCH *) wire system_rst_escclk;
  wire system_rst_t_i_2_n_0;
  wire system_rst_t_i_6_n_0;
  wire system_rst_t_reg_n_0;
  wire time_out_counter;
  wire \time_out_counter[0]_i_3_n_0 ;
  wire \time_out_counter[0]_i_4_n_0 ;
  wire \time_out_counter[0]_i_5_n_0 ;
  wire [15:0]time_out_counter_reg;
  wire \time_out_counter_reg[0]_i_2_n_0 ;
  wire \time_out_counter_reg[0]_i_2_n_1 ;
  wire \time_out_counter_reg[0]_i_2_n_2 ;
  wire \time_out_counter_reg[0]_i_2_n_3 ;
  wire \time_out_counter_reg[0]_i_2_n_4 ;
  wire \time_out_counter_reg[0]_i_2_n_5 ;
  wire \time_out_counter_reg[0]_i_2_n_6 ;
  wire \time_out_counter_reg[0]_i_2_n_7 ;
  wire \time_out_counter_reg[12]_i_1_n_1 ;
  wire \time_out_counter_reg[12]_i_1_n_2 ;
  wire \time_out_counter_reg[12]_i_1_n_3 ;
  wire \time_out_counter_reg[12]_i_1_n_4 ;
  wire \time_out_counter_reg[12]_i_1_n_5 ;
  wire \time_out_counter_reg[12]_i_1_n_6 ;
  wire \time_out_counter_reg[12]_i_1_n_7 ;
  wire \time_out_counter_reg[4]_i_1_n_0 ;
  wire \time_out_counter_reg[4]_i_1_n_1 ;
  wire \time_out_counter_reg[4]_i_1_n_2 ;
  wire \time_out_counter_reg[4]_i_1_n_3 ;
  wire \time_out_counter_reg[4]_i_1_n_4 ;
  wire \time_out_counter_reg[4]_i_1_n_5 ;
  wire \time_out_counter_reg[4]_i_1_n_6 ;
  wire \time_out_counter_reg[4]_i_1_n_7 ;
  wire \time_out_counter_reg[8]_i_1_n_0 ;
  wire \time_out_counter_reg[8]_i_1_n_1 ;
  wire \time_out_counter_reg[8]_i_1_n_2 ;
  wire \time_out_counter_reg[8]_i_1_n_3 ;
  wire \time_out_counter_reg[8]_i_1_n_4 ;
  wire \time_out_counter_reg[8]_i_1_n_5 ;
  wire \time_out_counter_reg[8]_i_1_n_6 ;
  wire \time_out_counter_reg[8]_i_1_n_7 ;
  wire time_out_r_i_1_n_0;
  wire time_out_r_i_2_n_0;
  wire time_out_r_i_3_n_0;
  wire time_out_r_i_4_n_0;
  wire time_out_r_reg_n_0;
  wire txpll_lock_sync;
  wire txpll_lock_sync_i_n_1;
  wire txpll_lock_sync_i_n_2;
  wire txpll_lock_sync_i_n_3;
  wire txpll_rst;
  wire [3:3]\NLW_time_out_counter_reg[12]_i_1_CO_UNCONNECTED ;

  assign phy_rst = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'hAE00)) 
    \FSM_sequential_rst_blk_state[0]_i_2 
       (.I0(rst_blk_state__0[1]),
        .I1(srst),
        .I2(rst_blk_state__0[0]),
        .I3(dphyen),
        .O(\FSM_sequential_rst_blk_state[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \FSM_sequential_rst_blk_state[0]_i_4 
       (.I0(rst_blk_state__0[0]),
        .I1(srst),
        .I2(dphyen),
        .O(\FSM_sequential_rst_blk_state[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_rst_blk_state[1]_i_3 
       (.I0(srst),
        .I1(rst_blk_state__0[0]),
        .O(\FSM_sequential_rst_blk_state[1]_i_3_n_0 ));
  (* FSM_ENCODED_STATES = "RST_BEGIN:000,RELEASE_TXPLL_RESET:010,ASSERT_ALL_RESETS:011,RELEASE_MMCM_RESET:001,RESET_FSM_DONE:100,WAIT_FOR_ENABLE:101" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_rst_blk_state_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst_sync),
        .D(mmcm_lock_sync_i_n_3),
        .Q(rst_blk_state__0[0]));
  (* FSM_ENCODED_STATES = "RST_BEGIN:000,RELEASE_TXPLL_RESET:010,ASSERT_ALL_RESETS:011,RELEASE_MMCM_RESET:001,RESET_FSM_DONE:100,WAIT_FOR_ENABLE:101" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_rst_blk_state_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst_sync),
        .D(txpll_lock_sync_i_n_1),
        .Q(rst_blk_state__0[1]));
  (* FSM_ENCODED_STATES = "RST_BEGIN:000,RELEASE_TXPLL_RESET:010,ASSERT_ALL_RESETS:011,RELEASE_MMCM_RESET:001,RESET_FSM_DONE:100,WAIT_FOR_ENABLE:101" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_rst_blk_state_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst_sync),
        .D(mmcm_lock_sync_i_n_1),
        .Q(rst_blk_state__0[2]));
  GND GND
       (.G(\<const0> ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_119 core_rst_sync_i
       (.core_clk(core_clk),
        .core_rst(core_rst),
        .out(core_rst_sync));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_120 mmcm_lock_sync_i
       (.\FSM_sequential_rst_blk_state_reg[0] (mmcm_lock_sync_i_n_1),
        .\FSM_sequential_rst_blk_state_reg[0]_0 (mmcm_lock_sync_i_n_2),
        .\FSM_sequential_rst_blk_state_reg[0]_1 (\FSM_sequential_rst_blk_state[0]_i_2_n_0 ),
        .\FSM_sequential_rst_blk_state_reg[0]_2 (\FSM_sequential_rst_blk_state[0]_i_4_n_0 ),
        .\FSM_sequential_rst_blk_state_reg[2] (mmcm_lock_sync_i_n_3),
        .\FSM_sequential_rst_blk_state_reg[2]_0 (mmcm_lock_sync_i_n_4),
        .\FSM_sequential_rst_blk_state_reg[2]_1 (time_out_r_reg_n_0),
        .\FSM_sequential_rst_blk_state_reg[2]_2 (txpll_lock_sync),
        .core_clk(core_clk),
        .dphyen(dphyen),
        .mmcm_lock(mmcm_lock),
        .mmcm_rst(mmcm_rst),
        .mmcm_rst_reg(mmcm_lock_sync_i_n_6),
        .out(mmcm_lock_sync),
        .reset_timer_r(reset_timer_r),
        .rst_blk_state__0(rst_blk_state__0),
        .\s_level_out_bus_d3_reg[1] (mmcm_lock_sync_i_n_5),
        .\s_level_out_bus_d3_reg[1]_0 (mmcm_lock_sync_i_n_7),
        .srst(srst),
        .system_rst_t_reg(system_rst_t_i_6_n_0),
        .txpll_rst(txpll_rst),
        .txpll_rst_reg(txpll_lock_sync_i_n_2));
  FDPE mmcm_rst_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(mmcm_lock_sync_i_n_6),
        .PRE(core_rst_sync),
        .Q(mmcm_rst));
  FDPE reset_timer_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(mmcm_lock_sync_i_n_5),
        .PRE(core_rst_sync),
        .Q(reset_timer_r));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE system_rst_byteclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(system_rst_t_reg_n_0),
        .Q(system_rst_byteclk),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE system_rst_div4clk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(system_rst_t_reg_n_0),
        .Q(system_rst_div4clk),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE system_rst_escclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(system_rst_t_reg_n_0),
        .Q(system_rst_escclk),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE system_rst_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(system_rst_t_reg_n_0),
        .Q(system_rst),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    system_rst_t_i_2
       (.I0(rst_blk_state__0[1]),
        .I1(srst),
        .I2(dphyen),
        .O(system_rst_t_i_2_n_0));
  LUT4 #(
    .INIT(16'h15FF)) 
    system_rst_t_i_6
       (.I0(rst_blk_state__0[1]),
        .I1(srst),
        .I2(rst_blk_state__0[0]),
        .I3(dphyen),
        .O(system_rst_t_i_6_n_0));
  FDPE system_rst_t_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(txpll_lock_sync_i_n_3),
        .PRE(core_rst_sync),
        .Q(system_rst_t_reg_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \time_out_counter[0]_i_1 
       (.I0(time_out_counter_reg[1]),
        .I1(time_out_counter_reg[0]),
        .I2(time_out_counter_reg[3]),
        .I3(time_out_counter_reg[2]),
        .I4(\time_out_counter[0]_i_3_n_0 ),
        .I5(\time_out_counter[0]_i_4_n_0 ),
        .O(time_out_counter));
  LUT6 #(
    .INIT(64'hFFDFFFFFFFFFFFFF)) 
    \time_out_counter[0]_i_3 
       (.I0(time_out_counter_reg[15]),
        .I1(time_out_counter_reg[14]),
        .I2(time_out_counter_reg[12]),
        .I3(time_out_counter_reg[13]),
        .I4(time_out_counter_reg[11]),
        .I5(time_out_counter_reg[10]),
        .O(\time_out_counter[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFEF)) 
    \time_out_counter[0]_i_4 
       (.I0(time_out_counter_reg[8]),
        .I1(time_out_counter_reg[9]),
        .I2(time_out_counter_reg[6]),
        .I3(time_out_counter_reg[7]),
        .I4(time_out_counter_reg[5]),
        .I5(time_out_counter_reg[4]),
        .O(\time_out_counter[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \time_out_counter[0]_i_5 
       (.I0(time_out_counter_reg[0]),
        .O(\time_out_counter[0]_i_5_n_0 ));
  FDRE \time_out_counter_reg[0] 
       (.C(core_clk),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2_n_7 ),
        .Q(time_out_counter_reg[0]),
        .R(reset_timer_r));
  CARRY4 \time_out_counter_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\time_out_counter_reg[0]_i_2_n_0 ,\time_out_counter_reg[0]_i_2_n_1 ,\time_out_counter_reg[0]_i_2_n_2 ,\time_out_counter_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\time_out_counter_reg[0]_i_2_n_4 ,\time_out_counter_reg[0]_i_2_n_5 ,\time_out_counter_reg[0]_i_2_n_6 ,\time_out_counter_reg[0]_i_2_n_7 }),
        .S({time_out_counter_reg[3:1],\time_out_counter[0]_i_5_n_0 }));
  FDRE \time_out_counter_reg[10] 
       (.C(core_clk),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1_n_5 ),
        .Q(time_out_counter_reg[10]),
        .R(reset_timer_r));
  FDRE \time_out_counter_reg[11] 
       (.C(core_clk),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1_n_4 ),
        .Q(time_out_counter_reg[11]),
        .R(reset_timer_r));
  FDRE \time_out_counter_reg[12] 
       (.C(core_clk),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1_n_7 ),
        .Q(time_out_counter_reg[12]),
        .R(reset_timer_r));
  CARRY4 \time_out_counter_reg[12]_i_1 
       (.CI(\time_out_counter_reg[8]_i_1_n_0 ),
        .CO({\NLW_time_out_counter_reg[12]_i_1_CO_UNCONNECTED [3],\time_out_counter_reg[12]_i_1_n_1 ,\time_out_counter_reg[12]_i_1_n_2 ,\time_out_counter_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[12]_i_1_n_4 ,\time_out_counter_reg[12]_i_1_n_5 ,\time_out_counter_reg[12]_i_1_n_6 ,\time_out_counter_reg[12]_i_1_n_7 }),
        .S(time_out_counter_reg[15:12]));
  FDRE \time_out_counter_reg[13] 
       (.C(core_clk),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1_n_6 ),
        .Q(time_out_counter_reg[13]),
        .R(reset_timer_r));
  FDRE \time_out_counter_reg[14] 
       (.C(core_clk),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1_n_5 ),
        .Q(time_out_counter_reg[14]),
        .R(reset_timer_r));
  FDRE \time_out_counter_reg[15] 
       (.C(core_clk),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1_n_4 ),
        .Q(time_out_counter_reg[15]),
        .R(reset_timer_r));
  FDRE \time_out_counter_reg[1] 
       (.C(core_clk),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2_n_6 ),
        .Q(time_out_counter_reg[1]),
        .R(reset_timer_r));
  FDRE \time_out_counter_reg[2] 
       (.C(core_clk),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2_n_5 ),
        .Q(time_out_counter_reg[2]),
        .R(reset_timer_r));
  FDRE \time_out_counter_reg[3] 
       (.C(core_clk),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2_n_4 ),
        .Q(time_out_counter_reg[3]),
        .R(reset_timer_r));
  FDRE \time_out_counter_reg[4] 
       (.C(core_clk),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1_n_7 ),
        .Q(time_out_counter_reg[4]),
        .R(reset_timer_r));
  CARRY4 \time_out_counter_reg[4]_i_1 
       (.CI(\time_out_counter_reg[0]_i_2_n_0 ),
        .CO({\time_out_counter_reg[4]_i_1_n_0 ,\time_out_counter_reg[4]_i_1_n_1 ,\time_out_counter_reg[4]_i_1_n_2 ,\time_out_counter_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[4]_i_1_n_4 ,\time_out_counter_reg[4]_i_1_n_5 ,\time_out_counter_reg[4]_i_1_n_6 ,\time_out_counter_reg[4]_i_1_n_7 }),
        .S(time_out_counter_reg[7:4]));
  FDRE \time_out_counter_reg[5] 
       (.C(core_clk),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1_n_6 ),
        .Q(time_out_counter_reg[5]),
        .R(reset_timer_r));
  FDRE \time_out_counter_reg[6] 
       (.C(core_clk),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1_n_5 ),
        .Q(time_out_counter_reg[6]),
        .R(reset_timer_r));
  FDRE \time_out_counter_reg[7] 
       (.C(core_clk),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1_n_4 ),
        .Q(time_out_counter_reg[7]),
        .R(reset_timer_r));
  FDRE \time_out_counter_reg[8] 
       (.C(core_clk),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1_n_7 ),
        .Q(time_out_counter_reg[8]),
        .R(reset_timer_r));
  CARRY4 \time_out_counter_reg[8]_i_1 
       (.CI(\time_out_counter_reg[4]_i_1_n_0 ),
        .CO({\time_out_counter_reg[8]_i_1_n_0 ,\time_out_counter_reg[8]_i_1_n_1 ,\time_out_counter_reg[8]_i_1_n_2 ,\time_out_counter_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[8]_i_1_n_4 ,\time_out_counter_reg[8]_i_1_n_5 ,\time_out_counter_reg[8]_i_1_n_6 ,\time_out_counter_reg[8]_i_1_n_7 }),
        .S(time_out_counter_reg[11:8]));
  FDRE \time_out_counter_reg[9] 
       (.C(core_clk),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1_n_6 ),
        .Q(time_out_counter_reg[9]),
        .R(reset_timer_r));
  LUT5 #(
    .INIT(32'h0000EAAA)) 
    time_out_r_i_1
       (.I0(time_out_r_reg_n_0),
        .I1(time_out_r_i_2_n_0),
        .I2(time_out_r_i_3_n_0),
        .I3(time_out_r_i_4_n_0),
        .I4(reset_timer_r),
        .O(time_out_r_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    time_out_r_i_2
       (.I0(time_out_counter_reg[12]),
        .I1(time_out_counter_reg[13]),
        .I2(time_out_counter_reg[10]),
        .I3(time_out_counter_reg[11]),
        .I4(time_out_counter_reg[14]),
        .I5(time_out_counter_reg[15]),
        .O(time_out_r_i_2_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    time_out_r_i_3
       (.I0(time_out_counter_reg[1]),
        .I1(time_out_counter_reg[0]),
        .I2(time_out_counter_reg[3]),
        .I3(time_out_counter_reg[2]),
        .O(time_out_r_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    time_out_r_i_4
       (.I0(time_out_counter_reg[6]),
        .I1(time_out_counter_reg[7]),
        .I2(time_out_counter_reg[4]),
        .I3(time_out_counter_reg[5]),
        .I4(time_out_counter_reg[9]),
        .I5(time_out_counter_reg[8]),
        .O(time_out_r_i_4_n_0));
  FDRE time_out_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(time_out_r_i_1_n_0),
        .Q(time_out_r_reg_n_0),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_121 txpll_lock_sync_i
       (.\FSM_sequential_rst_blk_state_reg[1] (\FSM_sequential_rst_blk_state[1]_i_3_n_0 ),
        .\FSM_sequential_rst_blk_state_reg[1]_0 (mmcm_lock_sync_i_n_2),
        .\FSM_sequential_rst_blk_state_reg[2] (txpll_lock_sync_i_n_2),
        .\FSM_sequential_rst_blk_state_reg[2]_0 (txpll_lock_sync_i_n_3),
        .core_clk(core_clk),
        .dphyen(dphyen),
        .out(txpll_lock_sync),
        .rst_blk_state__0(rst_blk_state__0),
        .\s_level_out_bus_d3_reg[1] (txpll_lock_sync_i_n_1),
        .srst(srst),
        .system_rst_t_reg(time_out_r_reg_n_0),
        .system_rst_t_reg_0(system_rst_t_i_2_n_0),
        .system_rst_t_reg_1(mmcm_lock_sync_i_n_4),
        .system_rst_t_reg_2(system_rst_t_reg_n_0),
        .txpll_rst_reg(mmcm_lock_sync));
  FDPE txpll_rst_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(mmcm_lock_sync_i_n_7),
        .PRE(core_rst_sync),
        .Q(txpll_rst));
endmodule

(* c_init_val = "1'b1" *) (* c_mtbf_stages = "5'b00010" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_rst_sync
   (prmry_in,
    scndry_aclk,
    scndry_out);
  input prmry_in;
  input scndry_aclk;
  output scndry_out;

  wire prmry_in;
  wire scndry_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_mipi_dphy_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  assign scndry_out = stg3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_mipi_dphy_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(prmry_in),
        .Q(stg1_mipi_dphy_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(stg1_mipi_dphy_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_support_rst_logic
   (out,
    system_rst_reg_0,
    core_clk,
    system_rst_in,
    \cl_tx_state_reg[0] ,
    system_rst_reg_1,
    core_rst);
  output out;
  output system_rst_reg_0;
  input core_clk;
  input system_rst_in;
  input \cl_tx_state_reg[0] ;
  input [1:0]system_rst_reg_1;
  input core_rst;

  wire \cl_tx_state_reg[0] ;
  wire core_clk;
  wire core_rst;
  wire core_rst_sync;
  (* DONT_TOUCH *) wire out;
  wire phy_rdy_sync_i_n_0;
  wire phy_rdy_sync_i_n_1;
  wire phy_rdy_sync_i_n_2;
  wire phy_rdy_sync_i_n_3;
  wire phy_rdy_sync_i_n_4;
  wire phy_rdy_sync_i_n_5;
  wire phy_rdy_sync_i_n_6;
  wire [2:0]rst_blk_state__0;
  (* DONT_TOUCH *) wire system_rst_byteclk_reg_n_0;
  (* DONT_TOUCH *) wire system_rst_div4clk_reg_n_0;
  wire system_rst_escclk_i_2_n_0;
  (* DONT_TOUCH *) wire system_rst_escclk_reg_n_0;
  wire system_rst_in;
  wire system_rst_reg_0;
  wire [1:0]system_rst_reg_1;

  (* FSM_ENCODED_STATES = "RST_BEGIN:000,RELEASE_PHY_RESET:010,ASSERT_ALL_RESETS:001,RESET_FSM_DONE:011,CHECK_SRST:100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_rst_blk_state_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst_sync),
        .D(phy_rdy_sync_i_n_2),
        .Q(rst_blk_state__0[0]));
  (* FSM_ENCODED_STATES = "RST_BEGIN:000,RELEASE_PHY_RESET:010,ASSERT_ALL_RESETS:001,RESET_FSM_DONE:011,CHECK_SRST:100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_rst_blk_state_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst_sync),
        .D(phy_rdy_sync_i_n_1),
        .Q(rst_blk_state__0[1]));
  (* FSM_ENCODED_STATES = "RST_BEGIN:000,RELEASE_PHY_RESET:010,ASSERT_ALL_RESETS:001,RESET_FSM_DONE:011,CHECK_SRST:100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_rst_blk_state_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst_sync),
        .D(phy_rdy_sync_i_n_0),
        .Q(rst_blk_state__0[2]));
  LUT4 #(
    .INIT(16'hFFBF)) 
    \cl_tx_state[3]_i_5 
       (.I0(out),
        .I1(\cl_tx_state_reg[0] ),
        .I2(system_rst_reg_1[1]),
        .I3(core_rst),
        .O(system_rst_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell core_rst_sync_i
       (.core_clk(core_clk),
        .out(core_rst_sync),
        .system_rst_in(system_rst_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_7 phy_rdy_sync_i
       (.core_clk(core_clk),
        .out(system_rst_div4clk_reg_n_0),
        .rst_blk_state__0(rst_blk_state__0),
        .\s_level_out_bus_d3_reg[1] (phy_rdy_sync_i_n_0),
        .\s_level_out_bus_d3_reg[1]_0 (phy_rdy_sync_i_n_1),
        .\s_level_out_bus_d3_reg[1]_1 (phy_rdy_sync_i_n_2),
        .\s_level_out_bus_d3_reg[1]_2 (phy_rdy_sync_i_n_6),
        .system_rst_byteclk_reg(phy_rdy_sync_i_n_4),
        .system_rst_byteclk_reg_0(system_rst_byteclk_reg_n_0),
        .system_rst_div4clk_reg(phy_rdy_sync_i_n_3),
        .system_rst_div4clk_reg_0(system_rst_escclk_i_2_n_0),
        .system_rst_escclk_reg(phy_rdy_sync_i_n_5),
        .system_rst_escclk_reg_0(system_rst_escclk_reg_n_0),
        .system_rst_reg(system_rst_reg_1),
        .system_rst_reg_0(out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDPE system_rst_byteclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(phy_rdy_sync_i_n_4),
        .PRE(core_rst_sync),
        .Q(system_rst_byteclk_reg_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDPE system_rst_div4clk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(phy_rdy_sync_i_n_3),
        .PRE(core_rst_sync),
        .Q(system_rst_div4clk_reg_n_0));
  LUT5 #(
    .INIT(32'h2000FFFF)) 
    system_rst_escclk_i_2
       (.I0(system_rst_reg_1[0]),
        .I1(rst_blk_state__0[2]),
        .I2(rst_blk_state__0[0]),
        .I3(rst_blk_state__0[1]),
        .I4(system_rst_reg_1[1]),
        .O(system_rst_escclk_i_2_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDPE system_rst_escclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(phy_rdy_sync_i_n_5),
        .PRE(core_rst_sync),
        .Q(system_rst_escclk_reg_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDPE system_rst_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(phy_rdy_sync_i_n_6),
        .PRE(core_rst_sync),
        .Q(out));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell
   (out,
    system_rst_in,
    core_clk);
  output out;
  input system_rst_in;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst_in;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(system_rst_in),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_10
   (en_cal_hs_datapath_i,
    tx_div4_clk);
  input en_cal_hs_datapath_i;
  input tx_div4_clk;

  wire en_cal_hs_datapath_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(en_cal_hs_datapath_i),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_11
   (dl_status_reg,
    tx_div4_clk);
  input [0:0]dl_status_reg;
  input tx_div4_clk;

  wire [0:0]dl_status_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl_status_reg),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_111
   (out,
    SR,
    s_axi_aclk);
  output out;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_117
   (D,
    SR,
    cl_status_reg_w,
    s_axi_aclk,
    rd_req,
    Q,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2_2 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_2 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_3 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_5_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_5_1 );
  output [0:0]D;
  input [0:0]SR;
  input [0:0]cl_status_reg_w;
  input s_axi_aclk;
  input rd_req;
  input [4:0]Q;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3] ;
  input [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2_0 ;
  input [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2_1 ;
  input [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2_2 ;
  input [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_0 ;
  input [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_2 ;
  input [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_3 ;
  input [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_5_0 ;
  input [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_5_1 ;

  wire [0:0]D;
  wire [4:0]Q;
  wire [0:0]SR;
  wire [0:0]cl_status_reg_w;
  wire [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2_0 ;
  wire [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2_1 ;
  wire [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2_2 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_4_n_0 ;
  wire [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_5_0 ;
  wire [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_5_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_7_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3] ;
  wire [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_0 ;
  wire [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_2 ;
  wire [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_3 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_n_0 ;
  wire rd_req;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT5 #(
    .INIT(32'h0A8A0080)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2_n_0 ),
        .I2(Q[4]),
        .I3(Q[3]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_n_0 ),
        .O(D));
  LUT5 #(
    .INIT(32'h70FF7000)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(s_level_out_d3),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3] ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_4_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_4 
       (.I0(s_level_out_d3),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2_0 ),
        .I2(Q[1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2_1 ),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_2_2 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_5 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_7_n_0 ),
        .I1(Q[2]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_0 ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_1 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBBBBBB8888888)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_2 ),
        .I1(Q[2]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_3 ),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(s_level_out_d3),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_7 
       (.I0(s_level_out_d3),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_5_0 ),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_5_1 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_7_n_0 ));
  MUXF7 \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_5_n_0 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[3]_i_6_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[3]_i_3_n_0 ),
        .S(Q[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(cl_status_reg_w),
        .Q(s_level_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_119
   (out,
    core_rst,
    core_clk);
  output out;
  input core_rst;
  input core_clk;

  wire core_clk;
  wire core_rst;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(core_rst),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_120
   (out,
    \FSM_sequential_rst_blk_state_reg[0] ,
    \FSM_sequential_rst_blk_state_reg[0]_0 ,
    \FSM_sequential_rst_blk_state_reg[2] ,
    \FSM_sequential_rst_blk_state_reg[2]_0 ,
    \s_level_out_bus_d3_reg[1] ,
    mmcm_rst_reg,
    \s_level_out_bus_d3_reg[1]_0 ,
    mmcm_lock,
    core_clk,
    rst_blk_state__0,
    srst,
    dphyen,
    \FSM_sequential_rst_blk_state_reg[0]_1 ,
    \FSM_sequential_rst_blk_state_reg[0]_2 ,
    \FSM_sequential_rst_blk_state_reg[2]_1 ,
    \FSM_sequential_rst_blk_state_reg[2]_2 ,
    system_rst_t_reg,
    reset_timer_r,
    mmcm_rst,
    txpll_rst_reg,
    txpll_rst);
  output out;
  output \FSM_sequential_rst_blk_state_reg[0] ;
  output \FSM_sequential_rst_blk_state_reg[0]_0 ;
  output \FSM_sequential_rst_blk_state_reg[2] ;
  output \FSM_sequential_rst_blk_state_reg[2]_0 ;
  output \s_level_out_bus_d3_reg[1] ;
  output mmcm_rst_reg;
  output \s_level_out_bus_d3_reg[1]_0 ;
  input mmcm_lock;
  input core_clk;
  input [2:0]rst_blk_state__0;
  input srst;
  input dphyen;
  input \FSM_sequential_rst_blk_state_reg[0]_1 ;
  input \FSM_sequential_rst_blk_state_reg[0]_2 ;
  input \FSM_sequential_rst_blk_state_reg[2]_1 ;
  input \FSM_sequential_rst_blk_state_reg[2]_2 ;
  input system_rst_t_reg;
  input reset_timer_r;
  input mmcm_rst;
  input txpll_rst_reg;
  input txpll_rst;

  wire \FSM_sequential_rst_blk_state[0]_i_3_n_0 ;
  wire \FSM_sequential_rst_blk_state[2]_i_2_n_0 ;
  wire \FSM_sequential_rst_blk_state_reg[0] ;
  wire \FSM_sequential_rst_blk_state_reg[0]_0 ;
  wire \FSM_sequential_rst_blk_state_reg[0]_1 ;
  wire \FSM_sequential_rst_blk_state_reg[0]_2 ;
  wire \FSM_sequential_rst_blk_state_reg[2] ;
  wire \FSM_sequential_rst_blk_state_reg[2]_0 ;
  wire \FSM_sequential_rst_blk_state_reg[2]_1 ;
  wire \FSM_sequential_rst_blk_state_reg[2]_2 ;
  wire core_clk;
  wire dphyen;
  wire mmcm_lock;
  wire mmcm_rst;
  wire mmcm_rst_i_2_n_0;
  wire mmcm_rst_i_3_n_0;
  wire mmcm_rst_reg;
  wire reset_timer_r;
  wire reset_timer_r_i_3_n_0;
  wire reset_timer_r_i_4_n_0;
  wire reset_timer_r_reg_i_2_n_0;
  wire [2:0]rst_blk_state__0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  wire \s_level_out_bus_d3_reg[1] ;
  wire \s_level_out_bus_d3_reg[1]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire srst;
  wire system_rst_t_i_5_n_0;
  wire system_rst_t_reg;
  wire txpll_rst;
  wire txpll_rst_i_2_n_0;
  wire txpll_rst_reg;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hAFCCAFFFA0CCA000)) 
    \FSM_sequential_rst_blk_state[0]_i_1 
       (.I0(\FSM_sequential_rst_blk_state_reg[0]_1 ),
        .I1(\FSM_sequential_rst_blk_state[0]_i_3_n_0 ),
        .I2(\FSM_sequential_rst_blk_state_reg[0]_2 ),
        .I3(rst_blk_state__0[2]),
        .I4(\FSM_sequential_rst_blk_state_reg[0]_0 ),
        .I5(rst_blk_state__0[0]),
        .O(\FSM_sequential_rst_blk_state_reg[2] ));
  LUT6 #(
    .INIT(64'hFFAFB3BF00000000)) 
    \FSM_sequential_rst_blk_state[0]_i_3 
       (.I0(srst),
        .I1(s_level_out_d3),
        .I2(\FSM_sequential_rst_blk_state_reg[2]_2 ),
        .I3(rst_blk_state__0[0]),
        .I4(rst_blk_state__0[1]),
        .I5(dphyen),
        .O(\FSM_sequential_rst_blk_state[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEAAAAAAAEAAA0000)) 
    \FSM_sequential_rst_blk_state[2]_i_1 
       (.I0(\FSM_sequential_rst_blk_state[2]_i_2_n_0 ),
        .I1(rst_blk_state__0[0]),
        .I2(srst),
        .I3(dphyen),
        .I4(rst_blk_state__0[2]),
        .I5(\FSM_sequential_rst_blk_state_reg[0]_0 ),
        .O(\FSM_sequential_rst_blk_state_reg[0] ));
  LUT6 #(
    .INIT(64'h00EA50EA00000000)) 
    \FSM_sequential_rst_blk_state[2]_i_2 
       (.I0(rst_blk_state__0[2]),
        .I1(s_level_out_d3),
        .I2(\FSM_sequential_rst_blk_state_reg[2]_2 ),
        .I3(rst_blk_state__0[1]),
        .I4(rst_blk_state__0[0]),
        .I5(dphyen),
        .O(\FSM_sequential_rst_blk_state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h77FD72FDFFFFFFFF)) 
    \FSM_sequential_rst_blk_state[2]_i_3 
       (.I0(rst_blk_state__0[0]),
        .I1(s_level_out_d3),
        .I2(\FSM_sequential_rst_blk_state_reg[2]_1 ),
        .I3(rst_blk_state__0[1]),
        .I4(\FSM_sequential_rst_blk_state_reg[2]_2 ),
        .I5(dphyen),
        .O(\FSM_sequential_rst_blk_state_reg[0]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    mmcm_rst_i_1
       (.I0(mmcm_rst_i_2_n_0),
        .I1(mmcm_rst_i_3_n_0),
        .I2(mmcm_rst),
        .O(mmcm_rst_reg));
  LUT6 #(
    .INIT(64'h55111151FFFFFFFF)) 
    mmcm_rst_i_2
       (.I0(rst_blk_state__0[2]),
        .I1(rst_blk_state__0[0]),
        .I2(\FSM_sequential_rst_blk_state_reg[2]_1 ),
        .I3(s_level_out_d3),
        .I4(rst_blk_state__0[1]),
        .I5(dphyen),
        .O(mmcm_rst_i_2_n_0));
  LUT5 #(
    .INIT(32'h505BFFFF)) 
    mmcm_rst_i_3
       (.I0(rst_blk_state__0[2]),
        .I1(s_level_out_d3),
        .I2(rst_blk_state__0[0]),
        .I3(rst_blk_state__0[1]),
        .I4(dphyen),
        .O(mmcm_rst_i_3_n_0));
  LUT6 #(
    .INIT(64'hEEEAAAAA222AAAAA)) 
    reset_timer_r_i_1
       (.I0(reset_timer_r_reg_i_2_n_0),
        .I1(dphyen),
        .I2(rst_blk_state__0[0]),
        .I3(rst_blk_state__0[1]),
        .I4(rst_blk_state__0[2]),
        .I5(reset_timer_r),
        .O(\s_level_out_bus_d3_reg[1] ));
  LUT6 #(
    .INIT(64'hDDFDD8FDFFFFFFFF)) 
    reset_timer_r_i_3
       (.I0(rst_blk_state__0[0]),
        .I1(s_level_out_d3),
        .I2(\FSM_sequential_rst_blk_state_reg[2]_1 ),
        .I3(rst_blk_state__0[1]),
        .I4(\FSM_sequential_rst_blk_state_reg[2]_2 ),
        .I5(dphyen),
        .O(reset_timer_r_i_3_n_0));
  LUT5 #(
    .INIT(32'h5455FFFF)) 
    reset_timer_r_i_4
       (.I0(rst_blk_state__0[1]),
        .I1(\FSM_sequential_rst_blk_state_reg[2]_1 ),
        .I2(s_level_out_d3),
        .I3(rst_blk_state__0[0]),
        .I4(dphyen),
        .O(reset_timer_r_i_4_n_0));
  MUXF7 reset_timer_r_reg_i_2
       (.I0(reset_timer_r_i_3_n_0),
        .I1(reset_timer_r_i_4_n_0),
        .O(reset_timer_r_reg_i_2_n_0),
        .S(rst_blk_state__0[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(mmcm_lock),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAA5DEE5DFFFFFFFF)) 
    system_rst_t_i_5
       (.I0(rst_blk_state__0[0]),
        .I1(\FSM_sequential_rst_blk_state_reg[2]_1 ),
        .I2(s_level_out_d3),
        .I3(rst_blk_state__0[1]),
        .I4(\FSM_sequential_rst_blk_state_reg[2]_2 ),
        .I5(dphyen),
        .O(system_rst_t_i_5_n_0));
  MUXF7 system_rst_t_reg_i_4
       (.I0(system_rst_t_i_5_n_0),
        .I1(system_rst_t_reg),
        .O(\FSM_sequential_rst_blk_state_reg[2]_0 ),
        .S(rst_blk_state__0[2]));
  LUT5 #(
    .INIT(32'h74FF7400)) 
    txpll_rst_i_1
       (.I0(dphyen),
        .I1(rst_blk_state__0[2]),
        .I2(txpll_rst_i_2_n_0),
        .I3(txpll_rst_reg),
        .I4(txpll_rst),
        .O(\s_level_out_bus_d3_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hA7A7F7A7FFFFFFFF)) 
    txpll_rst_i_2
       (.I0(rst_blk_state__0[0]),
        .I1(s_level_out_d3),
        .I2(rst_blk_state__0[1]),
        .I3(\FSM_sequential_rst_blk_state_reg[2]_1 ),
        .I4(\FSM_sequential_rst_blk_state_reg[2]_2 ),
        .I5(dphyen),
        .O(txpll_rst_i_2_n_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_121
   (out,
    \s_level_out_bus_d3_reg[1] ,
    \FSM_sequential_rst_blk_state_reg[2] ,
    \FSM_sequential_rst_blk_state_reg[2]_0 ,
    core_clk,
    \FSM_sequential_rst_blk_state_reg[1] ,
    dphyen,
    rst_blk_state__0,
    \FSM_sequential_rst_blk_state_reg[1]_0 ,
    txpll_rst_reg,
    system_rst_t_reg,
    srst,
    system_rst_t_reg_0,
    system_rst_t_reg_1,
    system_rst_t_reg_2);
  output out;
  output \s_level_out_bus_d3_reg[1] ;
  output \FSM_sequential_rst_blk_state_reg[2] ;
  output \FSM_sequential_rst_blk_state_reg[2]_0 ;
  input core_clk;
  input \FSM_sequential_rst_blk_state_reg[1] ;
  input dphyen;
  input [2:0]rst_blk_state__0;
  input \FSM_sequential_rst_blk_state_reg[1]_0 ;
  input txpll_rst_reg;
  input system_rst_t_reg;
  input srst;
  input system_rst_t_reg_0;
  input system_rst_t_reg_1;
  input system_rst_t_reg_2;

  wire \FSM_sequential_rst_blk_state[1]_i_2_n_0 ;
  wire \FSM_sequential_rst_blk_state_reg[1] ;
  wire \FSM_sequential_rst_blk_state_reg[1]_0 ;
  wire \FSM_sequential_rst_blk_state_reg[2] ;
  wire \FSM_sequential_rst_blk_state_reg[2]_0 ;
  wire core_clk;
  wire dphyen;
  wire [2:0]rst_blk_state__0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  wire \s_level_out_bus_d3_reg[1] ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire srst;
  wire system_rst_t_i_3_n_0;
  wire system_rst_t_reg;
  wire system_rst_t_reg_0;
  wire system_rst_t_reg_1;
  wire system_rst_t_reg_2;
  wire txpll_rst_reg;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hBAAABAFF8AAA8A00)) 
    \FSM_sequential_rst_blk_state[1]_i_1 
       (.I0(\FSM_sequential_rst_blk_state[1]_i_2_n_0 ),
        .I1(\FSM_sequential_rst_blk_state_reg[1] ),
        .I2(dphyen),
        .I3(rst_blk_state__0[2]),
        .I4(\FSM_sequential_rst_blk_state_reg[1]_0 ),
        .I5(rst_blk_state__0[1]),
        .O(\s_level_out_bus_d3_reg[1] ));
  LUT6 #(
    .INIT(64'h8988999900000000)) 
    \FSM_sequential_rst_blk_state[1]_i_2 
       (.I0(rst_blk_state__0[2]),
        .I1(rst_blk_state__0[1]),
        .I2(s_level_out_d3),
        .I3(rst_blk_state__0[0]),
        .I4(txpll_rst_reg),
        .I5(dphyen),
        .O(\FSM_sequential_rst_blk_state[1]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hB8BBFFFFB8BB0000)) 
    system_rst_t_i_1
       (.I0(system_rst_t_reg_0),
        .I1(rst_blk_state__0[2]),
        .I2(system_rst_t_i_3_n_0),
        .I3(dphyen),
        .I4(system_rst_t_reg_1),
        .I5(system_rst_t_reg_2),
        .O(\FSM_sequential_rst_blk_state_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hEDEDEDEDE8EDEDED)) 
    system_rst_t_i_3
       (.I0(rst_blk_state__0[1]),
        .I1(system_rst_t_reg),
        .I2(rst_blk_state__0[0]),
        .I3(s_level_out_d3),
        .I4(txpll_rst_reg),
        .I5(srst),
        .O(system_rst_t_i_3_n_0));
  LUT6 #(
    .INIT(64'h55556777FFFFFFFF)) 
    txpll_rst_i_3
       (.I0(rst_blk_state__0[2]),
        .I1(rst_blk_state__0[1]),
        .I2(s_level_out_d3),
        .I3(txpll_rst_reg),
        .I4(rst_blk_state__0[0]),
        .I5(dphyen),
        .O(\FSM_sequential_rst_blk_state_reg[2] ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_13
   (out,
    core_rst,
    hs_xfer_done_i,
    core_clk);
  output out;
  input core_rst;
  input hs_xfer_done_i;
  input core_clk;

  wire core_clk;
  wire core_rst;
  wire hs_xfer_done_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(hs_xfer_done_i),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_14
   (s_level_out_d3_reg_0,
    dl3_forcetxstopmode,
    dl0_txclkesc);
  output s_level_out_d3_reg_0;
  input dl3_forcetxstopmode;
  input dl0_txclkesc;

  wire dl0_txclkesc;
  wire dl3_forcetxstopmode;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign s_level_out_d3_reg_0 = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(dl3_forcetxstopmode),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_15
   (out,
    s_level_out_d3_reg_0,
    s_level_out_d3_reg_1,
    s_level_out_d3_reg_2,
    esc_start_i,
    dl0_txclkesc,
    Q,
    esc_ctrl_axi_if_reg,
    dl_status_reg,
    esc_ctrl_lane_sm_reg,
    esc_ctrl_all_sm_reg);
  output out;
  output s_level_out_d3_reg_0;
  output s_level_out_d3_reg_1;
  output s_level_out_d3_reg_2;
  input esc_start_i;
  input dl0_txclkesc;
  input [2:0]Q;
  input esc_ctrl_axi_if_reg;
  input [0:0]dl_status_reg;
  input esc_ctrl_lane_sm_reg;
  input esc_ctrl_all_sm_reg;

  wire [2:0]Q;
  wire dl0_txclkesc;
  wire [0:0]dl_status_reg;
  wire esc_ctrl_all_sm_reg;
  wire esc_ctrl_axi_if_reg;
  wire esc_ctrl_lane_sm_reg;
  wire esc_start_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  wire s_level_out_d3_reg_2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'h00030B0B00000808)) 
    esc_ctrl_all_sm_i_1__2
       (.I0(s_level_out_d3),
        .I1(Q[1]),
        .I2(esc_ctrl_axi_if_reg),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(esc_ctrl_all_sm_reg),
        .O(s_level_out_d3_reg_2));
  LUT6 #(
    .INIT(64'h00030B0B00000808)) 
    esc_ctrl_axi_if_i_2__2
       (.I0(s_level_out_d3),
        .I1(Q[1]),
        .I2(esc_ctrl_axi_if_reg),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(dl_status_reg),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'h00030B0B00000808)) 
    esc_ctrl_lane_sm_i_1__2
       (.I0(s_level_out_d3),
        .I1(Q[1]),
        .I2(esc_ctrl_axi_if_reg),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(esc_ctrl_lane_sm_reg),
        .O(s_level_out_d3_reg_1));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(esc_start_i),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_16
   (dl3_txvalidesc_0,
    D,
    \txtriggeresc_r_reg[0] ,
    E,
    \FSM_sequential_dl_tx_state_reg[2] ,
    \txtriggeresc_r_reg[2] ,
    \FSM_sequential_dl_tx_state_reg[2]_0 ,
    \FSM_sequential_dl_tx_state_reg[1] ,
    txulpsesc_r_reg,
    \dl3_txtriggeresc[3] ,
    \dl3_txtriggeresc[2] ,
    dl3_txulpsesc_0,
    dl3_txlpdtesc_0,
    esc_ctrl_t_reg,
    tx_dl_lp_dp_reg,
    tx_dl_lp_dn_reg,
    \FSM_sequential_dl_tx_state_reg[1]_0 ,
    s_level_out_d1_cdc_to_reg_0,
    dl0_txclkesc,
    dl3_txvalidesc,
    dl_txreadyesc_reg,
    dl_txreadyesc_reg_0,
    esc_ctrl_t_reg_0,
    txulpsesc_r_reg_0,
    \FSM_sequential_dl_tx_state_reg[3] ,
    Q,
    \FSM_sequential_dl_tx_state_reg[2]_1 ,
    \bit_cnt_reg[0] ,
    \bit_cnt_reg[0]_0 ,
    \FSM_sequential_dl_tx_state_reg[0] ,
    out,
    tx_dl_lp_dn_reg_0,
    tx_dl_lp_dn_reg_1,
    tx_dl_lp_dp_reg_0,
    dl3_txrequestesc,
    tx_dl_lp_dn_esc_i,
    tx_dl_lp_dp_esc_i,
    \esc_cmd_data_reg[6] ,
    \esc_cmd_data_reg[3] ,
    dl3_txdataesc,
    \esc_cmd_data_reg[3]_0 ,
    \FSM_sequential_dl_tx_state_reg[2]_2 ,
    txlpdtesc_r,
    txulpsesc_r,
    \FSM_sequential_dl_tx_state_reg[2]_3 ,
    dl3_txulpsexit,
    \bit_cnt_reg[3] ,
    dl_ulpsactivenot_reg,
    dl3_ulpsactivenot,
    dl3_txtriggeresc,
    dl3_txulpsesc,
    dl3_txlpdtesc,
    esc_ctrl_i,
    esc_ctrl_t_reg_1,
    tx_dl_lp_dp_reg_1,
    tx_dl_lp_dn_reg_2,
    \bit_cnt_reg[3]_0 ,
    \bit_cnt_reg[3]_1 );
  output dl3_txvalidesc_0;
  output [3:0]D;
  output \txtriggeresc_r_reg[0] ;
  output [0:0]E;
  output [0:0]\FSM_sequential_dl_tx_state_reg[2] ;
  output [7:0]\txtriggeresc_r_reg[2] ;
  output [1:0]\FSM_sequential_dl_tx_state_reg[2]_0 ;
  output [0:0]\FSM_sequential_dl_tx_state_reg[1] ;
  output txulpsesc_r_reg;
  output [3:0]\dl3_txtriggeresc[3] ;
  output [0:0]\dl3_txtriggeresc[2] ;
  output dl3_txulpsesc_0;
  output dl3_txlpdtesc_0;
  output esc_ctrl_t_reg;
  output tx_dl_lp_dp_reg;
  output tx_dl_lp_dn_reg;
  output \FSM_sequential_dl_tx_state_reg[1]_0 ;
  input s_level_out_d1_cdc_to_reg_0;
  input dl0_txclkesc;
  input dl3_txvalidesc;
  input dl_txreadyesc_reg;
  input dl_txreadyesc_reg_0;
  input esc_ctrl_t_reg_0;
  input txulpsesc_r_reg_0;
  input \FSM_sequential_dl_tx_state_reg[3] ;
  input [3:0]Q;
  input \FSM_sequential_dl_tx_state_reg[2]_1 ;
  input \bit_cnt_reg[0] ;
  input \bit_cnt_reg[0]_0 ;
  input \FSM_sequential_dl_tx_state_reg[0] ;
  input out;
  input tx_dl_lp_dn_reg_0;
  input tx_dl_lp_dn_reg_1;
  input tx_dl_lp_dp_reg_0;
  input dl3_txrequestesc;
  input tx_dl_lp_dn_esc_i;
  input tx_dl_lp_dp_esc_i;
  input [7:0]\esc_cmd_data_reg[6] ;
  input \esc_cmd_data_reg[3] ;
  input [7:0]dl3_txdataesc;
  input \esc_cmd_data_reg[3]_0 ;
  input [3:0]\FSM_sequential_dl_tx_state_reg[2]_2 ;
  input txlpdtesc_r;
  input txulpsesc_r;
  input [3:0]\FSM_sequential_dl_tx_state_reg[2]_3 ;
  input dl3_txulpsexit;
  input \bit_cnt_reg[3] ;
  input dl_ulpsactivenot_reg;
  input dl3_ulpsactivenot;
  input [3:0]dl3_txtriggeresc;
  input dl3_txulpsesc;
  input dl3_txlpdtesc;
  input esc_ctrl_i;
  input esc_ctrl_t_reg_1;
  input tx_dl_lp_dp_reg_1;
  input tx_dl_lp_dn_reg_2;
  input \bit_cnt_reg[3]_0 ;
  input \bit_cnt_reg[3]_1 ;

  wire [3:0]D;
  wire [0:0]E;
  wire \FSM_sequential_dl_tx_state[0]_i_2__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[0]_i_4__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_2__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_3__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_4__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_5__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_6__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_4__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_5__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_6__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_7__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_10__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_4__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_5__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_7__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_8__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_9__2_n_0 ;
  wire \FSM_sequential_dl_tx_state_reg[0] ;
  wire [0:0]\FSM_sequential_dl_tx_state_reg[1] ;
  wire \FSM_sequential_dl_tx_state_reg[1]_0 ;
  wire [0:0]\FSM_sequential_dl_tx_state_reg[2] ;
  wire [1:0]\FSM_sequential_dl_tx_state_reg[2]_0 ;
  wire \FSM_sequential_dl_tx_state_reg[2]_1 ;
  wire [3:0]\FSM_sequential_dl_tx_state_reg[2]_2 ;
  wire [3:0]\FSM_sequential_dl_tx_state_reg[2]_3 ;
  wire \FSM_sequential_dl_tx_state_reg[3] ;
  wire [3:0]Q;
  wire \bit_cnt[3]_i_10__2_n_0 ;
  wire \bit_cnt[3]_i_11__2_n_0 ;
  wire \bit_cnt[3]_i_13__2_n_0 ;
  wire \bit_cnt[3]_i_3__2_n_0 ;
  wire \bit_cnt[3]_i_4__2_n_0 ;
  wire \bit_cnt[3]_i_9__2_n_0 ;
  wire \bit_cnt_reg[0] ;
  wire \bit_cnt_reg[0]_0 ;
  wire \bit_cnt_reg[3] ;
  wire \bit_cnt_reg[3]_0 ;
  wire \bit_cnt_reg[3]_1 ;
  wire dl0_txclkesc;
  wire [7:0]dl3_txdataesc;
  wire dl3_txlpdtesc;
  wire dl3_txlpdtesc_0;
  wire dl3_txrequestesc;
  wire [3:0]dl3_txtriggeresc;
  wire [0:0]\dl3_txtriggeresc[2] ;
  wire [3:0]\dl3_txtriggeresc[3] ;
  wire dl3_txulpsesc;
  wire dl3_txulpsesc_0;
  wire dl3_txulpsexit;
  wire dl3_txvalidesc;
  wire dl3_txvalidesc_0;
  wire dl3_ulpsactivenot;
  wire dl_txreadyesc_reg;
  wire dl_txreadyesc_reg_0;
  wire dl_ulpsactivenot0;
  wire dl_ulpsactivenot_i_2__2_n_0;
  wire dl_ulpsactivenot_reg;
  wire \esc_cmd_data[0]_i_2__2_n_0 ;
  wire \esc_cmd_data[0]_i_3__2_n_0 ;
  wire \esc_cmd_data[1]_i_2__2_n_0 ;
  wire \esc_cmd_data[2]_i_2__2_n_0 ;
  wire \esc_cmd_data[5]_i_2__2_n_0 ;
  wire \esc_cmd_data[5]_i_3__2_n_0 ;
  wire \esc_cmd_data[6]_i_2__2_n_0 ;
  wire \esc_cmd_data[7]_i_3__2_n_0 ;
  wire \esc_cmd_data[7]_i_6__2_n_0 ;
  wire \esc_cmd_data[7]_i_7__2_n_0 ;
  wire \esc_cmd_data_reg[3] ;
  wire \esc_cmd_data_reg[3]_0 ;
  wire [7:0]\esc_cmd_data_reg[6] ;
  wire esc_ctrl_i;
  wire esc_ctrl_t_i_2__2_n_0;
  wire esc_ctrl_t_i_3__2_n_0;
  wire esc_ctrl_t_reg;
  wire esc_ctrl_t_reg_0;
  wire esc_ctrl_t_reg_1;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_dl_lp_dn_esc_i;
  wire tx_dl_lp_dn_i_11__2_n_0;
  wire tx_dl_lp_dn_i_13__2_n_0;
  wire tx_dl_lp_dn_i_2__6_n_0;
  wire tx_dl_lp_dn_i_3__2_n_0;
  wire tx_dl_lp_dn_i_4__2_n_0;
  wire tx_dl_lp_dn_i_5__2_n_0;
  wire tx_dl_lp_dn_i_7__2_n_0;
  wire tx_dl_lp_dn_i_8__2_n_0;
  wire tx_dl_lp_dn_i_9__2_n_0;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dn_reg_1;
  wire tx_dl_lp_dn_reg_2;
  wire tx_dl_lp_dp_esc_i;
  wire tx_dl_lp_dp_i_2__6_n_0;
  wire tx_dl_lp_dp_i_3__6_n_0;
  wire tx_dl_lp_dp_i_4__6_n_0;
  wire tx_dl_lp_dp_i_5__6_n_0;
  wire tx_dl_lp_dp_reg;
  wire tx_dl_lp_dp_reg_0;
  wire tx_dl_lp_dp_reg_1;
  wire txlpdtesc_r;
  wire \txtriggeresc_r[3]_i_3__2_n_0 ;
  wire \txtriggeresc_r_reg[0] ;
  wire [7:0]\txtriggeresc_r_reg[2] ;
  wire txulpsesc_r;
  wire txulpsesc_r_reg;
  wire txulpsesc_r_reg_0;

  LUT6 #(
    .INIT(64'h00000000770177CD)) 
    \FSM_sequential_dl_tx_state[0]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(\txtriggeresc_r_reg[0] ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\FSM_sequential_dl_tx_state[0]_i_2__2_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000400)) 
    \FSM_sequential_dl_tx_state[0]_i_2__2 
       (.I0(\txtriggeresc_r_reg[0] ),
        .I1(\FSM_sequential_dl_tx_state_reg[0] ),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_4__2_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[0]_i_4__2_n_0 ),
        .O(\FSM_sequential_dl_tx_state[0]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h3000300030013000)) 
    \FSM_sequential_dl_tx_state[0]_i_4__2 
       (.I0(\esc_cmd_data_reg[3] ),
        .I1(\esc_cmd_data[0]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_tx_state[0]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'h44444444FF4F4F44)) 
    \FSM_sequential_dl_tx_state[1]_i_1__2 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_2__2_n_0 ),
        .I1(\FSM_sequential_dl_tx_state[1]_i_3__2_n_0 ),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(\txtriggeresc_r_reg[0] ),
        .I5(Q[1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hBBB8BBBBFFFFCCCC)) 
    \FSM_sequential_dl_tx_state[1]_i_2__2 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_4__2_n_0 ),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(\esc_cmd_data[0]_i_2__2_n_0 ),
        .I4(\FSM_sequential_dl_tx_state[1]_i_5__2_n_0 ),
        .I5(Q[3]),
        .O(\FSM_sequential_dl_tx_state[1]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFBFFFBFBFB)) 
    \FSM_sequential_dl_tx_state[1]_i_3__2 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_6__2_n_0 ),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(dl3_txvalidesc),
        .I4(dl_txreadyesc_reg_0),
        .I5(\esc_cmd_data[0]_i_2__2_n_0 ),
        .O(\FSM_sequential_dl_tx_state[1]_i_3__2_n_0 ));
  LUT4 #(
    .INIT(16'h0007)) 
    \FSM_sequential_dl_tx_state[1]_i_4__2 
       (.I0(s_level_out_d3),
        .I1(dl3_txrequestesc),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\FSM_sequential_dl_tx_state[1]_i_4__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_dl_tx_state[1]_i_5__2 
       (.I0(\txtriggeresc_r_reg[0] ),
        .I1(Q[0]),
        .O(\FSM_sequential_dl_tx_state[1]_i_5__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    \FSM_sequential_dl_tx_state[1]_i_6__2 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_3 [2]),
        .I1(\FSM_sequential_dl_tx_state_reg[2]_3 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_3 [3]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_7__2_n_0 ),
        .O(\FSM_sequential_dl_tx_state[1]_i_6__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFA80000)) 
    \FSM_sequential_dl_tx_state[2]_i_1__2 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_1 ),
        .I1(\txtriggeresc_r_reg[0] ),
        .I2(\FSM_sequential_dl_tx_state[2]_i_4__2_n_0 ),
        .I3(\FSM_sequential_dl_tx_state[2]_i_5__2_n_0 ),
        .I4(Q[1]),
        .I5(\FSM_sequential_dl_tx_state[2]_i_6__2_n_0 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAAE)) 
    \FSM_sequential_dl_tx_state[2]_i_3__2 
       (.I0(dl_ulpsactivenot_i_2__2_n_0),
        .I1(\FSM_sequential_dl_tx_state[2]_i_7__2_n_0 ),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [3]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_2 [2]),
        .O(\txtriggeresc_r_reg[0] ));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    \FSM_sequential_dl_tx_state[2]_i_4__2 
       (.I0(\esc_cmd_data[0]_i_2__2_n_0 ),
        .I1(\esc_cmd_data_reg[3] ),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_3 [2]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_3 [1]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_3 [3]),
        .O(\FSM_sequential_dl_tx_state[2]_i_4__2_n_0 ));
  LUT5 #(
    .INIT(32'h74044404)) 
    \FSM_sequential_dl_tx_state[2]_i_5__2 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(\esc_cmd_data[0]_i_2__2_n_0 ),
        .I4(dl_ulpsactivenot0),
        .O(\FSM_sequential_dl_tx_state[2]_i_5__2_n_0 ));
  LUT6 #(
    .INIT(64'h101030301010F030)) 
    \FSM_sequential_dl_tx_state[2]_i_6__2 
       (.I0(\txtriggeresc_r_reg[0] ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(dl_ulpsactivenot_i_2__2_n_0),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_tx_state[2]_i_6__2_n_0 ));
  LUT4 #(
    .INIT(16'h777F)) 
    \FSM_sequential_dl_tx_state[2]_i_7__2 
       (.I0(s_level_out_d3),
        .I1(dl3_txrequestesc),
        .I2(txlpdtesc_r),
        .I3(txulpsesc_r),
        .O(\FSM_sequential_dl_tx_state[2]_i_7__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    \FSM_sequential_dl_tx_state[2]_i_8__2 
       (.I0(dl_ulpsactivenot_i_2__2_n_0),
        .I1(txulpsesc_r),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_3 [2]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_3 [1]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_3 [3]),
        .O(dl_ulpsactivenot0));
  LUT5 #(
    .INIT(32'hEEEEFEEE)) 
    \FSM_sequential_dl_tx_state[3]_i_10__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(dl3_txrequestesc),
        .I3(s_level_out_d3),
        .I4(dl3_txulpsexit),
        .O(\FSM_sequential_dl_tx_state[3]_i_10__2_n_0 ));
  LUT6 #(
    .INIT(64'hF4F5F5FF04050505)) 
    \FSM_sequential_dl_tx_state[3]_i_2__2 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_4__2_n_0 ),
        .I1(dl_ulpsactivenot_i_2__2_n_0),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[3]),
        .I5(\FSM_sequential_dl_tx_state[3]_i_5__2_n_0 ),
        .O(\FSM_sequential_dl_tx_state_reg[2] ));
  LUT6 #(
    .INIT(64'h44F4444444444444)) 
    \FSM_sequential_dl_tx_state[3]_i_3__2 
       (.I0(dl_ulpsactivenot_i_2__2_n_0),
        .I1(\FSM_sequential_dl_tx_state_reg[3] ),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\FSM_sequential_dl_tx_state[3]_i_7__2_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[3]_i_8__2_n_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'h04040C0C04040CFC)) 
    \FSM_sequential_dl_tx_state[3]_i_4__2 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_9__2_n_0 ),
        .I1(esc_ctrl_t_i_3__2_n_0),
        .I2(Q[0]),
        .I3(\bit_cnt[3]_i_9__2_n_0 ),
        .I4(Q[3]),
        .I5(\txtriggeresc_r_reg[0] ),
        .O(\FSM_sequential_dl_tx_state[3]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'h3333FF7F3333FF3F)) 
    \FSM_sequential_dl_tx_state[3]_i_5__2 
       (.I0(\bit_cnt_reg[0]_0 ),
        .I1(\FSM_sequential_dl_tx_state[3]_i_10__2_n_0 ),
        .I2(Q[1]),
        .I3(\esc_cmd_data[0]_i_2__2_n_0 ),
        .I4(Q[3]),
        .I5(Q[0]),
        .O(\FSM_sequential_dl_tx_state[3]_i_5__2_n_0 ));
  LUT5 #(
    .INIT(32'h8000FFFF)) 
    \FSM_sequential_dl_tx_state[3]_i_7__2 
       (.I0(s_level_out_d3),
        .I1(dl3_txrequestesc),
        .I2(txlpdtesc_r),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\FSM_sequential_dl_tx_state[3]_i_7__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT4 #(
    .INIT(16'hF1FF)) 
    \FSM_sequential_dl_tx_state[3]_i_8__2 
       (.I0(\FSM_sequential_dl_tx_state[2]_i_4__2_n_0 ),
        .I1(\txtriggeresc_r_reg[0] ),
        .I2(Q[2]),
        .I3(Q[0]),
        .O(\FSM_sequential_dl_tx_state[3]_i_8__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFFBFFFBFFF)) 
    \FSM_sequential_dl_tx_state[3]_i_9__2 
       (.I0(Q[1]),
        .I1(s_level_out_d3),
        .I2(dl3_txrequestesc),
        .I3(txlpdtesc_r),
        .I4(dl_txreadyesc_reg_0),
        .I5(dl3_txvalidesc),
        .O(\FSM_sequential_dl_tx_state[3]_i_9__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000D00000)) 
    \bit_cnt[0]_i_1__2 
       (.I0(\bit_cnt[3]_i_9__2_n_0 ),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[0]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .O(\FSM_sequential_dl_tx_state_reg[2]_0 [0]));
  LUT5 #(
    .INIT(32'h22222002)) 
    \bit_cnt[3]_i_10__2 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_6__2_n_0 ),
        .I1(\FSM_sequential_dl_tx_state[2]_i_4__2_n_0 ),
        .I2(tx_dl_lp_dn_esc_i),
        .I3(tx_dl_lp_dp_esc_i),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_3 [3]),
        .O(\bit_cnt[3]_i_10__2_n_0 ));
  LUT6 #(
    .INIT(64'hBABBBBBBBAABBBAB)) 
    \bit_cnt[3]_i_11__2 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(\bit_cnt[3]_i_13__2_n_0 ),
        .I5(\txtriggeresc_r_reg[0] ),
        .O(\bit_cnt[3]_i_11__2_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \bit_cnt[3]_i_13__2 
       (.I0(dl3_txvalidesc),
        .I1(dl_txreadyesc_reg_0),
        .I2(txlpdtesc_r),
        .I3(dl3_txrequestesc),
        .I4(s_level_out_d3),
        .O(\bit_cnt[3]_i_13__2_n_0 ));
  LUT6 #(
    .INIT(64'hAEAAAAAAAEAAAEAA)) 
    \bit_cnt[3]_i_1__2 
       (.I0(\bit_cnt[3]_i_3__2_n_0 ),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(\bit_cnt[3]_i_4__2_n_0 ),
        .I4(\bit_cnt_reg[0] ),
        .I5(\bit_cnt_reg[0]_0 ),
        .O(E));
  LUT5 #(
    .INIT(32'h11010001)) 
    \bit_cnt[3]_i_2__2 
       (.I0(\bit_cnt_reg[3]_0 ),
        .I1(\bit_cnt_reg[3]_1 ),
        .I2(\bit_cnt[3]_i_9__2_n_0 ),
        .I3(Q[2]),
        .I4(\bit_cnt_reg[0]_0 ),
        .O(\FSM_sequential_dl_tx_state_reg[2]_0 [1]));
  LUT6 #(
    .INIT(64'h000000001F1F1F3F)) 
    \bit_cnt[3]_i_3__2 
       (.I0(Q[0]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(\txtriggeresc_r_reg[0] ),
        .I4(\bit_cnt[3]_i_10__2_n_0 ),
        .I5(\bit_cnt[3]_i_11__2_n_0 ),
        .O(\bit_cnt[3]_i_3__2_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \bit_cnt[3]_i_4__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(txlpdtesc_r),
        .I3(dl3_txrequestesc),
        .I4(s_level_out_d3),
        .O(\bit_cnt[3]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'h80000000FFFFFFFF)) 
    \bit_cnt[3]_i_9__2 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_3 [2]),
        .I1(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_3 [1]),
        .I3(\bit_cnt_reg[0] ),
        .I4(\bit_cnt_reg[3] ),
        .I5(\FSM_sequential_dl_tx_state[1]_i_6__2_n_0 ),
        .O(\bit_cnt[3]_i_9__2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000005C)) 
    dl_txreadyesc_i_1__2
       (.I0(dl3_txvalidesc),
        .I1(dl_txreadyesc_reg),
        .I2(dl_txreadyesc_reg_0),
        .I3(esc_ctrl_t_reg_0),
        .I4(dl_ulpsactivenot_i_2__2_n_0),
        .I5(txulpsesc_r_reg_0),
        .O(dl3_txvalidesc_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFB00)) 
    dl_ulpsactivenot_i_1__2
       (.I0(dl_ulpsactivenot_i_2__2_n_0),
        .I1(txulpsesc_r),
        .I2(dl_ulpsactivenot_reg),
        .I3(dl3_ulpsactivenot),
        .I4(dl3_txulpsexit),
        .I5(esc_ctrl_t_reg_0),
        .O(txulpsesc_r_reg));
  LUT2 #(
    .INIT(4'h7)) 
    dl_ulpsactivenot_i_2__2
       (.I0(dl3_txrequestesc),
        .I1(s_level_out_d3),
        .O(dl_ulpsactivenot_i_2__2_n_0));
  LUT6 #(
    .INIT(64'hB888B8BBB8BBB8BB)) 
    \esc_cmd_data[0]_i_1__2 
       (.I0(\esc_cmd_data_reg[6] [1]),
        .I1(\esc_cmd_data_reg[3]_0 ),
        .I2(dl3_txdataesc[0]),
        .I3(\esc_cmd_data_reg[3] ),
        .I4(\esc_cmd_data[0]_i_2__2_n_0 ),
        .I5(\esc_cmd_data[0]_i_3__2_n_0 ),
        .O(\txtriggeresc_r_reg[2] [0]));
  LUT3 #(
    .INIT(8'h7F)) 
    \esc_cmd_data[0]_i_2__2 
       (.I0(s_level_out_d3),
        .I1(dl3_txrequestesc),
        .I2(txlpdtesc_r),
        .O(\esc_cmd_data[0]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF80)) 
    \esc_cmd_data[0]_i_3__2 
       (.I0(dl3_txrequestesc),
        .I1(s_level_out_d3),
        .I2(txulpsesc_r),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_2 [2]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .O(\esc_cmd_data[0]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8BBB8BBB8B8B8)) 
    \esc_cmd_data[1]_i_1__2 
       (.I0(\esc_cmd_data_reg[6] [2]),
        .I1(\esc_cmd_data_reg[3]_0 ),
        .I2(\esc_cmd_data[1]_i_2__2_n_0 ),
        .I3(\esc_cmd_data[7]_i_6__2_n_0 ),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .O(\txtriggeresc_r_reg[2] [1]));
  LUT6 #(
    .INIT(64'hFF00808080808080)) 
    \esc_cmd_data[1]_i_2__2 
       (.I0(s_level_out_d3),
        .I1(dl3_txrequestesc),
        .I2(txlpdtesc_r),
        .I3(dl3_txdataesc[1]),
        .I4(dl_txreadyesc_reg_0),
        .I5(dl3_txvalidesc),
        .O(\esc_cmd_data[1]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h8B8B888B8B8B8B8B)) 
    \esc_cmd_data[2]_i_1__2 
       (.I0(\esc_cmd_data_reg[6] [3]),
        .I1(\esc_cmd_data_reg[3]_0 ),
        .I2(\esc_cmd_data[2]_i_2__2_n_0 ),
        .I3(\esc_cmd_data[7]_i_6__2_n_0 ),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .O(\txtriggeresc_r_reg[2] [2]));
  LUT6 #(
    .INIT(64'h0000FFFF40004000)) 
    \esc_cmd_data[2]_i_2__2 
       (.I0(txlpdtesc_r),
        .I1(dl3_txrequestesc),
        .I2(s_level_out_d3),
        .I3(txulpsesc_r),
        .I4(dl3_txdataesc[2]),
        .I5(\esc_cmd_data_reg[3] ),
        .O(\esc_cmd_data[2]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEAEAAAAFEAE)) 
    \esc_cmd_data[3]_i_1__2 
       (.I0(\esc_cmd_data[5]_i_2__2_n_0 ),
        .I1(\esc_cmd_data[5]_i_3__2_n_0 ),
        .I2(\esc_cmd_data_reg[3] ),
        .I3(dl3_txdataesc[3]),
        .I4(\esc_cmd_data_reg[3]_0 ),
        .I5(\esc_cmd_data_reg[6] [4]),
        .O(\txtriggeresc_r_reg[2] [3]));
  LUT6 #(
    .INIT(64'hFFFFFEAEAAAAFEAE)) 
    \esc_cmd_data[4]_i_1__2 
       (.I0(\esc_cmd_data[5]_i_2__2_n_0 ),
        .I1(\esc_cmd_data[5]_i_3__2_n_0 ),
        .I2(\esc_cmd_data_reg[3] ),
        .I3(dl3_txdataesc[4]),
        .I4(\esc_cmd_data_reg[3]_0 ),
        .I5(\esc_cmd_data_reg[6] [5]),
        .O(\txtriggeresc_r_reg[2] [4]));
  LUT6 #(
    .INIT(64'hFFFFFEAEAAAAFEAE)) 
    \esc_cmd_data[5]_i_1__2 
       (.I0(\esc_cmd_data[5]_i_2__2_n_0 ),
        .I1(\esc_cmd_data[5]_i_3__2_n_0 ),
        .I2(\esc_cmd_data_reg[3] ),
        .I3(dl3_txdataesc[5]),
        .I4(\esc_cmd_data_reg[3]_0 ),
        .I5(\esc_cmd_data_reg[6] [6]),
        .O(\txtriggeresc_r_reg[2] [5]));
  LUT4 #(
    .INIT(16'h0400)) 
    \esc_cmd_data[5]_i_2__2 
       (.I0(\esc_cmd_data_reg[3]_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I3(\esc_cmd_data[7]_i_6__2_n_0 ),
        .O(\esc_cmd_data[5]_i_2__2_n_0 ));
  LUT4 #(
    .INIT(16'h2000)) 
    \esc_cmd_data[5]_i_3__2 
       (.I0(txulpsesc_r),
        .I1(txlpdtesc_r),
        .I2(dl3_txrequestesc),
        .I3(s_level_out_d3),
        .O(\esc_cmd_data[5]_i_3__2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \esc_cmd_data[6]_i_1__2 
       (.I0(\esc_cmd_data_reg[6] [7]),
        .I1(\esc_cmd_data_reg[3]_0 ),
        .I2(\esc_cmd_data[6]_i_2__2_n_0 ),
        .O(\txtriggeresc_r_reg[2] [6]));
  LUT6 #(
    .INIT(64'hFFFF8B8A00008B8A)) 
    \esc_cmd_data[6]_i_2__2 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I1(dl_ulpsactivenot_i_2__2_n_0),
        .I2(txlpdtesc_r),
        .I3(txulpsesc_r),
        .I4(\esc_cmd_data_reg[3] ),
        .I5(dl3_txdataesc[6]),
        .O(\esc_cmd_data[6]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF1000)) 
    \esc_cmd_data[7]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[3]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_1 ),
        .I3(\esc_cmd_data[7]_i_3__2_n_0 ),
        .I4(\esc_cmd_data_reg[3]_0 ),
        .I5(\esc_cmd_data_reg[3] ),
        .O(\FSM_sequential_dl_tx_state_reg[1] ));
  LUT6 #(
    .INIT(64'h0000444055555555)) 
    \esc_cmd_data[7]_i_2__2 
       (.I0(\esc_cmd_data_reg[3]_0 ),
        .I1(\esc_cmd_data[7]_i_6__2_n_0 ),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_2 [2]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I5(\esc_cmd_data[7]_i_7__2_n_0 ),
        .O(\txtriggeresc_r_reg[2] [7]));
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    \esc_cmd_data[7]_i_3__2 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_2 [2]),
        .I1(\FSM_sequential_dl_tx_state_reg[2]_2 [3]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_7__2_n_0 ),
        .O(\esc_cmd_data[7]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h00001FFF1FFF1FFF)) 
    \esc_cmd_data[7]_i_6__2 
       (.I0(txulpsesc_r),
        .I1(txlpdtesc_r),
        .I2(dl3_txrequestesc),
        .I3(s_level_out_d3),
        .I4(dl3_txvalidesc),
        .I5(dl_txreadyesc_reg_0),
        .O(\esc_cmd_data[7]_i_6__2_n_0 ));
  LUT6 #(
    .INIT(64'h55553FFF3FFF3FFF)) 
    \esc_cmd_data[7]_i_7__2 
       (.I0(dl3_txdataesc[7]),
        .I1(s_level_out_d3),
        .I2(dl3_txrequestesc),
        .I3(txlpdtesc_r),
        .I4(dl_txreadyesc_reg_0),
        .I5(dl3_txvalidesc),
        .O(\esc_cmd_data[7]_i_7__2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000222E)) 
    esc_ctrl_t_i_1__2
       (.I0(esc_ctrl_i),
        .I1(esc_ctrl_t_i_2__2_n_0),
        .I2(esc_ctrl_t_i_3__2_n_0),
        .I3(Q[3]),
        .I4(esc_ctrl_t_reg_1),
        .I5(esc_ctrl_t_reg_0),
        .O(esc_ctrl_t_reg));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT5 #(
    .INIT(32'h04570042)) 
    esc_ctrl_t_i_2__2
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(\txtriggeresc_r_reg[0] ),
        .O(esc_ctrl_t_i_2__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    esc_ctrl_t_i_3__2
       (.I0(Q[1]),
        .I1(\txtriggeresc_r_reg[0] ),
        .I2(out),
        .O(esc_ctrl_t_i_3__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'h64)) 
    esc_stopstate_i_2__2
       (.I0(Q[1]),
        .I1(\txtriggeresc_r_reg[0] ),
        .I2(out),
        .O(\FSM_sequential_dl_tx_state_reg[1]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h43FF4FFF43434F43)) 
    tx_dl_lp_dn_i_11__2
       (.I0(tx_dl_lp_dn_i_13__2_n_0),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\esc_cmd_data[0]_i_2__2_n_0 ),
        .I5(\txtriggeresc_r_reg[0] ),
        .O(tx_dl_lp_dn_i_11__2_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAA8AA8AAAA)) 
    tx_dl_lp_dn_i_13__2
       (.I0(Q[1]),
        .I1(\esc_cmd_data_reg[6] [0]),
        .I2(tx_dl_lp_dn_esc_i),
        .I3(tx_dl_lp_dp_esc_i),
        .I4(\bit_cnt_reg[0]_0 ),
        .I5(\esc_cmd_data[0]_i_2__2_n_0 ),
        .O(tx_dl_lp_dn_i_13__2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFEFE02)) 
    tx_dl_lp_dn_i_1__6
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dn_i_2__6_n_0),
        .I2(tx_dl_lp_dn_i_3__2_n_0),
        .I3(tx_dl_lp_dn_i_4__2_n_0),
        .I4(tx_dl_lp_dn_i_5__2_n_0),
        .I5(tx_dl_lp_dp_reg_1),
        .O(tx_dl_lp_dn_reg));
  LUT6 #(
    .INIT(64'hFF04FF04FF040000)) 
    tx_dl_lp_dn_i_2__6
       (.I0(Q[3]),
        .I1(Q[0]),
        .I2(tx_dl_lp_dn_reg_0),
        .I3(\FSM_sequential_dl_tx_state[3]_i_5__2_n_0 ),
        .I4(tx_dl_lp_dn_i_7__2_n_0),
        .I5(Q[2]),
        .O(tx_dl_lp_dn_i_2__6_n_0));
  LUT6 #(
    .INIT(64'h88808888AAAAAAAA)) 
    tx_dl_lp_dn_i_3__2
       (.I0(tx_dl_lp_dn_i_8__2_n_0),
        .I1(\FSM_sequential_dl_tx_state[3]_i_9__2_n_0 ),
        .I2(\bit_cnt[3]_i_9__2_n_0 ),
        .I3(tx_dl_lp_dn_i_9__2_n_0),
        .I4(tx_dl_lp_dn_reg_0),
        .I5(tx_dl_lp_dn_reg_1),
        .O(tx_dl_lp_dn_i_3__2_n_0));
  LUT6 #(
    .INIT(64'h1151004000400040)) 
    tx_dl_lp_dn_i_4__2
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(dl_ulpsactivenot_i_2__2_n_0),
        .I4(Q[0]),
        .I5(\txtriggeresc_r_reg[0] ),
        .O(tx_dl_lp_dn_i_4__2_n_0));
  LUT6 #(
    .INIT(64'h4444444444444445)) 
    tx_dl_lp_dn_i_5__2
       (.I0(Q[3]),
        .I1(tx_dl_lp_dn_i_11__2_n_0),
        .I2(tx_dl_lp_dn_i_9__2_n_0),
        .I3(\bit_cnt[3]_i_9__2_n_0 ),
        .I4(tx_dl_lp_dn_reg_2),
        .I5(Q[2]),
        .O(tx_dl_lp_dn_i_5__2_n_0));
  LUT6 #(
    .INIT(64'h0000555500007FFF)) 
    tx_dl_lp_dn_i_7__2
       (.I0(Q[1]),
        .I1(s_level_out_d3),
        .I2(dl3_txrequestesc),
        .I3(txlpdtesc_r),
        .I4(Q[3]),
        .I5(Q[0]),
        .O(tx_dl_lp_dn_i_7__2_n_0));
  LUT5 #(
    .INIT(32'h15555555)) 
    tx_dl_lp_dn_i_8__2
       (.I0(Q[2]),
        .I1(dl3_txrequestesc),
        .I2(s_level_out_d3),
        .I3(Q[3]),
        .I4(Q[1]),
        .O(tx_dl_lp_dn_i_8__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'hB)) 
    tx_dl_lp_dn_i_9__2
       (.I0(\txtriggeresc_r_reg[0] ),
        .I1(Q[1]),
        .O(tx_dl_lp_dn_i_9__2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFEFE02)) 
    tx_dl_lp_dp_i_1__6
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(tx_dl_lp_dn_i_2__6_n_0),
        .I2(tx_dl_lp_dn_i_3__2_n_0),
        .I3(tx_dl_lp_dp_i_2__6_n_0),
        .I4(tx_dl_lp_dp_i_3__6_n_0),
        .I5(tx_dl_lp_dp_reg_1),
        .O(tx_dl_lp_dp_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFF55300000)) 
    tx_dl_lp_dp_i_2__6
       (.I0(\FSM_sequential_dl_tx_state[3]_i_10__2_n_0 ),
        .I1(tx_dl_lp_dp_i_4__6_n_0),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(tx_dl_lp_dp_i_5__6_n_0),
        .O(tx_dl_lp_dp_i_2__6_n_0));
  LUT6 #(
    .INIT(64'h4044404440444444)) 
    tx_dl_lp_dp_i_3__6
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(\txtriggeresc_r_reg[0] ),
        .I3(Q[0]),
        .I4(\bit_cnt[3]_i_9__2_n_0 ),
        .I5(tx_dl_lp_dp_reg_0),
        .O(tx_dl_lp_dp_i_3__6_n_0));
  LUT6 #(
    .INIT(64'h000000007DFF0000)) 
    tx_dl_lp_dp_i_4__6
       (.I0(\bit_cnt_reg[0]_0 ),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(tx_dl_lp_dp_esc_i),
        .I3(\esc_cmd_data_reg[6] [0]),
        .I4(Q[1]),
        .I5(\esc_cmd_data[0]_i_2__2_n_0 ),
        .O(tx_dl_lp_dp_i_4__6_n_0));
  LUT6 #(
    .INIT(64'h323232320F0FFF00)) 
    tx_dl_lp_dp_i_5__6
       (.I0(\esc_cmd_data[0]_i_2__2_n_0 ),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(\txtriggeresc_r_reg[0] ),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(tx_dl_lp_dp_i_5__6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT4 #(
    .INIT(16'h7530)) 
    txlpdtesc_r_i_1__2
       (.I0(txulpsesc_r_reg_0),
        .I1(\txtriggeresc_r[3]_i_3__2_n_0 ),
        .I2(dl3_txlpdtesc),
        .I3(txlpdtesc_r),
        .O(dl3_txlpdtesc_0));
  LUT6 #(
    .INIT(64'h0002000000000200)) 
    \txtriggeresc_r[0]_i_1__2 
       (.I0(dl3_txtriggeresc[0]),
        .I1(dl_ulpsactivenot_i_2__2_n_0),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\dl3_txtriggeresc[3] [0]));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \txtriggeresc_r[1]_i_1__2 
       (.I0(\txtriggeresc_r[3]_i_3__2_n_0 ),
        .I1(dl3_txtriggeresc[1]),
        .O(\dl3_txtriggeresc[3] [1]));
  LUT6 #(
    .INIT(64'h0002000000000200)) 
    \txtriggeresc_r[2]_i_1__2 
       (.I0(dl3_txtriggeresc[2]),
        .I1(dl_ulpsactivenot_i_2__2_n_0),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\dl3_txtriggeresc[3] [2]));
  LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBBA)) 
    \txtriggeresc_r[3]_i_1__2 
       (.I0(txulpsesc_r_reg_0),
        .I1(\txtriggeresc_r[3]_i_3__2_n_0 ),
        .I2(dl3_txtriggeresc[2]),
        .I3(dl3_txtriggeresc[1]),
        .I4(dl3_txtriggeresc[3]),
        .I5(dl3_txtriggeresc[0]),
        .O(\dl3_txtriggeresc[2] ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \txtriggeresc_r[3]_i_2__2 
       (.I0(\txtriggeresc_r[3]_i_3__2_n_0 ),
        .I1(dl3_txtriggeresc[3]),
        .O(\dl3_txtriggeresc[3] [3]));
  LUT6 #(
    .INIT(64'hFFE7FFFFFFFFFFFF)) 
    \txtriggeresc_r[3]_i_3__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(s_level_out_d3),
        .I5(dl3_txrequestesc),
        .O(\txtriggeresc_r[3]_i_3__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT4 #(
    .INIT(16'h7530)) 
    txulpsesc_r_i_1__2
       (.I0(txulpsesc_r_reg_0),
        .I1(\txtriggeresc_r[3]_i_3__2_n_0 ),
        .I2(dl3_txulpsesc),
        .I3(txulpsesc_r),
        .O(dl3_txulpsesc_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_18
   (out,
    core_rst,
    dl3_forcetxstopmode,
    core_clk);
  output out;
  input core_rst;
  input dl3_forcetxstopmode;
  input core_clk;

  wire core_clk;
  wire core_rst;
  wire dl3_forcetxstopmode;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl3_forcetxstopmode),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_19
   (\dl_tx_sm_state_reg[1] ,
    \dl_tx_sm_state_reg[2] ,
    \dl_tx_sm_state_reg[0] ,
    \dl_tx_sm_state_reg[0]_0 ,
    p_0_in23_out,
    \dl_tx_sm_state_reg[1]_0 ,
    s_level_out_d3_reg_0,
    s_level_out_d3_reg_1,
    \dl_tx_sm_state_reg[1]_1 ,
    core_rst,
    dl3_txrequestesc,
    core_clk,
    esc_start_reg,
    dl_tx_sm_state125_out,
    esc_start_i,
    \dl_tx_sm_state_reg[2]_0 ,
    \dl_tx_sm_state_reg[2]_1 ,
    \dl_tx_sm_state_reg[2]_2 ,
    \dl_tx_sm_state_reg[0]_1 ,
    en_hs_start_w__4,
    cl_init_done_coreclk_i,
    dl_stopstate_i_2__2_0,
    dl_tx_sm_state120_out,
    \dl_tx_sm_state_reg[2]_3 ,
    p_21_in,
    timeout_prepare,
    esc_active_sync_r,
    out,
    dl_status_bit_6_reg,
    timeout_hsexit_all);
  output \dl_tx_sm_state_reg[1] ;
  output \dl_tx_sm_state_reg[2] ;
  output \dl_tx_sm_state_reg[0] ;
  output \dl_tx_sm_state_reg[0]_0 ;
  output p_0_in23_out;
  output \dl_tx_sm_state_reg[1]_0 ;
  output s_level_out_d3_reg_0;
  output s_level_out_d3_reg_1;
  output \dl_tx_sm_state_reg[1]_1 ;
  input core_rst;
  input dl3_txrequestesc;
  input core_clk;
  input esc_start_reg;
  input dl_tx_sm_state125_out;
  input esc_start_i;
  input \dl_tx_sm_state_reg[2]_0 ;
  input \dl_tx_sm_state_reg[2]_1 ;
  input \dl_tx_sm_state_reg[2]_2 ;
  input \dl_tx_sm_state_reg[0]_1 ;
  input en_hs_start_w__4;
  input cl_init_done_coreclk_i;
  input dl_stopstate_i_2__2_0;
  input dl_tx_sm_state120_out;
  input \dl_tx_sm_state_reg[2]_3 ;
  input p_21_in;
  input timeout_prepare;
  input esc_active_sync_r;
  input out;
  input dl_status_bit_6_reg;
  input timeout_hsexit_all;

  wire cl_init_done_coreclk_i;
  wire core_clk;
  wire core_rst;
  wire dl3_txrequestesc;
  wire dl_status_bit_6_i_6__2_n_0;
  wire dl_status_bit_6_reg;
  wire dl_stopstate_i_2__2_0;
  wire dl_stopstate_i_5__2_n_0;
  wire dl_tx_sm_state118_out;
  wire dl_tx_sm_state120_out;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state[2]_i_2__2_n_0 ;
  wire [0:0]dl_tx_sm_state__0;
  wire \dl_tx_sm_state_reg[0] ;
  wire \dl_tx_sm_state_reg[0]_0 ;
  wire \dl_tx_sm_state_reg[0]_1 ;
  wire \dl_tx_sm_state_reg[1] ;
  wire \dl_tx_sm_state_reg[1]_0 ;
  wire \dl_tx_sm_state_reg[1]_1 ;
  wire \dl_tx_sm_state_reg[2] ;
  wire \dl_tx_sm_state_reg[2]_0 ;
  wire \dl_tx_sm_state_reg[2]_1 ;
  wire \dl_tx_sm_state_reg[2]_2 ;
  wire \dl_tx_sm_state_reg[2]_3 ;
  wire en_hs_start_w__4;
  wire esc_active_sync_r;
  wire esc_start11_out;
  wire esc_start_i;
  wire esc_start_i_3__2_n_0;
  wire esc_start_reg;
  wire out;
  wire p_0_in23_out;
  wire p_21_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_hsexit_all;
  wire timeout_prepare;

  LUT5 #(
    .INIT(32'h88808080)) 
    dl_status_bit_6_i_4__2
       (.I0(esc_start_reg),
        .I1(\dl_tx_sm_state_reg[2]_2 ),
        .I2(dl_status_bit_6_i_6__2_n_0),
        .I3(\dl_tx_sm_state_reg[0]_0 ),
        .I4(dl_status_bit_6_reg),
        .O(\dl_tx_sm_state_reg[1]_1 ));
  LUT6 #(
    .INIT(64'h00700070FF700070)) 
    dl_status_bit_6_i_6__2
       (.I0(s_level_out_d3),
        .I1(\dl_tx_sm_state_reg[2]_3 ),
        .I2(timeout_hsexit_all),
        .I3(\dl_tx_sm_state_reg[0]_1 ),
        .I4(esc_active_sync_r),
        .I5(out),
        .O(dl_status_bit_6_i_6__2_n_0));
  LUT3 #(
    .INIT(8'hBF)) 
    dl_status_bit_6_i_7__2
       (.I0(\dl_tx_sm_state_reg[0]_1 ),
        .I1(\dl_tx_sm_state_reg[2]_3 ),
        .I2(s_level_out_d3),
        .O(\dl_tx_sm_state_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hFBFFFBAA)) 
    dl_stopstate_i_2__2
       (.I0(dl_tx_sm_state125_out),
        .I1(esc_start_reg),
        .I2(dl_status_bit_6_i_6__2_n_0),
        .I3(\dl_tx_sm_state_reg[2]_2 ),
        .I4(dl_stopstate_i_5__2_n_0),
        .O(\dl_tx_sm_state_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hAAAAAFFFCCCCCCCC)) 
    dl_stopstate_i_5__2
       (.I0(\dl_tx_sm_state_reg[0]_1 ),
        .I1(cl_init_done_coreclk_i),
        .I2(dl_stopstate_i_2__2_0),
        .I3(s_level_out_d3),
        .I4(en_hs_start_w__4),
        .I5(esc_start_reg),
        .O(dl_stopstate_i_5__2_n_0));
  LUT4 #(
    .INIT(16'h2F20)) 
    \dl_tx_sm_state[0]_i_1__2 
       (.I0(dl_tx_sm_state__0),
        .I1(dl_tx_sm_state125_out),
        .I2(\dl_tx_sm_state_reg[2]_1 ),
        .I3(\dl_tx_sm_state_reg[0]_1 ),
        .O(\dl_tx_sm_state_reg[0] ));
  LUT6 #(
    .INIT(64'h0C0F0A0F0C000A0F)) 
    \dl_tx_sm_state[0]_i_2__2 
       (.I0(s_level_out_d3_reg_0),
        .I1(dl_tx_sm_state118_out),
        .I2(\dl_tx_sm_state_reg[0]_1 ),
        .I3(esc_start_reg),
        .I4(\dl_tx_sm_state_reg[2]_2 ),
        .I5(dl_tx_sm_state120_out),
        .O(dl_tx_sm_state__0));
  LUT2 #(
    .INIT(4'h8)) 
    \dl_tx_sm_state[0]_i_3__2 
       (.I0(s_level_out_d3),
        .I1(\dl_tx_sm_state_reg[2]_3 ),
        .O(dl_tx_sm_state118_out));
  LUT3 #(
    .INIT(8'hF8)) 
    \dl_tx_sm_state[1]_i_4__2 
       (.I0(dl_stopstate_i_2__2_0),
        .I1(s_level_out_d3),
        .I2(en_hs_start_w__4),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'h00FF0000F8FFF8FF)) 
    \dl_tx_sm_state[2]_i_13__2 
       (.I0(dl_stopstate_i_2__2_0),
        .I1(s_level_out_d3),
        .I2(en_hs_start_w__4),
        .I3(esc_start_reg),
        .I4(cl_init_done_coreclk_i),
        .I5(\dl_tx_sm_state_reg[0]_1 ),
        .O(s_level_out_d3_reg_1));
  LUT5 #(
    .INIT(32'h0EFF0C00)) 
    \dl_tx_sm_state[2]_i_1__2 
       (.I0(\dl_tx_sm_state[2]_i_2__2_n_0 ),
        .I1(\dl_tx_sm_state_reg[2]_0 ),
        .I2(dl_tx_sm_state125_out),
        .I3(\dl_tx_sm_state_reg[2]_1 ),
        .I4(\dl_tx_sm_state_reg[2]_2 ),
        .O(\dl_tx_sm_state_reg[2] ));
  LUT6 #(
    .INIT(64'h40FF40AA40AA40AA)) 
    \dl_tx_sm_state[2]_i_2__2 
       (.I0(\dl_tx_sm_state_reg[0]_1 ),
        .I1(\dl_tx_sm_state_reg[2]_3 ),
        .I2(s_level_out_d3),
        .I3(esc_start_reg),
        .I4(p_21_in),
        .I5(timeout_prepare),
        .O(\dl_tx_sm_state[2]_i_2__2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \dl_tx_sm_state[2]_i_9__2 
       (.I0(s_level_out_d3),
        .I1(dl_stopstate_i_2__2_0),
        .O(p_0_in23_out));
  LUT5 #(
    .INIT(32'hAABFAA80)) 
    esc_start_i_1__2
       (.I0(esc_start11_out),
        .I1(esc_start_i_3__2_n_0),
        .I2(esc_start_reg),
        .I3(dl_tx_sm_state125_out),
        .I4(esc_start_i),
        .O(\dl_tx_sm_state_reg[1] ));
  LUT6 #(
    .INIT(64'h0000000055005530)) 
    esc_start_i_2__2
       (.I0(\dl_tx_sm_state_reg[0]_0 ),
        .I1(en_hs_start_w__4),
        .I2(p_0_in23_out),
        .I3(\dl_tx_sm_state_reg[2]_2 ),
        .I4(\dl_tx_sm_state_reg[0]_1 ),
        .I5(dl_tx_sm_state125_out),
        .O(esc_start11_out));
  LUT6 #(
    .INIT(64'h00F088880000FFFF)) 
    esc_start_i_3__2
       (.I0(\dl_tx_sm_state_reg[2]_3 ),
        .I1(s_level_out_d3),
        .I2(esc_active_sync_r),
        .I3(out),
        .I4(\dl_tx_sm_state_reg[0]_1 ),
        .I5(\dl_tx_sm_state_reg[2]_2 ),
        .O(esc_start_i_3__2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl3_txrequestesc),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_20
   (out,
    tx_dl_lp_dn_reg,
    \dl_tx_sm_state_reg[0] ,
    dl_tx_sm_state120_out,
    \dl_tx_sm_state_reg[2] ,
    en_hs_start_w__4,
    \en_cl_init_to_blk.init_done_reg ,
    \dl_tx_sm_state_reg[2]_0 ,
    en_lp_01_cnt__4,
    core_rst,
    dl_txrequesths_r,
    core_clk,
    tx_dl_lp_dn_reg_0,
    tx_dl_lp_dn_reg_1,
    tx_dl_lp_dn_reg_2,
    tx_dl_lp_dn_hs_i,
    \dl_tx_sm_state_reg[1] ,
    \dl_tx_sm_state_reg[1]_0 ,
    \dl_tx_sm_state_reg[1]_1 ,
    \dl_tx_sm_state_reg[1]_2 ,
    p_0_in23_out,
    cl_init_done_coreclk_i,
    tx_dl_lp_dn_reg_3,
    dl_tx_sm_state125_out,
    \dl_tx_sm_state[1]_i_4__2 ,
    \dl_tx_sm_state[1]_i_4__2_0 ,
    cl_txclkactivehs_i,
    timeout_prepare,
    en_cal_hs_datapath_reg,
    \dl_tx_sm_state[2]_i_3__2_0 );
  output out;
  output tx_dl_lp_dn_reg;
  output \dl_tx_sm_state_reg[0] ;
  output dl_tx_sm_state120_out;
  output \dl_tx_sm_state_reg[2] ;
  output en_hs_start_w__4;
  output \en_cl_init_to_blk.init_done_reg ;
  output \dl_tx_sm_state_reg[2]_0 ;
  output en_lp_01_cnt__4;
  input core_rst;
  input dl_txrequesths_r;
  input core_clk;
  input tx_dl_lp_dn_reg_0;
  input tx_dl_lp_dn_reg_1;
  input tx_dl_lp_dn_reg_2;
  input tx_dl_lp_dn_hs_i;
  input \dl_tx_sm_state_reg[1] ;
  input \dl_tx_sm_state_reg[1]_0 ;
  input \dl_tx_sm_state_reg[1]_1 ;
  input \dl_tx_sm_state_reg[1]_2 ;
  input p_0_in23_out;
  input cl_init_done_coreclk_i;
  input tx_dl_lp_dn_reg_3;
  input dl_tx_sm_state125_out;
  input \dl_tx_sm_state[1]_i_4__2 ;
  input \dl_tx_sm_state[1]_i_4__2_0 ;
  input cl_txclkactivehs_i;
  input timeout_prepare;
  input en_cal_hs_datapath_reg;
  input \dl_tx_sm_state[2]_i_3__2_0 ;

  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl_tx_sm_state120_out;
  wire dl_tx_sm_state122_out;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state[1]_i_2__2_n_0 ;
  wire \dl_tx_sm_state[1]_i_4__2 ;
  wire \dl_tx_sm_state[1]_i_4__2_0 ;
  wire \dl_tx_sm_state[2]_i_3__2_0 ;
  wire \dl_tx_sm_state_reg[0] ;
  wire \dl_tx_sm_state_reg[1] ;
  wire \dl_tx_sm_state_reg[1]_0 ;
  wire \dl_tx_sm_state_reg[1]_1 ;
  wire \dl_tx_sm_state_reg[1]_2 ;
  wire \dl_tx_sm_state_reg[2] ;
  wire \dl_tx_sm_state_reg[2]_0 ;
  wire dl_txrequesths_r;
  wire en_cal_hs_datapath_reg;
  wire \en_cl_init_to_blk.init_done_reg ;
  wire en_hs_start_w__4;
  wire en_lp_01_cnt__4;
  wire p_0_in23_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_prepare;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dn_reg_1;
  wire tx_dl_lp_dn_reg_2;
  wire tx_dl_lp_dn_reg_3;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hFFAAFFFFFBFA0000)) 
    \dl_tx_sm_state[1]_i_1__2 
       (.I0(\dl_tx_sm_state[1]_i_2__2_n_0 ),
        .I1(dl_tx_sm_state120_out),
        .I2(\dl_tx_sm_state_reg[1] ),
        .I3(\dl_tx_sm_state_reg[1]_0 ),
        .I4(\dl_tx_sm_state_reg[1]_1 ),
        .I5(\dl_tx_sm_state_reg[1]_2 ),
        .O(\dl_tx_sm_state_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00007400)) 
    \dl_tx_sm_state[1]_i_2__2 
       (.I0(dl_tx_sm_state122_out),
        .I1(\dl_tx_sm_state_reg[1] ),
        .I2(tx_dl_lp_dn_reg_3),
        .I3(\dl_tx_sm_state_reg[1]_2 ),
        .I4(\dl_tx_sm_state_reg[1]_0 ),
        .I5(dl_tx_sm_state125_out),
        .O(\dl_tx_sm_state[1]_i_2__2_n_0 ));
  LUT4 #(
    .INIT(16'hA800)) 
    \dl_tx_sm_state[1]_i_3__2 
       (.I0(cl_txclkactivehs_i),
        .I1(s_level_out_d3),
        .I2(en_cal_hs_datapath_reg),
        .I3(timeout_prepare),
        .O(dl_tx_sm_state120_out));
  LUT4 #(
    .INIT(16'hBBBF)) 
    \dl_tx_sm_state[2]_i_12__2 
       (.I0(\dl_tx_sm_state[2]_i_3__2_0 ),
        .I1(cl_txclkactivehs_i),
        .I2(s_level_out_d3),
        .I3(en_cal_hs_datapath_reg),
        .O(en_lp_01_cnt__4));
  LUT6 #(
    .INIT(64'h0A0300000A000000)) 
    \dl_tx_sm_state[2]_i_3__2 
       (.I0(dl_tx_sm_state122_out),
        .I1(en_hs_start_w__4),
        .I2(\dl_tx_sm_state_reg[1]_0 ),
        .I3(\dl_tx_sm_state_reg[1] ),
        .I4(\dl_tx_sm_state_reg[1]_2 ),
        .I5(p_0_in23_out),
        .O(\dl_tx_sm_state_reg[2] ));
  LUT4 #(
    .INIT(16'hA800)) 
    \dl_tx_sm_state[2]_i_7__2 
       (.I0(cl_txclkactivehs_i),
        .I1(s_level_out_d3),
        .I2(en_cal_hs_datapath_reg),
        .I3(\dl_tx_sm_state[2]_i_3__2_0 ),
        .O(dl_tx_sm_state122_out));
  LUT4 #(
    .INIT(16'h8000)) 
    \dl_tx_sm_state[2]_i_8__2 
       (.I0(s_level_out_d3),
        .I1(\dl_tx_sm_state[1]_i_4__2 ),
        .I2(\dl_tx_sm_state[1]_i_4__2_0 ),
        .I3(cl_txclkactivehs_i),
        .O(en_hs_start_w__4));
  LUT5 #(
    .INIT(32'h5F5FDFFF)) 
    en_cal_hs_datapath_i_2__2
       (.I0(\dl_tx_sm_state_reg[1]_0 ),
        .I1(timeout_prepare),
        .I2(cl_txclkactivehs_i),
        .I3(s_level_out_d3),
        .I4(en_cal_hs_datapath_reg),
        .O(\dl_tx_sm_state_reg[2]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_txrequesths_r),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT5 #(
    .INIT(32'hFEFFFE00)) 
    tx_dl_lp_dn_i_1__5
       (.I0(\dl_tx_sm_state[1]_i_2__2_n_0 ),
        .I1(tx_dl_lp_dn_reg_0),
        .I2(tx_dl_lp_dn_reg_1),
        .I3(tx_dl_lp_dn_reg_2),
        .I4(tx_dl_lp_dn_hs_i),
        .O(tx_dl_lp_dn_reg));
  LUT6 #(
    .INIT(64'h3333AAAA0F00FFFF)) 
    tx_dl_lp_dp_i_2__5
       (.I0(cl_init_done_coreclk_i),
        .I1(dl_tx_sm_state122_out),
        .I2(en_hs_start_w__4),
        .I3(p_0_in23_out),
        .I4(\dl_tx_sm_state_reg[1]_2 ),
        .I5(\dl_tx_sm_state_reg[1] ),
        .O(\en_cl_init_to_blk.init_done_reg ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_21
   (out,
    en_lp_01_cnt_reg,
    \dl_tx_sm_state_reg[2] ,
    \dl_tx_sm_state_reg[0] ,
    \dl_tx_sm_state_reg[1] ,
    p_21_in,
    \dl_tx_sm_state_reg[2]_0 ,
    \dl_tx_sm_state_reg[2]_1 ,
    \dl_tx_sm_state_reg[2]_2 ,
    core_rst,
    core_clk,
    dl_tx_sm_state125_out,
    en_lp_01_cnt_reg_0,
    dl_stopstate_reg,
    dl_stopstate_reg_0,
    dl_stopstate_i,
    en_hs_datapath_reg,
    dl_status_reg,
    en_lp_01_cnt_reg_1,
    en_hs_start_w__4,
    en_lp_01_cnt_reg_2,
    dl_status_bit_6_reg,
    dl_status_bit_6_reg_0,
    tx_dl_lp_dn_reg,
    tx_dl_lp_dn_reg_0,
    \dl_tx_sm_state_reg[1]_0 ,
    en_lp_01_cnt__4,
    dl_tx_sm_state0__0,
    en_hs_datapath_reg_0,
    cl_txclkactivehs_i,
    timeout_prepare,
    dl_stopstate_reg_1,
    dl_status_bit_6_reg_1,
    dl_status_bit_6_reg_2,
    cl_init_done_coreclk_i);
  output out;
  output en_lp_01_cnt_reg;
  output \dl_tx_sm_state_reg[2] ;
  output \dl_tx_sm_state_reg[0] ;
  output \dl_tx_sm_state_reg[1] ;
  output p_21_in;
  output \dl_tx_sm_state_reg[2]_0 ;
  output \dl_tx_sm_state_reg[2]_1 ;
  output \dl_tx_sm_state_reg[2]_2 ;
  input core_rst;
  input core_clk;
  input dl_tx_sm_state125_out;
  input en_lp_01_cnt_reg_0;
  input dl_stopstate_reg;
  input dl_stopstate_reg_0;
  input dl_stopstate_i;
  input en_hs_datapath_reg;
  input [0:0]dl_status_reg;
  input en_lp_01_cnt_reg_1;
  input en_hs_start_w__4;
  input en_lp_01_cnt_reg_2;
  input dl_status_bit_6_reg;
  input dl_status_bit_6_reg_0;
  input tx_dl_lp_dn_reg;
  input tx_dl_lp_dn_reg_0;
  input \dl_tx_sm_state_reg[1]_0 ;
  input en_lp_01_cnt__4;
  input dl_tx_sm_state0__0;
  input en_hs_datapath_reg_0;
  input cl_txclkactivehs_i;
  input timeout_prepare;
  input dl_stopstate_reg_1;
  input dl_status_bit_6_reg_1;
  input dl_status_bit_6_reg_2;
  input cl_init_done_coreclk_i;

  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl_status_bit_6_i_2__2_n_0;
  wire dl_status_bit_6_i_5__2_n_0;
  wire dl_status_bit_6_reg;
  wire dl_status_bit_6_reg_0;
  wire dl_status_bit_6_reg_1;
  wire dl_status_bit_6_reg_2;
  wire [0:0]dl_status_reg;
  wire dl_stopstate_i;
  wire dl_stopstate_i_3__2_n_0;
  wire dl_stopstate_i_4__2_n_0;
  wire dl_stopstate_reg;
  wire dl_stopstate_reg_0;
  wire dl_stopstate_reg_1;
  wire dl_tx_sm_state0__0;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state[2]_i_10__2_n_0 ;
  wire \dl_tx_sm_state_reg[0] ;
  wire \dl_tx_sm_state_reg[1] ;
  wire \dl_tx_sm_state_reg[1]_0 ;
  wire \dl_tx_sm_state_reg[2] ;
  wire \dl_tx_sm_state_reg[2]_0 ;
  wire \dl_tx_sm_state_reg[2]_1 ;
  wire \dl_tx_sm_state_reg[2]_2 ;
  wire en_hs_datapath_i_2__2_n_0;
  wire en_hs_datapath_i_4__2_n_0;
  wire en_hs_datapath_reg;
  wire en_hs_datapath_reg_0;
  wire en_hs_start_w__4;
  wire en_lp_01_cnt15_out;
  wire en_lp_01_cnt__4;
  wire en_lp_01_cnt_i_3__2_n_0;
  wire en_lp_01_cnt_reg;
  wire en_lp_01_cnt_reg_0;
  wire en_lp_01_cnt_reg_1;
  wire en_lp_01_cnt_reg_2;
  wire p_21_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_prepare;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dp_i_6__5_n_0;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF0E)) 
    dl_status_bit_6_i_1__2
       (.I0(dl_status_bit_6_i_2__2_n_0),
        .I1(dl_status_bit_6_reg),
        .I2(dl_stopstate_reg_0),
        .I3(dl_status_bit_6_reg_0),
        .I4(dl_tx_sm_state125_out),
        .I5(dl_status_bit_6_i_5__2_n_0),
        .O(\dl_tx_sm_state_reg[2]_0 ));
  LUT5 #(
    .INIT(32'h8ADF0000)) 
    dl_status_bit_6_i_2__2
       (.I0(en_hs_datapath_reg),
        .I1(dl_status_bit_6_reg_1),
        .I2(p_21_in),
        .I3(dl_status_bit_6_reg_2),
        .I4(en_lp_01_cnt_reg_2),
        .O(dl_status_bit_6_i_2__2_n_0));
  LUT5 #(
    .INIT(32'h40404044)) 
    dl_status_bit_6_i_5__2
       (.I0(en_lp_01_cnt_reg_2),
        .I1(dl_stopstate_reg_0),
        .I2(dl_status_bit_6_reg_1),
        .I3(en_hs_datapath_reg),
        .I4(p_21_in),
        .O(dl_status_bit_6_i_5__2_n_0));
  LUT6 #(
    .INIT(64'hAAABABABAAA8A8A8)) 
    dl_stopstate_i_1__2
       (.I0(dl_stopstate_reg),
        .I1(dl_tx_sm_state125_out),
        .I2(dl_stopstate_i_3__2_n_0),
        .I3(dl_stopstate_reg_0),
        .I4(dl_stopstate_i_4__2_n_0),
        .I5(dl_stopstate_i),
        .O(\dl_tx_sm_state_reg[2] ));
  LUT5 #(
    .INIT(32'h000072AA)) 
    dl_stopstate_i_3__2
       (.I0(en_lp_01_cnt_reg_2),
        .I1(p_21_in),
        .I2(cl_init_done_coreclk_i),
        .I3(en_hs_datapath_reg),
        .I4(dl_stopstate_reg_0),
        .O(dl_stopstate_i_3__2_n_0));
  LUT4 #(
    .INIT(16'hFF01)) 
    dl_stopstate_i_4__2
       (.I0(p_21_in),
        .I1(en_hs_datapath_reg),
        .I2(en_lp_01_cnt_reg_2),
        .I3(dl_stopstate_reg_1),
        .O(dl_stopstate_i_4__2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00FD000D)) 
    \dl_tx_sm_state[2]_i_10__2 
       (.I0(p_21_in),
        .I1(timeout_prepare),
        .I2(en_hs_datapath_reg),
        .I3(en_lp_01_cnt_reg_2),
        .I4(dl_tx_sm_state0__0),
        .I5(dl_stopstate_reg_1),
        .O(\dl_tx_sm_state[2]_i_10__2_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEEEFFFFFCCC)) 
    \dl_tx_sm_state[2]_i_5__2 
       (.I0(\dl_tx_sm_state[2]_i_10__2_n_0 ),
        .I1(dl_tx_sm_state125_out),
        .I2(\dl_tx_sm_state_reg[1]_0 ),
        .I3(en_lp_01_cnt__4),
        .I4(tx_dl_lp_dn_reg_0),
        .I5(dl_stopstate_reg_0),
        .O(\dl_tx_sm_state_reg[2]_2 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \dl_tx_sm_state[2]_i_6__2 
       (.I0(s_level_out_d3),
        .I1(en_hs_datapath_reg_0),
        .I2(cl_txclkactivehs_i),
        .O(p_21_in));
  LUT5 #(
    .INIT(32'h01FF0100)) 
    en_hs_datapath_i_1__2
       (.I0(en_hs_datapath_reg),
        .I1(dl_tx_sm_state125_out),
        .I2(en_hs_datapath_i_2__2_n_0),
        .I3(\dl_tx_sm_state_reg[1] ),
        .I4(dl_status_reg),
        .O(\dl_tx_sm_state_reg[0] ));
  LUT4 #(
    .INIT(16'h1FFF)) 
    en_hs_datapath_i_2__2
       (.I0(s_level_out_d3),
        .I1(en_hs_datapath_reg_0),
        .I2(cl_txclkactivehs_i),
        .I3(dl_stopstate_reg_0),
        .O(en_hs_datapath_i_2__2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFAEAAAAFF)) 
    en_hs_datapath_i_3__2
       (.I0(en_hs_datapath_i_4__2_n_0),
        .I1(dl_tx_sm_state0__0),
        .I2(en_lp_01_cnt_reg_2),
        .I3(dl_stopstate_reg_0),
        .I4(en_hs_datapath_reg),
        .I5(dl_tx_sm_state125_out),
        .O(\dl_tx_sm_state_reg[1] ));
  LUT6 #(
    .INIT(64'h000000000000FF1F)) 
    en_hs_datapath_i_4__2
       (.I0(s_level_out_d3),
        .I1(en_hs_datapath_reg_0),
        .I2(cl_txclkactivehs_i),
        .I3(timeout_prepare),
        .I4(en_hs_datapath_reg),
        .I5(en_lp_01_cnt_reg_2),
        .O(en_hs_datapath_i_4__2_n_0));
  LUT4 #(
    .INIT(16'hABA8)) 
    en_lp_01_cnt_i_1__3
       (.I0(en_lp_01_cnt15_out),
        .I1(en_lp_01_cnt_i_3__2_n_0),
        .I2(dl_tx_sm_state125_out),
        .I3(en_lp_01_cnt_reg_0),
        .O(en_lp_01_cnt_reg));
  LUT6 #(
    .INIT(64'h0022000000F00000)) 
    en_lp_01_cnt_i_2__3
       (.I0(p_21_in),
        .I1(en_lp_01_cnt_reg_1),
        .I2(en_hs_start_w__4),
        .I3(dl_tx_sm_state125_out),
        .I4(en_lp_01_cnt_reg_2),
        .I5(en_hs_datapath_reg),
        .O(en_lp_01_cnt15_out));
  LUT6 #(
    .INIT(64'h5515440411111111)) 
    en_lp_01_cnt_i_3__2
       (.I0(dl_stopstate_reg_0),
        .I1(en_hs_datapath_reg),
        .I2(p_21_in),
        .I3(en_lp_01_cnt_reg_1),
        .I4(en_hs_start_w__4),
        .I5(en_lp_01_cnt_reg_2),
        .O(en_lp_01_cnt_i_3__2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hFEFEFEFEFFFFFFF0)) 
    tx_dl_lp_dp_i_4__5
       (.I0(tx_dl_lp_dn_reg),
        .I1(dl_stopstate_i_4__2_n_0),
        .I2(dl_tx_sm_state125_out),
        .I3(tx_dl_lp_dp_i_6__5_n_0),
        .I4(tx_dl_lp_dn_reg_0),
        .I5(dl_stopstate_reg_0),
        .O(\dl_tx_sm_state_reg[2]_1 ));
  LUT6 #(
    .INIT(64'h8888888800088888)) 
    tx_dl_lp_dp_i_6__5
       (.I0(en_hs_datapath_reg),
        .I1(en_lp_01_cnt_reg_2),
        .I2(s_level_out_d3),
        .I3(en_hs_datapath_reg_0),
        .I4(cl_txclkactivehs_i),
        .I5(en_lp_01_cnt_reg_1),
        .O(tx_dl_lp_dp_i_6__5_n_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_22
   (out,
    \dl_tx_sm_state_reg[0] ,
    s_level_out_d3_reg_0,
    core_rst,
    s_level_out_d1_cdc_to_reg_0,
    core_clk,
    dl_tx_sm_state0__0,
    tx_dl_lp_dn_reg,
    tx_dl_lp_dn_reg_0,
    tx_dl_lp_dn_reg_1,
    esc_active_sync_r,
    timeout_hsexit_all,
    dl_stopstate_i_4__2);
  output out;
  output \dl_tx_sm_state_reg[0] ;
  output s_level_out_d3_reg_0;
  input core_rst;
  input s_level_out_d1_cdc_to_reg_0;
  input core_clk;
  input dl_tx_sm_state0__0;
  input tx_dl_lp_dn_reg;
  input tx_dl_lp_dn_reg_0;
  input tx_dl_lp_dn_reg_1;
  input esc_active_sync_r;
  input timeout_hsexit_all;
  input dl_stopstate_i_4__2;

  wire core_clk;
  wire core_rst;
  wire dl_stopstate_i_4__2;
  wire dl_tx_sm_state0__0;
  wire \dl_tx_sm_state_reg[0] ;
  wire esc_active_sync_r;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_hsexit_all;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dn_reg_1;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'h4F40FFFF00000000)) 
    dl_stopstate_i_6__2
       (.I0(s_level_out_d3),
        .I1(esc_active_sync_r),
        .I2(tx_dl_lp_dn_reg),
        .I3(timeout_hsexit_all),
        .I4(dl_stopstate_i_4__2),
        .I5(tx_dl_lp_dn_reg_0),
        .O(s_level_out_d3_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT5 #(
    .INIT(32'hAAEF0000)) 
    tx_dl_lp_dp_i_3__5
       (.I0(s_level_out_d3_reg_0),
        .I1(dl_tx_sm_state0__0),
        .I2(tx_dl_lp_dn_reg),
        .I3(tx_dl_lp_dn_reg_0),
        .I4(tx_dl_lp_dn_reg_1),
        .O(\dl_tx_sm_state_reg[0] ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_23
   (core_rst,
    core_clk);
  input core_rst;
  input core_clk;

  wire core_clk;
  wire core_rst;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_25
   (out,
    core_clk);
  output out;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_26
   (out,
    tx_div4_clk);
  output out;
  input tx_div4_clk;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_27
   (en_cal_hs_datapath_i,
    tx_div4_clk);
  input en_cal_hs_datapath_i;
  input tx_div4_clk;

  wire en_cal_hs_datapath_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(en_cal_hs_datapath_i),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_28
   (s_level_out_d1_cdc_to_reg_0,
    tx_div4_clk);
  input s_level_out_d1_cdc_to_reg_0;
  input tx_div4_clk;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_30
   (out,
    en_hs_datapath_reg,
    s_level_out_d3_reg_0,
    s_level_out_d3_reg_1,
    core_rst,
    hs_xfer_done_i,
    core_clk,
    cl_txclkactivehs_i_5,
    cl_txclkactivehs_i_5_0,
    dl_hs_exit_done_i,
    cl_txclkactivehs_i);
  output out;
  output en_hs_datapath_reg;
  output s_level_out_d3_reg_0;
  output s_level_out_d3_reg_1;
  input core_rst;
  input hs_xfer_done_i;
  input core_clk;
  input cl_txclkactivehs_i_5;
  input [2:0]cl_txclkactivehs_i_5_0;
  input [2:0]dl_hs_exit_done_i;
  input cl_txclkactivehs_i;

  wire cl_txclkactivehs_i;
  wire cl_txclkactivehs_i_5;
  wire [2:0]cl_txclkactivehs_i_5_0;
  wire core_clk;
  wire core_rst;
  wire [2:0]dl_hs_exit_done_i;
  wire en_hs_datapath_reg;
  wire hs_xfer_done_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT4 #(
    .INIT(16'h7FFF)) 
    \cl_tx_state[3]_i_12 
       (.I0(s_level_out_d3),
        .I1(dl_hs_exit_done_i[2]),
        .I2(dl_hs_exit_done_i[0]),
        .I3(dl_hs_exit_done_i[1]),
        .O(s_level_out_d3_reg_0));
  LUT5 #(
    .INIT(32'h8000FFFF)) 
    en_hs_datapath_i_5
       (.I0(s_level_out_d3),
        .I1(dl_hs_exit_done_i[2]),
        .I2(dl_hs_exit_done_i[0]),
        .I3(dl_hs_exit_done_i[1]),
        .I4(cl_txclkactivehs_i),
        .O(s_level_out_d3_reg_1));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(hs_xfer_done_i),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT5 #(
    .INIT(32'h55555557)) 
    start_clkpost_r_i_4
       (.I0(s_level_out_d3_reg_0),
        .I1(cl_txclkactivehs_i_5),
        .I2(cl_txclkactivehs_i_5_0[1]),
        .I3(cl_txclkactivehs_i_5_0[0]),
        .I4(cl_txclkactivehs_i_5_0[2]),
        .O(en_hs_datapath_reg));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_34
   (s_level_out_d3_reg_0,
    dl2_forcetxstopmode,
    dl0_txclkesc);
  output s_level_out_d3_reg_0;
  input dl2_forcetxstopmode;
  input dl0_txclkesc;

  wire dl0_txclkesc;
  wire dl2_forcetxstopmode;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign s_level_out_d3_reg_0 = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(dl2_forcetxstopmode),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_35
   (out,
    s_level_out_d3_reg_0,
    s_level_out_d3_reg_1,
    s_level_out_d3_reg_2,
    esc_start_i,
    dl0_txclkesc,
    Q,
    esc_ctrl_axi_if_reg,
    dl_status_reg,
    esc_ctrl_lane_sm_reg,
    esc_ctrl_all_sm_reg);
  output out;
  output s_level_out_d3_reg_0;
  output s_level_out_d3_reg_1;
  output s_level_out_d3_reg_2;
  input esc_start_i;
  input dl0_txclkesc;
  input [2:0]Q;
  input esc_ctrl_axi_if_reg;
  input [0:0]dl_status_reg;
  input esc_ctrl_lane_sm_reg;
  input esc_ctrl_all_sm_reg;

  wire [2:0]Q;
  wire dl0_txclkesc;
  wire [0:0]dl_status_reg;
  wire esc_ctrl_all_sm_reg;
  wire esc_ctrl_axi_if_reg;
  wire esc_ctrl_lane_sm_reg;
  wire esc_start_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  wire s_level_out_d3_reg_2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'h00030B0B00000808)) 
    esc_ctrl_all_sm_i_1__1
       (.I0(s_level_out_d3),
        .I1(Q[1]),
        .I2(esc_ctrl_axi_if_reg),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(esc_ctrl_all_sm_reg),
        .O(s_level_out_d3_reg_2));
  LUT6 #(
    .INIT(64'h00030B0B00000808)) 
    esc_ctrl_axi_if_i_2__1
       (.I0(s_level_out_d3),
        .I1(Q[1]),
        .I2(esc_ctrl_axi_if_reg),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(dl_status_reg),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'h00030B0B00000808)) 
    esc_ctrl_lane_sm_i_1__1
       (.I0(s_level_out_d3),
        .I1(Q[1]),
        .I2(esc_ctrl_axi_if_reg),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(esc_ctrl_lane_sm_reg),
        .O(s_level_out_d3_reg_1));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(esc_start_i),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_36
   (dl2_txvalidesc_0,
    D,
    \txtriggeresc_r_reg[0] ,
    E,
    \FSM_sequential_dl_tx_state_reg[2] ,
    \txtriggeresc_r_reg[2] ,
    \FSM_sequential_dl_tx_state_reg[2]_0 ,
    \FSM_sequential_dl_tx_state_reg[1] ,
    txulpsesc_r_reg,
    \dl2_txtriggeresc[3] ,
    \dl2_txtriggeresc[2] ,
    dl2_txulpsesc_0,
    dl2_txlpdtesc_0,
    esc_ctrl_t_reg,
    tx_dl_lp_dp_reg,
    tx_dl_lp_dn_reg,
    \FSM_sequential_dl_tx_state_reg[1]_0 ,
    s_level_out_d1_cdc_to_reg_0,
    dl0_txclkesc,
    dl2_txvalidesc,
    dl_txreadyesc_reg,
    dl_txreadyesc_reg_0,
    esc_ctrl_t_reg_0,
    txulpsesc_r_reg_0,
    \FSM_sequential_dl_tx_state_reg[3] ,
    Q,
    \FSM_sequential_dl_tx_state_reg[2]_1 ,
    \bit_cnt_reg[0] ,
    \bit_cnt_reg[0]_0 ,
    \FSM_sequential_dl_tx_state_reg[0] ,
    out,
    tx_dl_lp_dn_reg_0,
    tx_dl_lp_dn_reg_1,
    tx_dl_lp_dp_reg_0,
    dl2_txrequestesc,
    tx_dl_lp_dn_esc_i,
    tx_dl_lp_dp_esc_i,
    \esc_cmd_data_reg[6] ,
    \esc_cmd_data_reg[3] ,
    dl2_txdataesc,
    \esc_cmd_data_reg[3]_0 ,
    \FSM_sequential_dl_tx_state_reg[2]_2 ,
    txlpdtesc_r,
    txulpsesc_r,
    \FSM_sequential_dl_tx_state_reg[2]_3 ,
    dl2_txulpsexit,
    \bit_cnt_reg[3] ,
    dl_ulpsactivenot_reg,
    dl2_ulpsactivenot,
    dl2_txtriggeresc,
    dl2_txulpsesc,
    dl2_txlpdtesc,
    esc_ctrl_i,
    esc_ctrl_t_reg_1,
    tx_dl_lp_dp_reg_1,
    tx_dl_lp_dn_reg_2,
    \bit_cnt_reg[3]_0 ,
    \bit_cnt_reg[3]_1 );
  output dl2_txvalidesc_0;
  output [3:0]D;
  output \txtriggeresc_r_reg[0] ;
  output [0:0]E;
  output [0:0]\FSM_sequential_dl_tx_state_reg[2] ;
  output [7:0]\txtriggeresc_r_reg[2] ;
  output [1:0]\FSM_sequential_dl_tx_state_reg[2]_0 ;
  output [0:0]\FSM_sequential_dl_tx_state_reg[1] ;
  output txulpsesc_r_reg;
  output [3:0]\dl2_txtriggeresc[3] ;
  output [0:0]\dl2_txtriggeresc[2] ;
  output dl2_txulpsesc_0;
  output dl2_txlpdtesc_0;
  output esc_ctrl_t_reg;
  output tx_dl_lp_dp_reg;
  output tx_dl_lp_dn_reg;
  output \FSM_sequential_dl_tx_state_reg[1]_0 ;
  input s_level_out_d1_cdc_to_reg_0;
  input dl0_txclkesc;
  input dl2_txvalidesc;
  input dl_txreadyesc_reg;
  input dl_txreadyesc_reg_0;
  input esc_ctrl_t_reg_0;
  input txulpsesc_r_reg_0;
  input \FSM_sequential_dl_tx_state_reg[3] ;
  input [3:0]Q;
  input \FSM_sequential_dl_tx_state_reg[2]_1 ;
  input \bit_cnt_reg[0] ;
  input \bit_cnt_reg[0]_0 ;
  input \FSM_sequential_dl_tx_state_reg[0] ;
  input out;
  input tx_dl_lp_dn_reg_0;
  input tx_dl_lp_dn_reg_1;
  input tx_dl_lp_dp_reg_0;
  input dl2_txrequestesc;
  input tx_dl_lp_dn_esc_i;
  input tx_dl_lp_dp_esc_i;
  input [7:0]\esc_cmd_data_reg[6] ;
  input \esc_cmd_data_reg[3] ;
  input [7:0]dl2_txdataesc;
  input \esc_cmd_data_reg[3]_0 ;
  input [3:0]\FSM_sequential_dl_tx_state_reg[2]_2 ;
  input txlpdtesc_r;
  input txulpsesc_r;
  input [3:0]\FSM_sequential_dl_tx_state_reg[2]_3 ;
  input dl2_txulpsexit;
  input \bit_cnt_reg[3] ;
  input dl_ulpsactivenot_reg;
  input dl2_ulpsactivenot;
  input [3:0]dl2_txtriggeresc;
  input dl2_txulpsesc;
  input dl2_txlpdtesc;
  input esc_ctrl_i;
  input esc_ctrl_t_reg_1;
  input tx_dl_lp_dp_reg_1;
  input tx_dl_lp_dn_reg_2;
  input \bit_cnt_reg[3]_0 ;
  input \bit_cnt_reg[3]_1 ;

  wire [3:0]D;
  wire [0:0]E;
  wire \FSM_sequential_dl_tx_state[0]_i_2__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[0]_i_4__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_2__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_3__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_4__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_5__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_6__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_4__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_5__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_6__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_7__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_10__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_4__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_5__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_7__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_8__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_9__1_n_0 ;
  wire \FSM_sequential_dl_tx_state_reg[0] ;
  wire [0:0]\FSM_sequential_dl_tx_state_reg[1] ;
  wire \FSM_sequential_dl_tx_state_reg[1]_0 ;
  wire [0:0]\FSM_sequential_dl_tx_state_reg[2] ;
  wire [1:0]\FSM_sequential_dl_tx_state_reg[2]_0 ;
  wire \FSM_sequential_dl_tx_state_reg[2]_1 ;
  wire [3:0]\FSM_sequential_dl_tx_state_reg[2]_2 ;
  wire [3:0]\FSM_sequential_dl_tx_state_reg[2]_3 ;
  wire \FSM_sequential_dl_tx_state_reg[3] ;
  wire [3:0]Q;
  wire \bit_cnt[3]_i_10__1_n_0 ;
  wire \bit_cnt[3]_i_11__1_n_0 ;
  wire \bit_cnt[3]_i_13__1_n_0 ;
  wire \bit_cnt[3]_i_3__1_n_0 ;
  wire \bit_cnt[3]_i_4__1_n_0 ;
  wire \bit_cnt[3]_i_9__1_n_0 ;
  wire \bit_cnt_reg[0] ;
  wire \bit_cnt_reg[0]_0 ;
  wire \bit_cnt_reg[3] ;
  wire \bit_cnt_reg[3]_0 ;
  wire \bit_cnt_reg[3]_1 ;
  wire dl0_txclkesc;
  wire [7:0]dl2_txdataesc;
  wire dl2_txlpdtesc;
  wire dl2_txlpdtesc_0;
  wire dl2_txrequestesc;
  wire [3:0]dl2_txtriggeresc;
  wire [0:0]\dl2_txtriggeresc[2] ;
  wire [3:0]\dl2_txtriggeresc[3] ;
  wire dl2_txulpsesc;
  wire dl2_txulpsesc_0;
  wire dl2_txulpsexit;
  wire dl2_txvalidesc;
  wire dl2_txvalidesc_0;
  wire dl2_ulpsactivenot;
  wire dl_txreadyesc_reg;
  wire dl_txreadyesc_reg_0;
  wire dl_ulpsactivenot0;
  wire dl_ulpsactivenot_i_2__1_n_0;
  wire dl_ulpsactivenot_reg;
  wire \esc_cmd_data[0]_i_2__1_n_0 ;
  wire \esc_cmd_data[0]_i_3__1_n_0 ;
  wire \esc_cmd_data[1]_i_2__1_n_0 ;
  wire \esc_cmd_data[2]_i_2__1_n_0 ;
  wire \esc_cmd_data[5]_i_2__1_n_0 ;
  wire \esc_cmd_data[5]_i_3__1_n_0 ;
  wire \esc_cmd_data[6]_i_2__1_n_0 ;
  wire \esc_cmd_data[7]_i_3__1_n_0 ;
  wire \esc_cmd_data[7]_i_6__1_n_0 ;
  wire \esc_cmd_data[7]_i_7__1_n_0 ;
  wire \esc_cmd_data_reg[3] ;
  wire \esc_cmd_data_reg[3]_0 ;
  wire [7:0]\esc_cmd_data_reg[6] ;
  wire esc_ctrl_i;
  wire esc_ctrl_t_i_2__1_n_0;
  wire esc_ctrl_t_i_3__1_n_0;
  wire esc_ctrl_t_reg;
  wire esc_ctrl_t_reg_0;
  wire esc_ctrl_t_reg_1;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_dl_lp_dn_esc_i;
  wire tx_dl_lp_dn_i_11__1_n_0;
  wire tx_dl_lp_dn_i_13__1_n_0;
  wire tx_dl_lp_dn_i_2__4_n_0;
  wire tx_dl_lp_dn_i_3__1_n_0;
  wire tx_dl_lp_dn_i_4__1_n_0;
  wire tx_dl_lp_dn_i_5__1_n_0;
  wire tx_dl_lp_dn_i_7__1_n_0;
  wire tx_dl_lp_dn_i_8__1_n_0;
  wire tx_dl_lp_dn_i_9__1_n_0;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dn_reg_1;
  wire tx_dl_lp_dn_reg_2;
  wire tx_dl_lp_dp_esc_i;
  wire tx_dl_lp_dp_i_2__4_n_0;
  wire tx_dl_lp_dp_i_3__4_n_0;
  wire tx_dl_lp_dp_i_4__4_n_0;
  wire tx_dl_lp_dp_i_5__4_n_0;
  wire tx_dl_lp_dp_reg;
  wire tx_dl_lp_dp_reg_0;
  wire tx_dl_lp_dp_reg_1;
  wire txlpdtesc_r;
  wire \txtriggeresc_r[3]_i_3__1_n_0 ;
  wire \txtriggeresc_r_reg[0] ;
  wire [7:0]\txtriggeresc_r_reg[2] ;
  wire txulpsesc_r;
  wire txulpsesc_r_reg;
  wire txulpsesc_r_reg_0;

  LUT6 #(
    .INIT(64'h00000000770177CD)) 
    \FSM_sequential_dl_tx_state[0]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(\txtriggeresc_r_reg[0] ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\FSM_sequential_dl_tx_state[0]_i_2__1_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000400)) 
    \FSM_sequential_dl_tx_state[0]_i_2__1 
       (.I0(\txtriggeresc_r_reg[0] ),
        .I1(\FSM_sequential_dl_tx_state_reg[0] ),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_4__1_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[0]_i_4__1_n_0 ),
        .O(\FSM_sequential_dl_tx_state[0]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h3000300030013000)) 
    \FSM_sequential_dl_tx_state[0]_i_4__1 
       (.I0(\esc_cmd_data_reg[3] ),
        .I1(\esc_cmd_data[0]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_tx_state[0]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h44444444FF4F4F44)) 
    \FSM_sequential_dl_tx_state[1]_i_1__1 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_2__1_n_0 ),
        .I1(\FSM_sequential_dl_tx_state[1]_i_3__1_n_0 ),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(\txtriggeresc_r_reg[0] ),
        .I5(Q[1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hBBB8BBBBFFFFCCCC)) 
    \FSM_sequential_dl_tx_state[1]_i_2__1 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_4__1_n_0 ),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(\esc_cmd_data[0]_i_2__1_n_0 ),
        .I4(\FSM_sequential_dl_tx_state[1]_i_5__1_n_0 ),
        .I5(Q[3]),
        .O(\FSM_sequential_dl_tx_state[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFBFFFBFBFB)) 
    \FSM_sequential_dl_tx_state[1]_i_3__1 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_6__1_n_0 ),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(dl2_txvalidesc),
        .I4(dl_txreadyesc_reg_0),
        .I5(\esc_cmd_data[0]_i_2__1_n_0 ),
        .O(\FSM_sequential_dl_tx_state[1]_i_3__1_n_0 ));
  LUT4 #(
    .INIT(16'h0007)) 
    \FSM_sequential_dl_tx_state[1]_i_4__1 
       (.I0(s_level_out_d3),
        .I1(dl2_txrequestesc),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\FSM_sequential_dl_tx_state[1]_i_4__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_dl_tx_state[1]_i_5__1 
       (.I0(\txtriggeresc_r_reg[0] ),
        .I1(Q[0]),
        .O(\FSM_sequential_dl_tx_state[1]_i_5__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    \FSM_sequential_dl_tx_state[1]_i_6__1 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_3 [2]),
        .I1(\FSM_sequential_dl_tx_state_reg[2]_3 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_3 [3]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_7__1_n_0 ),
        .O(\FSM_sequential_dl_tx_state[1]_i_6__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFA80000)) 
    \FSM_sequential_dl_tx_state[2]_i_1__1 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_1 ),
        .I1(\txtriggeresc_r_reg[0] ),
        .I2(\FSM_sequential_dl_tx_state[2]_i_4__1_n_0 ),
        .I3(\FSM_sequential_dl_tx_state[2]_i_5__1_n_0 ),
        .I4(Q[1]),
        .I5(\FSM_sequential_dl_tx_state[2]_i_6__1_n_0 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAAE)) 
    \FSM_sequential_dl_tx_state[2]_i_3__1 
       (.I0(dl_ulpsactivenot_i_2__1_n_0),
        .I1(\FSM_sequential_dl_tx_state[2]_i_7__1_n_0 ),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [3]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_2 [2]),
        .O(\txtriggeresc_r_reg[0] ));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    \FSM_sequential_dl_tx_state[2]_i_4__1 
       (.I0(\esc_cmd_data[0]_i_2__1_n_0 ),
        .I1(\esc_cmd_data_reg[3] ),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_3 [2]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_3 [1]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_3 [3]),
        .O(\FSM_sequential_dl_tx_state[2]_i_4__1_n_0 ));
  LUT5 #(
    .INIT(32'h74044404)) 
    \FSM_sequential_dl_tx_state[2]_i_5__1 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(\esc_cmd_data[0]_i_2__1_n_0 ),
        .I4(dl_ulpsactivenot0),
        .O(\FSM_sequential_dl_tx_state[2]_i_5__1_n_0 ));
  LUT6 #(
    .INIT(64'h101030301010F030)) 
    \FSM_sequential_dl_tx_state[2]_i_6__1 
       (.I0(\txtriggeresc_r_reg[0] ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(dl_ulpsactivenot_i_2__1_n_0),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_tx_state[2]_i_6__1_n_0 ));
  LUT4 #(
    .INIT(16'h777F)) 
    \FSM_sequential_dl_tx_state[2]_i_7__1 
       (.I0(s_level_out_d3),
        .I1(dl2_txrequestesc),
        .I2(txlpdtesc_r),
        .I3(txulpsesc_r),
        .O(\FSM_sequential_dl_tx_state[2]_i_7__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    \FSM_sequential_dl_tx_state[2]_i_8__1 
       (.I0(dl_ulpsactivenot_i_2__1_n_0),
        .I1(txulpsesc_r),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_3 [2]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_3 [1]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_3 [3]),
        .O(dl_ulpsactivenot0));
  LUT5 #(
    .INIT(32'hEEEEFEEE)) 
    \FSM_sequential_dl_tx_state[3]_i_10__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(dl2_txrequestesc),
        .I3(s_level_out_d3),
        .I4(dl2_txulpsexit),
        .O(\FSM_sequential_dl_tx_state[3]_i_10__1_n_0 ));
  LUT6 #(
    .INIT(64'hF4F5F5FF04050505)) 
    \FSM_sequential_dl_tx_state[3]_i_2__1 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_4__1_n_0 ),
        .I1(dl_ulpsactivenot_i_2__1_n_0),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[3]),
        .I5(\FSM_sequential_dl_tx_state[3]_i_5__1_n_0 ),
        .O(\FSM_sequential_dl_tx_state_reg[2] ));
  LUT6 #(
    .INIT(64'h44F4444444444444)) 
    \FSM_sequential_dl_tx_state[3]_i_3__1 
       (.I0(dl_ulpsactivenot_i_2__1_n_0),
        .I1(\FSM_sequential_dl_tx_state_reg[3] ),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\FSM_sequential_dl_tx_state[3]_i_7__1_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[3]_i_8__1_n_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'h04040C0C04040CFC)) 
    \FSM_sequential_dl_tx_state[3]_i_4__1 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_9__1_n_0 ),
        .I1(esc_ctrl_t_i_3__1_n_0),
        .I2(Q[0]),
        .I3(\bit_cnt[3]_i_9__1_n_0 ),
        .I4(Q[3]),
        .I5(\txtriggeresc_r_reg[0] ),
        .O(\FSM_sequential_dl_tx_state[3]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h3333FF7F3333FF3F)) 
    \FSM_sequential_dl_tx_state[3]_i_5__1 
       (.I0(\bit_cnt_reg[0]_0 ),
        .I1(\FSM_sequential_dl_tx_state[3]_i_10__1_n_0 ),
        .I2(Q[1]),
        .I3(\esc_cmd_data[0]_i_2__1_n_0 ),
        .I4(Q[3]),
        .I5(Q[0]),
        .O(\FSM_sequential_dl_tx_state[3]_i_5__1_n_0 ));
  LUT5 #(
    .INIT(32'h8000FFFF)) 
    \FSM_sequential_dl_tx_state[3]_i_7__1 
       (.I0(s_level_out_d3),
        .I1(dl2_txrequestesc),
        .I2(txlpdtesc_r),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\FSM_sequential_dl_tx_state[3]_i_7__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT4 #(
    .INIT(16'hF1FF)) 
    \FSM_sequential_dl_tx_state[3]_i_8__1 
       (.I0(\FSM_sequential_dl_tx_state[2]_i_4__1_n_0 ),
        .I1(\txtriggeresc_r_reg[0] ),
        .I2(Q[2]),
        .I3(Q[0]),
        .O(\FSM_sequential_dl_tx_state[3]_i_8__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFFBFFFBFFF)) 
    \FSM_sequential_dl_tx_state[3]_i_9__1 
       (.I0(Q[1]),
        .I1(s_level_out_d3),
        .I2(dl2_txrequestesc),
        .I3(txlpdtesc_r),
        .I4(dl_txreadyesc_reg_0),
        .I5(dl2_txvalidesc),
        .O(\FSM_sequential_dl_tx_state[3]_i_9__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000D00000)) 
    \bit_cnt[0]_i_1__1 
       (.I0(\bit_cnt[3]_i_9__1_n_0 ),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[0]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .O(\FSM_sequential_dl_tx_state_reg[2]_0 [0]));
  LUT5 #(
    .INIT(32'h22222002)) 
    \bit_cnt[3]_i_10__1 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_6__1_n_0 ),
        .I1(\FSM_sequential_dl_tx_state[2]_i_4__1_n_0 ),
        .I2(tx_dl_lp_dn_esc_i),
        .I3(tx_dl_lp_dp_esc_i),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_3 [3]),
        .O(\bit_cnt[3]_i_10__1_n_0 ));
  LUT6 #(
    .INIT(64'hBABBBBBBBAABBBAB)) 
    \bit_cnt[3]_i_11__1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(\bit_cnt[3]_i_13__1_n_0 ),
        .I5(\txtriggeresc_r_reg[0] ),
        .O(\bit_cnt[3]_i_11__1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \bit_cnt[3]_i_13__1 
       (.I0(dl2_txvalidesc),
        .I1(dl_txreadyesc_reg_0),
        .I2(txlpdtesc_r),
        .I3(dl2_txrequestesc),
        .I4(s_level_out_d3),
        .O(\bit_cnt[3]_i_13__1_n_0 ));
  LUT6 #(
    .INIT(64'hAEAAAAAAAEAAAEAA)) 
    \bit_cnt[3]_i_1__1 
       (.I0(\bit_cnt[3]_i_3__1_n_0 ),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(\bit_cnt[3]_i_4__1_n_0 ),
        .I4(\bit_cnt_reg[0] ),
        .I5(\bit_cnt_reg[0]_0 ),
        .O(E));
  LUT5 #(
    .INIT(32'h11010001)) 
    \bit_cnt[3]_i_2__1 
       (.I0(\bit_cnt_reg[3]_0 ),
        .I1(\bit_cnt_reg[3]_1 ),
        .I2(\bit_cnt[3]_i_9__1_n_0 ),
        .I3(Q[2]),
        .I4(\bit_cnt_reg[0]_0 ),
        .O(\FSM_sequential_dl_tx_state_reg[2]_0 [1]));
  LUT6 #(
    .INIT(64'h000000001F1F1F3F)) 
    \bit_cnt[3]_i_3__1 
       (.I0(Q[0]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(\txtriggeresc_r_reg[0] ),
        .I4(\bit_cnt[3]_i_10__1_n_0 ),
        .I5(\bit_cnt[3]_i_11__1_n_0 ),
        .O(\bit_cnt[3]_i_3__1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \bit_cnt[3]_i_4__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(txlpdtesc_r),
        .I3(dl2_txrequestesc),
        .I4(s_level_out_d3),
        .O(\bit_cnt[3]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h80000000FFFFFFFF)) 
    \bit_cnt[3]_i_9__1 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_3 [2]),
        .I1(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_3 [1]),
        .I3(\bit_cnt_reg[0] ),
        .I4(\bit_cnt_reg[3] ),
        .I5(\FSM_sequential_dl_tx_state[1]_i_6__1_n_0 ),
        .O(\bit_cnt[3]_i_9__1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000005C)) 
    dl_txreadyesc_i_1__1
       (.I0(dl2_txvalidesc),
        .I1(dl_txreadyesc_reg),
        .I2(dl_txreadyesc_reg_0),
        .I3(esc_ctrl_t_reg_0),
        .I4(dl_ulpsactivenot_i_2__1_n_0),
        .I5(txulpsesc_r_reg_0),
        .O(dl2_txvalidesc_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFB00)) 
    dl_ulpsactivenot_i_1__1
       (.I0(dl_ulpsactivenot_i_2__1_n_0),
        .I1(txulpsesc_r),
        .I2(dl_ulpsactivenot_reg),
        .I3(dl2_ulpsactivenot),
        .I4(dl2_txulpsexit),
        .I5(esc_ctrl_t_reg_0),
        .O(txulpsesc_r_reg));
  LUT2 #(
    .INIT(4'h7)) 
    dl_ulpsactivenot_i_2__1
       (.I0(dl2_txrequestesc),
        .I1(s_level_out_d3),
        .O(dl_ulpsactivenot_i_2__1_n_0));
  LUT6 #(
    .INIT(64'hB888B8BBB8BBB8BB)) 
    \esc_cmd_data[0]_i_1__1 
       (.I0(\esc_cmd_data_reg[6] [1]),
        .I1(\esc_cmd_data_reg[3]_0 ),
        .I2(dl2_txdataesc[0]),
        .I3(\esc_cmd_data_reg[3] ),
        .I4(\esc_cmd_data[0]_i_2__1_n_0 ),
        .I5(\esc_cmd_data[0]_i_3__1_n_0 ),
        .O(\txtriggeresc_r_reg[2] [0]));
  LUT3 #(
    .INIT(8'h7F)) 
    \esc_cmd_data[0]_i_2__1 
       (.I0(s_level_out_d3),
        .I1(dl2_txrequestesc),
        .I2(txlpdtesc_r),
        .O(\esc_cmd_data[0]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF80)) 
    \esc_cmd_data[0]_i_3__1 
       (.I0(dl2_txrequestesc),
        .I1(s_level_out_d3),
        .I2(txulpsesc_r),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_2 [2]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .O(\esc_cmd_data[0]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8BBB8BBB8B8B8)) 
    \esc_cmd_data[1]_i_1__1 
       (.I0(\esc_cmd_data_reg[6] [2]),
        .I1(\esc_cmd_data_reg[3]_0 ),
        .I2(\esc_cmd_data[1]_i_2__1_n_0 ),
        .I3(\esc_cmd_data[7]_i_6__1_n_0 ),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .O(\txtriggeresc_r_reg[2] [1]));
  LUT6 #(
    .INIT(64'hFF00808080808080)) 
    \esc_cmd_data[1]_i_2__1 
       (.I0(s_level_out_d3),
        .I1(dl2_txrequestesc),
        .I2(txlpdtesc_r),
        .I3(dl2_txdataesc[1]),
        .I4(dl_txreadyesc_reg_0),
        .I5(dl2_txvalidesc),
        .O(\esc_cmd_data[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h8B8B888B8B8B8B8B)) 
    \esc_cmd_data[2]_i_1__1 
       (.I0(\esc_cmd_data_reg[6] [3]),
        .I1(\esc_cmd_data_reg[3]_0 ),
        .I2(\esc_cmd_data[2]_i_2__1_n_0 ),
        .I3(\esc_cmd_data[7]_i_6__1_n_0 ),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .O(\txtriggeresc_r_reg[2] [2]));
  LUT6 #(
    .INIT(64'h0000FFFF40004000)) 
    \esc_cmd_data[2]_i_2__1 
       (.I0(txlpdtesc_r),
        .I1(dl2_txrequestesc),
        .I2(s_level_out_d3),
        .I3(txulpsesc_r),
        .I4(dl2_txdataesc[2]),
        .I5(\esc_cmd_data_reg[3] ),
        .O(\esc_cmd_data[2]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEAEAAAAFEAE)) 
    \esc_cmd_data[3]_i_1__1 
       (.I0(\esc_cmd_data[5]_i_2__1_n_0 ),
        .I1(\esc_cmd_data[5]_i_3__1_n_0 ),
        .I2(\esc_cmd_data_reg[3] ),
        .I3(dl2_txdataesc[3]),
        .I4(\esc_cmd_data_reg[3]_0 ),
        .I5(\esc_cmd_data_reg[6] [4]),
        .O(\txtriggeresc_r_reg[2] [3]));
  LUT6 #(
    .INIT(64'hFFFFFEAEAAAAFEAE)) 
    \esc_cmd_data[4]_i_1__1 
       (.I0(\esc_cmd_data[5]_i_2__1_n_0 ),
        .I1(\esc_cmd_data[5]_i_3__1_n_0 ),
        .I2(\esc_cmd_data_reg[3] ),
        .I3(dl2_txdataesc[4]),
        .I4(\esc_cmd_data_reg[3]_0 ),
        .I5(\esc_cmd_data_reg[6] [5]),
        .O(\txtriggeresc_r_reg[2] [4]));
  LUT6 #(
    .INIT(64'hFFFFFEAEAAAAFEAE)) 
    \esc_cmd_data[5]_i_1__1 
       (.I0(\esc_cmd_data[5]_i_2__1_n_0 ),
        .I1(\esc_cmd_data[5]_i_3__1_n_0 ),
        .I2(\esc_cmd_data_reg[3] ),
        .I3(dl2_txdataesc[5]),
        .I4(\esc_cmd_data_reg[3]_0 ),
        .I5(\esc_cmd_data_reg[6] [6]),
        .O(\txtriggeresc_r_reg[2] [5]));
  LUT4 #(
    .INIT(16'h0400)) 
    \esc_cmd_data[5]_i_2__1 
       (.I0(\esc_cmd_data_reg[3]_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I3(\esc_cmd_data[7]_i_6__1_n_0 ),
        .O(\esc_cmd_data[5]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'h2000)) 
    \esc_cmd_data[5]_i_3__1 
       (.I0(txulpsesc_r),
        .I1(txlpdtesc_r),
        .I2(dl2_txrequestesc),
        .I3(s_level_out_d3),
        .O(\esc_cmd_data[5]_i_3__1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \esc_cmd_data[6]_i_1__1 
       (.I0(\esc_cmd_data_reg[6] [7]),
        .I1(\esc_cmd_data_reg[3]_0 ),
        .I2(\esc_cmd_data[6]_i_2__1_n_0 ),
        .O(\txtriggeresc_r_reg[2] [6]));
  LUT6 #(
    .INIT(64'hFFFF8B8A00008B8A)) 
    \esc_cmd_data[6]_i_2__1 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I1(dl_ulpsactivenot_i_2__1_n_0),
        .I2(txlpdtesc_r),
        .I3(txulpsesc_r),
        .I4(\esc_cmd_data_reg[3] ),
        .I5(dl2_txdataesc[6]),
        .O(\esc_cmd_data[6]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF1000)) 
    \esc_cmd_data[7]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[3]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_1 ),
        .I3(\esc_cmd_data[7]_i_3__1_n_0 ),
        .I4(\esc_cmd_data_reg[3]_0 ),
        .I5(\esc_cmd_data_reg[3] ),
        .O(\FSM_sequential_dl_tx_state_reg[1] ));
  LUT6 #(
    .INIT(64'h0000444055555555)) 
    \esc_cmd_data[7]_i_2__1 
       (.I0(\esc_cmd_data_reg[3]_0 ),
        .I1(\esc_cmd_data[7]_i_6__1_n_0 ),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_2 [2]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I5(\esc_cmd_data[7]_i_7__1_n_0 ),
        .O(\txtriggeresc_r_reg[2] [7]));
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    \esc_cmd_data[7]_i_3__1 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_2 [2]),
        .I1(\FSM_sequential_dl_tx_state_reg[2]_2 [3]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_7__1_n_0 ),
        .O(\esc_cmd_data[7]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h00001FFF1FFF1FFF)) 
    \esc_cmd_data[7]_i_6__1 
       (.I0(txulpsesc_r),
        .I1(txlpdtesc_r),
        .I2(dl2_txrequestesc),
        .I3(s_level_out_d3),
        .I4(dl2_txvalidesc),
        .I5(dl_txreadyesc_reg_0),
        .O(\esc_cmd_data[7]_i_6__1_n_0 ));
  LUT6 #(
    .INIT(64'h55553FFF3FFF3FFF)) 
    \esc_cmd_data[7]_i_7__1 
       (.I0(dl2_txdataesc[7]),
        .I1(s_level_out_d3),
        .I2(dl2_txrequestesc),
        .I3(txlpdtesc_r),
        .I4(dl_txreadyesc_reg_0),
        .I5(dl2_txvalidesc),
        .O(\esc_cmd_data[7]_i_7__1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000222E)) 
    esc_ctrl_t_i_1__1
       (.I0(esc_ctrl_i),
        .I1(esc_ctrl_t_i_2__1_n_0),
        .I2(esc_ctrl_t_i_3__1_n_0),
        .I3(Q[3]),
        .I4(esc_ctrl_t_reg_1),
        .I5(esc_ctrl_t_reg_0),
        .O(esc_ctrl_t_reg));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT5 #(
    .INIT(32'h04570042)) 
    esc_ctrl_t_i_2__1
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(\txtriggeresc_r_reg[0] ),
        .O(esc_ctrl_t_i_2__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    esc_ctrl_t_i_3__1
       (.I0(Q[1]),
        .I1(\txtriggeresc_r_reg[0] ),
        .I2(out),
        .O(esc_ctrl_t_i_3__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'h64)) 
    esc_stopstate_i_2__1
       (.I0(Q[1]),
        .I1(\txtriggeresc_r_reg[0] ),
        .I2(out),
        .O(\FSM_sequential_dl_tx_state_reg[1]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h43FF4FFF43434F43)) 
    tx_dl_lp_dn_i_11__1
       (.I0(tx_dl_lp_dn_i_13__1_n_0),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\esc_cmd_data[0]_i_2__1_n_0 ),
        .I5(\txtriggeresc_r_reg[0] ),
        .O(tx_dl_lp_dn_i_11__1_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAA8AA8AAAA)) 
    tx_dl_lp_dn_i_13__1
       (.I0(Q[1]),
        .I1(\esc_cmd_data_reg[6] [0]),
        .I2(tx_dl_lp_dn_esc_i),
        .I3(tx_dl_lp_dp_esc_i),
        .I4(\bit_cnt_reg[0]_0 ),
        .I5(\esc_cmd_data[0]_i_2__1_n_0 ),
        .O(tx_dl_lp_dn_i_13__1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFEFE02)) 
    tx_dl_lp_dn_i_1__4
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dn_i_2__4_n_0),
        .I2(tx_dl_lp_dn_i_3__1_n_0),
        .I3(tx_dl_lp_dn_i_4__1_n_0),
        .I4(tx_dl_lp_dn_i_5__1_n_0),
        .I5(tx_dl_lp_dp_reg_1),
        .O(tx_dl_lp_dn_reg));
  LUT6 #(
    .INIT(64'hFF04FF04FF040000)) 
    tx_dl_lp_dn_i_2__4
       (.I0(Q[3]),
        .I1(Q[0]),
        .I2(tx_dl_lp_dn_reg_0),
        .I3(\FSM_sequential_dl_tx_state[3]_i_5__1_n_0 ),
        .I4(tx_dl_lp_dn_i_7__1_n_0),
        .I5(Q[2]),
        .O(tx_dl_lp_dn_i_2__4_n_0));
  LUT6 #(
    .INIT(64'h88808888AAAAAAAA)) 
    tx_dl_lp_dn_i_3__1
       (.I0(tx_dl_lp_dn_i_8__1_n_0),
        .I1(\FSM_sequential_dl_tx_state[3]_i_9__1_n_0 ),
        .I2(\bit_cnt[3]_i_9__1_n_0 ),
        .I3(tx_dl_lp_dn_i_9__1_n_0),
        .I4(tx_dl_lp_dn_reg_0),
        .I5(tx_dl_lp_dn_reg_1),
        .O(tx_dl_lp_dn_i_3__1_n_0));
  LUT6 #(
    .INIT(64'h1151004000400040)) 
    tx_dl_lp_dn_i_4__1
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(dl_ulpsactivenot_i_2__1_n_0),
        .I4(Q[0]),
        .I5(\txtriggeresc_r_reg[0] ),
        .O(tx_dl_lp_dn_i_4__1_n_0));
  LUT6 #(
    .INIT(64'h4444444444444445)) 
    tx_dl_lp_dn_i_5__1
       (.I0(Q[3]),
        .I1(tx_dl_lp_dn_i_11__1_n_0),
        .I2(tx_dl_lp_dn_i_9__1_n_0),
        .I3(\bit_cnt[3]_i_9__1_n_0 ),
        .I4(tx_dl_lp_dn_reg_2),
        .I5(Q[2]),
        .O(tx_dl_lp_dn_i_5__1_n_0));
  LUT6 #(
    .INIT(64'h0000555500007FFF)) 
    tx_dl_lp_dn_i_7__1
       (.I0(Q[1]),
        .I1(s_level_out_d3),
        .I2(dl2_txrequestesc),
        .I3(txlpdtesc_r),
        .I4(Q[3]),
        .I5(Q[0]),
        .O(tx_dl_lp_dn_i_7__1_n_0));
  LUT5 #(
    .INIT(32'h15555555)) 
    tx_dl_lp_dn_i_8__1
       (.I0(Q[2]),
        .I1(dl2_txrequestesc),
        .I2(s_level_out_d3),
        .I3(Q[3]),
        .I4(Q[1]),
        .O(tx_dl_lp_dn_i_8__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'hB)) 
    tx_dl_lp_dn_i_9__1
       (.I0(\txtriggeresc_r_reg[0] ),
        .I1(Q[1]),
        .O(tx_dl_lp_dn_i_9__1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFEFE02)) 
    tx_dl_lp_dp_i_1__4
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(tx_dl_lp_dn_i_2__4_n_0),
        .I2(tx_dl_lp_dn_i_3__1_n_0),
        .I3(tx_dl_lp_dp_i_2__4_n_0),
        .I4(tx_dl_lp_dp_i_3__4_n_0),
        .I5(tx_dl_lp_dp_reg_1),
        .O(tx_dl_lp_dp_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFF55300000)) 
    tx_dl_lp_dp_i_2__4
       (.I0(\FSM_sequential_dl_tx_state[3]_i_10__1_n_0 ),
        .I1(tx_dl_lp_dp_i_4__4_n_0),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(tx_dl_lp_dp_i_5__4_n_0),
        .O(tx_dl_lp_dp_i_2__4_n_0));
  LUT6 #(
    .INIT(64'h4044404440444444)) 
    tx_dl_lp_dp_i_3__4
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(\txtriggeresc_r_reg[0] ),
        .I3(Q[0]),
        .I4(\bit_cnt[3]_i_9__1_n_0 ),
        .I5(tx_dl_lp_dp_reg_0),
        .O(tx_dl_lp_dp_i_3__4_n_0));
  LUT6 #(
    .INIT(64'h000000007DFF0000)) 
    tx_dl_lp_dp_i_4__4
       (.I0(\bit_cnt_reg[0]_0 ),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(tx_dl_lp_dp_esc_i),
        .I3(\esc_cmd_data_reg[6] [0]),
        .I4(Q[1]),
        .I5(\esc_cmd_data[0]_i_2__1_n_0 ),
        .O(tx_dl_lp_dp_i_4__4_n_0));
  LUT6 #(
    .INIT(64'h323232320F0FFF00)) 
    tx_dl_lp_dp_i_5__4
       (.I0(\esc_cmd_data[0]_i_2__1_n_0 ),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(\txtriggeresc_r_reg[0] ),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(tx_dl_lp_dp_i_5__4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT4 #(
    .INIT(16'h7530)) 
    txlpdtesc_r_i_1__1
       (.I0(txulpsesc_r_reg_0),
        .I1(\txtriggeresc_r[3]_i_3__1_n_0 ),
        .I2(dl2_txlpdtesc),
        .I3(txlpdtesc_r),
        .O(dl2_txlpdtesc_0));
  LUT6 #(
    .INIT(64'h0002000000000200)) 
    \txtriggeresc_r[0]_i_1__1 
       (.I0(dl2_txtriggeresc[0]),
        .I1(dl_ulpsactivenot_i_2__1_n_0),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\dl2_txtriggeresc[3] [0]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \txtriggeresc_r[1]_i_1__1 
       (.I0(\txtriggeresc_r[3]_i_3__1_n_0 ),
        .I1(dl2_txtriggeresc[1]),
        .O(\dl2_txtriggeresc[3] [1]));
  LUT6 #(
    .INIT(64'h0002000000000200)) 
    \txtriggeresc_r[2]_i_1__1 
       (.I0(dl2_txtriggeresc[2]),
        .I1(dl_ulpsactivenot_i_2__1_n_0),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\dl2_txtriggeresc[3] [2]));
  LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBBA)) 
    \txtriggeresc_r[3]_i_1__1 
       (.I0(txulpsesc_r_reg_0),
        .I1(\txtriggeresc_r[3]_i_3__1_n_0 ),
        .I2(dl2_txtriggeresc[2]),
        .I3(dl2_txtriggeresc[1]),
        .I4(dl2_txtriggeresc[3]),
        .I5(dl2_txtriggeresc[0]),
        .O(\dl2_txtriggeresc[2] ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \txtriggeresc_r[3]_i_2__1 
       (.I0(\txtriggeresc_r[3]_i_3__1_n_0 ),
        .I1(dl2_txtriggeresc[3]),
        .O(\dl2_txtriggeresc[3] [3]));
  LUT6 #(
    .INIT(64'hFFE7FFFFFFFFFFFF)) 
    \txtriggeresc_r[3]_i_3__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(s_level_out_d3),
        .I5(dl2_txrequestesc),
        .O(\txtriggeresc_r[3]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT4 #(
    .INIT(16'h7530)) 
    txulpsesc_r_i_1__1
       (.I0(txulpsesc_r_reg_0),
        .I1(\txtriggeresc_r[3]_i_3__1_n_0 ),
        .I2(dl2_txulpsesc),
        .I3(txulpsesc_r),
        .O(dl2_txulpsesc_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_38
   (out,
    core_rst,
    dl2_forcetxstopmode,
    core_clk);
  output out;
  input core_rst;
  input dl2_forcetxstopmode;
  input core_clk;

  wire core_clk;
  wire core_rst;
  wire dl2_forcetxstopmode;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl2_forcetxstopmode),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_39
   (\dl_tx_sm_state_reg[1] ,
    \dl_tx_sm_state_reg[2] ,
    \dl_tx_sm_state_reg[0] ,
    \dl_tx_sm_state_reg[0]_0 ,
    p_0_in23_out,
    \dl_tx_sm_state_reg[1]_0 ,
    s_level_out_d3_reg_0,
    s_level_out_d3_reg_1,
    \dl_tx_sm_state_reg[1]_1 ,
    core_rst,
    dl2_txrequestesc,
    core_clk,
    esc_start_reg,
    dl_tx_sm_state125_out,
    esc_start_i,
    \dl_tx_sm_state_reg[2]_0 ,
    \dl_tx_sm_state_reg[2]_1 ,
    \dl_tx_sm_state_reg[2]_2 ,
    \dl_tx_sm_state_reg[0]_1 ,
    en_hs_start_w__4,
    cl_init_done_coreclk_i,
    dl_stopstate_i_2__1_0,
    dl_tx_sm_state120_out,
    \dl_tx_sm_state_reg[2]_3 ,
    p_21_in,
    timeout_prepare,
    esc_active_sync_r,
    out,
    dl_status_bit_6_reg,
    timeout_hsexit_all);
  output \dl_tx_sm_state_reg[1] ;
  output \dl_tx_sm_state_reg[2] ;
  output \dl_tx_sm_state_reg[0] ;
  output \dl_tx_sm_state_reg[0]_0 ;
  output p_0_in23_out;
  output \dl_tx_sm_state_reg[1]_0 ;
  output s_level_out_d3_reg_0;
  output s_level_out_d3_reg_1;
  output \dl_tx_sm_state_reg[1]_1 ;
  input core_rst;
  input dl2_txrequestesc;
  input core_clk;
  input esc_start_reg;
  input dl_tx_sm_state125_out;
  input esc_start_i;
  input \dl_tx_sm_state_reg[2]_0 ;
  input \dl_tx_sm_state_reg[2]_1 ;
  input \dl_tx_sm_state_reg[2]_2 ;
  input \dl_tx_sm_state_reg[0]_1 ;
  input en_hs_start_w__4;
  input cl_init_done_coreclk_i;
  input dl_stopstate_i_2__1_0;
  input dl_tx_sm_state120_out;
  input \dl_tx_sm_state_reg[2]_3 ;
  input p_21_in;
  input timeout_prepare;
  input esc_active_sync_r;
  input out;
  input dl_status_bit_6_reg;
  input timeout_hsexit_all;

  wire cl_init_done_coreclk_i;
  wire core_clk;
  wire core_rst;
  wire dl2_txrequestesc;
  wire dl_status_bit_6_i_6__1_n_0;
  wire dl_status_bit_6_reg;
  wire dl_stopstate_i_2__1_0;
  wire dl_stopstate_i_5__1_n_0;
  wire dl_tx_sm_state118_out;
  wire dl_tx_sm_state120_out;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state[2]_i_2__1_n_0 ;
  wire [0:0]dl_tx_sm_state__0;
  wire \dl_tx_sm_state_reg[0] ;
  wire \dl_tx_sm_state_reg[0]_0 ;
  wire \dl_tx_sm_state_reg[0]_1 ;
  wire \dl_tx_sm_state_reg[1] ;
  wire \dl_tx_sm_state_reg[1]_0 ;
  wire \dl_tx_sm_state_reg[1]_1 ;
  wire \dl_tx_sm_state_reg[2] ;
  wire \dl_tx_sm_state_reg[2]_0 ;
  wire \dl_tx_sm_state_reg[2]_1 ;
  wire \dl_tx_sm_state_reg[2]_2 ;
  wire \dl_tx_sm_state_reg[2]_3 ;
  wire en_hs_start_w__4;
  wire esc_active_sync_r;
  wire esc_start11_out;
  wire esc_start_i;
  wire esc_start_i_3__1_n_0;
  wire esc_start_reg;
  wire out;
  wire p_0_in23_out;
  wire p_21_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_hsexit_all;
  wire timeout_prepare;

  LUT5 #(
    .INIT(32'h88808080)) 
    dl_status_bit_6_i_4__1
       (.I0(esc_start_reg),
        .I1(\dl_tx_sm_state_reg[2]_2 ),
        .I2(dl_status_bit_6_i_6__1_n_0),
        .I3(\dl_tx_sm_state_reg[0]_0 ),
        .I4(dl_status_bit_6_reg),
        .O(\dl_tx_sm_state_reg[1]_1 ));
  LUT6 #(
    .INIT(64'h00700070FF700070)) 
    dl_status_bit_6_i_6__1
       (.I0(s_level_out_d3),
        .I1(\dl_tx_sm_state_reg[2]_3 ),
        .I2(timeout_hsexit_all),
        .I3(\dl_tx_sm_state_reg[0]_1 ),
        .I4(esc_active_sync_r),
        .I5(out),
        .O(dl_status_bit_6_i_6__1_n_0));
  LUT3 #(
    .INIT(8'hBF)) 
    dl_status_bit_6_i_7__1
       (.I0(\dl_tx_sm_state_reg[0]_1 ),
        .I1(\dl_tx_sm_state_reg[2]_3 ),
        .I2(s_level_out_d3),
        .O(\dl_tx_sm_state_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hFBFFFBAA)) 
    dl_stopstate_i_2__1
       (.I0(dl_tx_sm_state125_out),
        .I1(esc_start_reg),
        .I2(dl_status_bit_6_i_6__1_n_0),
        .I3(\dl_tx_sm_state_reg[2]_2 ),
        .I4(dl_stopstate_i_5__1_n_0),
        .O(\dl_tx_sm_state_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hAAAAAFFFCCCCCCCC)) 
    dl_stopstate_i_5__1
       (.I0(\dl_tx_sm_state_reg[0]_1 ),
        .I1(cl_init_done_coreclk_i),
        .I2(dl_stopstate_i_2__1_0),
        .I3(s_level_out_d3),
        .I4(en_hs_start_w__4),
        .I5(esc_start_reg),
        .O(dl_stopstate_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h2F20)) 
    \dl_tx_sm_state[0]_i_1__1 
       (.I0(dl_tx_sm_state__0),
        .I1(dl_tx_sm_state125_out),
        .I2(\dl_tx_sm_state_reg[2]_1 ),
        .I3(\dl_tx_sm_state_reg[0]_1 ),
        .O(\dl_tx_sm_state_reg[0] ));
  LUT6 #(
    .INIT(64'h0C0F0A0F0C000A0F)) 
    \dl_tx_sm_state[0]_i_2__1 
       (.I0(s_level_out_d3_reg_0),
        .I1(dl_tx_sm_state118_out),
        .I2(\dl_tx_sm_state_reg[0]_1 ),
        .I3(esc_start_reg),
        .I4(\dl_tx_sm_state_reg[2]_2 ),
        .I5(dl_tx_sm_state120_out),
        .O(dl_tx_sm_state__0));
  LUT2 #(
    .INIT(4'h8)) 
    \dl_tx_sm_state[0]_i_3__1 
       (.I0(s_level_out_d3),
        .I1(\dl_tx_sm_state_reg[2]_3 ),
        .O(dl_tx_sm_state118_out));
  LUT3 #(
    .INIT(8'hF8)) 
    \dl_tx_sm_state[1]_i_4__1 
       (.I0(dl_stopstate_i_2__1_0),
        .I1(s_level_out_d3),
        .I2(en_hs_start_w__4),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'h00FF0000F8FFF8FF)) 
    \dl_tx_sm_state[2]_i_13__1 
       (.I0(dl_stopstate_i_2__1_0),
        .I1(s_level_out_d3),
        .I2(en_hs_start_w__4),
        .I3(esc_start_reg),
        .I4(cl_init_done_coreclk_i),
        .I5(\dl_tx_sm_state_reg[0]_1 ),
        .O(s_level_out_d3_reg_1));
  LUT5 #(
    .INIT(32'h0EFF0C00)) 
    \dl_tx_sm_state[2]_i_1__1 
       (.I0(\dl_tx_sm_state[2]_i_2__1_n_0 ),
        .I1(\dl_tx_sm_state_reg[2]_0 ),
        .I2(dl_tx_sm_state125_out),
        .I3(\dl_tx_sm_state_reg[2]_1 ),
        .I4(\dl_tx_sm_state_reg[2]_2 ),
        .O(\dl_tx_sm_state_reg[2] ));
  LUT6 #(
    .INIT(64'h40FF40AA40AA40AA)) 
    \dl_tx_sm_state[2]_i_2__1 
       (.I0(\dl_tx_sm_state_reg[0]_1 ),
        .I1(\dl_tx_sm_state_reg[2]_3 ),
        .I2(s_level_out_d3),
        .I3(esc_start_reg),
        .I4(p_21_in),
        .I5(timeout_prepare),
        .O(\dl_tx_sm_state[2]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \dl_tx_sm_state[2]_i_9__1 
       (.I0(s_level_out_d3),
        .I1(dl_stopstate_i_2__1_0),
        .O(p_0_in23_out));
  LUT5 #(
    .INIT(32'hAABFAA80)) 
    esc_start_i_1__1
       (.I0(esc_start11_out),
        .I1(esc_start_i_3__1_n_0),
        .I2(esc_start_reg),
        .I3(dl_tx_sm_state125_out),
        .I4(esc_start_i),
        .O(\dl_tx_sm_state_reg[1] ));
  LUT6 #(
    .INIT(64'h0000000055005530)) 
    esc_start_i_2__1
       (.I0(\dl_tx_sm_state_reg[0]_0 ),
        .I1(en_hs_start_w__4),
        .I2(p_0_in23_out),
        .I3(\dl_tx_sm_state_reg[2]_2 ),
        .I4(\dl_tx_sm_state_reg[0]_1 ),
        .I5(dl_tx_sm_state125_out),
        .O(esc_start11_out));
  LUT6 #(
    .INIT(64'h00F088880000FFFF)) 
    esc_start_i_3__1
       (.I0(\dl_tx_sm_state_reg[2]_3 ),
        .I1(s_level_out_d3),
        .I2(esc_active_sync_r),
        .I3(out),
        .I4(\dl_tx_sm_state_reg[0]_1 ),
        .I5(\dl_tx_sm_state_reg[2]_2 ),
        .O(esc_start_i_3__1_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl2_txrequestesc),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_40
   (out,
    tx_dl_lp_dn_reg,
    \dl_tx_sm_state_reg[0] ,
    dl_tx_sm_state120_out,
    \dl_tx_sm_state_reg[2] ,
    en_hs_start_w__4,
    \en_cl_init_to_blk.init_done_reg ,
    \dl_tx_sm_state_reg[2]_0 ,
    en_lp_01_cnt__4,
    core_rst,
    dl_txrequesths_r,
    core_clk,
    tx_dl_lp_dn_reg_0,
    tx_dl_lp_dn_reg_1,
    tx_dl_lp_dn_reg_2,
    tx_dl_lp_dn_hs_i,
    \dl_tx_sm_state_reg[1] ,
    \dl_tx_sm_state_reg[1]_0 ,
    \dl_tx_sm_state_reg[1]_1 ,
    \dl_tx_sm_state_reg[1]_2 ,
    p_0_in23_out,
    cl_init_done_coreclk_i,
    tx_dl_lp_dn_reg_3,
    dl_tx_sm_state125_out,
    \dl_tx_sm_state[1]_i_4__1 ,
    \dl_tx_sm_state[1]_i_4__1_0 ,
    cl_txclkactivehs_i,
    timeout_prepare,
    en_cal_hs_datapath_reg,
    \dl_tx_sm_state[2]_i_3__1_0 );
  output out;
  output tx_dl_lp_dn_reg;
  output \dl_tx_sm_state_reg[0] ;
  output dl_tx_sm_state120_out;
  output \dl_tx_sm_state_reg[2] ;
  output en_hs_start_w__4;
  output \en_cl_init_to_blk.init_done_reg ;
  output \dl_tx_sm_state_reg[2]_0 ;
  output en_lp_01_cnt__4;
  input core_rst;
  input dl_txrequesths_r;
  input core_clk;
  input tx_dl_lp_dn_reg_0;
  input tx_dl_lp_dn_reg_1;
  input tx_dl_lp_dn_reg_2;
  input tx_dl_lp_dn_hs_i;
  input \dl_tx_sm_state_reg[1] ;
  input \dl_tx_sm_state_reg[1]_0 ;
  input \dl_tx_sm_state_reg[1]_1 ;
  input \dl_tx_sm_state_reg[1]_2 ;
  input p_0_in23_out;
  input cl_init_done_coreclk_i;
  input tx_dl_lp_dn_reg_3;
  input dl_tx_sm_state125_out;
  input \dl_tx_sm_state[1]_i_4__1 ;
  input \dl_tx_sm_state[1]_i_4__1_0 ;
  input cl_txclkactivehs_i;
  input timeout_prepare;
  input en_cal_hs_datapath_reg;
  input \dl_tx_sm_state[2]_i_3__1_0 ;

  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl_tx_sm_state120_out;
  wire dl_tx_sm_state122_out;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state[1]_i_2__1_n_0 ;
  wire \dl_tx_sm_state[1]_i_4__1 ;
  wire \dl_tx_sm_state[1]_i_4__1_0 ;
  wire \dl_tx_sm_state[2]_i_3__1_0 ;
  wire \dl_tx_sm_state_reg[0] ;
  wire \dl_tx_sm_state_reg[1] ;
  wire \dl_tx_sm_state_reg[1]_0 ;
  wire \dl_tx_sm_state_reg[1]_1 ;
  wire \dl_tx_sm_state_reg[1]_2 ;
  wire \dl_tx_sm_state_reg[2] ;
  wire \dl_tx_sm_state_reg[2]_0 ;
  wire dl_txrequesths_r;
  wire en_cal_hs_datapath_reg;
  wire \en_cl_init_to_blk.init_done_reg ;
  wire en_hs_start_w__4;
  wire en_lp_01_cnt__4;
  wire p_0_in23_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_prepare;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dn_reg_1;
  wire tx_dl_lp_dn_reg_2;
  wire tx_dl_lp_dn_reg_3;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hFFAAFFFFFBFA0000)) 
    \dl_tx_sm_state[1]_i_1__1 
       (.I0(\dl_tx_sm_state[1]_i_2__1_n_0 ),
        .I1(dl_tx_sm_state120_out),
        .I2(\dl_tx_sm_state_reg[1] ),
        .I3(\dl_tx_sm_state_reg[1]_0 ),
        .I4(\dl_tx_sm_state_reg[1]_1 ),
        .I5(\dl_tx_sm_state_reg[1]_2 ),
        .O(\dl_tx_sm_state_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00007400)) 
    \dl_tx_sm_state[1]_i_2__1 
       (.I0(dl_tx_sm_state122_out),
        .I1(\dl_tx_sm_state_reg[1] ),
        .I2(tx_dl_lp_dn_reg_3),
        .I3(\dl_tx_sm_state_reg[1]_2 ),
        .I4(\dl_tx_sm_state_reg[1]_0 ),
        .I5(dl_tx_sm_state125_out),
        .O(\dl_tx_sm_state[1]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'hA800)) 
    \dl_tx_sm_state[1]_i_3__1 
       (.I0(cl_txclkactivehs_i),
        .I1(s_level_out_d3),
        .I2(en_cal_hs_datapath_reg),
        .I3(timeout_prepare),
        .O(dl_tx_sm_state120_out));
  LUT4 #(
    .INIT(16'hBBBF)) 
    \dl_tx_sm_state[2]_i_12__1 
       (.I0(\dl_tx_sm_state[2]_i_3__1_0 ),
        .I1(cl_txclkactivehs_i),
        .I2(s_level_out_d3),
        .I3(en_cal_hs_datapath_reg),
        .O(en_lp_01_cnt__4));
  LUT6 #(
    .INIT(64'h0A0300000A000000)) 
    \dl_tx_sm_state[2]_i_3__1 
       (.I0(dl_tx_sm_state122_out),
        .I1(en_hs_start_w__4),
        .I2(\dl_tx_sm_state_reg[1]_0 ),
        .I3(\dl_tx_sm_state_reg[1] ),
        .I4(\dl_tx_sm_state_reg[1]_2 ),
        .I5(p_0_in23_out),
        .O(\dl_tx_sm_state_reg[2] ));
  LUT4 #(
    .INIT(16'hA800)) 
    \dl_tx_sm_state[2]_i_7__1 
       (.I0(cl_txclkactivehs_i),
        .I1(s_level_out_d3),
        .I2(en_cal_hs_datapath_reg),
        .I3(\dl_tx_sm_state[2]_i_3__1_0 ),
        .O(dl_tx_sm_state122_out));
  LUT4 #(
    .INIT(16'h8000)) 
    \dl_tx_sm_state[2]_i_8__1 
       (.I0(s_level_out_d3),
        .I1(\dl_tx_sm_state[1]_i_4__1 ),
        .I2(\dl_tx_sm_state[1]_i_4__1_0 ),
        .I3(cl_txclkactivehs_i),
        .O(en_hs_start_w__4));
  LUT5 #(
    .INIT(32'h5F5FDFFF)) 
    en_cal_hs_datapath_i_2__1
       (.I0(\dl_tx_sm_state_reg[1]_0 ),
        .I1(timeout_prepare),
        .I2(cl_txclkactivehs_i),
        .I3(s_level_out_d3),
        .I4(en_cal_hs_datapath_reg),
        .O(\dl_tx_sm_state_reg[2]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_txrequesths_r),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT5 #(
    .INIT(32'hFEFFFE00)) 
    tx_dl_lp_dn_i_1__3
       (.I0(\dl_tx_sm_state[1]_i_2__1_n_0 ),
        .I1(tx_dl_lp_dn_reg_0),
        .I2(tx_dl_lp_dn_reg_1),
        .I3(tx_dl_lp_dn_reg_2),
        .I4(tx_dl_lp_dn_hs_i),
        .O(tx_dl_lp_dn_reg));
  LUT6 #(
    .INIT(64'h3333AAAA0F00FFFF)) 
    tx_dl_lp_dp_i_2__3
       (.I0(cl_init_done_coreclk_i),
        .I1(dl_tx_sm_state122_out),
        .I2(en_hs_start_w__4),
        .I3(p_0_in23_out),
        .I4(\dl_tx_sm_state_reg[1]_2 ),
        .I5(\dl_tx_sm_state_reg[1] ),
        .O(\en_cl_init_to_blk.init_done_reg ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_41
   (out,
    en_lp_01_cnt_reg,
    \dl_tx_sm_state_reg[2] ,
    \dl_tx_sm_state_reg[0] ,
    \dl_tx_sm_state_reg[1] ,
    p_21_in,
    \dl_tx_sm_state_reg[2]_0 ,
    \dl_tx_sm_state_reg[2]_1 ,
    \dl_tx_sm_state_reg[2]_2 ,
    core_rst,
    core_clk,
    dl_tx_sm_state125_out,
    en_lp_01_cnt_reg_0,
    dl_stopstate_reg,
    dl_stopstate_reg_0,
    dl_stopstate_i,
    en_hs_datapath_reg,
    en_hs_datapath_reg_0,
    en_lp_01_cnt_reg_1,
    en_hs_start_w__4,
    en_lp_01_cnt_reg_2,
    dl_status_bit_6_reg,
    dl_status_bit_6_reg_0,
    tx_dl_lp_dn_reg,
    tx_dl_lp_dn_reg_0,
    \dl_tx_sm_state_reg[1]_0 ,
    en_lp_01_cnt__4,
    en_hs_datapath_reg_1,
    en_hs_datapath_reg_2,
    cl_txclkactivehs_i,
    timeout_prepare,
    dl_stopstate_reg_1,
    dl_status_bit_6_reg_1,
    dl_status_bit_6_reg_2,
    cl_init_done_coreclk_i);
  output out;
  output en_lp_01_cnt_reg;
  output \dl_tx_sm_state_reg[2] ;
  output \dl_tx_sm_state_reg[0] ;
  output \dl_tx_sm_state_reg[1] ;
  output p_21_in;
  output \dl_tx_sm_state_reg[2]_0 ;
  output \dl_tx_sm_state_reg[2]_1 ;
  output \dl_tx_sm_state_reg[2]_2 ;
  input core_rst;
  input core_clk;
  input dl_tx_sm_state125_out;
  input en_lp_01_cnt_reg_0;
  input dl_stopstate_reg;
  input dl_stopstate_reg_0;
  input dl_stopstate_i;
  input en_hs_datapath_reg;
  input en_hs_datapath_reg_0;
  input en_lp_01_cnt_reg_1;
  input en_hs_start_w__4;
  input en_lp_01_cnt_reg_2;
  input dl_status_bit_6_reg;
  input dl_status_bit_6_reg_0;
  input tx_dl_lp_dn_reg;
  input tx_dl_lp_dn_reg_0;
  input \dl_tx_sm_state_reg[1]_0 ;
  input en_lp_01_cnt__4;
  input en_hs_datapath_reg_1;
  input en_hs_datapath_reg_2;
  input cl_txclkactivehs_i;
  input timeout_prepare;
  input dl_stopstate_reg_1;
  input dl_status_bit_6_reg_1;
  input dl_status_bit_6_reg_2;
  input cl_init_done_coreclk_i;

  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl_status_bit_6_i_2__1_n_0;
  wire dl_status_bit_6_i_5__1_n_0;
  wire dl_status_bit_6_reg;
  wire dl_status_bit_6_reg_0;
  wire dl_status_bit_6_reg_1;
  wire dl_status_bit_6_reg_2;
  wire dl_stopstate_i;
  wire dl_stopstate_i_3__1_n_0;
  wire dl_stopstate_i_4__1_n_0;
  wire dl_stopstate_reg;
  wire dl_stopstate_reg_0;
  wire dl_stopstate_reg_1;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state[2]_i_10__1_n_0 ;
  wire \dl_tx_sm_state_reg[0] ;
  wire \dl_tx_sm_state_reg[1] ;
  wire \dl_tx_sm_state_reg[1]_0 ;
  wire \dl_tx_sm_state_reg[2] ;
  wire \dl_tx_sm_state_reg[2]_0 ;
  wire \dl_tx_sm_state_reg[2]_1 ;
  wire \dl_tx_sm_state_reg[2]_2 ;
  wire en_hs_datapath_i_2__1_n_0;
  wire en_hs_datapath_i_4__1_n_0;
  wire en_hs_datapath_reg;
  wire en_hs_datapath_reg_0;
  wire en_hs_datapath_reg_1;
  wire en_hs_datapath_reg_2;
  wire en_hs_start_w__4;
  wire en_lp_01_cnt15_out;
  wire en_lp_01_cnt__4;
  wire en_lp_01_cnt_i_3__1_n_0;
  wire en_lp_01_cnt_reg;
  wire en_lp_01_cnt_reg_0;
  wire en_lp_01_cnt_reg_1;
  wire en_lp_01_cnt_reg_2;
  wire p_21_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_prepare;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dp_i_6__3_n_0;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF0E)) 
    dl_status_bit_6_i_1__1
       (.I0(dl_status_bit_6_i_2__1_n_0),
        .I1(dl_status_bit_6_reg),
        .I2(dl_stopstate_reg_0),
        .I3(dl_status_bit_6_reg_0),
        .I4(dl_tx_sm_state125_out),
        .I5(dl_status_bit_6_i_5__1_n_0),
        .O(\dl_tx_sm_state_reg[2]_0 ));
  LUT5 #(
    .INIT(32'h8ADF0000)) 
    dl_status_bit_6_i_2__1
       (.I0(en_hs_datapath_reg),
        .I1(dl_status_bit_6_reg_1),
        .I2(p_21_in),
        .I3(dl_status_bit_6_reg_2),
        .I4(en_lp_01_cnt_reg_2),
        .O(dl_status_bit_6_i_2__1_n_0));
  LUT5 #(
    .INIT(32'h40404044)) 
    dl_status_bit_6_i_5__1
       (.I0(en_lp_01_cnt_reg_2),
        .I1(dl_stopstate_reg_0),
        .I2(dl_status_bit_6_reg_1),
        .I3(en_hs_datapath_reg),
        .I4(p_21_in),
        .O(dl_status_bit_6_i_5__1_n_0));
  LUT6 #(
    .INIT(64'hAAABABABAAA8A8A8)) 
    dl_stopstate_i_1__1
       (.I0(dl_stopstate_reg),
        .I1(dl_tx_sm_state125_out),
        .I2(dl_stopstate_i_3__1_n_0),
        .I3(dl_stopstate_reg_0),
        .I4(dl_stopstate_i_4__1_n_0),
        .I5(dl_stopstate_i),
        .O(\dl_tx_sm_state_reg[2] ));
  LUT5 #(
    .INIT(32'h000072AA)) 
    dl_stopstate_i_3__1
       (.I0(en_lp_01_cnt_reg_2),
        .I1(p_21_in),
        .I2(cl_init_done_coreclk_i),
        .I3(en_hs_datapath_reg),
        .I4(dl_stopstate_reg_0),
        .O(dl_stopstate_i_3__1_n_0));
  LUT4 #(
    .INIT(16'hFF01)) 
    dl_stopstate_i_4__1
       (.I0(p_21_in),
        .I1(en_hs_datapath_reg),
        .I2(en_lp_01_cnt_reg_2),
        .I3(dl_stopstate_reg_1),
        .O(dl_stopstate_i_4__1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00FD000D)) 
    \dl_tx_sm_state[2]_i_10__1 
       (.I0(p_21_in),
        .I1(timeout_prepare),
        .I2(en_hs_datapath_reg),
        .I3(en_lp_01_cnt_reg_2),
        .I4(en_hs_datapath_reg_1),
        .I5(dl_stopstate_reg_1),
        .O(\dl_tx_sm_state[2]_i_10__1_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEEEFFFFFCCC)) 
    \dl_tx_sm_state[2]_i_5__1 
       (.I0(\dl_tx_sm_state[2]_i_10__1_n_0 ),
        .I1(dl_tx_sm_state125_out),
        .I2(\dl_tx_sm_state_reg[1]_0 ),
        .I3(en_lp_01_cnt__4),
        .I4(tx_dl_lp_dn_reg_0),
        .I5(dl_stopstate_reg_0),
        .O(\dl_tx_sm_state_reg[2]_2 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \dl_tx_sm_state[2]_i_6__1 
       (.I0(s_level_out_d3),
        .I1(en_hs_datapath_reg_2),
        .I2(cl_txclkactivehs_i),
        .O(p_21_in));
  LUT5 #(
    .INIT(32'h01FF0100)) 
    en_hs_datapath_i_1__1
       (.I0(en_hs_datapath_reg),
        .I1(dl_tx_sm_state125_out),
        .I2(en_hs_datapath_i_2__1_n_0),
        .I3(\dl_tx_sm_state_reg[1] ),
        .I4(en_hs_datapath_reg_0),
        .O(\dl_tx_sm_state_reg[0] ));
  LUT4 #(
    .INIT(16'h1FFF)) 
    en_hs_datapath_i_2__1
       (.I0(s_level_out_d3),
        .I1(en_hs_datapath_reg_2),
        .I2(cl_txclkactivehs_i),
        .I3(dl_stopstate_reg_0),
        .O(en_hs_datapath_i_2__1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFAEAAAAFF)) 
    en_hs_datapath_i_3__1
       (.I0(en_hs_datapath_i_4__1_n_0),
        .I1(en_hs_datapath_reg_1),
        .I2(en_lp_01_cnt_reg_2),
        .I3(dl_stopstate_reg_0),
        .I4(en_hs_datapath_reg),
        .I5(dl_tx_sm_state125_out),
        .O(\dl_tx_sm_state_reg[1] ));
  LUT6 #(
    .INIT(64'h000000000000FF1F)) 
    en_hs_datapath_i_4__1
       (.I0(s_level_out_d3),
        .I1(en_hs_datapath_reg_2),
        .I2(cl_txclkactivehs_i),
        .I3(timeout_prepare),
        .I4(en_hs_datapath_reg),
        .I5(en_lp_01_cnt_reg_2),
        .O(en_hs_datapath_i_4__1_n_0));
  LUT4 #(
    .INIT(16'hABA8)) 
    en_lp_01_cnt_i_1__2
       (.I0(en_lp_01_cnt15_out),
        .I1(en_lp_01_cnt_i_3__1_n_0),
        .I2(dl_tx_sm_state125_out),
        .I3(en_lp_01_cnt_reg_0),
        .O(en_lp_01_cnt_reg));
  LUT6 #(
    .INIT(64'h0022000000F00000)) 
    en_lp_01_cnt_i_2__2
       (.I0(p_21_in),
        .I1(en_lp_01_cnt_reg_1),
        .I2(en_hs_start_w__4),
        .I3(dl_tx_sm_state125_out),
        .I4(en_lp_01_cnt_reg_2),
        .I5(en_hs_datapath_reg),
        .O(en_lp_01_cnt15_out));
  LUT6 #(
    .INIT(64'h5515440411111111)) 
    en_lp_01_cnt_i_3__1
       (.I0(dl_stopstate_reg_0),
        .I1(en_hs_datapath_reg),
        .I2(p_21_in),
        .I3(en_lp_01_cnt_reg_1),
        .I4(en_hs_start_w__4),
        .I5(en_lp_01_cnt_reg_2),
        .O(en_lp_01_cnt_i_3__1_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hFEFEFEFEFFFFFFF0)) 
    tx_dl_lp_dp_i_4__3
       (.I0(tx_dl_lp_dn_reg),
        .I1(dl_stopstate_i_4__1_n_0),
        .I2(dl_tx_sm_state125_out),
        .I3(tx_dl_lp_dp_i_6__3_n_0),
        .I4(tx_dl_lp_dn_reg_0),
        .I5(dl_stopstate_reg_0),
        .O(\dl_tx_sm_state_reg[2]_1 ));
  LUT6 #(
    .INIT(64'h8888888800088888)) 
    tx_dl_lp_dp_i_6__3
       (.I0(en_hs_datapath_reg),
        .I1(en_lp_01_cnt_reg_2),
        .I2(s_level_out_d3),
        .I3(en_hs_datapath_reg_2),
        .I4(cl_txclkactivehs_i),
        .I5(en_lp_01_cnt_reg_1),
        .O(tx_dl_lp_dp_i_6__3_n_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_42
   (out,
    \dl_tx_sm_state_reg[0] ,
    s_level_out_d3_reg_0,
    core_rst,
    s_level_out_d1_cdc_to_reg_0,
    core_clk,
    tx_dl_lp_dn_reg,
    tx_dl_lp_dn_reg_0,
    tx_dl_lp_dn_reg_1,
    tx_dl_lp_dn_reg_2,
    esc_active_sync_r,
    timeout_hsexit_all,
    dl_stopstate_i_4__1);
  output out;
  output \dl_tx_sm_state_reg[0] ;
  output s_level_out_d3_reg_0;
  input core_rst;
  input s_level_out_d1_cdc_to_reg_0;
  input core_clk;
  input tx_dl_lp_dn_reg;
  input tx_dl_lp_dn_reg_0;
  input tx_dl_lp_dn_reg_1;
  input tx_dl_lp_dn_reg_2;
  input esc_active_sync_r;
  input timeout_hsexit_all;
  input dl_stopstate_i_4__1;

  wire core_clk;
  wire core_rst;
  wire dl_stopstate_i_4__1;
  wire \dl_tx_sm_state_reg[0] ;
  wire esc_active_sync_r;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_hsexit_all;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dn_reg_1;
  wire tx_dl_lp_dn_reg_2;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'h4F40FFFF00000000)) 
    dl_stopstate_i_6__1
       (.I0(s_level_out_d3),
        .I1(esc_active_sync_r),
        .I2(tx_dl_lp_dn_reg_0),
        .I3(timeout_hsexit_all),
        .I4(dl_stopstate_i_4__1),
        .I5(tx_dl_lp_dn_reg_1),
        .O(s_level_out_d3_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT5 #(
    .INIT(32'hAAEF0000)) 
    tx_dl_lp_dp_i_3__3
       (.I0(s_level_out_d3_reg_0),
        .I1(tx_dl_lp_dn_reg),
        .I2(tx_dl_lp_dn_reg_0),
        .I3(tx_dl_lp_dn_reg_1),
        .I4(tx_dl_lp_dn_reg_2),
        .O(\dl_tx_sm_state_reg[0] ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_43
   (core_rst,
    core_clk);
  input core_rst;
  input core_clk;

  wire core_clk;
  wire core_rst;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_45
   (out,
    core_clk);
  output out;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_46
   (out,
    tx_div4_clk);
  output out;
  input tx_div4_clk;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_47
   (en_cal_hs_datapath_i,
    tx_div4_clk);
  input en_cal_hs_datapath_i;
  input tx_div4_clk;

  wire en_cal_hs_datapath_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(en_cal_hs_datapath_i),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_48
   (dl_status_reg,
    tx_div4_clk);
  input [0:0]dl_status_reg;
  input tx_div4_clk;

  wire [0:0]dl_status_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl_status_reg),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_50
   (out,
    s_level_out_d3_reg_0,
    core_rst,
    hs_xfer_done_i,
    core_clk,
    dl_hs_exit_done_i,
    \cl_tx_state[3]_i_7 );
  output out;
  output s_level_out_d3_reg_0;
  input core_rst;
  input hs_xfer_done_i;
  input core_clk;
  input [2:0]dl_hs_exit_done_i;
  input \cl_tx_state[3]_i_7 ;

  wire \cl_tx_state[3]_i_7 ;
  wire core_clk;
  wire core_rst;
  wire [2:0]dl_hs_exit_done_i;
  wire hs_xfer_done_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \cl_tx_state[3]_i_11 
       (.I0(s_level_out_d3),
        .I1(dl_hs_exit_done_i[0]),
        .I2(dl_hs_exit_done_i[2]),
        .I3(dl_hs_exit_done_i[1]),
        .I4(\cl_tx_state[3]_i_7 ),
        .O(s_level_out_d3_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(hs_xfer_done_i),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_54
   (s_level_out_d3_reg_0,
    dl1_forcetxstopmode,
    dl0_txclkesc);
  output s_level_out_d3_reg_0;
  input dl1_forcetxstopmode;
  input dl0_txclkesc;

  wire dl0_txclkesc;
  wire dl1_forcetxstopmode;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign s_level_out_d3_reg_0 = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(dl1_forcetxstopmode),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_55
   (out,
    s_level_out_d3_reg_0,
    s_level_out_d3_reg_1,
    s_level_out_d3_reg_2,
    esc_start_i,
    dl0_txclkesc,
    Q,
    esc_ctrl_axi_if_reg,
    dl_status_reg,
    esc_ctrl_lane_sm_reg,
    esc_ctrl_all_sm_reg);
  output out;
  output s_level_out_d3_reg_0;
  output s_level_out_d3_reg_1;
  output s_level_out_d3_reg_2;
  input esc_start_i;
  input dl0_txclkesc;
  input [2:0]Q;
  input esc_ctrl_axi_if_reg;
  input [0:0]dl_status_reg;
  input esc_ctrl_lane_sm_reg;
  input esc_ctrl_all_sm_reg;

  wire [2:0]Q;
  wire dl0_txclkesc;
  wire [0:0]dl_status_reg;
  wire esc_ctrl_all_sm_reg;
  wire esc_ctrl_axi_if_reg;
  wire esc_ctrl_lane_sm_reg;
  wire esc_start_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  wire s_level_out_d3_reg_2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'h00030B0B00000808)) 
    esc_ctrl_all_sm_i_1__0
       (.I0(s_level_out_d3),
        .I1(Q[1]),
        .I2(esc_ctrl_axi_if_reg),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(esc_ctrl_all_sm_reg),
        .O(s_level_out_d3_reg_2));
  LUT6 #(
    .INIT(64'h00030B0B00000808)) 
    esc_ctrl_axi_if_i_2__0
       (.I0(s_level_out_d3),
        .I1(Q[1]),
        .I2(esc_ctrl_axi_if_reg),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(dl_status_reg),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'h00030B0B00000808)) 
    esc_ctrl_lane_sm_i_1__0
       (.I0(s_level_out_d3),
        .I1(Q[1]),
        .I2(esc_ctrl_axi_if_reg),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(esc_ctrl_lane_sm_reg),
        .O(s_level_out_d3_reg_1));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(esc_start_i),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_56
   (dl1_txvalidesc_0,
    D,
    \txtriggeresc_r_reg[0] ,
    E,
    \FSM_sequential_dl_tx_state_reg[2] ,
    \txtriggeresc_r_reg[2] ,
    \FSM_sequential_dl_tx_state_reg[2]_0 ,
    \FSM_sequential_dl_tx_state_reg[1] ,
    txulpsesc_r_reg,
    \dl1_txtriggeresc[3] ,
    \dl1_txtriggeresc[2] ,
    dl1_txulpsesc_0,
    dl1_txlpdtesc_0,
    esc_ctrl_t_reg,
    tx_dl_lp_dp_reg,
    tx_dl_lp_dn_reg,
    \FSM_sequential_dl_tx_state_reg[1]_0 ,
    s_level_out_d1_cdc_to_reg_0,
    dl0_txclkesc,
    dl1_txvalidesc,
    dl_txreadyesc_reg,
    dl_txreadyesc_reg_0,
    esc_ctrl_t_reg_0,
    txulpsesc_r_reg_0,
    \FSM_sequential_dl_tx_state_reg[3] ,
    Q,
    \FSM_sequential_dl_tx_state_reg[2]_1 ,
    \bit_cnt_reg[0] ,
    \bit_cnt_reg[0]_0 ,
    \FSM_sequential_dl_tx_state_reg[0] ,
    out,
    tx_dl_lp_dn_reg_0,
    tx_dl_lp_dn_reg_1,
    tx_dl_lp_dp_reg_0,
    dl1_txrequestesc,
    tx_dl_lp_dn_esc_i,
    tx_dl_lp_dp_esc_i,
    \esc_cmd_data_reg[6] ,
    \esc_cmd_data_reg[3] ,
    dl1_txdataesc,
    \esc_cmd_data_reg[3]_0 ,
    \FSM_sequential_dl_tx_state_reg[2]_2 ,
    txlpdtesc_r,
    txulpsesc_r,
    \FSM_sequential_dl_tx_state_reg[2]_3 ,
    dl1_txulpsexit,
    \bit_cnt_reg[3] ,
    dl_ulpsactivenot_reg,
    dl1_ulpsactivenot,
    dl1_txtriggeresc,
    dl1_txulpsesc,
    dl1_txlpdtesc,
    esc_ctrl_i,
    esc_ctrl_t_reg_1,
    tx_dl_lp_dp_reg_1,
    tx_dl_lp_dn_reg_2,
    \bit_cnt_reg[3]_0 ,
    \bit_cnt_reg[3]_1 );
  output dl1_txvalidesc_0;
  output [3:0]D;
  output \txtriggeresc_r_reg[0] ;
  output [0:0]E;
  output [0:0]\FSM_sequential_dl_tx_state_reg[2] ;
  output [7:0]\txtriggeresc_r_reg[2] ;
  output [1:0]\FSM_sequential_dl_tx_state_reg[2]_0 ;
  output [0:0]\FSM_sequential_dl_tx_state_reg[1] ;
  output txulpsesc_r_reg;
  output [3:0]\dl1_txtriggeresc[3] ;
  output [0:0]\dl1_txtriggeresc[2] ;
  output dl1_txulpsesc_0;
  output dl1_txlpdtesc_0;
  output esc_ctrl_t_reg;
  output tx_dl_lp_dp_reg;
  output tx_dl_lp_dn_reg;
  output \FSM_sequential_dl_tx_state_reg[1]_0 ;
  input s_level_out_d1_cdc_to_reg_0;
  input dl0_txclkesc;
  input dl1_txvalidesc;
  input dl_txreadyesc_reg;
  input dl_txreadyesc_reg_0;
  input esc_ctrl_t_reg_0;
  input txulpsesc_r_reg_0;
  input \FSM_sequential_dl_tx_state_reg[3] ;
  input [3:0]Q;
  input \FSM_sequential_dl_tx_state_reg[2]_1 ;
  input \bit_cnt_reg[0] ;
  input \bit_cnt_reg[0]_0 ;
  input \FSM_sequential_dl_tx_state_reg[0] ;
  input out;
  input tx_dl_lp_dn_reg_0;
  input tx_dl_lp_dn_reg_1;
  input tx_dl_lp_dp_reg_0;
  input dl1_txrequestesc;
  input tx_dl_lp_dn_esc_i;
  input tx_dl_lp_dp_esc_i;
  input [7:0]\esc_cmd_data_reg[6] ;
  input \esc_cmd_data_reg[3] ;
  input [7:0]dl1_txdataesc;
  input \esc_cmd_data_reg[3]_0 ;
  input [3:0]\FSM_sequential_dl_tx_state_reg[2]_2 ;
  input txlpdtesc_r;
  input txulpsesc_r;
  input [3:0]\FSM_sequential_dl_tx_state_reg[2]_3 ;
  input dl1_txulpsexit;
  input \bit_cnt_reg[3] ;
  input dl_ulpsactivenot_reg;
  input dl1_ulpsactivenot;
  input [3:0]dl1_txtriggeresc;
  input dl1_txulpsesc;
  input dl1_txlpdtesc;
  input esc_ctrl_i;
  input esc_ctrl_t_reg_1;
  input tx_dl_lp_dp_reg_1;
  input tx_dl_lp_dn_reg_2;
  input \bit_cnt_reg[3]_0 ;
  input \bit_cnt_reg[3]_1 ;

  wire [3:0]D;
  wire [0:0]E;
  wire \FSM_sequential_dl_tx_state[0]_i_2__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[0]_i_4__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_2__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_3__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_4__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_5__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_6__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_4__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_5__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_6__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_7__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_10__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_4__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_5__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_7__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_8__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_9__0_n_0 ;
  wire \FSM_sequential_dl_tx_state_reg[0] ;
  wire [0:0]\FSM_sequential_dl_tx_state_reg[1] ;
  wire \FSM_sequential_dl_tx_state_reg[1]_0 ;
  wire [0:0]\FSM_sequential_dl_tx_state_reg[2] ;
  wire [1:0]\FSM_sequential_dl_tx_state_reg[2]_0 ;
  wire \FSM_sequential_dl_tx_state_reg[2]_1 ;
  wire [3:0]\FSM_sequential_dl_tx_state_reg[2]_2 ;
  wire [3:0]\FSM_sequential_dl_tx_state_reg[2]_3 ;
  wire \FSM_sequential_dl_tx_state_reg[3] ;
  wire [3:0]Q;
  wire \bit_cnt[3]_i_10__0_n_0 ;
  wire \bit_cnt[3]_i_11__0_n_0 ;
  wire \bit_cnt[3]_i_13__0_n_0 ;
  wire \bit_cnt[3]_i_3__0_n_0 ;
  wire \bit_cnt[3]_i_4__0_n_0 ;
  wire \bit_cnt[3]_i_9__0_n_0 ;
  wire \bit_cnt_reg[0] ;
  wire \bit_cnt_reg[0]_0 ;
  wire \bit_cnt_reg[3] ;
  wire \bit_cnt_reg[3]_0 ;
  wire \bit_cnt_reg[3]_1 ;
  wire dl0_txclkesc;
  wire [7:0]dl1_txdataesc;
  wire dl1_txlpdtesc;
  wire dl1_txlpdtesc_0;
  wire dl1_txrequestesc;
  wire [3:0]dl1_txtriggeresc;
  wire [0:0]\dl1_txtriggeresc[2] ;
  wire [3:0]\dl1_txtriggeresc[3] ;
  wire dl1_txulpsesc;
  wire dl1_txulpsesc_0;
  wire dl1_txulpsexit;
  wire dl1_txvalidesc;
  wire dl1_txvalidesc_0;
  wire dl1_ulpsactivenot;
  wire dl_txreadyesc_reg;
  wire dl_txreadyesc_reg_0;
  wire dl_ulpsactivenot0;
  wire dl_ulpsactivenot_i_2__0_n_0;
  wire dl_ulpsactivenot_reg;
  wire \esc_cmd_data[0]_i_2__0_n_0 ;
  wire \esc_cmd_data[0]_i_3__0_n_0 ;
  wire \esc_cmd_data[1]_i_2__0_n_0 ;
  wire \esc_cmd_data[2]_i_2__0_n_0 ;
  wire \esc_cmd_data[5]_i_2__0_n_0 ;
  wire \esc_cmd_data[5]_i_3__0_n_0 ;
  wire \esc_cmd_data[6]_i_2__0_n_0 ;
  wire \esc_cmd_data[7]_i_3__0_n_0 ;
  wire \esc_cmd_data[7]_i_6__0_n_0 ;
  wire \esc_cmd_data[7]_i_7__0_n_0 ;
  wire \esc_cmd_data_reg[3] ;
  wire \esc_cmd_data_reg[3]_0 ;
  wire [7:0]\esc_cmd_data_reg[6] ;
  wire esc_ctrl_i;
  wire esc_ctrl_t_i_2__0_n_0;
  wire esc_ctrl_t_i_3__0_n_0;
  wire esc_ctrl_t_reg;
  wire esc_ctrl_t_reg_0;
  wire esc_ctrl_t_reg_1;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_dl_lp_dn_esc_i;
  wire tx_dl_lp_dn_i_11__0_n_0;
  wire tx_dl_lp_dn_i_13__0_n_0;
  wire tx_dl_lp_dn_i_2__2_n_0;
  wire tx_dl_lp_dn_i_3__0_n_0;
  wire tx_dl_lp_dn_i_4__0_n_0;
  wire tx_dl_lp_dn_i_5__0_n_0;
  wire tx_dl_lp_dn_i_7__0_n_0;
  wire tx_dl_lp_dn_i_8__0_n_0;
  wire tx_dl_lp_dn_i_9__0_n_0;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dn_reg_1;
  wire tx_dl_lp_dn_reg_2;
  wire tx_dl_lp_dp_esc_i;
  wire tx_dl_lp_dp_i_2__2_n_0;
  wire tx_dl_lp_dp_i_3__2_n_0;
  wire tx_dl_lp_dp_i_4__2_n_0;
  wire tx_dl_lp_dp_i_5__2_n_0;
  wire tx_dl_lp_dp_reg;
  wire tx_dl_lp_dp_reg_0;
  wire tx_dl_lp_dp_reg_1;
  wire txlpdtesc_r;
  wire \txtriggeresc_r[3]_i_3__0_n_0 ;
  wire \txtriggeresc_r_reg[0] ;
  wire [7:0]\txtriggeresc_r_reg[2] ;
  wire txulpsesc_r;
  wire txulpsesc_r_reg;
  wire txulpsesc_r_reg_0;

  LUT6 #(
    .INIT(64'h00000000770177CD)) 
    \FSM_sequential_dl_tx_state[0]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(\txtriggeresc_r_reg[0] ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\FSM_sequential_dl_tx_state[0]_i_2__0_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000400)) 
    \FSM_sequential_dl_tx_state[0]_i_2__0 
       (.I0(\txtriggeresc_r_reg[0] ),
        .I1(\FSM_sequential_dl_tx_state_reg[0] ),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_4__0_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[0]_i_4__0_n_0 ),
        .O(\FSM_sequential_dl_tx_state[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h3000300030013000)) 
    \FSM_sequential_dl_tx_state[0]_i_4__0 
       (.I0(\esc_cmd_data_reg[3] ),
        .I1(\esc_cmd_data[0]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_tx_state[0]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h44444444FF4F4F44)) 
    \FSM_sequential_dl_tx_state[1]_i_1__0 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_2__0_n_0 ),
        .I1(\FSM_sequential_dl_tx_state[1]_i_3__0_n_0 ),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(\txtriggeresc_r_reg[0] ),
        .I5(Q[1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hBBB8BBBBFFFFCCCC)) 
    \FSM_sequential_dl_tx_state[1]_i_2__0 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_4__0_n_0 ),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(\esc_cmd_data[0]_i_2__0_n_0 ),
        .I4(\FSM_sequential_dl_tx_state[1]_i_5__0_n_0 ),
        .I5(Q[3]),
        .O(\FSM_sequential_dl_tx_state[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFBFFFBFBFB)) 
    \FSM_sequential_dl_tx_state[1]_i_3__0 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_6__0_n_0 ),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(dl1_txvalidesc),
        .I4(dl_txreadyesc_reg_0),
        .I5(\esc_cmd_data[0]_i_2__0_n_0 ),
        .O(\FSM_sequential_dl_tx_state[1]_i_3__0_n_0 ));
  LUT4 #(
    .INIT(16'h0007)) 
    \FSM_sequential_dl_tx_state[1]_i_4__0 
       (.I0(s_level_out_d3),
        .I1(dl1_txrequestesc),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\FSM_sequential_dl_tx_state[1]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_dl_tx_state[1]_i_5__0 
       (.I0(\txtriggeresc_r_reg[0] ),
        .I1(Q[0]),
        .O(\FSM_sequential_dl_tx_state[1]_i_5__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    \FSM_sequential_dl_tx_state[1]_i_6__0 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_3 [2]),
        .I1(\FSM_sequential_dl_tx_state_reg[2]_3 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_3 [3]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_7__0_n_0 ),
        .O(\FSM_sequential_dl_tx_state[1]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFA80000)) 
    \FSM_sequential_dl_tx_state[2]_i_1__0 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_1 ),
        .I1(\txtriggeresc_r_reg[0] ),
        .I2(\FSM_sequential_dl_tx_state[2]_i_4__0_n_0 ),
        .I3(\FSM_sequential_dl_tx_state[2]_i_5__0_n_0 ),
        .I4(Q[1]),
        .I5(\FSM_sequential_dl_tx_state[2]_i_6__0_n_0 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAAE)) 
    \FSM_sequential_dl_tx_state[2]_i_3__0 
       (.I0(dl_ulpsactivenot_i_2__0_n_0),
        .I1(\FSM_sequential_dl_tx_state[2]_i_7__0_n_0 ),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [3]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_2 [2]),
        .O(\txtriggeresc_r_reg[0] ));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    \FSM_sequential_dl_tx_state[2]_i_4__0 
       (.I0(\esc_cmd_data[0]_i_2__0_n_0 ),
        .I1(\esc_cmd_data_reg[3] ),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_3 [2]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_3 [1]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_3 [3]),
        .O(\FSM_sequential_dl_tx_state[2]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'h74044404)) 
    \FSM_sequential_dl_tx_state[2]_i_5__0 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(\esc_cmd_data[0]_i_2__0_n_0 ),
        .I4(dl_ulpsactivenot0),
        .O(\FSM_sequential_dl_tx_state[2]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h101030301010F030)) 
    \FSM_sequential_dl_tx_state[2]_i_6__0 
       (.I0(\txtriggeresc_r_reg[0] ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(dl_ulpsactivenot_i_2__0_n_0),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_tx_state[2]_i_6__0_n_0 ));
  LUT4 #(
    .INIT(16'h777F)) 
    \FSM_sequential_dl_tx_state[2]_i_7__0 
       (.I0(s_level_out_d3),
        .I1(dl1_txrequestesc),
        .I2(txlpdtesc_r),
        .I3(txulpsesc_r),
        .O(\FSM_sequential_dl_tx_state[2]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    \FSM_sequential_dl_tx_state[2]_i_8__0 
       (.I0(dl_ulpsactivenot_i_2__0_n_0),
        .I1(txulpsesc_r),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_3 [2]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_3 [1]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_3 [3]),
        .O(dl_ulpsactivenot0));
  LUT5 #(
    .INIT(32'hEEEEFEEE)) 
    \FSM_sequential_dl_tx_state[3]_i_10__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(dl1_txrequestesc),
        .I3(s_level_out_d3),
        .I4(dl1_txulpsexit),
        .O(\FSM_sequential_dl_tx_state[3]_i_10__0_n_0 ));
  LUT6 #(
    .INIT(64'hF4F5F5FF04050505)) 
    \FSM_sequential_dl_tx_state[3]_i_2__0 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_4__0_n_0 ),
        .I1(dl_ulpsactivenot_i_2__0_n_0),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[3]),
        .I5(\FSM_sequential_dl_tx_state[3]_i_5__0_n_0 ),
        .O(\FSM_sequential_dl_tx_state_reg[2] ));
  LUT6 #(
    .INIT(64'h44F4444444444444)) 
    \FSM_sequential_dl_tx_state[3]_i_3__0 
       (.I0(dl_ulpsactivenot_i_2__0_n_0),
        .I1(\FSM_sequential_dl_tx_state_reg[3] ),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\FSM_sequential_dl_tx_state[3]_i_7__0_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[3]_i_8__0_n_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'h04040C0C04040CFC)) 
    \FSM_sequential_dl_tx_state[3]_i_4__0 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_9__0_n_0 ),
        .I1(esc_ctrl_t_i_3__0_n_0),
        .I2(Q[0]),
        .I3(\bit_cnt[3]_i_9__0_n_0 ),
        .I4(Q[3]),
        .I5(\txtriggeresc_r_reg[0] ),
        .O(\FSM_sequential_dl_tx_state[3]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h3333FF7F3333FF3F)) 
    \FSM_sequential_dl_tx_state[3]_i_5__0 
       (.I0(\bit_cnt_reg[0]_0 ),
        .I1(\FSM_sequential_dl_tx_state[3]_i_10__0_n_0 ),
        .I2(Q[1]),
        .I3(\esc_cmd_data[0]_i_2__0_n_0 ),
        .I4(Q[3]),
        .I5(Q[0]),
        .O(\FSM_sequential_dl_tx_state[3]_i_5__0_n_0 ));
  LUT5 #(
    .INIT(32'h8000FFFF)) 
    \FSM_sequential_dl_tx_state[3]_i_7__0 
       (.I0(s_level_out_d3),
        .I1(dl1_txrequestesc),
        .I2(txlpdtesc_r),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\FSM_sequential_dl_tx_state[3]_i_7__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT4 #(
    .INIT(16'hF1FF)) 
    \FSM_sequential_dl_tx_state[3]_i_8__0 
       (.I0(\FSM_sequential_dl_tx_state[2]_i_4__0_n_0 ),
        .I1(\txtriggeresc_r_reg[0] ),
        .I2(Q[2]),
        .I3(Q[0]),
        .O(\FSM_sequential_dl_tx_state[3]_i_8__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFFBFFFBFFF)) 
    \FSM_sequential_dl_tx_state[3]_i_9__0 
       (.I0(Q[1]),
        .I1(s_level_out_d3),
        .I2(dl1_txrequestesc),
        .I3(txlpdtesc_r),
        .I4(dl_txreadyesc_reg_0),
        .I5(dl1_txvalidesc),
        .O(\FSM_sequential_dl_tx_state[3]_i_9__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000D00000)) 
    \bit_cnt[0]_i_1__0 
       (.I0(\bit_cnt[3]_i_9__0_n_0 ),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[0]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .O(\FSM_sequential_dl_tx_state_reg[2]_0 [0]));
  LUT5 #(
    .INIT(32'h22222002)) 
    \bit_cnt[3]_i_10__0 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_6__0_n_0 ),
        .I1(\FSM_sequential_dl_tx_state[2]_i_4__0_n_0 ),
        .I2(tx_dl_lp_dn_esc_i),
        .I3(tx_dl_lp_dp_esc_i),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_3 [3]),
        .O(\bit_cnt[3]_i_10__0_n_0 ));
  LUT6 #(
    .INIT(64'hBABBBBBBBAABBBAB)) 
    \bit_cnt[3]_i_11__0 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(\bit_cnt[3]_i_13__0_n_0 ),
        .I5(\txtriggeresc_r_reg[0] ),
        .O(\bit_cnt[3]_i_11__0_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \bit_cnt[3]_i_13__0 
       (.I0(dl1_txvalidesc),
        .I1(dl_txreadyesc_reg_0),
        .I2(txlpdtesc_r),
        .I3(dl1_txrequestesc),
        .I4(s_level_out_d3),
        .O(\bit_cnt[3]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'hAEAAAAAAAEAAAEAA)) 
    \bit_cnt[3]_i_1__0 
       (.I0(\bit_cnt[3]_i_3__0_n_0 ),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(\bit_cnt[3]_i_4__0_n_0 ),
        .I4(\bit_cnt_reg[0] ),
        .I5(\bit_cnt_reg[0]_0 ),
        .O(E));
  LUT5 #(
    .INIT(32'h11010001)) 
    \bit_cnt[3]_i_2__0 
       (.I0(\bit_cnt_reg[3]_0 ),
        .I1(\bit_cnt_reg[3]_1 ),
        .I2(\bit_cnt[3]_i_9__0_n_0 ),
        .I3(Q[2]),
        .I4(\bit_cnt_reg[0]_0 ),
        .O(\FSM_sequential_dl_tx_state_reg[2]_0 [1]));
  LUT6 #(
    .INIT(64'h000000001F1F1F3F)) 
    \bit_cnt[3]_i_3__0 
       (.I0(Q[0]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(\txtriggeresc_r_reg[0] ),
        .I4(\bit_cnt[3]_i_10__0_n_0 ),
        .I5(\bit_cnt[3]_i_11__0_n_0 ),
        .O(\bit_cnt[3]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \bit_cnt[3]_i_4__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(txlpdtesc_r),
        .I3(dl1_txrequestesc),
        .I4(s_level_out_d3),
        .O(\bit_cnt[3]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h80000000FFFFFFFF)) 
    \bit_cnt[3]_i_9__0 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_3 [2]),
        .I1(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_3 [1]),
        .I3(\bit_cnt_reg[0] ),
        .I4(\bit_cnt_reg[3] ),
        .I5(\FSM_sequential_dl_tx_state[1]_i_6__0_n_0 ),
        .O(\bit_cnt[3]_i_9__0_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000005C)) 
    dl_txreadyesc_i_1__0
       (.I0(dl1_txvalidesc),
        .I1(dl_txreadyesc_reg),
        .I2(dl_txreadyesc_reg_0),
        .I3(esc_ctrl_t_reg_0),
        .I4(dl_ulpsactivenot_i_2__0_n_0),
        .I5(txulpsesc_r_reg_0),
        .O(dl1_txvalidesc_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFB00)) 
    dl_ulpsactivenot_i_1__0
       (.I0(dl_ulpsactivenot_i_2__0_n_0),
        .I1(txulpsesc_r),
        .I2(dl_ulpsactivenot_reg),
        .I3(dl1_ulpsactivenot),
        .I4(dl1_txulpsexit),
        .I5(esc_ctrl_t_reg_0),
        .O(txulpsesc_r_reg));
  LUT2 #(
    .INIT(4'h7)) 
    dl_ulpsactivenot_i_2__0
       (.I0(dl1_txrequestesc),
        .I1(s_level_out_d3),
        .O(dl_ulpsactivenot_i_2__0_n_0));
  LUT6 #(
    .INIT(64'hB888B8BBB8BBB8BB)) 
    \esc_cmd_data[0]_i_1__0 
       (.I0(\esc_cmd_data_reg[6] [1]),
        .I1(\esc_cmd_data_reg[3]_0 ),
        .I2(dl1_txdataesc[0]),
        .I3(\esc_cmd_data_reg[3] ),
        .I4(\esc_cmd_data[0]_i_2__0_n_0 ),
        .I5(\esc_cmd_data[0]_i_3__0_n_0 ),
        .O(\txtriggeresc_r_reg[2] [0]));
  LUT3 #(
    .INIT(8'h7F)) 
    \esc_cmd_data[0]_i_2__0 
       (.I0(s_level_out_d3),
        .I1(dl1_txrequestesc),
        .I2(txlpdtesc_r),
        .O(\esc_cmd_data[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF80)) 
    \esc_cmd_data[0]_i_3__0 
       (.I0(dl1_txrequestesc),
        .I1(s_level_out_d3),
        .I2(txulpsesc_r),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_2 [2]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .O(\esc_cmd_data[0]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8BBB8BBB8B8B8)) 
    \esc_cmd_data[1]_i_1__0 
       (.I0(\esc_cmd_data_reg[6] [2]),
        .I1(\esc_cmd_data_reg[3]_0 ),
        .I2(\esc_cmd_data[1]_i_2__0_n_0 ),
        .I3(\esc_cmd_data[7]_i_6__0_n_0 ),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .O(\txtriggeresc_r_reg[2] [1]));
  LUT6 #(
    .INIT(64'hFF00808080808080)) 
    \esc_cmd_data[1]_i_2__0 
       (.I0(s_level_out_d3),
        .I1(dl1_txrequestesc),
        .I2(txlpdtesc_r),
        .I3(dl1_txdataesc[1]),
        .I4(dl_txreadyesc_reg_0),
        .I5(dl1_txvalidesc),
        .O(\esc_cmd_data[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h8B8B888B8B8B8B8B)) 
    \esc_cmd_data[2]_i_1__0 
       (.I0(\esc_cmd_data_reg[6] [3]),
        .I1(\esc_cmd_data_reg[3]_0 ),
        .I2(\esc_cmd_data[2]_i_2__0_n_0 ),
        .I3(\esc_cmd_data[7]_i_6__0_n_0 ),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .O(\txtriggeresc_r_reg[2] [2]));
  LUT6 #(
    .INIT(64'h0000FFFF40004000)) 
    \esc_cmd_data[2]_i_2__0 
       (.I0(txlpdtesc_r),
        .I1(dl1_txrequestesc),
        .I2(s_level_out_d3),
        .I3(txulpsesc_r),
        .I4(dl1_txdataesc[2]),
        .I5(\esc_cmd_data_reg[3] ),
        .O(\esc_cmd_data[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEAEAAAAFEAE)) 
    \esc_cmd_data[3]_i_1__0 
       (.I0(\esc_cmd_data[5]_i_2__0_n_0 ),
        .I1(\esc_cmd_data[5]_i_3__0_n_0 ),
        .I2(\esc_cmd_data_reg[3] ),
        .I3(dl1_txdataesc[3]),
        .I4(\esc_cmd_data_reg[3]_0 ),
        .I5(\esc_cmd_data_reg[6] [4]),
        .O(\txtriggeresc_r_reg[2] [3]));
  LUT6 #(
    .INIT(64'hFFFFFEAEAAAAFEAE)) 
    \esc_cmd_data[4]_i_1__0 
       (.I0(\esc_cmd_data[5]_i_2__0_n_0 ),
        .I1(\esc_cmd_data[5]_i_3__0_n_0 ),
        .I2(\esc_cmd_data_reg[3] ),
        .I3(dl1_txdataesc[4]),
        .I4(\esc_cmd_data_reg[3]_0 ),
        .I5(\esc_cmd_data_reg[6] [5]),
        .O(\txtriggeresc_r_reg[2] [4]));
  LUT6 #(
    .INIT(64'hFFFFFEAEAAAAFEAE)) 
    \esc_cmd_data[5]_i_1__0 
       (.I0(\esc_cmd_data[5]_i_2__0_n_0 ),
        .I1(\esc_cmd_data[5]_i_3__0_n_0 ),
        .I2(\esc_cmd_data_reg[3] ),
        .I3(dl1_txdataesc[5]),
        .I4(\esc_cmd_data_reg[3]_0 ),
        .I5(\esc_cmd_data_reg[6] [6]),
        .O(\txtriggeresc_r_reg[2] [5]));
  LUT4 #(
    .INIT(16'h0400)) 
    \esc_cmd_data[5]_i_2__0 
       (.I0(\esc_cmd_data_reg[3]_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I3(\esc_cmd_data[7]_i_6__0_n_0 ),
        .O(\esc_cmd_data[5]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h2000)) 
    \esc_cmd_data[5]_i_3__0 
       (.I0(txulpsesc_r),
        .I1(txlpdtesc_r),
        .I2(dl1_txrequestesc),
        .I3(s_level_out_d3),
        .O(\esc_cmd_data[5]_i_3__0_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \esc_cmd_data[6]_i_1__0 
       (.I0(\esc_cmd_data_reg[6] [7]),
        .I1(\esc_cmd_data_reg[3]_0 ),
        .I2(\esc_cmd_data[6]_i_2__0_n_0 ),
        .O(\txtriggeresc_r_reg[2] [6]));
  LUT6 #(
    .INIT(64'hFFFF8B8A00008B8A)) 
    \esc_cmd_data[6]_i_2__0 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I1(dl_ulpsactivenot_i_2__0_n_0),
        .I2(txlpdtesc_r),
        .I3(txulpsesc_r),
        .I4(\esc_cmd_data_reg[3] ),
        .I5(dl1_txdataesc[6]),
        .O(\esc_cmd_data[6]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF1000)) 
    \esc_cmd_data[7]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[3]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_1 ),
        .I3(\esc_cmd_data[7]_i_3__0_n_0 ),
        .I4(\esc_cmd_data_reg[3]_0 ),
        .I5(\esc_cmd_data_reg[3] ),
        .O(\FSM_sequential_dl_tx_state_reg[1] ));
  LUT6 #(
    .INIT(64'h0000444055555555)) 
    \esc_cmd_data[7]_i_2__0 
       (.I0(\esc_cmd_data_reg[3]_0 ),
        .I1(\esc_cmd_data[7]_i_6__0_n_0 ),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_2 [2]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I5(\esc_cmd_data[7]_i_7__0_n_0 ),
        .O(\txtriggeresc_r_reg[2] [7]));
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    \esc_cmd_data[7]_i_3__0 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_2 [2]),
        .I1(\FSM_sequential_dl_tx_state_reg[2]_2 [3]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_7__0_n_0 ),
        .O(\esc_cmd_data[7]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h00001FFF1FFF1FFF)) 
    \esc_cmd_data[7]_i_6__0 
       (.I0(txulpsesc_r),
        .I1(txlpdtesc_r),
        .I2(dl1_txrequestesc),
        .I3(s_level_out_d3),
        .I4(dl1_txvalidesc),
        .I5(dl_txreadyesc_reg_0),
        .O(\esc_cmd_data[7]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'h55553FFF3FFF3FFF)) 
    \esc_cmd_data[7]_i_7__0 
       (.I0(dl1_txdataesc[7]),
        .I1(s_level_out_d3),
        .I2(dl1_txrequestesc),
        .I3(txlpdtesc_r),
        .I4(dl_txreadyesc_reg_0),
        .I5(dl1_txvalidesc),
        .O(\esc_cmd_data[7]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000222E)) 
    esc_ctrl_t_i_1__0
       (.I0(esc_ctrl_i),
        .I1(esc_ctrl_t_i_2__0_n_0),
        .I2(esc_ctrl_t_i_3__0_n_0),
        .I3(Q[3]),
        .I4(esc_ctrl_t_reg_1),
        .I5(esc_ctrl_t_reg_0),
        .O(esc_ctrl_t_reg));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT5 #(
    .INIT(32'h04570042)) 
    esc_ctrl_t_i_2__0
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(\txtriggeresc_r_reg[0] ),
        .O(esc_ctrl_t_i_2__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    esc_ctrl_t_i_3__0
       (.I0(Q[1]),
        .I1(\txtriggeresc_r_reg[0] ),
        .I2(out),
        .O(esc_ctrl_t_i_3__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'h64)) 
    esc_stopstate_i_2__0
       (.I0(Q[1]),
        .I1(\txtriggeresc_r_reg[0] ),
        .I2(out),
        .O(\FSM_sequential_dl_tx_state_reg[1]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h43FF4FFF43434F43)) 
    tx_dl_lp_dn_i_11__0
       (.I0(tx_dl_lp_dn_i_13__0_n_0),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\esc_cmd_data[0]_i_2__0_n_0 ),
        .I5(\txtriggeresc_r_reg[0] ),
        .O(tx_dl_lp_dn_i_11__0_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAA8AA8AAAA)) 
    tx_dl_lp_dn_i_13__0
       (.I0(Q[1]),
        .I1(\esc_cmd_data_reg[6] [0]),
        .I2(tx_dl_lp_dn_esc_i),
        .I3(tx_dl_lp_dp_esc_i),
        .I4(\bit_cnt_reg[0]_0 ),
        .I5(\esc_cmd_data[0]_i_2__0_n_0 ),
        .O(tx_dl_lp_dn_i_13__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFEFE02)) 
    tx_dl_lp_dn_i_1__2
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dn_i_2__2_n_0),
        .I2(tx_dl_lp_dn_i_3__0_n_0),
        .I3(tx_dl_lp_dn_i_4__0_n_0),
        .I4(tx_dl_lp_dn_i_5__0_n_0),
        .I5(tx_dl_lp_dp_reg_1),
        .O(tx_dl_lp_dn_reg));
  LUT6 #(
    .INIT(64'hFF04FF04FF040000)) 
    tx_dl_lp_dn_i_2__2
       (.I0(Q[3]),
        .I1(Q[0]),
        .I2(tx_dl_lp_dn_reg_0),
        .I3(\FSM_sequential_dl_tx_state[3]_i_5__0_n_0 ),
        .I4(tx_dl_lp_dn_i_7__0_n_0),
        .I5(Q[2]),
        .O(tx_dl_lp_dn_i_2__2_n_0));
  LUT6 #(
    .INIT(64'h88808888AAAAAAAA)) 
    tx_dl_lp_dn_i_3__0
       (.I0(tx_dl_lp_dn_i_8__0_n_0),
        .I1(\FSM_sequential_dl_tx_state[3]_i_9__0_n_0 ),
        .I2(\bit_cnt[3]_i_9__0_n_0 ),
        .I3(tx_dl_lp_dn_i_9__0_n_0),
        .I4(tx_dl_lp_dn_reg_0),
        .I5(tx_dl_lp_dn_reg_1),
        .O(tx_dl_lp_dn_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h1151004000400040)) 
    tx_dl_lp_dn_i_4__0
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(dl_ulpsactivenot_i_2__0_n_0),
        .I4(Q[0]),
        .I5(\txtriggeresc_r_reg[0] ),
        .O(tx_dl_lp_dn_i_4__0_n_0));
  LUT6 #(
    .INIT(64'h4444444444444445)) 
    tx_dl_lp_dn_i_5__0
       (.I0(Q[3]),
        .I1(tx_dl_lp_dn_i_11__0_n_0),
        .I2(tx_dl_lp_dn_i_9__0_n_0),
        .I3(\bit_cnt[3]_i_9__0_n_0 ),
        .I4(tx_dl_lp_dn_reg_2),
        .I5(Q[2]),
        .O(tx_dl_lp_dn_i_5__0_n_0));
  LUT6 #(
    .INIT(64'h0000555500007FFF)) 
    tx_dl_lp_dn_i_7__0
       (.I0(Q[1]),
        .I1(s_level_out_d3),
        .I2(dl1_txrequestesc),
        .I3(txlpdtesc_r),
        .I4(Q[3]),
        .I5(Q[0]),
        .O(tx_dl_lp_dn_i_7__0_n_0));
  LUT5 #(
    .INIT(32'h15555555)) 
    tx_dl_lp_dn_i_8__0
       (.I0(Q[2]),
        .I1(dl1_txrequestesc),
        .I2(s_level_out_d3),
        .I3(Q[3]),
        .I4(Q[1]),
        .O(tx_dl_lp_dn_i_8__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'hB)) 
    tx_dl_lp_dn_i_9__0
       (.I0(\txtriggeresc_r_reg[0] ),
        .I1(Q[1]),
        .O(tx_dl_lp_dn_i_9__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFEFE02)) 
    tx_dl_lp_dp_i_1__2
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(tx_dl_lp_dn_i_2__2_n_0),
        .I2(tx_dl_lp_dn_i_3__0_n_0),
        .I3(tx_dl_lp_dp_i_2__2_n_0),
        .I4(tx_dl_lp_dp_i_3__2_n_0),
        .I5(tx_dl_lp_dp_reg_1),
        .O(tx_dl_lp_dp_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFF55300000)) 
    tx_dl_lp_dp_i_2__2
       (.I0(\FSM_sequential_dl_tx_state[3]_i_10__0_n_0 ),
        .I1(tx_dl_lp_dp_i_4__2_n_0),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(tx_dl_lp_dp_i_5__2_n_0),
        .O(tx_dl_lp_dp_i_2__2_n_0));
  LUT6 #(
    .INIT(64'h4044404440444444)) 
    tx_dl_lp_dp_i_3__2
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(\txtriggeresc_r_reg[0] ),
        .I3(Q[0]),
        .I4(\bit_cnt[3]_i_9__0_n_0 ),
        .I5(tx_dl_lp_dp_reg_0),
        .O(tx_dl_lp_dp_i_3__2_n_0));
  LUT6 #(
    .INIT(64'h000000007DFF0000)) 
    tx_dl_lp_dp_i_4__2
       (.I0(\bit_cnt_reg[0]_0 ),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(tx_dl_lp_dp_esc_i),
        .I3(\esc_cmd_data_reg[6] [0]),
        .I4(Q[1]),
        .I5(\esc_cmd_data[0]_i_2__0_n_0 ),
        .O(tx_dl_lp_dp_i_4__2_n_0));
  LUT6 #(
    .INIT(64'h323232320F0FFF00)) 
    tx_dl_lp_dp_i_5__2
       (.I0(\esc_cmd_data[0]_i_2__0_n_0 ),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(\txtriggeresc_r_reg[0] ),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(tx_dl_lp_dp_i_5__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT4 #(
    .INIT(16'h7530)) 
    txlpdtesc_r_i_1__0
       (.I0(txulpsesc_r_reg_0),
        .I1(\txtriggeresc_r[3]_i_3__0_n_0 ),
        .I2(dl1_txlpdtesc),
        .I3(txlpdtesc_r),
        .O(dl1_txlpdtesc_0));
  LUT6 #(
    .INIT(64'h0002000000000200)) 
    \txtriggeresc_r[0]_i_1__0 
       (.I0(dl1_txtriggeresc[0]),
        .I1(dl_ulpsactivenot_i_2__0_n_0),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\dl1_txtriggeresc[3] [0]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \txtriggeresc_r[1]_i_1__0 
       (.I0(\txtriggeresc_r[3]_i_3__0_n_0 ),
        .I1(dl1_txtriggeresc[1]),
        .O(\dl1_txtriggeresc[3] [1]));
  LUT6 #(
    .INIT(64'h0002000000000200)) 
    \txtriggeresc_r[2]_i_1__0 
       (.I0(dl1_txtriggeresc[2]),
        .I1(dl_ulpsactivenot_i_2__0_n_0),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\dl1_txtriggeresc[3] [2]));
  LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBBA)) 
    \txtriggeresc_r[3]_i_1__0 
       (.I0(txulpsesc_r_reg_0),
        .I1(\txtriggeresc_r[3]_i_3__0_n_0 ),
        .I2(dl1_txtriggeresc[2]),
        .I3(dl1_txtriggeresc[1]),
        .I4(dl1_txtriggeresc[3]),
        .I5(dl1_txtriggeresc[0]),
        .O(\dl1_txtriggeresc[2] ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \txtriggeresc_r[3]_i_2__0 
       (.I0(\txtriggeresc_r[3]_i_3__0_n_0 ),
        .I1(dl1_txtriggeresc[3]),
        .O(\dl1_txtriggeresc[3] [3]));
  LUT6 #(
    .INIT(64'hFFE7FFFFFFFFFFFF)) 
    \txtriggeresc_r[3]_i_3__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(s_level_out_d3),
        .I5(dl1_txrequestesc),
        .O(\txtriggeresc_r[3]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT4 #(
    .INIT(16'h7530)) 
    txulpsesc_r_i_1__0
       (.I0(txulpsesc_r_reg_0),
        .I1(\txtriggeresc_r[3]_i_3__0_n_0 ),
        .I2(dl1_txulpsesc),
        .I3(txulpsesc_r),
        .O(dl1_txulpsesc_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_58
   (out,
    core_rst,
    dl1_forcetxstopmode,
    core_clk);
  output out;
  input core_rst;
  input dl1_forcetxstopmode;
  input core_clk;

  wire core_clk;
  wire core_rst;
  wire dl1_forcetxstopmode;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl1_forcetxstopmode),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_59
   (\dl_tx_sm_state_reg[1] ,
    \dl_tx_sm_state_reg[2] ,
    \dl_tx_sm_state_reg[0] ,
    \dl_tx_sm_state_reg[0]_0 ,
    p_0_in23_out,
    \dl_tx_sm_state_reg[1]_0 ,
    s_level_out_d3_reg_0,
    s_level_out_d3_reg_1,
    \dl_tx_sm_state_reg[1]_1 ,
    core_rst,
    dl1_txrequestesc,
    core_clk,
    esc_start_reg,
    dl_tx_sm_state125_out,
    esc_start_i,
    \dl_tx_sm_state_reg[2]_0 ,
    \dl_tx_sm_state_reg[2]_1 ,
    \dl_tx_sm_state_reg[2]_2 ,
    \dl_tx_sm_state_reg[0]_1 ,
    en_hs_start_w__4,
    cl_init_done_coreclk_i,
    dl_stopstate_i_2__0_0,
    dl_tx_sm_state120_out,
    timeout_hsexit,
    p_21_in,
    timeout_prepare,
    esc_active_sync_r,
    out,
    dl_status_bit_6_reg,
    timeout_hsexit_all);
  output \dl_tx_sm_state_reg[1] ;
  output \dl_tx_sm_state_reg[2] ;
  output \dl_tx_sm_state_reg[0] ;
  output \dl_tx_sm_state_reg[0]_0 ;
  output p_0_in23_out;
  output \dl_tx_sm_state_reg[1]_0 ;
  output s_level_out_d3_reg_0;
  output s_level_out_d3_reg_1;
  output \dl_tx_sm_state_reg[1]_1 ;
  input core_rst;
  input dl1_txrequestesc;
  input core_clk;
  input esc_start_reg;
  input dl_tx_sm_state125_out;
  input esc_start_i;
  input \dl_tx_sm_state_reg[2]_0 ;
  input \dl_tx_sm_state_reg[2]_1 ;
  input \dl_tx_sm_state_reg[2]_2 ;
  input \dl_tx_sm_state_reg[0]_1 ;
  input en_hs_start_w__4;
  input cl_init_done_coreclk_i;
  input dl_stopstate_i_2__0_0;
  input dl_tx_sm_state120_out;
  input [0:0]timeout_hsexit;
  input p_21_in;
  input timeout_prepare;
  input esc_active_sync_r;
  input out;
  input dl_status_bit_6_reg;
  input timeout_hsexit_all;

  wire cl_init_done_coreclk_i;
  wire core_clk;
  wire core_rst;
  wire dl1_txrequestesc;
  wire dl_status_bit_6_i_6__0_n_0;
  wire dl_status_bit_6_reg;
  wire dl_stopstate_i_2__0_0;
  wire dl_stopstate_i_5__0_n_0;
  wire dl_tx_sm_state118_out;
  wire dl_tx_sm_state120_out;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state[2]_i_2__0_n_0 ;
  wire [0:0]dl_tx_sm_state__0;
  wire \dl_tx_sm_state_reg[0] ;
  wire \dl_tx_sm_state_reg[0]_0 ;
  wire \dl_tx_sm_state_reg[0]_1 ;
  wire \dl_tx_sm_state_reg[1] ;
  wire \dl_tx_sm_state_reg[1]_0 ;
  wire \dl_tx_sm_state_reg[1]_1 ;
  wire \dl_tx_sm_state_reg[2] ;
  wire \dl_tx_sm_state_reg[2]_0 ;
  wire \dl_tx_sm_state_reg[2]_1 ;
  wire \dl_tx_sm_state_reg[2]_2 ;
  wire en_hs_start_w__4;
  wire esc_active_sync_r;
  wire esc_start11_out;
  wire esc_start_i;
  wire esc_start_i_3__0_n_0;
  wire esc_start_reg;
  wire out;
  wire p_0_in23_out;
  wire p_21_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire [0:0]timeout_hsexit;
  wire timeout_hsexit_all;
  wire timeout_prepare;

  LUT5 #(
    .INIT(32'h88808080)) 
    dl_status_bit_6_i_4__0
       (.I0(esc_start_reg),
        .I1(\dl_tx_sm_state_reg[2]_2 ),
        .I2(dl_status_bit_6_i_6__0_n_0),
        .I3(\dl_tx_sm_state_reg[0]_0 ),
        .I4(dl_status_bit_6_reg),
        .O(\dl_tx_sm_state_reg[1]_1 ));
  LUT6 #(
    .INIT(64'h00700070FF700070)) 
    dl_status_bit_6_i_6__0
       (.I0(s_level_out_d3),
        .I1(timeout_hsexit),
        .I2(timeout_hsexit_all),
        .I3(\dl_tx_sm_state_reg[0]_1 ),
        .I4(esc_active_sync_r),
        .I5(out),
        .O(dl_status_bit_6_i_6__0_n_0));
  LUT3 #(
    .INIT(8'hBF)) 
    dl_status_bit_6_i_7__0
       (.I0(\dl_tx_sm_state_reg[0]_1 ),
        .I1(timeout_hsexit),
        .I2(s_level_out_d3),
        .O(\dl_tx_sm_state_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hFBFFFBAA)) 
    dl_stopstate_i_2__0
       (.I0(dl_tx_sm_state125_out),
        .I1(esc_start_reg),
        .I2(dl_status_bit_6_i_6__0_n_0),
        .I3(\dl_tx_sm_state_reg[2]_2 ),
        .I4(dl_stopstate_i_5__0_n_0),
        .O(\dl_tx_sm_state_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hAAAAAFFFCCCCCCCC)) 
    dl_stopstate_i_5__0
       (.I0(\dl_tx_sm_state_reg[0]_1 ),
        .I1(cl_init_done_coreclk_i),
        .I2(dl_stopstate_i_2__0_0),
        .I3(s_level_out_d3),
        .I4(en_hs_start_w__4),
        .I5(esc_start_reg),
        .O(dl_stopstate_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h2F20)) 
    \dl_tx_sm_state[0]_i_1__0 
       (.I0(dl_tx_sm_state__0),
        .I1(dl_tx_sm_state125_out),
        .I2(\dl_tx_sm_state_reg[2]_1 ),
        .I3(\dl_tx_sm_state_reg[0]_1 ),
        .O(\dl_tx_sm_state_reg[0] ));
  LUT6 #(
    .INIT(64'h0C0F0A0F0C000A0F)) 
    \dl_tx_sm_state[0]_i_2__0 
       (.I0(s_level_out_d3_reg_0),
        .I1(dl_tx_sm_state118_out),
        .I2(\dl_tx_sm_state_reg[0]_1 ),
        .I3(esc_start_reg),
        .I4(\dl_tx_sm_state_reg[2]_2 ),
        .I5(dl_tx_sm_state120_out),
        .O(dl_tx_sm_state__0));
  LUT2 #(
    .INIT(4'h8)) 
    \dl_tx_sm_state[0]_i_3__0 
       (.I0(s_level_out_d3),
        .I1(timeout_hsexit),
        .O(dl_tx_sm_state118_out));
  LUT3 #(
    .INIT(8'hF8)) 
    \dl_tx_sm_state[1]_i_4__0 
       (.I0(dl_stopstate_i_2__0_0),
        .I1(s_level_out_d3),
        .I2(en_hs_start_w__4),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'h00FF0000F8FFF8FF)) 
    \dl_tx_sm_state[2]_i_13__0 
       (.I0(dl_stopstate_i_2__0_0),
        .I1(s_level_out_d3),
        .I2(en_hs_start_w__4),
        .I3(esc_start_reg),
        .I4(cl_init_done_coreclk_i),
        .I5(\dl_tx_sm_state_reg[0]_1 ),
        .O(s_level_out_d3_reg_1));
  LUT5 #(
    .INIT(32'h0EFF0C00)) 
    \dl_tx_sm_state[2]_i_1__0 
       (.I0(\dl_tx_sm_state[2]_i_2__0_n_0 ),
        .I1(\dl_tx_sm_state_reg[2]_0 ),
        .I2(dl_tx_sm_state125_out),
        .I3(\dl_tx_sm_state_reg[2]_1 ),
        .I4(\dl_tx_sm_state_reg[2]_2 ),
        .O(\dl_tx_sm_state_reg[2] ));
  LUT6 #(
    .INIT(64'h40FF40AA40AA40AA)) 
    \dl_tx_sm_state[2]_i_2__0 
       (.I0(\dl_tx_sm_state_reg[0]_1 ),
        .I1(timeout_hsexit),
        .I2(s_level_out_d3),
        .I3(esc_start_reg),
        .I4(p_21_in),
        .I5(timeout_prepare),
        .O(\dl_tx_sm_state[2]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \dl_tx_sm_state[2]_i_9__0 
       (.I0(s_level_out_d3),
        .I1(dl_stopstate_i_2__0_0),
        .O(p_0_in23_out));
  LUT5 #(
    .INIT(32'hAABFAA80)) 
    esc_start_i_1__0
       (.I0(esc_start11_out),
        .I1(esc_start_i_3__0_n_0),
        .I2(esc_start_reg),
        .I3(dl_tx_sm_state125_out),
        .I4(esc_start_i),
        .O(\dl_tx_sm_state_reg[1] ));
  LUT6 #(
    .INIT(64'h0000000055005530)) 
    esc_start_i_2__0
       (.I0(\dl_tx_sm_state_reg[0]_0 ),
        .I1(en_hs_start_w__4),
        .I2(p_0_in23_out),
        .I3(\dl_tx_sm_state_reg[2]_2 ),
        .I4(\dl_tx_sm_state_reg[0]_1 ),
        .I5(dl_tx_sm_state125_out),
        .O(esc_start11_out));
  LUT6 #(
    .INIT(64'h00F088880000FFFF)) 
    esc_start_i_3__0
       (.I0(timeout_hsexit),
        .I1(s_level_out_d3),
        .I2(esc_active_sync_r),
        .I3(out),
        .I4(\dl_tx_sm_state_reg[0]_1 ),
        .I5(\dl_tx_sm_state_reg[2]_2 ),
        .O(esc_start_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl1_txrequestesc),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_60
   (out,
    tx_dl_lp_dn_reg,
    \dl_tx_sm_state_reg[0] ,
    dl_tx_sm_state120_out,
    \dl_tx_sm_state_reg[2] ,
    en_hs_start_w__4,
    \en_cl_init_to_blk.init_done_reg ,
    \dl_tx_sm_state_reg[2]_0 ,
    en_lp_01_cnt__4,
    core_rst,
    dl_txrequesths_r,
    core_clk,
    tx_dl_lp_dn_reg_0,
    tx_dl_lp_dn_reg_1,
    tx_dl_lp_dn_reg_2,
    tx_dl_lp_dn_hs_i,
    \dl_tx_sm_state_reg[1] ,
    \dl_tx_sm_state_reg[1]_0 ,
    \dl_tx_sm_state_reg[1]_1 ,
    \dl_tx_sm_state_reg[1]_2 ,
    p_0_in23_out,
    cl_init_done_coreclk_i,
    tx_dl_lp_dn_reg_3,
    dl_tx_sm_state125_out,
    \dl_tx_sm_state[1]_i_4__0 ,
    \dl_tx_sm_state[1]_i_4__0_0 ,
    cl_txclkactivehs_i,
    timeout_prepare,
    en_cal_hs_datapath_reg,
    \dl_tx_sm_state[2]_i_3__0_0 );
  output out;
  output tx_dl_lp_dn_reg;
  output \dl_tx_sm_state_reg[0] ;
  output dl_tx_sm_state120_out;
  output \dl_tx_sm_state_reg[2] ;
  output en_hs_start_w__4;
  output \en_cl_init_to_blk.init_done_reg ;
  output \dl_tx_sm_state_reg[2]_0 ;
  output en_lp_01_cnt__4;
  input core_rst;
  input dl_txrequesths_r;
  input core_clk;
  input tx_dl_lp_dn_reg_0;
  input tx_dl_lp_dn_reg_1;
  input tx_dl_lp_dn_reg_2;
  input tx_dl_lp_dn_hs_i;
  input \dl_tx_sm_state_reg[1] ;
  input \dl_tx_sm_state_reg[1]_0 ;
  input \dl_tx_sm_state_reg[1]_1 ;
  input \dl_tx_sm_state_reg[1]_2 ;
  input p_0_in23_out;
  input cl_init_done_coreclk_i;
  input tx_dl_lp_dn_reg_3;
  input dl_tx_sm_state125_out;
  input \dl_tx_sm_state[1]_i_4__0 ;
  input \dl_tx_sm_state[1]_i_4__0_0 ;
  input cl_txclkactivehs_i;
  input timeout_prepare;
  input en_cal_hs_datapath_reg;
  input \dl_tx_sm_state[2]_i_3__0_0 ;

  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl_tx_sm_state120_out;
  wire dl_tx_sm_state122_out;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state[1]_i_2__0_n_0 ;
  wire \dl_tx_sm_state[1]_i_4__0 ;
  wire \dl_tx_sm_state[1]_i_4__0_0 ;
  wire \dl_tx_sm_state[2]_i_3__0_0 ;
  wire \dl_tx_sm_state_reg[0] ;
  wire \dl_tx_sm_state_reg[1] ;
  wire \dl_tx_sm_state_reg[1]_0 ;
  wire \dl_tx_sm_state_reg[1]_1 ;
  wire \dl_tx_sm_state_reg[1]_2 ;
  wire \dl_tx_sm_state_reg[2] ;
  wire \dl_tx_sm_state_reg[2]_0 ;
  wire dl_txrequesths_r;
  wire en_cal_hs_datapath_reg;
  wire \en_cl_init_to_blk.init_done_reg ;
  wire en_hs_start_w__4;
  wire en_lp_01_cnt__4;
  wire p_0_in23_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_prepare;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dn_reg_1;
  wire tx_dl_lp_dn_reg_2;
  wire tx_dl_lp_dn_reg_3;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hFFAAFFFFFBFA0000)) 
    \dl_tx_sm_state[1]_i_1__0 
       (.I0(\dl_tx_sm_state[1]_i_2__0_n_0 ),
        .I1(dl_tx_sm_state120_out),
        .I2(\dl_tx_sm_state_reg[1] ),
        .I3(\dl_tx_sm_state_reg[1]_0 ),
        .I4(\dl_tx_sm_state_reg[1]_1 ),
        .I5(\dl_tx_sm_state_reg[1]_2 ),
        .O(\dl_tx_sm_state_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00007400)) 
    \dl_tx_sm_state[1]_i_2__0 
       (.I0(dl_tx_sm_state122_out),
        .I1(\dl_tx_sm_state_reg[1] ),
        .I2(tx_dl_lp_dn_reg_3),
        .I3(\dl_tx_sm_state_reg[1]_2 ),
        .I4(\dl_tx_sm_state_reg[1]_0 ),
        .I5(dl_tx_sm_state125_out),
        .O(\dl_tx_sm_state[1]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'hA800)) 
    \dl_tx_sm_state[1]_i_3__0 
       (.I0(cl_txclkactivehs_i),
        .I1(s_level_out_d3),
        .I2(en_cal_hs_datapath_reg),
        .I3(timeout_prepare),
        .O(dl_tx_sm_state120_out));
  LUT4 #(
    .INIT(16'hBBBF)) 
    \dl_tx_sm_state[2]_i_12__0 
       (.I0(\dl_tx_sm_state[2]_i_3__0_0 ),
        .I1(cl_txclkactivehs_i),
        .I2(s_level_out_d3),
        .I3(en_cal_hs_datapath_reg),
        .O(en_lp_01_cnt__4));
  LUT6 #(
    .INIT(64'h0A0300000A000000)) 
    \dl_tx_sm_state[2]_i_3__0 
       (.I0(dl_tx_sm_state122_out),
        .I1(en_hs_start_w__4),
        .I2(\dl_tx_sm_state_reg[1]_0 ),
        .I3(\dl_tx_sm_state_reg[1] ),
        .I4(\dl_tx_sm_state_reg[1]_2 ),
        .I5(p_0_in23_out),
        .O(\dl_tx_sm_state_reg[2] ));
  LUT4 #(
    .INIT(16'hA800)) 
    \dl_tx_sm_state[2]_i_7__0 
       (.I0(cl_txclkactivehs_i),
        .I1(s_level_out_d3),
        .I2(en_cal_hs_datapath_reg),
        .I3(\dl_tx_sm_state[2]_i_3__0_0 ),
        .O(dl_tx_sm_state122_out));
  LUT4 #(
    .INIT(16'h8000)) 
    \dl_tx_sm_state[2]_i_8__0 
       (.I0(s_level_out_d3),
        .I1(\dl_tx_sm_state[1]_i_4__0 ),
        .I2(\dl_tx_sm_state[1]_i_4__0_0 ),
        .I3(cl_txclkactivehs_i),
        .O(en_hs_start_w__4));
  LUT5 #(
    .INIT(32'h5F5FDFFF)) 
    en_cal_hs_datapath_i_2__0
       (.I0(\dl_tx_sm_state_reg[1]_0 ),
        .I1(timeout_prepare),
        .I2(cl_txclkactivehs_i),
        .I3(s_level_out_d3),
        .I4(en_cal_hs_datapath_reg),
        .O(\dl_tx_sm_state_reg[2]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_txrequesths_r),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT5 #(
    .INIT(32'hFEFFFE00)) 
    tx_dl_lp_dn_i_1__1
       (.I0(\dl_tx_sm_state[1]_i_2__0_n_0 ),
        .I1(tx_dl_lp_dn_reg_0),
        .I2(tx_dl_lp_dn_reg_1),
        .I3(tx_dl_lp_dn_reg_2),
        .I4(tx_dl_lp_dn_hs_i),
        .O(tx_dl_lp_dn_reg));
  LUT6 #(
    .INIT(64'h3333AAAA0F00FFFF)) 
    tx_dl_lp_dp_i_2__1
       (.I0(cl_init_done_coreclk_i),
        .I1(dl_tx_sm_state122_out),
        .I2(en_hs_start_w__4),
        .I3(p_0_in23_out),
        .I4(\dl_tx_sm_state_reg[1]_2 ),
        .I5(\dl_tx_sm_state_reg[1] ),
        .O(\en_cl_init_to_blk.init_done_reg ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_61
   (out,
    en_lp_01_cnt_reg,
    \dl_tx_sm_state_reg[2] ,
    \dl_tx_sm_state_reg[0] ,
    \dl_tx_sm_state_reg[1] ,
    p_21_in,
    \dl_tx_sm_state_reg[2]_0 ,
    \dl_tx_sm_state_reg[2]_1 ,
    \dl_tx_sm_state_reg[2]_2 ,
    core_rst,
    core_clk,
    dl_tx_sm_state125_out,
    en_lp_01_cnt_reg_0,
    dl_stopstate_reg,
    dl_stopstate_reg_0,
    dl_stopstate_i,
    en_hs_datapath_reg,
    dl_status_reg,
    en_lp_01_cnt_reg_1,
    en_hs_start_w__4,
    en_lp_01_cnt_reg_2,
    dl_status_bit_6_reg,
    dl_status_bit_6_reg_0,
    tx_dl_lp_dn_reg,
    tx_dl_lp_dn_reg_0,
    \dl_tx_sm_state_reg[1]_0 ,
    en_lp_01_cnt__4,
    dl_tx_sm_state0__0,
    en_hs_datapath_reg_0,
    cl_txclkactivehs_i,
    timeout_prepare,
    dl_stopstate_reg_1,
    dl_status_bit_6_reg_1,
    dl_status_bit_6_reg_2,
    cl_init_done_coreclk_i);
  output out;
  output en_lp_01_cnt_reg;
  output \dl_tx_sm_state_reg[2] ;
  output \dl_tx_sm_state_reg[0] ;
  output \dl_tx_sm_state_reg[1] ;
  output p_21_in;
  output \dl_tx_sm_state_reg[2]_0 ;
  output \dl_tx_sm_state_reg[2]_1 ;
  output \dl_tx_sm_state_reg[2]_2 ;
  input core_rst;
  input core_clk;
  input dl_tx_sm_state125_out;
  input en_lp_01_cnt_reg_0;
  input dl_stopstate_reg;
  input dl_stopstate_reg_0;
  input dl_stopstate_i;
  input en_hs_datapath_reg;
  input [0:0]dl_status_reg;
  input en_lp_01_cnt_reg_1;
  input en_hs_start_w__4;
  input en_lp_01_cnt_reg_2;
  input dl_status_bit_6_reg;
  input dl_status_bit_6_reg_0;
  input tx_dl_lp_dn_reg;
  input tx_dl_lp_dn_reg_0;
  input \dl_tx_sm_state_reg[1]_0 ;
  input en_lp_01_cnt__4;
  input dl_tx_sm_state0__0;
  input en_hs_datapath_reg_0;
  input cl_txclkactivehs_i;
  input timeout_prepare;
  input dl_stopstate_reg_1;
  input dl_status_bit_6_reg_1;
  input dl_status_bit_6_reg_2;
  input cl_init_done_coreclk_i;

  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl_status_bit_6_i_2__0_n_0;
  wire dl_status_bit_6_i_5__0_n_0;
  wire dl_status_bit_6_reg;
  wire dl_status_bit_6_reg_0;
  wire dl_status_bit_6_reg_1;
  wire dl_status_bit_6_reg_2;
  wire [0:0]dl_status_reg;
  wire dl_stopstate_i;
  wire dl_stopstate_i_3__0_n_0;
  wire dl_stopstate_i_4__0_n_0;
  wire dl_stopstate_reg;
  wire dl_stopstate_reg_0;
  wire dl_stopstate_reg_1;
  wire dl_tx_sm_state0__0;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state[2]_i_10__0_n_0 ;
  wire \dl_tx_sm_state_reg[0] ;
  wire \dl_tx_sm_state_reg[1] ;
  wire \dl_tx_sm_state_reg[1]_0 ;
  wire \dl_tx_sm_state_reg[2] ;
  wire \dl_tx_sm_state_reg[2]_0 ;
  wire \dl_tx_sm_state_reg[2]_1 ;
  wire \dl_tx_sm_state_reg[2]_2 ;
  wire en_hs_datapath_i_2__0_n_0;
  wire en_hs_datapath_i_4__0_n_0;
  wire en_hs_datapath_reg;
  wire en_hs_datapath_reg_0;
  wire en_hs_start_w__4;
  wire en_lp_01_cnt15_out;
  wire en_lp_01_cnt__4;
  wire en_lp_01_cnt_i_3__0_n_0;
  wire en_lp_01_cnt_reg;
  wire en_lp_01_cnt_reg_0;
  wire en_lp_01_cnt_reg_1;
  wire en_lp_01_cnt_reg_2;
  wire p_21_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_prepare;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dp_i_6__1_n_0;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF0E)) 
    dl_status_bit_6_i_1__0
       (.I0(dl_status_bit_6_i_2__0_n_0),
        .I1(dl_status_bit_6_reg),
        .I2(dl_stopstate_reg_0),
        .I3(dl_status_bit_6_reg_0),
        .I4(dl_tx_sm_state125_out),
        .I5(dl_status_bit_6_i_5__0_n_0),
        .O(\dl_tx_sm_state_reg[2]_0 ));
  LUT5 #(
    .INIT(32'h8ADF0000)) 
    dl_status_bit_6_i_2__0
       (.I0(en_hs_datapath_reg),
        .I1(dl_status_bit_6_reg_1),
        .I2(p_21_in),
        .I3(dl_status_bit_6_reg_2),
        .I4(en_lp_01_cnt_reg_2),
        .O(dl_status_bit_6_i_2__0_n_0));
  LUT5 #(
    .INIT(32'h40404044)) 
    dl_status_bit_6_i_5__0
       (.I0(en_lp_01_cnt_reg_2),
        .I1(dl_stopstate_reg_0),
        .I2(dl_status_bit_6_reg_1),
        .I3(en_hs_datapath_reg),
        .I4(p_21_in),
        .O(dl_status_bit_6_i_5__0_n_0));
  LUT6 #(
    .INIT(64'hAAABABABAAA8A8A8)) 
    dl_stopstate_i_1__0
       (.I0(dl_stopstate_reg),
        .I1(dl_tx_sm_state125_out),
        .I2(dl_stopstate_i_3__0_n_0),
        .I3(dl_stopstate_reg_0),
        .I4(dl_stopstate_i_4__0_n_0),
        .I5(dl_stopstate_i),
        .O(\dl_tx_sm_state_reg[2] ));
  LUT5 #(
    .INIT(32'h000072AA)) 
    dl_stopstate_i_3__0
       (.I0(en_lp_01_cnt_reg_2),
        .I1(p_21_in),
        .I2(cl_init_done_coreclk_i),
        .I3(en_hs_datapath_reg),
        .I4(dl_stopstate_reg_0),
        .O(dl_stopstate_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hFF01)) 
    dl_stopstate_i_4__0
       (.I0(p_21_in),
        .I1(en_hs_datapath_reg),
        .I2(en_lp_01_cnt_reg_2),
        .I3(dl_stopstate_reg_1),
        .O(dl_stopstate_i_4__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00FD000D)) 
    \dl_tx_sm_state[2]_i_10__0 
       (.I0(p_21_in),
        .I1(timeout_prepare),
        .I2(en_hs_datapath_reg),
        .I3(en_lp_01_cnt_reg_2),
        .I4(dl_tx_sm_state0__0),
        .I5(dl_stopstate_reg_1),
        .O(\dl_tx_sm_state[2]_i_10__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEEEFFFFFCCC)) 
    \dl_tx_sm_state[2]_i_5__0 
       (.I0(\dl_tx_sm_state[2]_i_10__0_n_0 ),
        .I1(dl_tx_sm_state125_out),
        .I2(\dl_tx_sm_state_reg[1]_0 ),
        .I3(en_lp_01_cnt__4),
        .I4(tx_dl_lp_dn_reg_0),
        .I5(dl_stopstate_reg_0),
        .O(\dl_tx_sm_state_reg[2]_2 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \dl_tx_sm_state[2]_i_6__0 
       (.I0(s_level_out_d3),
        .I1(en_hs_datapath_reg_0),
        .I2(cl_txclkactivehs_i),
        .O(p_21_in));
  LUT5 #(
    .INIT(32'h01FF0100)) 
    en_hs_datapath_i_1__0
       (.I0(en_hs_datapath_reg),
        .I1(dl_tx_sm_state125_out),
        .I2(en_hs_datapath_i_2__0_n_0),
        .I3(\dl_tx_sm_state_reg[1] ),
        .I4(dl_status_reg),
        .O(\dl_tx_sm_state_reg[0] ));
  LUT4 #(
    .INIT(16'h1FFF)) 
    en_hs_datapath_i_2__0
       (.I0(s_level_out_d3),
        .I1(en_hs_datapath_reg_0),
        .I2(cl_txclkactivehs_i),
        .I3(dl_stopstate_reg_0),
        .O(en_hs_datapath_i_2__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFAEAAAAFF)) 
    en_hs_datapath_i_3__0
       (.I0(en_hs_datapath_i_4__0_n_0),
        .I1(dl_tx_sm_state0__0),
        .I2(en_lp_01_cnt_reg_2),
        .I3(dl_stopstate_reg_0),
        .I4(en_hs_datapath_reg),
        .I5(dl_tx_sm_state125_out),
        .O(\dl_tx_sm_state_reg[1] ));
  LUT6 #(
    .INIT(64'h000000000000FF1F)) 
    en_hs_datapath_i_4__0
       (.I0(s_level_out_d3),
        .I1(en_hs_datapath_reg_0),
        .I2(cl_txclkactivehs_i),
        .I3(timeout_prepare),
        .I4(en_hs_datapath_reg),
        .I5(en_lp_01_cnt_reg_2),
        .O(en_hs_datapath_i_4__0_n_0));
  LUT4 #(
    .INIT(16'hABA8)) 
    en_lp_01_cnt_i_1__1
       (.I0(en_lp_01_cnt15_out),
        .I1(en_lp_01_cnt_i_3__0_n_0),
        .I2(dl_tx_sm_state125_out),
        .I3(en_lp_01_cnt_reg_0),
        .O(en_lp_01_cnt_reg));
  LUT6 #(
    .INIT(64'h0022000000F00000)) 
    en_lp_01_cnt_i_2__1
       (.I0(p_21_in),
        .I1(en_lp_01_cnt_reg_1),
        .I2(en_hs_start_w__4),
        .I3(dl_tx_sm_state125_out),
        .I4(en_lp_01_cnt_reg_2),
        .I5(en_hs_datapath_reg),
        .O(en_lp_01_cnt15_out));
  LUT6 #(
    .INIT(64'h5515440411111111)) 
    en_lp_01_cnt_i_3__0
       (.I0(dl_stopstate_reg_0),
        .I1(en_hs_datapath_reg),
        .I2(p_21_in),
        .I3(en_lp_01_cnt_reg_1),
        .I4(en_hs_start_w__4),
        .I5(en_lp_01_cnt_reg_2),
        .O(en_lp_01_cnt_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hFEFEFEFEFFFFFFF0)) 
    tx_dl_lp_dp_i_4__1
       (.I0(tx_dl_lp_dn_reg),
        .I1(dl_stopstate_i_4__0_n_0),
        .I2(dl_tx_sm_state125_out),
        .I3(tx_dl_lp_dp_i_6__1_n_0),
        .I4(tx_dl_lp_dn_reg_0),
        .I5(dl_stopstate_reg_0),
        .O(\dl_tx_sm_state_reg[2]_1 ));
  LUT6 #(
    .INIT(64'h8888888800088888)) 
    tx_dl_lp_dp_i_6__1
       (.I0(en_hs_datapath_reg),
        .I1(en_lp_01_cnt_reg_2),
        .I2(s_level_out_d3),
        .I3(en_hs_datapath_reg_0),
        .I4(cl_txclkactivehs_i),
        .I5(en_lp_01_cnt_reg_1),
        .O(tx_dl_lp_dp_i_6__1_n_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_62
   (out,
    \dl_tx_sm_state_reg[0] ,
    s_level_out_d3_reg_0,
    core_rst,
    s_level_out_d1_cdc_to_reg_0,
    core_clk,
    dl_tx_sm_state0__0,
    tx_dl_lp_dn_reg,
    tx_dl_lp_dn_reg_0,
    tx_dl_lp_dn_reg_1,
    esc_active_sync_r,
    timeout_hsexit_all,
    dl_stopstate_i_4__0);
  output out;
  output \dl_tx_sm_state_reg[0] ;
  output s_level_out_d3_reg_0;
  input core_rst;
  input s_level_out_d1_cdc_to_reg_0;
  input core_clk;
  input dl_tx_sm_state0__0;
  input tx_dl_lp_dn_reg;
  input tx_dl_lp_dn_reg_0;
  input tx_dl_lp_dn_reg_1;
  input esc_active_sync_r;
  input timeout_hsexit_all;
  input dl_stopstate_i_4__0;

  wire core_clk;
  wire core_rst;
  wire dl_stopstate_i_4__0;
  wire dl_tx_sm_state0__0;
  wire \dl_tx_sm_state_reg[0] ;
  wire esc_active_sync_r;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_hsexit_all;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dn_reg_1;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'h4F40FFFF00000000)) 
    dl_stopstate_i_6__0
       (.I0(s_level_out_d3),
        .I1(esc_active_sync_r),
        .I2(tx_dl_lp_dn_reg),
        .I3(timeout_hsexit_all),
        .I4(dl_stopstate_i_4__0),
        .I5(tx_dl_lp_dn_reg_0),
        .O(s_level_out_d3_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT5 #(
    .INIT(32'hAAEF0000)) 
    tx_dl_lp_dp_i_3__1
       (.I0(s_level_out_d3_reg_0),
        .I1(dl_tx_sm_state0__0),
        .I2(tx_dl_lp_dn_reg),
        .I3(tx_dl_lp_dn_reg_0),
        .I4(tx_dl_lp_dn_reg_1),
        .O(\dl_tx_sm_state_reg[0] ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_63
   (core_rst,
    core_clk);
  input core_rst;
  input core_clk;

  wire core_clk;
  wire core_rst;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_65
   (out,
    core_clk);
  output out;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_66
   (out,
    tx_div4_clk);
  output out;
  input tx_div4_clk;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_67
   (en_cal_hs_datapath_i,
    tx_div4_clk);
  input en_cal_hs_datapath_i;
  input tx_div4_clk;

  wire en_cal_hs_datapath_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(en_cal_hs_datapath_i),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_68
   (out,
    dl1_txrequesths_0,
    dl2_txrequesths_0,
    dl3_txrequesths_0,
    s_level_out_d3_reg_0,
    dl_status_reg,
    tx_div4_clk,
    dl1_txrequesths,
    dl2_txrequesths,
    dl3_txrequesths,
    dl0_txrequesths);
  output out;
  output dl1_txrequesths_0;
  output dl2_txrequesths_0;
  output dl3_txrequesths_0;
  output s_level_out_d3_reg_0;
  input [0:0]dl_status_reg;
  input tx_div4_clk;
  input dl1_txrequesths;
  input dl2_txrequesths;
  input dl3_txrequesths;
  input dl0_txrequesths;

  wire dl0_txrequesths;
  wire dl1_txrequesths;
  wire dl1_txrequesths_0;
  wire dl2_txrequesths;
  wire dl2_txrequesths_0;
  wire dl3_txrequesths;
  wire dl3_txrequesths_0;
  wire [0:0]dl_status_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  LUT2 #(
    .INIT(4'h7)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2 
       (.I0(s_level_out_d3),
        .I1(dl0_txrequesths),
        .O(s_level_out_d3_reg_0));
  LUT2 #(
    .INIT(4'h8)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5__0 
       (.I0(dl1_txrequesths),
        .I1(s_level_out_d3),
        .O(dl1_txrequesths_0));
  LUT2 #(
    .INIT(4'h8)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5__1 
       (.I0(dl2_txrequesths),
        .I1(s_level_out_d3),
        .O(dl2_txrequesths_0));
  LUT2 #(
    .INIT(4'h8)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5__2 
       (.I0(dl3_txrequesths),
        .I1(s_level_out_d3),
        .O(dl3_txrequesths_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl_status_reg),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_7
   (\s_level_out_bus_d3_reg[1] ,
    \s_level_out_bus_d3_reg[1]_0 ,
    \s_level_out_bus_d3_reg[1]_1 ,
    system_rst_div4clk_reg,
    system_rst_byteclk_reg,
    system_rst_escclk_reg,
    \s_level_out_bus_d3_reg[1]_2 ,
    core_clk,
    system_rst_reg,
    rst_blk_state__0,
    system_rst_div4clk_reg_0,
    out,
    system_rst_byteclk_reg_0,
    system_rst_escclk_reg_0,
    system_rst_reg_0);
  output \s_level_out_bus_d3_reg[1] ;
  output \s_level_out_bus_d3_reg[1]_0 ;
  output \s_level_out_bus_d3_reg[1]_1 ;
  output system_rst_div4clk_reg;
  output system_rst_byteclk_reg;
  output system_rst_escclk_reg;
  output \s_level_out_bus_d3_reg[1]_2 ;
  input core_clk;
  input [1:0]system_rst_reg;
  input [2:0]rst_blk_state__0;
  input system_rst_div4clk_reg_0;
  input out;
  input system_rst_byteclk_reg_0;
  input system_rst_escclk_reg_0;
  input system_rst_reg_0;

  wire core_clk;
  wire out;
  wire [2:0]rst_blk_state__0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  wire \s_level_out_bus_d3_reg[1] ;
  wire \s_level_out_bus_d3_reg[1]_0 ;
  wire \s_level_out_bus_d3_reg[1]_1 ;
  wire \s_level_out_bus_d3_reg[1]_2 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst_byteclk_i_2_n_0;
  wire system_rst_byteclk_reg;
  wire system_rst_byteclk_reg_0;
  wire system_rst_div4clk_i_2_n_0;
  wire system_rst_div4clk_reg;
  wire system_rst_div4clk_reg_0;
  wire system_rst_escclk_i_3_n_0;
  wire system_rst_escclk_i_4_n_0;
  wire system_rst_escclk_reg;
  wire system_rst_escclk_reg_0;
  wire system_rst_i_2_n_0;
  wire [1:0]system_rst_reg;
  wire system_rst_reg_0;

  LUT6 #(
    .INIT(64'hAA022A22AA02200A)) 
    \FSM_sequential_rst_blk_state[0]_i_1 
       (.I0(system_rst_reg[1]),
        .I1(system_rst_reg[0]),
        .I2(rst_blk_state__0[1]),
        .I3(rst_blk_state__0[0]),
        .I4(rst_blk_state__0[2]),
        .I5(s_level_out_d3),
        .O(\s_level_out_bus_d3_reg[1]_1 ));
  LUT6 #(
    .INIT(64'hA0A22022A0A22AA0)) 
    \FSM_sequential_rst_blk_state[1]_i_1 
       (.I0(system_rst_reg[1]),
        .I1(system_rst_reg[0]),
        .I2(rst_blk_state__0[1]),
        .I3(rst_blk_state__0[0]),
        .I4(rst_blk_state__0[2]),
        .I5(s_level_out_d3),
        .O(\s_level_out_bus_d3_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hAAA88088AAA88000)) 
    \FSM_sequential_rst_blk_state[2]_i_1 
       (.I0(system_rst_reg[1]),
        .I1(system_rst_reg[0]),
        .I2(rst_blk_state__0[1]),
        .I3(rst_blk_state__0[0]),
        .I4(rst_blk_state__0[2]),
        .I5(s_level_out_d3),
        .O(\s_level_out_bus_d3_reg[1] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFEEE)) 
    system_rst_byteclk_i_1
       (.I0(system_rst_div4clk_reg_0),
        .I1(system_rst_byteclk_i_2_n_0),
        .I2(system_rst_byteclk_reg_0),
        .I3(system_rst_escclk_i_4_n_0),
        .O(system_rst_byteclk_reg));
  LUT6 #(
    .INIT(64'h0000333303002323)) 
    system_rst_byteclk_i_2
       (.I0(system_rst_reg[0]),
        .I1(rst_blk_state__0[2]),
        .I2(s_level_out_d3),
        .I3(system_rst_byteclk_reg_0),
        .I4(rst_blk_state__0[1]),
        .I5(rst_blk_state__0[0]),
        .O(system_rst_byteclk_i_2_n_0));
  LUT4 #(
    .INIT(16'hFEEE)) 
    system_rst_div4clk_i_1
       (.I0(system_rst_div4clk_reg_0),
        .I1(system_rst_div4clk_i_2_n_0),
        .I2(out),
        .I3(system_rst_escclk_i_4_n_0),
        .O(system_rst_div4clk_reg));
  LUT6 #(
    .INIT(64'h0000333303002323)) 
    system_rst_div4clk_i_2
       (.I0(system_rst_reg[0]),
        .I1(rst_blk_state__0[2]),
        .I2(s_level_out_d3),
        .I3(out),
        .I4(rst_blk_state__0[1]),
        .I5(rst_blk_state__0[0]),
        .O(system_rst_div4clk_i_2_n_0));
  LUT4 #(
    .INIT(16'hFEEE)) 
    system_rst_escclk_i_1
       (.I0(system_rst_div4clk_reg_0),
        .I1(system_rst_escclk_i_3_n_0),
        .I2(system_rst_escclk_reg_0),
        .I3(system_rst_escclk_i_4_n_0),
        .O(system_rst_escclk_reg));
  LUT6 #(
    .INIT(64'h0000333303002323)) 
    system_rst_escclk_i_3
       (.I0(system_rst_reg[0]),
        .I1(rst_blk_state__0[2]),
        .I2(s_level_out_d3),
        .I3(system_rst_escclk_reg_0),
        .I4(rst_blk_state__0[1]),
        .I5(rst_blk_state__0[0]),
        .O(system_rst_escclk_i_3_n_0));
  LUT5 #(
    .INIT(32'hFF000808)) 
    system_rst_escclk_i_4
       (.I0(rst_blk_state__0[1]),
        .I1(s_level_out_d3),
        .I2(rst_blk_state__0[0]),
        .I3(system_rst_reg[0]),
        .I4(rst_blk_state__0[2]),
        .O(system_rst_escclk_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFF555D)) 
    system_rst_i_1
       (.I0(system_rst_reg[1]),
        .I1(rst_blk_state__0[0]),
        .I2(rst_blk_state__0[1]),
        .I3(rst_blk_state__0[2]),
        .I4(system_rst_i_2_n_0),
        .O(\s_level_out_bus_d3_reg[1]_2 ));
  LUT6 #(
    .INIT(64'hF0F1F3F130310031)) 
    system_rst_i_2
       (.I0(s_level_out_d3),
        .I1(rst_blk_state__0[2]),
        .I2(system_rst_reg[0]),
        .I3(rst_blk_state__0[1]),
        .I4(rst_blk_state__0[0]),
        .I5(system_rst_reg_0),
        .O(system_rst_i_2_n_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_70
   (out,
    core_rst,
    hs_xfer_done_i,
    core_clk);
  output out;
  input core_rst;
  input hs_xfer_done_i;
  input core_clk;

  wire core_clk;
  wire core_rst;
  wire hs_xfer_done_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(hs_xfer_done_i),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_74
   (s_level_out_d3_reg_0,
    dl0_forcetxstopmode,
    dl0_txclkesc);
  output s_level_out_d3_reg_0;
  input dl0_forcetxstopmode;
  input dl0_txclkesc;

  wire dl0_forcetxstopmode;
  wire dl0_txclkesc;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign s_level_out_d3_reg_0 = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(dl0_forcetxstopmode),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_75
   (out,
    s_level_out_d3_reg_0,
    s_level_out_d3_reg_1,
    s_level_out_d3_reg_2,
    esc_start_i,
    dl0_txclkesc,
    Q,
    esc_ctrl_axi_if_reg,
    dl_status_reg,
    esc_ctrl_lane_sm_reg,
    esc_ctrl_all_sm_reg);
  output out;
  output s_level_out_d3_reg_0;
  output s_level_out_d3_reg_1;
  output s_level_out_d3_reg_2;
  input esc_start_i;
  input dl0_txclkesc;
  input [2:0]Q;
  input esc_ctrl_axi_if_reg;
  input [0:0]dl_status_reg;
  input esc_ctrl_lane_sm_reg;
  input esc_ctrl_all_sm_reg;

  wire [2:0]Q;
  wire dl0_txclkesc;
  wire [0:0]dl_status_reg;
  wire esc_ctrl_all_sm_reg;
  wire esc_ctrl_axi_if_reg;
  wire esc_ctrl_lane_sm_reg;
  wire esc_start_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  wire s_level_out_d3_reg_2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'h00030B0B00000808)) 
    esc_ctrl_all_sm_i_1
       (.I0(s_level_out_d3),
        .I1(Q[1]),
        .I2(esc_ctrl_axi_if_reg),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(esc_ctrl_all_sm_reg),
        .O(s_level_out_d3_reg_2));
  LUT6 #(
    .INIT(64'h00030B0B00000808)) 
    esc_ctrl_axi_if_i_2
       (.I0(s_level_out_d3),
        .I1(Q[1]),
        .I2(esc_ctrl_axi_if_reg),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(dl_status_reg),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'h00030B0B00000808)) 
    esc_ctrl_lane_sm_i_1
       (.I0(s_level_out_d3),
        .I1(Q[1]),
        .I2(esc_ctrl_axi_if_reg),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(esc_ctrl_lane_sm_reg),
        .O(s_level_out_d3_reg_1));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(esc_start_i),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_76
   (dl0_txvalidesc_0,
    D,
    \txtriggeresc_r_reg[0] ,
    E,
    \FSM_sequential_dl_tx_state_reg[2] ,
    \txtriggeresc_r_reg[2] ,
    \FSM_sequential_dl_tx_state_reg[2]_0 ,
    \FSM_sequential_dl_tx_state_reg[1] ,
    txulpsesc_r_reg,
    \dl0_txtriggeresc[3] ,
    \dl0_txtriggeresc[2] ,
    dl0_txulpsesc_0,
    dl0_txlpdtesc_0,
    esc_ctrl_t_reg,
    tx_dl_lp_dp_reg,
    tx_dl_lp_dn_reg,
    \FSM_sequential_dl_tx_state_reg[1]_0 ,
    s_level_out_d1_cdc_to_reg_0,
    dl0_txclkesc,
    dl0_txvalidesc,
    dl_txreadyesc_reg,
    dl_txreadyesc_reg_0,
    esc_ctrl_t_reg_0,
    txulpsesc_r_reg_0,
    \FSM_sequential_dl_tx_state_reg[3] ,
    Q,
    \FSM_sequential_dl_tx_state_reg[2]_1 ,
    \bit_cnt_reg[0] ,
    \bit_cnt_reg[0]_0 ,
    \FSM_sequential_dl_tx_state_reg[0] ,
    out,
    tx_dl_lp_dn_reg_0,
    tx_dl_lp_dn_reg_1,
    tx_dl_lp_dp_reg_0,
    dl0_txrequestesc,
    tx_dl_lp_dn_esc_i,
    tx_dl_lp_dp_esc_i,
    \esc_cmd_data_reg[6] ,
    \esc_cmd_data_reg[3] ,
    dl0_txdataesc,
    \esc_cmd_data_reg[3]_0 ,
    \FSM_sequential_dl_tx_state_reg[2]_2 ,
    txlpdtesc_r,
    txulpsesc_r,
    \FSM_sequential_dl_tx_state_reg[2]_3 ,
    dl0_txulpsexit,
    \bit_cnt_reg[3] ,
    dl_ulpsactivenot_reg,
    dl0_ulpsactivenot,
    dl0_txtriggeresc,
    dl0_txulpsesc,
    dl0_txlpdtesc,
    esc_ctrl_i,
    esc_ctrl_t_reg_1,
    tx_dl_lp_dp_reg_1,
    tx_dl_lp_dn_reg_2,
    \bit_cnt_reg[3]_0 ,
    \bit_cnt_reg[3]_1 );
  output dl0_txvalidesc_0;
  output [3:0]D;
  output \txtriggeresc_r_reg[0] ;
  output [0:0]E;
  output [0:0]\FSM_sequential_dl_tx_state_reg[2] ;
  output [7:0]\txtriggeresc_r_reg[2] ;
  output [1:0]\FSM_sequential_dl_tx_state_reg[2]_0 ;
  output [0:0]\FSM_sequential_dl_tx_state_reg[1] ;
  output txulpsesc_r_reg;
  output [3:0]\dl0_txtriggeresc[3] ;
  output [0:0]\dl0_txtriggeresc[2] ;
  output dl0_txulpsesc_0;
  output dl0_txlpdtesc_0;
  output esc_ctrl_t_reg;
  output tx_dl_lp_dp_reg;
  output tx_dl_lp_dn_reg;
  output \FSM_sequential_dl_tx_state_reg[1]_0 ;
  input s_level_out_d1_cdc_to_reg_0;
  input dl0_txclkesc;
  input dl0_txvalidesc;
  input dl_txreadyesc_reg;
  input dl_txreadyesc_reg_0;
  input esc_ctrl_t_reg_0;
  input txulpsesc_r_reg_0;
  input \FSM_sequential_dl_tx_state_reg[3] ;
  input [3:0]Q;
  input \FSM_sequential_dl_tx_state_reg[2]_1 ;
  input \bit_cnt_reg[0] ;
  input \bit_cnt_reg[0]_0 ;
  input \FSM_sequential_dl_tx_state_reg[0] ;
  input out;
  input tx_dl_lp_dn_reg_0;
  input tx_dl_lp_dn_reg_1;
  input tx_dl_lp_dp_reg_0;
  input dl0_txrequestesc;
  input tx_dl_lp_dn_esc_i;
  input tx_dl_lp_dp_esc_i;
  input [7:0]\esc_cmd_data_reg[6] ;
  input \esc_cmd_data_reg[3] ;
  input [7:0]dl0_txdataesc;
  input \esc_cmd_data_reg[3]_0 ;
  input [3:0]\FSM_sequential_dl_tx_state_reg[2]_2 ;
  input txlpdtesc_r;
  input txulpsesc_r;
  input [3:0]\FSM_sequential_dl_tx_state_reg[2]_3 ;
  input dl0_txulpsexit;
  input \bit_cnt_reg[3] ;
  input dl_ulpsactivenot_reg;
  input dl0_ulpsactivenot;
  input [3:0]dl0_txtriggeresc;
  input dl0_txulpsesc;
  input dl0_txlpdtesc;
  input esc_ctrl_i;
  input esc_ctrl_t_reg_1;
  input tx_dl_lp_dp_reg_1;
  input tx_dl_lp_dn_reg_2;
  input \bit_cnt_reg[3]_0 ;
  input \bit_cnt_reg[3]_1 ;

  wire [3:0]D;
  wire [0:0]E;
  wire \FSM_sequential_dl_tx_state[0]_i_2_n_0 ;
  wire \FSM_sequential_dl_tx_state[0]_i_4_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_2_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_3_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_4_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_5_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_6_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_4_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_5_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_6_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_7_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_10_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_4_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_5_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_7_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_8_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_9_n_0 ;
  wire \FSM_sequential_dl_tx_state_reg[0] ;
  wire [0:0]\FSM_sequential_dl_tx_state_reg[1] ;
  wire \FSM_sequential_dl_tx_state_reg[1]_0 ;
  wire [0:0]\FSM_sequential_dl_tx_state_reg[2] ;
  wire [1:0]\FSM_sequential_dl_tx_state_reg[2]_0 ;
  wire \FSM_sequential_dl_tx_state_reg[2]_1 ;
  wire [3:0]\FSM_sequential_dl_tx_state_reg[2]_2 ;
  wire [3:0]\FSM_sequential_dl_tx_state_reg[2]_3 ;
  wire \FSM_sequential_dl_tx_state_reg[3] ;
  wire [3:0]Q;
  wire \bit_cnt[3]_i_10_n_0 ;
  wire \bit_cnt[3]_i_11_n_0 ;
  wire \bit_cnt[3]_i_13_n_0 ;
  wire \bit_cnt[3]_i_3_n_0 ;
  wire \bit_cnt[3]_i_4_n_0 ;
  wire \bit_cnt[3]_i_9_n_0 ;
  wire \bit_cnt_reg[0] ;
  wire \bit_cnt_reg[0]_0 ;
  wire \bit_cnt_reg[3] ;
  wire \bit_cnt_reg[3]_0 ;
  wire \bit_cnt_reg[3]_1 ;
  wire dl0_txclkesc;
  wire [7:0]dl0_txdataesc;
  wire dl0_txlpdtesc;
  wire dl0_txlpdtesc_0;
  wire dl0_txrequestesc;
  wire [3:0]dl0_txtriggeresc;
  wire [0:0]\dl0_txtriggeresc[2] ;
  wire [3:0]\dl0_txtriggeresc[3] ;
  wire dl0_txulpsesc;
  wire dl0_txulpsesc_0;
  wire dl0_txulpsexit;
  wire dl0_txvalidesc;
  wire dl0_txvalidesc_0;
  wire dl0_ulpsactivenot;
  wire dl_txreadyesc_reg;
  wire dl_txreadyesc_reg_0;
  wire dl_ulpsactivenot0;
  wire dl_ulpsactivenot_i_2_n_0;
  wire dl_ulpsactivenot_reg;
  wire \esc_cmd_data[0]_i_2_n_0 ;
  wire \esc_cmd_data[0]_i_3_n_0 ;
  wire \esc_cmd_data[1]_i_2_n_0 ;
  wire \esc_cmd_data[2]_i_2_n_0 ;
  wire \esc_cmd_data[5]_i_2_n_0 ;
  wire \esc_cmd_data[5]_i_3_n_0 ;
  wire \esc_cmd_data[6]_i_2_n_0 ;
  wire \esc_cmd_data[7]_i_3_n_0 ;
  wire \esc_cmd_data[7]_i_6_n_0 ;
  wire \esc_cmd_data[7]_i_7_n_0 ;
  wire \esc_cmd_data_reg[3] ;
  wire \esc_cmd_data_reg[3]_0 ;
  wire [7:0]\esc_cmd_data_reg[6] ;
  wire esc_ctrl_i;
  wire esc_ctrl_t_i_2_n_0;
  wire esc_ctrl_t_i_3_n_0;
  wire esc_ctrl_t_reg;
  wire esc_ctrl_t_reg_0;
  wire esc_ctrl_t_reg_1;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_dl_lp_dn_esc_i;
  wire tx_dl_lp_dn_i_11_n_0;
  wire tx_dl_lp_dn_i_13_n_0;
  wire tx_dl_lp_dn_i_2__0_n_0;
  wire tx_dl_lp_dn_i_3_n_0;
  wire tx_dl_lp_dn_i_4_n_0;
  wire tx_dl_lp_dn_i_5_n_0;
  wire tx_dl_lp_dn_i_7_n_0;
  wire tx_dl_lp_dn_i_8_n_0;
  wire tx_dl_lp_dn_i_9_n_0;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dn_reg_1;
  wire tx_dl_lp_dn_reg_2;
  wire tx_dl_lp_dp_esc_i;
  wire tx_dl_lp_dp_i_2__0_n_0;
  wire tx_dl_lp_dp_i_3__0_n_0;
  wire tx_dl_lp_dp_i_4__0_n_0;
  wire tx_dl_lp_dp_i_5__0_n_0;
  wire tx_dl_lp_dp_reg;
  wire tx_dl_lp_dp_reg_0;
  wire tx_dl_lp_dp_reg_1;
  wire txlpdtesc_r;
  wire \txtriggeresc_r[3]_i_3_n_0 ;
  wire \txtriggeresc_r_reg[0] ;
  wire [7:0]\txtriggeresc_r_reg[2] ;
  wire txulpsesc_r;
  wire txulpsesc_r_reg;
  wire txulpsesc_r_reg_0;

  LUT6 #(
    .INIT(64'h00000000770177CD)) 
    \FSM_sequential_dl_tx_state[0]_i_1 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(\txtriggeresc_r_reg[0] ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\FSM_sequential_dl_tx_state[0]_i_2_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000400)) 
    \FSM_sequential_dl_tx_state[0]_i_2 
       (.I0(\txtriggeresc_r_reg[0] ),
        .I1(\FSM_sequential_dl_tx_state_reg[0] ),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_4_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[0]_i_4_n_0 ),
        .O(\FSM_sequential_dl_tx_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h3000300030013000)) 
    \FSM_sequential_dl_tx_state[0]_i_4 
       (.I0(\esc_cmd_data_reg[3] ),
        .I1(\esc_cmd_data[0]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_tx_state[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h44444444FF4F4F44)) 
    \FSM_sequential_dl_tx_state[1]_i_1 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_2_n_0 ),
        .I1(\FSM_sequential_dl_tx_state[1]_i_3_n_0 ),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(\txtriggeresc_r_reg[0] ),
        .I5(Q[1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hBBB8BBBBFFFFCCCC)) 
    \FSM_sequential_dl_tx_state[1]_i_2 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_4_n_0 ),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(\esc_cmd_data[0]_i_2_n_0 ),
        .I4(\FSM_sequential_dl_tx_state[1]_i_5_n_0 ),
        .I5(Q[3]),
        .O(\FSM_sequential_dl_tx_state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFBFFFBFBFB)) 
    \FSM_sequential_dl_tx_state[1]_i_3 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_6_n_0 ),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(dl0_txvalidesc),
        .I4(dl_txreadyesc_reg_0),
        .I5(\esc_cmd_data[0]_i_2_n_0 ),
        .O(\FSM_sequential_dl_tx_state[1]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0007)) 
    \FSM_sequential_dl_tx_state[1]_i_4 
       (.I0(s_level_out_d3),
        .I1(dl0_txrequestesc),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\FSM_sequential_dl_tx_state[1]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_dl_tx_state[1]_i_5 
       (.I0(\txtriggeresc_r_reg[0] ),
        .I1(Q[0]),
        .O(\FSM_sequential_dl_tx_state[1]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    \FSM_sequential_dl_tx_state[1]_i_6 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_3 [2]),
        .I1(\FSM_sequential_dl_tx_state_reg[2]_3 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_3 [3]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_7_n_0 ),
        .O(\FSM_sequential_dl_tx_state[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFA80000)) 
    \FSM_sequential_dl_tx_state[2]_i_1 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_1 ),
        .I1(\txtriggeresc_r_reg[0] ),
        .I2(\FSM_sequential_dl_tx_state[2]_i_4_n_0 ),
        .I3(\FSM_sequential_dl_tx_state[2]_i_5_n_0 ),
        .I4(Q[1]),
        .I5(\FSM_sequential_dl_tx_state[2]_i_6_n_0 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAAE)) 
    \FSM_sequential_dl_tx_state[2]_i_3 
       (.I0(dl_ulpsactivenot_i_2_n_0),
        .I1(\FSM_sequential_dl_tx_state[2]_i_7_n_0 ),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [3]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_2 [2]),
        .O(\txtriggeresc_r_reg[0] ));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    \FSM_sequential_dl_tx_state[2]_i_4 
       (.I0(\esc_cmd_data[0]_i_2_n_0 ),
        .I1(\esc_cmd_data_reg[3] ),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_3 [2]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_3 [1]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_3 [3]),
        .O(\FSM_sequential_dl_tx_state[2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h74044404)) 
    \FSM_sequential_dl_tx_state[2]_i_5 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(\esc_cmd_data[0]_i_2_n_0 ),
        .I4(dl_ulpsactivenot0),
        .O(\FSM_sequential_dl_tx_state[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h101030301010F030)) 
    \FSM_sequential_dl_tx_state[2]_i_6 
       (.I0(\txtriggeresc_r_reg[0] ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(dl_ulpsactivenot_i_2_n_0),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_tx_state[2]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h777F)) 
    \FSM_sequential_dl_tx_state[2]_i_7 
       (.I0(s_level_out_d3),
        .I1(dl0_txrequestesc),
        .I2(txlpdtesc_r),
        .I3(txulpsesc_r),
        .O(\FSM_sequential_dl_tx_state[2]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    \FSM_sequential_dl_tx_state[2]_i_8 
       (.I0(dl_ulpsactivenot_i_2_n_0),
        .I1(txulpsesc_r),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_3 [2]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_3 [1]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_3 [3]),
        .O(dl_ulpsactivenot0));
  LUT5 #(
    .INIT(32'hEEEEFEEE)) 
    \FSM_sequential_dl_tx_state[3]_i_10 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(dl0_txrequestesc),
        .I3(s_level_out_d3),
        .I4(dl0_txulpsexit),
        .O(\FSM_sequential_dl_tx_state[3]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hF4F5F5FF04050505)) 
    \FSM_sequential_dl_tx_state[3]_i_2 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_4_n_0 ),
        .I1(dl_ulpsactivenot_i_2_n_0),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[3]),
        .I5(\FSM_sequential_dl_tx_state[3]_i_5_n_0 ),
        .O(\FSM_sequential_dl_tx_state_reg[2] ));
  LUT6 #(
    .INIT(64'h44F4444444444444)) 
    \FSM_sequential_dl_tx_state[3]_i_3 
       (.I0(dl_ulpsactivenot_i_2_n_0),
        .I1(\FSM_sequential_dl_tx_state_reg[3] ),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\FSM_sequential_dl_tx_state[3]_i_7_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[3]_i_8_n_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'h04040C0C04040CFC)) 
    \FSM_sequential_dl_tx_state[3]_i_4 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_9_n_0 ),
        .I1(esc_ctrl_t_i_3_n_0),
        .I2(Q[0]),
        .I3(\bit_cnt[3]_i_9_n_0 ),
        .I4(Q[3]),
        .I5(\txtriggeresc_r_reg[0] ),
        .O(\FSM_sequential_dl_tx_state[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h3333FF7F3333FF3F)) 
    \FSM_sequential_dl_tx_state[3]_i_5 
       (.I0(\bit_cnt_reg[0]_0 ),
        .I1(\FSM_sequential_dl_tx_state[3]_i_10_n_0 ),
        .I2(Q[1]),
        .I3(\esc_cmd_data[0]_i_2_n_0 ),
        .I4(Q[3]),
        .I5(Q[0]),
        .O(\FSM_sequential_dl_tx_state[3]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h8000FFFF)) 
    \FSM_sequential_dl_tx_state[3]_i_7 
       (.I0(s_level_out_d3),
        .I1(dl0_txrequestesc),
        .I2(txlpdtesc_r),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\FSM_sequential_dl_tx_state[3]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT4 #(
    .INIT(16'hF1FF)) 
    \FSM_sequential_dl_tx_state[3]_i_8 
       (.I0(\FSM_sequential_dl_tx_state[2]_i_4_n_0 ),
        .I1(\txtriggeresc_r_reg[0] ),
        .I2(Q[2]),
        .I3(Q[0]),
        .O(\FSM_sequential_dl_tx_state[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFFBFFFBFFF)) 
    \FSM_sequential_dl_tx_state[3]_i_9 
       (.I0(Q[1]),
        .I1(s_level_out_d3),
        .I2(dl0_txrequestesc),
        .I3(txlpdtesc_r),
        .I4(dl_txreadyesc_reg_0),
        .I5(dl0_txvalidesc),
        .O(\FSM_sequential_dl_tx_state[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000D00000)) 
    \bit_cnt[0]_i_1 
       (.I0(\bit_cnt[3]_i_9_n_0 ),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[0]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .O(\FSM_sequential_dl_tx_state_reg[2]_0 [0]));
  LUT6 #(
    .INIT(64'hAEAAAAAAAEAAAEAA)) 
    \bit_cnt[3]_i_1 
       (.I0(\bit_cnt[3]_i_3_n_0 ),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(\bit_cnt[3]_i_4_n_0 ),
        .I4(\bit_cnt_reg[0] ),
        .I5(\bit_cnt_reg[0]_0 ),
        .O(E));
  LUT5 #(
    .INIT(32'h22222002)) 
    \bit_cnt[3]_i_10 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_6_n_0 ),
        .I1(\FSM_sequential_dl_tx_state[2]_i_4_n_0 ),
        .I2(tx_dl_lp_dn_esc_i),
        .I3(tx_dl_lp_dp_esc_i),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_3 [3]),
        .O(\bit_cnt[3]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hBABBBBBBBAABBBAB)) 
    \bit_cnt[3]_i_11 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(\bit_cnt[3]_i_13_n_0 ),
        .I5(\txtriggeresc_r_reg[0] ),
        .O(\bit_cnt[3]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \bit_cnt[3]_i_13 
       (.I0(dl0_txvalidesc),
        .I1(dl_txreadyesc_reg_0),
        .I2(txlpdtesc_r),
        .I3(dl0_txrequestesc),
        .I4(s_level_out_d3),
        .O(\bit_cnt[3]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h11010001)) 
    \bit_cnt[3]_i_2 
       (.I0(\bit_cnt_reg[3]_0 ),
        .I1(\bit_cnt_reg[3]_1 ),
        .I2(\bit_cnt[3]_i_9_n_0 ),
        .I3(Q[2]),
        .I4(\bit_cnt_reg[0]_0 ),
        .O(\FSM_sequential_dl_tx_state_reg[2]_0 [1]));
  LUT6 #(
    .INIT(64'h000000001F1F1F3F)) 
    \bit_cnt[3]_i_3 
       (.I0(Q[0]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(\txtriggeresc_r_reg[0] ),
        .I4(\bit_cnt[3]_i_10_n_0 ),
        .I5(\bit_cnt[3]_i_11_n_0 ),
        .O(\bit_cnt[3]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \bit_cnt[3]_i_4 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(txlpdtesc_r),
        .I3(dl0_txrequestesc),
        .I4(s_level_out_d3),
        .O(\bit_cnt[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h80000000FFFFFFFF)) 
    \bit_cnt[3]_i_9 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_3 [2]),
        .I1(\FSM_sequential_dl_tx_state_reg[2]_3 [0]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_3 [1]),
        .I3(\bit_cnt_reg[0] ),
        .I4(\bit_cnt_reg[3] ),
        .I5(\FSM_sequential_dl_tx_state[1]_i_6_n_0 ),
        .O(\bit_cnt[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000005C)) 
    dl_txreadyesc_i_1
       (.I0(dl0_txvalidesc),
        .I1(dl_txreadyesc_reg),
        .I2(dl_txreadyesc_reg_0),
        .I3(esc_ctrl_t_reg_0),
        .I4(dl_ulpsactivenot_i_2_n_0),
        .I5(txulpsesc_r_reg_0),
        .O(dl0_txvalidesc_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFB00)) 
    dl_ulpsactivenot_i_1
       (.I0(dl_ulpsactivenot_i_2_n_0),
        .I1(txulpsesc_r),
        .I2(dl_ulpsactivenot_reg),
        .I3(dl0_ulpsactivenot),
        .I4(dl0_txulpsexit),
        .I5(esc_ctrl_t_reg_0),
        .O(txulpsesc_r_reg));
  LUT2 #(
    .INIT(4'h7)) 
    dl_ulpsactivenot_i_2
       (.I0(dl0_txrequestesc),
        .I1(s_level_out_d3),
        .O(dl_ulpsactivenot_i_2_n_0));
  LUT6 #(
    .INIT(64'hB888B8BBB8BBB8BB)) 
    \esc_cmd_data[0]_i_1 
       (.I0(\esc_cmd_data_reg[6] [1]),
        .I1(\esc_cmd_data_reg[3]_0 ),
        .I2(dl0_txdataesc[0]),
        .I3(\esc_cmd_data_reg[3] ),
        .I4(\esc_cmd_data[0]_i_2_n_0 ),
        .I5(\esc_cmd_data[0]_i_3_n_0 ),
        .O(\txtriggeresc_r_reg[2] [0]));
  LUT3 #(
    .INIT(8'h7F)) 
    \esc_cmd_data[0]_i_2 
       (.I0(s_level_out_d3),
        .I1(dl0_txrequestesc),
        .I2(txlpdtesc_r),
        .O(\esc_cmd_data[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF80)) 
    \esc_cmd_data[0]_i_3 
       (.I0(dl0_txrequestesc),
        .I1(s_level_out_d3),
        .I2(txulpsesc_r),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_2 [2]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .O(\esc_cmd_data[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8BBB8BBB8B8B8)) 
    \esc_cmd_data[1]_i_1 
       (.I0(\esc_cmd_data_reg[6] [2]),
        .I1(\esc_cmd_data_reg[3]_0 ),
        .I2(\esc_cmd_data[1]_i_2_n_0 ),
        .I3(\esc_cmd_data[7]_i_6_n_0 ),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .O(\txtriggeresc_r_reg[2] [1]));
  LUT6 #(
    .INIT(64'hFF00808080808080)) 
    \esc_cmd_data[1]_i_2 
       (.I0(s_level_out_d3),
        .I1(dl0_txrequestesc),
        .I2(txlpdtesc_r),
        .I3(dl0_txdataesc[1]),
        .I4(dl_txreadyesc_reg_0),
        .I5(dl0_txvalidesc),
        .O(\esc_cmd_data[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8B8B888B8B8B8B8B)) 
    \esc_cmd_data[2]_i_1 
       (.I0(\esc_cmd_data_reg[6] [3]),
        .I1(\esc_cmd_data_reg[3]_0 ),
        .I2(\esc_cmd_data[2]_i_2_n_0 ),
        .I3(\esc_cmd_data[7]_i_6_n_0 ),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I5(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .O(\txtriggeresc_r_reg[2] [2]));
  LUT6 #(
    .INIT(64'h0000FFFF40004000)) 
    \esc_cmd_data[2]_i_2 
       (.I0(txlpdtesc_r),
        .I1(dl0_txrequestesc),
        .I2(s_level_out_d3),
        .I3(txulpsesc_r),
        .I4(dl0_txdataesc[2]),
        .I5(\esc_cmd_data_reg[3] ),
        .O(\esc_cmd_data[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEAEAAAAFEAE)) 
    \esc_cmd_data[3]_i_1 
       (.I0(\esc_cmd_data[5]_i_2_n_0 ),
        .I1(\esc_cmd_data[5]_i_3_n_0 ),
        .I2(\esc_cmd_data_reg[3] ),
        .I3(dl0_txdataesc[3]),
        .I4(\esc_cmd_data_reg[3]_0 ),
        .I5(\esc_cmd_data_reg[6] [4]),
        .O(\txtriggeresc_r_reg[2] [3]));
  LUT6 #(
    .INIT(64'hFFFFFEAEAAAAFEAE)) 
    \esc_cmd_data[4]_i_1 
       (.I0(\esc_cmd_data[5]_i_2_n_0 ),
        .I1(\esc_cmd_data[5]_i_3_n_0 ),
        .I2(\esc_cmd_data_reg[3] ),
        .I3(dl0_txdataesc[4]),
        .I4(\esc_cmd_data_reg[3]_0 ),
        .I5(\esc_cmd_data_reg[6] [5]),
        .O(\txtriggeresc_r_reg[2] [4]));
  LUT6 #(
    .INIT(64'hFFFFFEAEAAAAFEAE)) 
    \esc_cmd_data[5]_i_1 
       (.I0(\esc_cmd_data[5]_i_2_n_0 ),
        .I1(\esc_cmd_data[5]_i_3_n_0 ),
        .I2(\esc_cmd_data_reg[3] ),
        .I3(dl0_txdataesc[5]),
        .I4(\esc_cmd_data_reg[3]_0 ),
        .I5(\esc_cmd_data_reg[6] [6]),
        .O(\txtriggeresc_r_reg[2] [5]));
  LUT4 #(
    .INIT(16'h0400)) 
    \esc_cmd_data[5]_i_2 
       (.I0(\esc_cmd_data_reg[3]_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I3(\esc_cmd_data[7]_i_6_n_0 ),
        .O(\esc_cmd_data[5]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h2000)) 
    \esc_cmd_data[5]_i_3 
       (.I0(txulpsesc_r),
        .I1(txlpdtesc_r),
        .I2(dl0_txrequestesc),
        .I3(s_level_out_d3),
        .O(\esc_cmd_data[5]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \esc_cmd_data[6]_i_1 
       (.I0(\esc_cmd_data_reg[6] [7]),
        .I1(\esc_cmd_data_reg[3]_0 ),
        .I2(\esc_cmd_data[6]_i_2_n_0 ),
        .O(\txtriggeresc_r_reg[2] [6]));
  LUT6 #(
    .INIT(64'hFFFF8B8A00008B8A)) 
    \esc_cmd_data[6]_i_2 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I1(dl_ulpsactivenot_i_2_n_0),
        .I2(txlpdtesc_r),
        .I3(txulpsesc_r),
        .I4(\esc_cmd_data_reg[3] ),
        .I5(dl0_txdataesc[6]),
        .O(\esc_cmd_data[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF1000)) 
    \esc_cmd_data[7]_i_1 
       (.I0(Q[1]),
        .I1(Q[3]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_1 ),
        .I3(\esc_cmd_data[7]_i_3_n_0 ),
        .I4(\esc_cmd_data_reg[3]_0 ),
        .I5(\esc_cmd_data_reg[3] ),
        .O(\FSM_sequential_dl_tx_state_reg[1] ));
  LUT6 #(
    .INIT(64'h0000444055555555)) 
    \esc_cmd_data[7]_i_2 
       (.I0(\esc_cmd_data_reg[3]_0 ),
        .I1(\esc_cmd_data[7]_i_6_n_0 ),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_2 [2]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I4(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I5(\esc_cmd_data[7]_i_7_n_0 ),
        .O(\txtriggeresc_r_reg[2] [7]));
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    \esc_cmd_data[7]_i_3 
       (.I0(\FSM_sequential_dl_tx_state_reg[2]_2 [2]),
        .I1(\FSM_sequential_dl_tx_state_reg[2]_2 [3]),
        .I2(\FSM_sequential_dl_tx_state_reg[2]_2 [1]),
        .I3(\FSM_sequential_dl_tx_state_reg[2]_2 [0]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_7_n_0 ),
        .O(\esc_cmd_data[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00001FFF1FFF1FFF)) 
    \esc_cmd_data[7]_i_6 
       (.I0(txulpsesc_r),
        .I1(txlpdtesc_r),
        .I2(dl0_txrequestesc),
        .I3(s_level_out_d3),
        .I4(dl0_txvalidesc),
        .I5(dl_txreadyesc_reg_0),
        .O(\esc_cmd_data[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h55553FFF3FFF3FFF)) 
    \esc_cmd_data[7]_i_7 
       (.I0(dl0_txdataesc[7]),
        .I1(s_level_out_d3),
        .I2(dl0_txrequestesc),
        .I3(txlpdtesc_r),
        .I4(dl_txreadyesc_reg_0),
        .I5(dl0_txvalidesc),
        .O(\esc_cmd_data[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000222E)) 
    esc_ctrl_t_i_1
       (.I0(esc_ctrl_i),
        .I1(esc_ctrl_t_i_2_n_0),
        .I2(esc_ctrl_t_i_3_n_0),
        .I3(Q[3]),
        .I4(esc_ctrl_t_reg_1),
        .I5(esc_ctrl_t_reg_0),
        .O(esc_ctrl_t_reg));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT5 #(
    .INIT(32'h04570042)) 
    esc_ctrl_t_i_2
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(\txtriggeresc_r_reg[0] ),
        .O(esc_ctrl_t_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    esc_ctrl_t_i_3
       (.I0(Q[1]),
        .I1(\txtriggeresc_r_reg[0] ),
        .I2(out),
        .O(esc_ctrl_t_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'h64)) 
    esc_stopstate_i_2
       (.I0(Q[1]),
        .I1(\txtriggeresc_r_reg[0] ),
        .I2(out),
        .O(\FSM_sequential_dl_tx_state_reg[1]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h43FF4FFF43434F43)) 
    tx_dl_lp_dn_i_11
       (.I0(tx_dl_lp_dn_i_13_n_0),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\esc_cmd_data[0]_i_2_n_0 ),
        .I5(\txtriggeresc_r_reg[0] ),
        .O(tx_dl_lp_dn_i_11_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAA8AA8AAAA)) 
    tx_dl_lp_dn_i_13
       (.I0(Q[1]),
        .I1(\esc_cmd_data_reg[6] [0]),
        .I2(tx_dl_lp_dn_esc_i),
        .I3(tx_dl_lp_dp_esc_i),
        .I4(\bit_cnt_reg[0]_0 ),
        .I5(\esc_cmd_data[0]_i_2_n_0 ),
        .O(tx_dl_lp_dn_i_13_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFEFE02)) 
    tx_dl_lp_dn_i_1__0
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dn_i_2__0_n_0),
        .I2(tx_dl_lp_dn_i_3_n_0),
        .I3(tx_dl_lp_dn_i_4_n_0),
        .I4(tx_dl_lp_dn_i_5_n_0),
        .I5(tx_dl_lp_dp_reg_1),
        .O(tx_dl_lp_dn_reg));
  LUT6 #(
    .INIT(64'hFF04FF04FF040000)) 
    tx_dl_lp_dn_i_2__0
       (.I0(Q[3]),
        .I1(Q[0]),
        .I2(tx_dl_lp_dn_reg_0),
        .I3(\FSM_sequential_dl_tx_state[3]_i_5_n_0 ),
        .I4(tx_dl_lp_dn_i_7_n_0),
        .I5(Q[2]),
        .O(tx_dl_lp_dn_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h88808888AAAAAAAA)) 
    tx_dl_lp_dn_i_3
       (.I0(tx_dl_lp_dn_i_8_n_0),
        .I1(\FSM_sequential_dl_tx_state[3]_i_9_n_0 ),
        .I2(\bit_cnt[3]_i_9_n_0 ),
        .I3(tx_dl_lp_dn_i_9_n_0),
        .I4(tx_dl_lp_dn_reg_0),
        .I5(tx_dl_lp_dn_reg_1),
        .O(tx_dl_lp_dn_i_3_n_0));
  LUT6 #(
    .INIT(64'h1151004000400040)) 
    tx_dl_lp_dn_i_4
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(dl_ulpsactivenot_i_2_n_0),
        .I4(Q[0]),
        .I5(\txtriggeresc_r_reg[0] ),
        .O(tx_dl_lp_dn_i_4_n_0));
  LUT6 #(
    .INIT(64'h4444444444444445)) 
    tx_dl_lp_dn_i_5
       (.I0(Q[3]),
        .I1(tx_dl_lp_dn_i_11_n_0),
        .I2(tx_dl_lp_dn_i_9_n_0),
        .I3(\bit_cnt[3]_i_9_n_0 ),
        .I4(tx_dl_lp_dn_reg_2),
        .I5(Q[2]),
        .O(tx_dl_lp_dn_i_5_n_0));
  LUT6 #(
    .INIT(64'h0000555500007FFF)) 
    tx_dl_lp_dn_i_7
       (.I0(Q[1]),
        .I1(s_level_out_d3),
        .I2(dl0_txrequestesc),
        .I3(txlpdtesc_r),
        .I4(Q[3]),
        .I5(Q[0]),
        .O(tx_dl_lp_dn_i_7_n_0));
  LUT5 #(
    .INIT(32'h15555555)) 
    tx_dl_lp_dn_i_8
       (.I0(Q[2]),
        .I1(dl0_txrequestesc),
        .I2(s_level_out_d3),
        .I3(Q[3]),
        .I4(Q[1]),
        .O(tx_dl_lp_dn_i_8_n_0));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'hB)) 
    tx_dl_lp_dn_i_9
       (.I0(\txtriggeresc_r_reg[0] ),
        .I1(Q[1]),
        .O(tx_dl_lp_dn_i_9_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFEFE02)) 
    tx_dl_lp_dp_i_1__0
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(tx_dl_lp_dn_i_2__0_n_0),
        .I2(tx_dl_lp_dn_i_3_n_0),
        .I3(tx_dl_lp_dp_i_2__0_n_0),
        .I4(tx_dl_lp_dp_i_3__0_n_0),
        .I5(tx_dl_lp_dp_reg_1),
        .O(tx_dl_lp_dp_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFF55300000)) 
    tx_dl_lp_dp_i_2__0
       (.I0(\FSM_sequential_dl_tx_state[3]_i_10_n_0 ),
        .I1(tx_dl_lp_dp_i_4__0_n_0),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(tx_dl_lp_dp_i_5__0_n_0),
        .O(tx_dl_lp_dp_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h4044404440444444)) 
    tx_dl_lp_dp_i_3__0
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(\txtriggeresc_r_reg[0] ),
        .I3(Q[0]),
        .I4(\bit_cnt[3]_i_9_n_0 ),
        .I5(tx_dl_lp_dp_reg_0),
        .O(tx_dl_lp_dp_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h000000007DFF0000)) 
    tx_dl_lp_dp_i_4__0
       (.I0(\bit_cnt_reg[0]_0 ),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(tx_dl_lp_dp_esc_i),
        .I3(\esc_cmd_data_reg[6] [0]),
        .I4(Q[1]),
        .I5(\esc_cmd_data[0]_i_2_n_0 ),
        .O(tx_dl_lp_dp_i_4__0_n_0));
  LUT6 #(
    .INIT(64'h323232320F0FFF00)) 
    tx_dl_lp_dp_i_5__0
       (.I0(\esc_cmd_data[0]_i_2_n_0 ),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(\txtriggeresc_r_reg[0] ),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(tx_dl_lp_dp_i_5__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT4 #(
    .INIT(16'h7530)) 
    txlpdtesc_r_i_1
       (.I0(txulpsesc_r_reg_0),
        .I1(\txtriggeresc_r[3]_i_3_n_0 ),
        .I2(dl0_txlpdtesc),
        .I3(txlpdtesc_r),
        .O(dl0_txlpdtesc_0));
  LUT6 #(
    .INIT(64'h0002000000000200)) 
    \txtriggeresc_r[0]_i_1 
       (.I0(dl0_txtriggeresc[0]),
        .I1(dl_ulpsactivenot_i_2_n_0),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\dl0_txtriggeresc[3] [0]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \txtriggeresc_r[1]_i_1 
       (.I0(\txtriggeresc_r[3]_i_3_n_0 ),
        .I1(dl0_txtriggeresc[1]),
        .O(\dl0_txtriggeresc[3] [1]));
  LUT6 #(
    .INIT(64'h0002000000000200)) 
    \txtriggeresc_r[2]_i_1 
       (.I0(dl0_txtriggeresc[2]),
        .I1(dl_ulpsactivenot_i_2_n_0),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\dl0_txtriggeresc[3] [2]));
  LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBBA)) 
    \txtriggeresc_r[3]_i_1 
       (.I0(txulpsesc_r_reg_0),
        .I1(\txtriggeresc_r[3]_i_3_n_0 ),
        .I2(dl0_txtriggeresc[2]),
        .I3(dl0_txtriggeresc[1]),
        .I4(dl0_txtriggeresc[3]),
        .I5(dl0_txtriggeresc[0]),
        .O(\dl0_txtriggeresc[2] ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \txtriggeresc_r[3]_i_2 
       (.I0(\txtriggeresc_r[3]_i_3_n_0 ),
        .I1(dl0_txtriggeresc[3]),
        .O(\dl0_txtriggeresc[3] [3]));
  LUT6 #(
    .INIT(64'hFFE7FFFFFFFFFFFF)) 
    \txtriggeresc_r[3]_i_3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(s_level_out_d3),
        .I5(dl0_txrequestesc),
        .O(\txtriggeresc_r[3]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT4 #(
    .INIT(16'h7530)) 
    txulpsesc_r_i_1
       (.I0(txulpsesc_r_reg_0),
        .I1(\txtriggeresc_r[3]_i_3_n_0 ),
        .I2(dl0_txulpsesc),
        .I3(txulpsesc_r),
        .O(dl0_txulpsesc_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_78
   (out,
    core_rst,
    dl0_forcetxstopmode,
    core_clk);
  output out;
  input core_rst;
  input dl0_forcetxstopmode;
  input core_clk;

  wire core_clk;
  wire core_rst;
  wire dl0_forcetxstopmode;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl0_forcetxstopmode),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_79
   (\dl_tx_sm_state_reg[1] ,
    \dl_tx_sm_state_reg[2] ,
    \dl_tx_sm_state_reg[0] ,
    \dl_tx_sm_state_reg[0]_0 ,
    p_0_in23_out,
    \dl_tx_sm_state_reg[1]_0 ,
    s_level_out_d3_reg_0,
    s_level_out_d3_reg_1,
    \dl_tx_sm_state_reg[1]_1 ,
    core_rst,
    dl0_txrequestesc,
    core_clk,
    esc_start_reg,
    dl_tx_sm_state125_out,
    esc_start_i,
    \dl_tx_sm_state_reg[2]_0 ,
    \dl_tx_sm_state_reg[2]_1 ,
    \dl_tx_sm_state_reg[2]_2 ,
    \dl_tx_sm_state_reg[0]_1 ,
    en_hs_start_w__4,
    cl_init_done_coreclk_i,
    dl_stopstate_i_2_0,
    dl_tx_sm_state120_out,
    \dl_tx_sm_state_reg[2]_3 ,
    p_21_in,
    timeout_prepare,
    esc_active_sync_r,
    out,
    dl_status_bit_6_reg,
    timeout_hsexit_all);
  output \dl_tx_sm_state_reg[1] ;
  output \dl_tx_sm_state_reg[2] ;
  output \dl_tx_sm_state_reg[0] ;
  output \dl_tx_sm_state_reg[0]_0 ;
  output p_0_in23_out;
  output \dl_tx_sm_state_reg[1]_0 ;
  output s_level_out_d3_reg_0;
  output s_level_out_d3_reg_1;
  output \dl_tx_sm_state_reg[1]_1 ;
  input core_rst;
  input dl0_txrequestesc;
  input core_clk;
  input esc_start_reg;
  input dl_tx_sm_state125_out;
  input esc_start_i;
  input \dl_tx_sm_state_reg[2]_0 ;
  input \dl_tx_sm_state_reg[2]_1 ;
  input \dl_tx_sm_state_reg[2]_2 ;
  input \dl_tx_sm_state_reg[0]_1 ;
  input en_hs_start_w__4;
  input cl_init_done_coreclk_i;
  input dl_stopstate_i_2_0;
  input dl_tx_sm_state120_out;
  input \dl_tx_sm_state_reg[2]_3 ;
  input p_21_in;
  input timeout_prepare;
  input esc_active_sync_r;
  input out;
  input dl_status_bit_6_reg;
  input timeout_hsexit_all;

  wire cl_init_done_coreclk_i;
  wire core_clk;
  wire core_rst;
  wire dl0_txrequestesc;
  wire dl_status_bit_6_i_6_n_0;
  wire dl_status_bit_6_reg;
  wire dl_stopstate_i_2_0;
  wire dl_stopstate_i_5_n_0;
  wire dl_tx_sm_state118_out;
  wire dl_tx_sm_state120_out;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state[2]_i_2_n_0 ;
  wire [0:0]dl_tx_sm_state__0;
  wire \dl_tx_sm_state_reg[0] ;
  wire \dl_tx_sm_state_reg[0]_0 ;
  wire \dl_tx_sm_state_reg[0]_1 ;
  wire \dl_tx_sm_state_reg[1] ;
  wire \dl_tx_sm_state_reg[1]_0 ;
  wire \dl_tx_sm_state_reg[1]_1 ;
  wire \dl_tx_sm_state_reg[2] ;
  wire \dl_tx_sm_state_reg[2]_0 ;
  wire \dl_tx_sm_state_reg[2]_1 ;
  wire \dl_tx_sm_state_reg[2]_2 ;
  wire \dl_tx_sm_state_reg[2]_3 ;
  wire en_hs_start_w__4;
  wire esc_active_sync_r;
  wire esc_start11_out;
  wire esc_start_i;
  wire esc_start_i_3_n_0;
  wire esc_start_reg;
  wire out;
  wire p_0_in23_out;
  wire p_21_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_hsexit_all;
  wire timeout_prepare;

  LUT5 #(
    .INIT(32'h88808080)) 
    dl_status_bit_6_i_4
       (.I0(esc_start_reg),
        .I1(\dl_tx_sm_state_reg[2]_2 ),
        .I2(dl_status_bit_6_i_6_n_0),
        .I3(\dl_tx_sm_state_reg[0]_0 ),
        .I4(dl_status_bit_6_reg),
        .O(\dl_tx_sm_state_reg[1]_1 ));
  LUT6 #(
    .INIT(64'h00700070FF700070)) 
    dl_status_bit_6_i_6
       (.I0(s_level_out_d3),
        .I1(\dl_tx_sm_state_reg[2]_3 ),
        .I2(timeout_hsexit_all),
        .I3(\dl_tx_sm_state_reg[0]_1 ),
        .I4(esc_active_sync_r),
        .I5(out),
        .O(dl_status_bit_6_i_6_n_0));
  LUT3 #(
    .INIT(8'hBF)) 
    dl_status_bit_6_i_7
       (.I0(\dl_tx_sm_state_reg[0]_1 ),
        .I1(\dl_tx_sm_state_reg[2]_3 ),
        .I2(s_level_out_d3),
        .O(\dl_tx_sm_state_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hFBFFFBAA)) 
    dl_stopstate_i_2
       (.I0(dl_tx_sm_state125_out),
        .I1(esc_start_reg),
        .I2(dl_status_bit_6_i_6_n_0),
        .I3(\dl_tx_sm_state_reg[2]_2 ),
        .I4(dl_stopstate_i_5_n_0),
        .O(\dl_tx_sm_state_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hAAAAAFFFCCCCCCCC)) 
    dl_stopstate_i_5
       (.I0(\dl_tx_sm_state_reg[0]_1 ),
        .I1(cl_init_done_coreclk_i),
        .I2(dl_stopstate_i_2_0),
        .I3(s_level_out_d3),
        .I4(en_hs_start_w__4),
        .I5(esc_start_reg),
        .O(dl_stopstate_i_5_n_0));
  LUT4 #(
    .INIT(16'h2F20)) 
    \dl_tx_sm_state[0]_i_1 
       (.I0(dl_tx_sm_state__0),
        .I1(dl_tx_sm_state125_out),
        .I2(\dl_tx_sm_state_reg[2]_1 ),
        .I3(\dl_tx_sm_state_reg[0]_1 ),
        .O(\dl_tx_sm_state_reg[0] ));
  LUT6 #(
    .INIT(64'h0C0F0A0F0C000A0F)) 
    \dl_tx_sm_state[0]_i_2 
       (.I0(s_level_out_d3_reg_0),
        .I1(dl_tx_sm_state118_out),
        .I2(\dl_tx_sm_state_reg[0]_1 ),
        .I3(esc_start_reg),
        .I4(\dl_tx_sm_state_reg[2]_2 ),
        .I5(dl_tx_sm_state120_out),
        .O(dl_tx_sm_state__0));
  LUT2 #(
    .INIT(4'h8)) 
    \dl_tx_sm_state[0]_i_3 
       (.I0(s_level_out_d3),
        .I1(\dl_tx_sm_state_reg[2]_3 ),
        .O(dl_tx_sm_state118_out));
  LUT3 #(
    .INIT(8'hF8)) 
    \dl_tx_sm_state[1]_i_4 
       (.I0(dl_stopstate_i_2_0),
        .I1(s_level_out_d3),
        .I2(en_hs_start_w__4),
        .O(s_level_out_d3_reg_0));
  LUT5 #(
    .INIT(32'h0EFF0C00)) 
    \dl_tx_sm_state[2]_i_1 
       (.I0(\dl_tx_sm_state[2]_i_2_n_0 ),
        .I1(\dl_tx_sm_state_reg[2]_0 ),
        .I2(dl_tx_sm_state125_out),
        .I3(\dl_tx_sm_state_reg[2]_1 ),
        .I4(\dl_tx_sm_state_reg[2]_2 ),
        .O(\dl_tx_sm_state_reg[2] ));
  LUT6 #(
    .INIT(64'h00FF0000F8FFF8FF)) 
    \dl_tx_sm_state[2]_i_13 
       (.I0(dl_stopstate_i_2_0),
        .I1(s_level_out_d3),
        .I2(en_hs_start_w__4),
        .I3(esc_start_reg),
        .I4(cl_init_done_coreclk_i),
        .I5(\dl_tx_sm_state_reg[0]_1 ),
        .O(s_level_out_d3_reg_1));
  LUT6 #(
    .INIT(64'h40FF40AA40AA40AA)) 
    \dl_tx_sm_state[2]_i_2 
       (.I0(\dl_tx_sm_state_reg[0]_1 ),
        .I1(\dl_tx_sm_state_reg[2]_3 ),
        .I2(s_level_out_d3),
        .I3(esc_start_reg),
        .I4(p_21_in),
        .I5(timeout_prepare),
        .O(\dl_tx_sm_state[2]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \dl_tx_sm_state[2]_i_9 
       (.I0(s_level_out_d3),
        .I1(dl_stopstate_i_2_0),
        .O(p_0_in23_out));
  LUT5 #(
    .INIT(32'hAABFAA80)) 
    esc_start_i_1
       (.I0(esc_start11_out),
        .I1(esc_start_i_3_n_0),
        .I2(esc_start_reg),
        .I3(dl_tx_sm_state125_out),
        .I4(esc_start_i),
        .O(\dl_tx_sm_state_reg[1] ));
  LUT6 #(
    .INIT(64'h0000000055005530)) 
    esc_start_i_2
       (.I0(\dl_tx_sm_state_reg[0]_0 ),
        .I1(en_hs_start_w__4),
        .I2(p_0_in23_out),
        .I3(\dl_tx_sm_state_reg[2]_2 ),
        .I4(\dl_tx_sm_state_reg[0]_1 ),
        .I5(dl_tx_sm_state125_out),
        .O(esc_start11_out));
  LUT6 #(
    .INIT(64'h00F088880000FFFF)) 
    esc_start_i_3
       (.I0(\dl_tx_sm_state_reg[2]_3 ),
        .I1(s_level_out_d3),
        .I2(esc_active_sync_r),
        .I3(out),
        .I4(\dl_tx_sm_state_reg[0]_1 ),
        .I5(\dl_tx_sm_state_reg[2]_2 ),
        .O(esc_start_i_3_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl0_txrequestesc),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_8
   (out,
    core_clk);
  output out;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_80
   (out,
    tx_dl_lp_dn_reg,
    \dl_tx_sm_state_reg[0] ,
    dl_tx_sm_state120_out,
    \dl_tx_sm_state_reg[2] ,
    en_hs_start_w__4,
    \en_cl_init_to_blk.init_done_reg ,
    \dl_tx_sm_state_reg[2]_0 ,
    en_lp_01_cnt__4,
    core_rst,
    dl_txrequesths_r,
    core_clk,
    tx_dl_lp_dn_reg_0,
    tx_dl_lp_dn_reg_1,
    tx_dl_lp_dn_reg_2,
    tx_dl_lp_dn_hs_i,
    \dl_tx_sm_state_reg[1] ,
    \dl_tx_sm_state_reg[1]_0 ,
    \dl_tx_sm_state_reg[1]_1 ,
    \dl_tx_sm_state_reg[1]_2 ,
    p_0_in23_out,
    cl_init_done_coreclk_i,
    tx_dl_lp_dn_reg_3,
    dl_tx_sm_state125_out,
    \dl_tx_sm_state[1]_i_4 ,
    \dl_tx_sm_state[1]_i_4_0 ,
    cl_txclkactivehs_i,
    timeout_prepare,
    en_cal_hs_datapath_reg,
    \dl_tx_sm_state[2]_i_3_0 );
  output out;
  output tx_dl_lp_dn_reg;
  output \dl_tx_sm_state_reg[0] ;
  output dl_tx_sm_state120_out;
  output \dl_tx_sm_state_reg[2] ;
  output en_hs_start_w__4;
  output \en_cl_init_to_blk.init_done_reg ;
  output \dl_tx_sm_state_reg[2]_0 ;
  output en_lp_01_cnt__4;
  input core_rst;
  input dl_txrequesths_r;
  input core_clk;
  input tx_dl_lp_dn_reg_0;
  input tx_dl_lp_dn_reg_1;
  input tx_dl_lp_dn_reg_2;
  input tx_dl_lp_dn_hs_i;
  input \dl_tx_sm_state_reg[1] ;
  input \dl_tx_sm_state_reg[1]_0 ;
  input \dl_tx_sm_state_reg[1]_1 ;
  input \dl_tx_sm_state_reg[1]_2 ;
  input p_0_in23_out;
  input cl_init_done_coreclk_i;
  input tx_dl_lp_dn_reg_3;
  input dl_tx_sm_state125_out;
  input \dl_tx_sm_state[1]_i_4 ;
  input \dl_tx_sm_state[1]_i_4_0 ;
  input cl_txclkactivehs_i;
  input timeout_prepare;
  input en_cal_hs_datapath_reg;
  input \dl_tx_sm_state[2]_i_3_0 ;

  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl_tx_sm_state120_out;
  wire dl_tx_sm_state122_out;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state[1]_i_2_n_0 ;
  wire \dl_tx_sm_state[1]_i_4 ;
  wire \dl_tx_sm_state[1]_i_4_0 ;
  wire \dl_tx_sm_state[2]_i_3_0 ;
  wire \dl_tx_sm_state_reg[0] ;
  wire \dl_tx_sm_state_reg[1] ;
  wire \dl_tx_sm_state_reg[1]_0 ;
  wire \dl_tx_sm_state_reg[1]_1 ;
  wire \dl_tx_sm_state_reg[1]_2 ;
  wire \dl_tx_sm_state_reg[2] ;
  wire \dl_tx_sm_state_reg[2]_0 ;
  wire dl_txrequesths_r;
  wire en_cal_hs_datapath_reg;
  wire \en_cl_init_to_blk.init_done_reg ;
  wire en_hs_start_w__4;
  wire en_lp_01_cnt__4;
  wire p_0_in23_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_prepare;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dn_reg_1;
  wire tx_dl_lp_dn_reg_2;
  wire tx_dl_lp_dn_reg_3;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hFFAAFFFFFBFA0000)) 
    \dl_tx_sm_state[1]_i_1 
       (.I0(\dl_tx_sm_state[1]_i_2_n_0 ),
        .I1(dl_tx_sm_state120_out),
        .I2(\dl_tx_sm_state_reg[1] ),
        .I3(\dl_tx_sm_state_reg[1]_0 ),
        .I4(\dl_tx_sm_state_reg[1]_1 ),
        .I5(\dl_tx_sm_state_reg[1]_2 ),
        .O(\dl_tx_sm_state_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00007400)) 
    \dl_tx_sm_state[1]_i_2 
       (.I0(dl_tx_sm_state122_out),
        .I1(\dl_tx_sm_state_reg[1] ),
        .I2(tx_dl_lp_dn_reg_3),
        .I3(\dl_tx_sm_state_reg[1]_2 ),
        .I4(\dl_tx_sm_state_reg[1]_0 ),
        .I5(dl_tx_sm_state125_out),
        .O(\dl_tx_sm_state[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA800)) 
    \dl_tx_sm_state[1]_i_3 
       (.I0(cl_txclkactivehs_i),
        .I1(s_level_out_d3),
        .I2(en_cal_hs_datapath_reg),
        .I3(timeout_prepare),
        .O(dl_tx_sm_state120_out));
  LUT4 #(
    .INIT(16'hBBBF)) 
    \dl_tx_sm_state[2]_i_12 
       (.I0(\dl_tx_sm_state[2]_i_3_0 ),
        .I1(cl_txclkactivehs_i),
        .I2(s_level_out_d3),
        .I3(en_cal_hs_datapath_reg),
        .O(en_lp_01_cnt__4));
  LUT6 #(
    .INIT(64'h0A0300000A000000)) 
    \dl_tx_sm_state[2]_i_3 
       (.I0(dl_tx_sm_state122_out),
        .I1(en_hs_start_w__4),
        .I2(\dl_tx_sm_state_reg[1]_0 ),
        .I3(\dl_tx_sm_state_reg[1] ),
        .I4(\dl_tx_sm_state_reg[1]_2 ),
        .I5(p_0_in23_out),
        .O(\dl_tx_sm_state_reg[2] ));
  LUT4 #(
    .INIT(16'hA800)) 
    \dl_tx_sm_state[2]_i_7 
       (.I0(cl_txclkactivehs_i),
        .I1(s_level_out_d3),
        .I2(en_cal_hs_datapath_reg),
        .I3(\dl_tx_sm_state[2]_i_3_0 ),
        .O(dl_tx_sm_state122_out));
  LUT4 #(
    .INIT(16'h8000)) 
    \dl_tx_sm_state[2]_i_8 
       (.I0(s_level_out_d3),
        .I1(\dl_tx_sm_state[1]_i_4 ),
        .I2(\dl_tx_sm_state[1]_i_4_0 ),
        .I3(cl_txclkactivehs_i),
        .O(en_hs_start_w__4));
  LUT5 #(
    .INIT(32'h5F5FDFFF)) 
    en_cal_hs_datapath_i_2
       (.I0(\dl_tx_sm_state_reg[1]_0 ),
        .I1(timeout_prepare),
        .I2(cl_txclkactivehs_i),
        .I3(s_level_out_d3),
        .I4(en_cal_hs_datapath_reg),
        .O(\dl_tx_sm_state_reg[2]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_txrequesths_r),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT5 #(
    .INIT(32'hFEFFFE00)) 
    tx_dl_lp_dn_i_1
       (.I0(\dl_tx_sm_state[1]_i_2_n_0 ),
        .I1(tx_dl_lp_dn_reg_0),
        .I2(tx_dl_lp_dn_reg_1),
        .I3(tx_dl_lp_dn_reg_2),
        .I4(tx_dl_lp_dn_hs_i),
        .O(tx_dl_lp_dn_reg));
  LUT6 #(
    .INIT(64'h3333AAAA0F00FFFF)) 
    tx_dl_lp_dp_i_2
       (.I0(cl_init_done_coreclk_i),
        .I1(dl_tx_sm_state122_out),
        .I2(en_hs_start_w__4),
        .I3(p_0_in23_out),
        .I4(\dl_tx_sm_state_reg[1]_2 ),
        .I5(\dl_tx_sm_state_reg[1] ),
        .O(\en_cl_init_to_blk.init_done_reg ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_81
   (out,
    en_lp_01_cnt_reg,
    \dl_tx_sm_state_reg[2] ,
    \dl_tx_sm_state_reg[0] ,
    \dl_tx_sm_state_reg[1] ,
    p_21_in,
    \dl_tx_sm_state_reg[2]_0 ,
    \dl_tx_sm_state_reg[2]_1 ,
    \dl_tx_sm_state_reg[2]_2 ,
    core_rst,
    core_clk,
    dl_tx_sm_state125_out,
    en_lp_01_cnt_reg_0,
    dl_stopstate_reg,
    dl_stopstate_reg_0,
    dl_stopstate_i,
    en_hs_datapath_reg,
    dl_status_reg,
    en_lp_01_cnt_reg_1,
    en_hs_start_w__4,
    en_lp_01_cnt_reg_2,
    dl_status_bit_6_reg,
    dl_status_bit_6_reg_0,
    tx_dl_lp_dn_reg,
    tx_dl_lp_dn_reg_0,
    \dl_tx_sm_state_reg[1]_0 ,
    en_lp_01_cnt__4,
    dl_tx_sm_state0__0,
    en_hs_datapath_reg_0,
    cl_txclkactivehs_i,
    timeout_prepare,
    dl_stopstate_reg_1,
    dl_status_bit_6_reg_1,
    dl_status_bit_6_reg_2,
    cl_init_done_coreclk_i);
  output out;
  output en_lp_01_cnt_reg;
  output \dl_tx_sm_state_reg[2] ;
  output \dl_tx_sm_state_reg[0] ;
  output \dl_tx_sm_state_reg[1] ;
  output p_21_in;
  output \dl_tx_sm_state_reg[2]_0 ;
  output \dl_tx_sm_state_reg[2]_1 ;
  output \dl_tx_sm_state_reg[2]_2 ;
  input core_rst;
  input core_clk;
  input dl_tx_sm_state125_out;
  input en_lp_01_cnt_reg_0;
  input dl_stopstate_reg;
  input dl_stopstate_reg_0;
  input dl_stopstate_i;
  input en_hs_datapath_reg;
  input [0:0]dl_status_reg;
  input en_lp_01_cnt_reg_1;
  input en_hs_start_w__4;
  input en_lp_01_cnt_reg_2;
  input dl_status_bit_6_reg;
  input dl_status_bit_6_reg_0;
  input tx_dl_lp_dn_reg;
  input tx_dl_lp_dn_reg_0;
  input \dl_tx_sm_state_reg[1]_0 ;
  input en_lp_01_cnt__4;
  input dl_tx_sm_state0__0;
  input en_hs_datapath_reg_0;
  input cl_txclkactivehs_i;
  input timeout_prepare;
  input dl_stopstate_reg_1;
  input dl_status_bit_6_reg_1;
  input dl_status_bit_6_reg_2;
  input cl_init_done_coreclk_i;

  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl_status_bit_6_i_2_n_0;
  wire dl_status_bit_6_i_5_n_0;
  wire dl_status_bit_6_reg;
  wire dl_status_bit_6_reg_0;
  wire dl_status_bit_6_reg_1;
  wire dl_status_bit_6_reg_2;
  wire [0:0]dl_status_reg;
  wire dl_stopstate_i;
  wire dl_stopstate_i_3_n_0;
  wire dl_stopstate_i_4_n_0;
  wire dl_stopstate_reg;
  wire dl_stopstate_reg_0;
  wire dl_stopstate_reg_1;
  wire dl_tx_sm_state0__0;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state[2]_i_10_n_0 ;
  wire \dl_tx_sm_state_reg[0] ;
  wire \dl_tx_sm_state_reg[1] ;
  wire \dl_tx_sm_state_reg[1]_0 ;
  wire \dl_tx_sm_state_reg[2] ;
  wire \dl_tx_sm_state_reg[2]_0 ;
  wire \dl_tx_sm_state_reg[2]_1 ;
  wire \dl_tx_sm_state_reg[2]_2 ;
  wire en_hs_datapath_i_2_n_0;
  wire en_hs_datapath_i_4_n_0;
  wire en_hs_datapath_reg;
  wire en_hs_datapath_reg_0;
  wire en_hs_start_w__4;
  wire en_lp_01_cnt15_out;
  wire en_lp_01_cnt__4;
  wire en_lp_01_cnt_i_3_n_0;
  wire en_lp_01_cnt_reg;
  wire en_lp_01_cnt_reg_0;
  wire en_lp_01_cnt_reg_1;
  wire en_lp_01_cnt_reg_2;
  wire p_21_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_prepare;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dp_i_6_n_0;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF0E)) 
    dl_status_bit_6_i_1
       (.I0(dl_status_bit_6_i_2_n_0),
        .I1(dl_status_bit_6_reg),
        .I2(dl_stopstate_reg_0),
        .I3(dl_status_bit_6_reg_0),
        .I4(dl_tx_sm_state125_out),
        .I5(dl_status_bit_6_i_5_n_0),
        .O(\dl_tx_sm_state_reg[2]_0 ));
  LUT5 #(
    .INIT(32'h8ADF0000)) 
    dl_status_bit_6_i_2
       (.I0(en_hs_datapath_reg),
        .I1(dl_status_bit_6_reg_1),
        .I2(p_21_in),
        .I3(dl_status_bit_6_reg_2),
        .I4(en_lp_01_cnt_reg_2),
        .O(dl_status_bit_6_i_2_n_0));
  LUT5 #(
    .INIT(32'h40404044)) 
    dl_status_bit_6_i_5
       (.I0(en_lp_01_cnt_reg_2),
        .I1(dl_stopstate_reg_0),
        .I2(dl_status_bit_6_reg_1),
        .I3(en_hs_datapath_reg),
        .I4(p_21_in),
        .O(dl_status_bit_6_i_5_n_0));
  LUT6 #(
    .INIT(64'hAAABABABAAA8A8A8)) 
    dl_stopstate_i_1
       (.I0(dl_stopstate_reg),
        .I1(dl_tx_sm_state125_out),
        .I2(dl_stopstate_i_3_n_0),
        .I3(dl_stopstate_reg_0),
        .I4(dl_stopstate_i_4_n_0),
        .I5(dl_stopstate_i),
        .O(\dl_tx_sm_state_reg[2] ));
  LUT5 #(
    .INIT(32'h000072AA)) 
    dl_stopstate_i_3
       (.I0(en_lp_01_cnt_reg_2),
        .I1(p_21_in),
        .I2(cl_init_done_coreclk_i),
        .I3(en_hs_datapath_reg),
        .I4(dl_stopstate_reg_0),
        .O(dl_stopstate_i_3_n_0));
  LUT4 #(
    .INIT(16'hFF01)) 
    dl_stopstate_i_4
       (.I0(p_21_in),
        .I1(en_hs_datapath_reg),
        .I2(en_lp_01_cnt_reg_2),
        .I3(dl_stopstate_reg_1),
        .O(dl_stopstate_i_4_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00FD000D)) 
    \dl_tx_sm_state[2]_i_10 
       (.I0(p_21_in),
        .I1(timeout_prepare),
        .I2(en_hs_datapath_reg),
        .I3(en_lp_01_cnt_reg_2),
        .I4(dl_tx_sm_state0__0),
        .I5(dl_stopstate_reg_1),
        .O(\dl_tx_sm_state[2]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEEEFFFFFCCC)) 
    \dl_tx_sm_state[2]_i_5 
       (.I0(\dl_tx_sm_state[2]_i_10_n_0 ),
        .I1(dl_tx_sm_state125_out),
        .I2(\dl_tx_sm_state_reg[1]_0 ),
        .I3(en_lp_01_cnt__4),
        .I4(tx_dl_lp_dn_reg_0),
        .I5(dl_stopstate_reg_0),
        .O(\dl_tx_sm_state_reg[2]_2 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \dl_tx_sm_state[2]_i_6 
       (.I0(s_level_out_d3),
        .I1(en_hs_datapath_reg_0),
        .I2(cl_txclkactivehs_i),
        .O(p_21_in));
  LUT5 #(
    .INIT(32'h01FF0100)) 
    en_hs_datapath_i_1
       (.I0(en_hs_datapath_reg),
        .I1(dl_tx_sm_state125_out),
        .I2(en_hs_datapath_i_2_n_0),
        .I3(\dl_tx_sm_state_reg[1] ),
        .I4(dl_status_reg),
        .O(\dl_tx_sm_state_reg[0] ));
  LUT4 #(
    .INIT(16'h1FFF)) 
    en_hs_datapath_i_2
       (.I0(s_level_out_d3),
        .I1(en_hs_datapath_reg_0),
        .I2(cl_txclkactivehs_i),
        .I3(dl_stopstate_reg_0),
        .O(en_hs_datapath_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFAEAAAAFF)) 
    en_hs_datapath_i_3
       (.I0(en_hs_datapath_i_4_n_0),
        .I1(dl_tx_sm_state0__0),
        .I2(en_lp_01_cnt_reg_2),
        .I3(dl_stopstate_reg_0),
        .I4(en_hs_datapath_reg),
        .I5(dl_tx_sm_state125_out),
        .O(\dl_tx_sm_state_reg[1] ));
  LUT6 #(
    .INIT(64'h000000000000FF1F)) 
    en_hs_datapath_i_4
       (.I0(s_level_out_d3),
        .I1(en_hs_datapath_reg_0),
        .I2(cl_txclkactivehs_i),
        .I3(timeout_prepare),
        .I4(en_hs_datapath_reg),
        .I5(en_lp_01_cnt_reg_2),
        .O(en_hs_datapath_i_4_n_0));
  LUT4 #(
    .INIT(16'hABA8)) 
    en_lp_01_cnt_i_1__0
       (.I0(en_lp_01_cnt15_out),
        .I1(en_lp_01_cnt_i_3_n_0),
        .I2(dl_tx_sm_state125_out),
        .I3(en_lp_01_cnt_reg_0),
        .O(en_lp_01_cnt_reg));
  LUT6 #(
    .INIT(64'h0022000000F00000)) 
    en_lp_01_cnt_i_2__0
       (.I0(p_21_in),
        .I1(en_lp_01_cnt_reg_1),
        .I2(en_hs_start_w__4),
        .I3(dl_tx_sm_state125_out),
        .I4(en_lp_01_cnt_reg_2),
        .I5(en_hs_datapath_reg),
        .O(en_lp_01_cnt15_out));
  LUT6 #(
    .INIT(64'h5515440411111111)) 
    en_lp_01_cnt_i_3
       (.I0(dl_stopstate_reg_0),
        .I1(en_hs_datapath_reg),
        .I2(p_21_in),
        .I3(en_lp_01_cnt_reg_1),
        .I4(en_hs_start_w__4),
        .I5(en_lp_01_cnt_reg_2),
        .O(en_lp_01_cnt_i_3_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hFEFEFEFEFFFFFFF0)) 
    tx_dl_lp_dp_i_4
       (.I0(tx_dl_lp_dn_reg),
        .I1(dl_stopstate_i_4_n_0),
        .I2(dl_tx_sm_state125_out),
        .I3(tx_dl_lp_dp_i_6_n_0),
        .I4(tx_dl_lp_dn_reg_0),
        .I5(dl_stopstate_reg_0),
        .O(\dl_tx_sm_state_reg[2]_1 ));
  LUT6 #(
    .INIT(64'h8888888800088888)) 
    tx_dl_lp_dp_i_6
       (.I0(en_hs_datapath_reg),
        .I1(en_lp_01_cnt_reg_2),
        .I2(s_level_out_d3),
        .I3(en_hs_datapath_reg_0),
        .I4(cl_txclkactivehs_i),
        .I5(en_lp_01_cnt_reg_1),
        .O(tx_dl_lp_dp_i_6_n_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_82
   (out,
    \dl_tx_sm_state_reg[0] ,
    s_level_out_d3_reg_0,
    core_rst,
    s_level_out_d1_cdc_to_reg_0,
    core_clk,
    dl_tx_sm_state0__0,
    tx_dl_lp_dn_reg,
    tx_dl_lp_dn_reg_0,
    tx_dl_lp_dn_reg_1,
    esc_active_sync_r,
    timeout_hsexit_all,
    dl_stopstate_i_4);
  output out;
  output \dl_tx_sm_state_reg[0] ;
  output s_level_out_d3_reg_0;
  input core_rst;
  input s_level_out_d1_cdc_to_reg_0;
  input core_clk;
  input dl_tx_sm_state0__0;
  input tx_dl_lp_dn_reg;
  input tx_dl_lp_dn_reg_0;
  input tx_dl_lp_dn_reg_1;
  input esc_active_sync_r;
  input timeout_hsexit_all;
  input dl_stopstate_i_4;

  wire core_clk;
  wire core_rst;
  wire dl_stopstate_i_4;
  wire dl_tx_sm_state0__0;
  wire \dl_tx_sm_state_reg[0] ;
  wire esc_active_sync_r;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_hsexit_all;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dn_reg_1;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'h4F40FFFF00000000)) 
    dl_stopstate_i_6
       (.I0(s_level_out_d3),
        .I1(esc_active_sync_r),
        .I2(tx_dl_lp_dn_reg),
        .I3(timeout_hsexit_all),
        .I4(dl_stopstate_i_4),
        .I5(tx_dl_lp_dn_reg_0),
        .O(s_level_out_d3_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT5 #(
    .INIT(32'hAAEF0000)) 
    tx_dl_lp_dp_i_3
       (.I0(s_level_out_d3_reg_0),
        .I1(dl_tx_sm_state0__0),
        .I2(tx_dl_lp_dn_reg),
        .I3(tx_dl_lp_dn_reg_0),
        .I4(tx_dl_lp_dn_reg_1),
        .O(\dl_tx_sm_state_reg[0] ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_83
   (core_rst,
    core_clk);
  input core_rst;
  input core_clk;

  wire core_clk;
  wire core_rst;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_85
   (init_done,
    init_done_byteclk_r,
    tx_div4_clk);
  output init_done;
  input init_done_byteclk_r;
  input tx_div4_clk;

  wire init_done_byteclk_r;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign init_done = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(init_done_byteclk_r),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_86
   (cl_txclkactivehs,
    cl_txclkactivehs_i,
    tx_div4_clk);
  output cl_txclkactivehs;
  input cl_txclkactivehs_i;
  input tx_div4_clk;

  wire cl_txclkactivehs_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign cl_txclkactivehs = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(cl_txclkactivehs_i),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_87
   (out,
    \cl_tx_state_reg[3] ,
    s_level_out_d3_reg_0,
    lp_01_r_reg,
    cl_tx_state119_out,
    lp_10_r_reg,
    lp_10_r_reg_0,
    cl_tx_state117_out,
    \cl_tx_state_reg[0] ,
    lp_10_r_reg_1,
    \cl_tx_state_reg[0]_0 ,
    \cl_tx_state_reg[1] ,
    \cl_tx_state_reg[1]_0 ,
    \cl_tx_state_reg[3]_0 ,
    \cl_tx_state_reg[3]_1 ,
    \cl_tx_state_reg[3]_2 ,
    s_level_out_d3_reg_1,
    s_level_out_d3_reg_2,
    core_rst,
    cl_txrequesths,
    core_clk,
    tx_cl_lp_cn_r_reg,
    en_lp_01_cnt_reg,
    hs_clk_state_r_reg,
    cl_txclkactivehs_reg,
    hs_clk_state_r_reg_0,
    cl_stopstate_reg,
    tx_cl_lp_cp_r_reg,
    tx_cl_lp_cn_r_reg_0,
    tx_cl_lp_cn_r_reg_1,
    \cl_tx_state[2]_i_4 ,
    \cl_tx_state_reg[2] ,
    cl_txclkactivehs_reg_i_3_0,
    time_out_zero,
    hs_clk_state_r_reg_1,
    en_lp_10_cnt_reg,
    cl_txclkactivehs_reg_i_3_1,
    cl_txclkactivehs_reg_i_3_2,
    hs_clk_state_r,
    hs_clk_state_r_reg_2,
    cl_txclkactivehs_reg_0,
    cl_txclkactivehs_i,
    en_lp_01_cnt_reg_0,
    en_lp_01_cnt_reg_1,
    reset_timer_r,
    reset_timer_r_reg,
    tx_cl_lp_cn_r_reg_2,
    tx_cl_lp_cn,
    tx_cl_lp_cp_r_reg_0,
    tx_cl_lp_cp,
    reset_timer_r_i_2_0,
    reset_timer_r_i_2_1);
  output out;
  output \cl_tx_state_reg[3] ;
  output s_level_out_d3_reg_0;
  output lp_01_r_reg;
  output cl_tx_state119_out;
  output lp_10_r_reg;
  output lp_10_r_reg_0;
  output cl_tx_state117_out;
  output \cl_tx_state_reg[0] ;
  output lp_10_r_reg_1;
  output \cl_tx_state_reg[0]_0 ;
  output \cl_tx_state_reg[1] ;
  output \cl_tx_state_reg[1]_0 ;
  output \cl_tx_state_reg[3]_0 ;
  output \cl_tx_state_reg[3]_1 ;
  output \cl_tx_state_reg[3]_2 ;
  output s_level_out_d3_reg_1;
  output s_level_out_d3_reg_2;
  input core_rst;
  input cl_txrequesths;
  input core_clk;
  input tx_cl_lp_cn_r_reg;
  input en_lp_01_cnt_reg;
  input hs_clk_state_r_reg;
  input cl_txclkactivehs_reg;
  input hs_clk_state_r_reg_0;
  input cl_stopstate_reg;
  input tx_cl_lp_cp_r_reg;
  input tx_cl_lp_cn_r_reg_0;
  input tx_cl_lp_cn_r_reg_1;
  input \cl_tx_state[2]_i_4 ;
  input \cl_tx_state_reg[2] ;
  input cl_txclkactivehs_reg_i_3_0;
  input time_out_zero;
  input hs_clk_state_r_reg_1;
  input en_lp_10_cnt_reg;
  input cl_txclkactivehs_reg_i_3_1;
  input cl_txclkactivehs_reg_i_3_2;
  input hs_clk_state_r;
  input hs_clk_state_r_reg_2;
  input cl_txclkactivehs_reg_0;
  input cl_txclkactivehs_i;
  input en_lp_01_cnt_reg_0;
  input en_lp_01_cnt_reg_1;
  input reset_timer_r;
  input reset_timer_r_reg;
  input tx_cl_lp_cn_r_reg_2;
  input tx_cl_lp_cn;
  input tx_cl_lp_cp_r_reg_0;
  input tx_cl_lp_cp;
  input reset_timer_r_i_2_0;
  input reset_timer_r_i_2_1;

  wire cl_stopstate_i_6_n_0;
  wire cl_stopstate_i_9_n_0;
  wire cl_stopstate_reg;
  wire cl_tx_state117_out;
  wire cl_tx_state119_out;
  wire \cl_tx_state[2]_i_4 ;
  wire \cl_tx_state_reg[0] ;
  wire \cl_tx_state_reg[0]_0 ;
  wire \cl_tx_state_reg[1] ;
  wire \cl_tx_state_reg[1]_0 ;
  wire \cl_tx_state_reg[2] ;
  wire \cl_tx_state_reg[3] ;
  wire \cl_tx_state_reg[3]_0 ;
  wire \cl_tx_state_reg[3]_1 ;
  wire \cl_tx_state_reg[3]_2 ;
  wire cl_txclkactivehs_i;
  wire cl_txclkactivehs_i_4_n_0;
  wire cl_txclkactivehs_i_5_n_0;
  wire cl_txclkactivehs_reg;
  wire cl_txclkactivehs_reg_0;
  wire cl_txclkactivehs_reg_i_3_0;
  wire cl_txclkactivehs_reg_i_3_1;
  wire cl_txclkactivehs_reg_i_3_2;
  wire cl_txclkactivehs_reg_i_3_n_0;
  wire cl_txrequesths;
  wire core_clk;
  wire core_rst;
  wire en_lp_01_cnt_reg;
  wire en_lp_01_cnt_reg_0;
  wire en_lp_01_cnt_reg_1;
  wire en_lp_10_cnt_i_3_n_0;
  wire en_lp_10_cnt_reg;
  wire hs_clk_state_r;
  wire hs_clk_state_r_reg;
  wire hs_clk_state_r_reg_0;
  wire hs_clk_state_r_reg_1;
  wire hs_clk_state_r_reg_2;
  wire lp_01_r_reg;
  wire lp_10_r_reg;
  wire lp_10_r_reg_0;
  wire lp_10_r_reg_1;
  wire reset_timer_r;
  wire reset_timer_r_i_2_0;
  wire reset_timer_r_i_2_1;
  wire reset_timer_r_i_2_n_0;
  wire reset_timer_r_i_3_n_0;
  wire reset_timer_r_i_5_n_0;
  wire reset_timer_r_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  wire s_level_out_d3_reg_2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire time_out_zero;
  wire tx_cl_lp_cn;
  wire tx_cl_lp_cn_r_i_3_n_0;
  wire tx_cl_lp_cn_r_reg;
  wire tx_cl_lp_cn_r_reg_0;
  wire tx_cl_lp_cn_r_reg_1;
  wire tx_cl_lp_cn_r_reg_2;
  wire tx_cl_lp_cp;
  wire tx_cl_lp_cp_r;
  wire tx_cl_lp_cp_r_i_3_n_0;
  wire tx_cl_lp_cp_r_i_7_n_0;
  wire tx_cl_lp_cp_r_reg;
  wire tx_cl_lp_cp_r_reg_0;

  assign out = s_level_out_d3;
  LUT4 #(
    .INIT(16'h05CC)) 
    cl_stopstate_i_6
       (.I0(s_level_out_d3),
        .I1(cl_stopstate_i_9_n_0),
        .I2(cl_txclkactivehs_reg),
        .I3(tx_cl_lp_cn_r_reg),
        .O(cl_stopstate_i_6_n_0));
  LUT5 #(
    .INIT(32'h5FE050E0)) 
    cl_stopstate_i_9
       (.I0(s_level_out_d3),
        .I1(tx_cl_lp_cn_r_reg_0),
        .I2(cl_txclkactivehs_reg),
        .I3(hs_clk_state_r_reg),
        .I4(tx_cl_lp_cn_r_reg_1),
        .O(cl_stopstate_i_9_n_0));
  MUXF7 cl_stopstate_reg_i_3
       (.I0(cl_stopstate_i_6_n_0),
        .I1(cl_stopstate_reg),
        .O(\cl_tx_state_reg[3] ),
        .S(hs_clk_state_r_reg_0));
  LUT5 #(
    .INIT(32'hFFF7FFF4)) 
    \cl_tx_state[1]_i_4 
       (.I0(\cl_tx_state_reg[2] ),
        .I1(tx_cl_lp_cn_r_reg),
        .I2(cl_txclkactivehs_reg),
        .I3(hs_clk_state_r_reg),
        .I4(s_level_out_d3),
        .O(lp_10_r_reg_1));
  LUT5 #(
    .INIT(32'h0C0CCBC8)) 
    \cl_tx_state[2]_i_3 
       (.I0(\cl_tx_state_reg[2] ),
        .I1(tx_cl_lp_cn_r_reg),
        .I2(hs_clk_state_r_reg),
        .I3(s_level_out_d3),
        .I4(cl_txclkactivehs_reg),
        .O(lp_10_r_reg));
  LUT2 #(
    .INIT(4'h8)) 
    \cl_tx_state[2]_i_5 
       (.I0(s_level_out_d3),
        .I1(\cl_tx_state[2]_i_4 ),
        .O(cl_tx_state119_out));
  LUT5 #(
    .INIT(32'h0FF80FFB)) 
    \cl_tx_state[3]_i_4 
       (.I0(\cl_tx_state_reg[2] ),
        .I1(tx_cl_lp_cn_r_reg),
        .I2(cl_txclkactivehs_reg),
        .I3(hs_clk_state_r_reg),
        .I4(s_level_out_d3),
        .O(lp_10_r_reg_0));
  LUT6 #(
    .INIT(64'hBBFFBB00FCFFFCFF)) 
    \cl_tx_state[3]_i_9 
       (.I0(en_lp_01_cnt_reg),
        .I1(s_level_out_d3),
        .I2(tx_cl_lp_cn_r_reg_0),
        .I3(cl_txclkactivehs_reg),
        .I4(tx_cl_lp_cn_r_reg_1),
        .I5(hs_clk_state_r_reg),
        .O(lp_01_r_reg));
  LUT6 #(
    .INIT(64'h5540FFFF55400000)) 
    cl_txclkactivehs_i_1
       (.I0(cl_txclkactivehs_reg),
        .I1(hs_clk_state_r_reg_0),
        .I2(s_level_out_d3),
        .I3(cl_txclkactivehs_reg_0),
        .I4(cl_txclkactivehs_reg_i_3_n_0),
        .I5(cl_txclkactivehs_i),
        .O(\cl_tx_state_reg[1] ));
  LUT6 #(
    .INIT(64'h0301030103C30303)) 
    cl_txclkactivehs_i_4
       (.I0(s_level_out_d3),
        .I1(tx_cl_lp_cn_r_reg),
        .I2(cl_txclkactivehs_reg),
        .I3(cl_txclkactivehs_reg_i_3_1),
        .I4(cl_txclkactivehs_reg_i_3_2),
        .I5(hs_clk_state_r_reg_0),
        .O(cl_txclkactivehs_i_4_n_0));
  LUT5 #(
    .INIT(32'h44400040)) 
    cl_txclkactivehs_i_5
       (.I0(hs_clk_state_r_reg_0),
        .I1(tx_cl_lp_cn_r_reg),
        .I2(cl_tx_state117_out),
        .I3(cl_txclkactivehs_reg),
        .I4(cl_txclkactivehs_reg_i_3_0),
        .O(cl_txclkactivehs_i_5_n_0));
  MUXF7 cl_txclkactivehs_reg_i_3
       (.I0(cl_txclkactivehs_i_4_n_0),
        .I1(cl_txclkactivehs_i_5_n_0),
        .O(cl_txclkactivehs_reg_i_3_n_0),
        .S(hs_clk_state_r_reg));
  LUT6 #(
    .INIT(64'h77DDF7DD00800080)) 
    en_lp_01_cnt_i_1
       (.I0(en_lp_01_cnt_reg_0),
        .I1(cl_txclkactivehs_reg),
        .I2(s_level_out_d3),
        .I3(hs_clk_state_r_reg),
        .I4(en_lp_01_cnt_reg),
        .I5(en_lp_01_cnt_reg_1),
        .O(\cl_tx_state_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h1100001500000015)) 
    en_lp_10_cnt_i_2
       (.I0(hs_clk_state_r_reg),
        .I1(cl_txclkactivehs_reg),
        .I2(en_lp_10_cnt_i_3_n_0),
        .I3(hs_clk_state_r_reg_0),
        .I4(tx_cl_lp_cn_r_reg),
        .I5(en_lp_10_cnt_reg),
        .O(\cl_tx_state_reg[0] ));
  LUT2 #(
    .INIT(4'hB)) 
    en_lp_10_cnt_i_3
       (.I0(s_level_out_d3),
        .I1(tx_cl_lp_cn_r_reg_0),
        .O(en_lp_10_cnt_i_3_n_0));
  LUT4 #(
    .INIT(16'h0573)) 
    en_lp_11_cnt_i_4
       (.I0(s_level_out_d3),
        .I1(hs_clk_state_r_reg),
        .I2(cl_txclkactivehs_reg),
        .I3(tx_cl_lp_cn_r_reg),
        .O(s_level_out_d3_reg_2));
  LUT6 #(
    .INIT(64'hB888FFFFB8880000)) 
    hs_clk_state_r_i_1
       (.I0(cl_tx_state117_out),
        .I1(hs_clk_state_r_reg),
        .I2(hs_clk_state_r_reg_0),
        .I3(s_level_out_d3),
        .I4(hs_clk_state_r),
        .I5(hs_clk_state_r_reg_2),
        .O(\cl_tx_state_reg[0]_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    hs_clk_state_r_i_2
       (.I0(s_level_out_d3),
        .I1(time_out_zero),
        .I2(hs_clk_state_r_reg_1),
        .O(cl_tx_state117_out));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    hs_clk_state_r_i_5
       (.I0(s_level_out_d3),
        .I1(time_out_zero),
        .I2(hs_clk_state_r_reg_1),
        .I3(tx_cl_lp_cn_r_reg),
        .I4(cl_txclkactivehs_reg),
        .I5(hs_clk_state_r_reg_0),
        .O(s_level_out_d3_reg_1));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    reset_timer_r_i_1
       (.I0(reset_timer_r_i_2_n_0),
        .I1(hs_clk_state_r_reg_0),
        .I2(reset_timer_r_i_3_n_0),
        .I3(reset_timer_r),
        .I4(reset_timer_r_reg),
        .O(\cl_tx_state_reg[3]_0 ));
  LUT5 #(
    .INIT(32'h8ABABABA)) 
    reset_timer_r_i_2
       (.I0(reset_timer_r_i_5_n_0),
        .I1(cl_txclkactivehs_reg),
        .I2(tx_cl_lp_cn_r_reg),
        .I3(hs_clk_state_r_reg),
        .I4(tx_cl_lp_cn_r_reg_0),
        .O(reset_timer_r_i_2_n_0));
  LUT5 #(
    .INIT(32'h1555FFFF)) 
    reset_timer_r_i_3
       (.I0(tx_cl_lp_cn_r_reg),
        .I1(s_level_out_d3),
        .I2(en_lp_01_cnt_reg),
        .I3(hs_clk_state_r_reg),
        .I4(cl_txclkactivehs_reg),
        .O(reset_timer_r_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFCCFFFFF0CC00AA)) 
    reset_timer_r_i_5
       (.I0(s_level_out_d3),
        .I1(reset_timer_r_i_2_0),
        .I2(reset_timer_r_i_2_1),
        .I3(cl_txclkactivehs_reg),
        .I4(hs_clk_state_r_reg),
        .I5(tx_cl_lp_cn_r_reg),
        .O(reset_timer_r_i_5_n_0));
  LUT4 #(
    .INIT(16'hD0FF)) 
    reset_timer_r_i_8
       (.I0(s_level_out_d3),
        .I1(en_lp_01_cnt_reg),
        .I2(cl_txclkactivehs_reg),
        .I3(hs_clk_state_r_reg),
        .O(s_level_out_d3_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hBBB8FFFFBBB80000)) 
    tx_cl_lp_cn_r_i_1
       (.I0(tx_cl_lp_cn_r_reg_2),
        .I1(hs_clk_state_r_reg_0),
        .I2(tx_cl_lp_cn_r_reg),
        .I3(tx_cl_lp_cn_r_i_3_n_0),
        .I4(tx_cl_lp_cp_r),
        .I5(tx_cl_lp_cn),
        .O(\cl_tx_state_reg[3]_1 ));
  LUT6 #(
    .INIT(64'h77FF7700CFFFCFFF)) 
    tx_cl_lp_cn_r_i_3
       (.I0(en_lp_01_cnt_reg),
        .I1(s_level_out_d3),
        .I2(tx_cl_lp_cn_r_reg_0),
        .I3(cl_txclkactivehs_reg),
        .I4(tx_cl_lp_cn_r_reg_1),
        .I5(hs_clk_state_r_reg),
        .O(tx_cl_lp_cn_r_i_3_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    tx_cl_lp_cp_r_i_1
       (.I0(tx_cl_lp_cp_r_reg_0),
        .I1(hs_clk_state_r_reg_0),
        .I2(tx_cl_lp_cp_r_i_3_n_0),
        .I3(tx_cl_lp_cp_r),
        .I4(tx_cl_lp_cp),
        .O(\cl_tx_state_reg[3]_2 ));
  LUT6 #(
    .INIT(64'hAAFBFFFBEEFBFFFB)) 
    tx_cl_lp_cp_r_i_3
       (.I0(tx_cl_lp_cn_r_reg),
        .I1(hs_clk_state_r_reg),
        .I2(tx_cl_lp_cn_r_reg_1),
        .I3(cl_txclkactivehs_reg),
        .I4(s_level_out_d3),
        .I5(en_lp_01_cnt_reg),
        .O(tx_cl_lp_cp_r_i_3_n_0));
  LUT6 #(
    .INIT(64'h00003333BFBFFF0F)) 
    tx_cl_lp_cp_r_i_7
       (.I0(en_lp_01_cnt_reg),
        .I1(s_level_out_d3),
        .I2(hs_clk_state_r_reg),
        .I3(tx_cl_lp_cn_r_reg_1),
        .I4(cl_txclkactivehs_reg),
        .I5(tx_cl_lp_cn_r_reg),
        .O(tx_cl_lp_cp_r_i_7_n_0));
  MUXF7 tx_cl_lp_cp_r_reg_i_4
       (.I0(tx_cl_lp_cp_r_i_7_n_0),
        .I1(tx_cl_lp_cp_r_reg),
        .O(tx_cl_lp_cp_r),
        .S(hs_clk_state_r_reg_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_88
   (out,
    \cl_tx_state_reg[3] ,
    \cl_tx_state_reg[2] ,
    \cl_tx_state_reg[0] ,
    s_level_out_d3_reg_0,
    \cl_tx_state_reg[0]_0 ,
    hs_clk_state_r,
    s_level_out_d3_reg_1,
    \cl_tx_state_reg[2]_0 ,
    \cl_tx_state_reg[0]_1 ,
    core_rst,
    cl_txrequesths_negedge_r,
    core_clk,
    start_clkpost_r_reg,
    \cl_tx_state_reg[1] ,
    start_clkpost_r_reg_0,
    \cl_tx_state_reg[2]_1 ,
    \cl_tx_state_reg[0]_2 ,
    start_clkpost_r_reg_1,
    \cl_tx_state_reg[2]_2 ,
    start_clkpost_r_reg_2,
    \cl_tx_state[3]_i_2 ,
    \cl_tx_state[3]_i_2_0 ,
    \cl_tx_state_reg[0]_3 ,
    cl_tx_state117_out,
    cl_tx_state119_out,
    hs_clk_state_r_reg,
    start_clkpost_r_reg_3,
    start_clkpost_r_reg_4,
    dl_hs_exit_done_i);
  output out;
  output \cl_tx_state_reg[3] ;
  output \cl_tx_state_reg[2] ;
  output \cl_tx_state_reg[0] ;
  output s_level_out_d3_reg_0;
  output \cl_tx_state_reg[0]_0 ;
  output hs_clk_state_r;
  output s_level_out_d3_reg_1;
  output \cl_tx_state_reg[2]_0 ;
  output \cl_tx_state_reg[0]_1 ;
  input core_rst;
  input cl_txrequesths_negedge_r;
  input core_clk;
  input start_clkpost_r_reg;
  input \cl_tx_state_reg[1] ;
  input start_clkpost_r_reg_0;
  input \cl_tx_state_reg[2]_1 ;
  input \cl_tx_state_reg[0]_2 ;
  input start_clkpost_r_reg_1;
  input \cl_tx_state_reg[2]_2 ;
  input start_clkpost_r_reg_2;
  input \cl_tx_state[3]_i_2 ;
  input \cl_tx_state[3]_i_2_0 ;
  input \cl_tx_state_reg[0]_3 ;
  input cl_tx_state117_out;
  input cl_tx_state119_out;
  input hs_clk_state_r_reg;
  input start_clkpost_r_reg_3;
  input start_clkpost_r_reg_4;
  input [3:0]dl_hs_exit_done_i;

  wire cl_tx_state117_out;
  wire cl_tx_state119_out;
  wire \cl_tx_state[1]_i_3_n_0 ;
  wire \cl_tx_state[1]_i_5_n_0 ;
  wire \cl_tx_state[2]_i_4_n_0 ;
  wire \cl_tx_state[3]_i_2 ;
  wire \cl_tx_state[3]_i_2_0 ;
  wire \cl_tx_state_reg[0] ;
  wire \cl_tx_state_reg[0]_0 ;
  wire \cl_tx_state_reg[0]_1 ;
  wire \cl_tx_state_reg[0]_2 ;
  wire \cl_tx_state_reg[0]_3 ;
  wire \cl_tx_state_reg[1] ;
  wire \cl_tx_state_reg[2] ;
  wire \cl_tx_state_reg[2]_0 ;
  wire \cl_tx_state_reg[2]_1 ;
  wire \cl_tx_state_reg[2]_2 ;
  wire \cl_tx_state_reg[3] ;
  wire cl_txrequesths_negedge_r;
  wire core_clk;
  wire core_rst;
  wire [3:0]dl_hs_exit_done_i;
  wire hs_clk_state_r;
  wire hs_clk_state_r_i_4_n_0;
  wire hs_clk_state_r_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire start_clkpost_r_i_2_n_0;
  wire start_clkpost_r_reg;
  wire start_clkpost_r_reg_0;
  wire start_clkpost_r_reg_1;
  wire start_clkpost_r_reg_2;
  wire start_clkpost_r_reg_3;
  wire start_clkpost_r_reg_4;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hEE55EE0050550055)) 
    \cl_tx_state[0]_i_2 
       (.I0(\cl_tx_state_reg[2]_2 ),
        .I1(s_level_out_d3),
        .I2(\cl_tx_state_reg[0]_3 ),
        .I3(start_clkpost_r_reg_0),
        .I4(\cl_tx_state_reg[0]_2 ),
        .I5(start_clkpost_r_reg_1),
        .O(\cl_tx_state_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h8BBBBBBBBB888888)) 
    \cl_tx_state[1]_i_3 
       (.I0(\cl_tx_state[1]_i_5_n_0 ),
        .I1(start_clkpost_r_reg_0),
        .I2(\cl_tx_state_reg[2]_1 ),
        .I3(\cl_tx_state_reg[0]_2 ),
        .I4(start_clkpost_r_reg_1),
        .I5(\cl_tx_state_reg[2]_2 ),
        .O(\cl_tx_state[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0F400F4F0F4F0F4F)) 
    \cl_tx_state[1]_i_5 
       (.I0(s_level_out_d3_reg_0),
        .I1(s_level_out_d3),
        .I2(start_clkpost_r_reg_1),
        .I3(\cl_tx_state_reg[2]_2 ),
        .I4(\cl_tx_state_reg[0]_3 ),
        .I5(\cl_tx_state_reg[0]_2 ),
        .O(\cl_tx_state[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hB88888B8888888B8)) 
    \cl_tx_state[2]_i_2 
       (.I0(\cl_tx_state[2]_i_4_n_0 ),
        .I1(start_clkpost_r_reg_0),
        .I2(start_clkpost_r_reg_1),
        .I3(\cl_tx_state_reg[0]_2 ),
        .I4(\cl_tx_state_reg[2]_2 ),
        .I5(\cl_tx_state_reg[2]_1 ),
        .O(\cl_tx_state_reg[2] ));
  LUT6 #(
    .INIT(64'h0F004F4F0F004040)) 
    \cl_tx_state[2]_i_4 
       (.I0(s_level_out_d3_reg_0),
        .I1(s_level_out_d3),
        .I2(start_clkpost_r_reg_1),
        .I3(cl_tx_state117_out),
        .I4(\cl_tx_state_reg[2]_2 ),
        .I5(cl_tx_state119_out),
        .O(\cl_tx_state[2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \cl_tx_state[3]_i_10 
       (.I0(s_level_out_d3),
        .I1(dl_hs_exit_done_i[1]),
        .I2(dl_hs_exit_done_i[0]),
        .I3(dl_hs_exit_done_i[3]),
        .I4(dl_hs_exit_done_i[2]),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'hF000F000B000BF00)) 
    \cl_tx_state[3]_i_3 
       (.I0(s_level_out_d3_reg_0),
        .I1(s_level_out_d3),
        .I2(start_clkpost_r_reg_0),
        .I3(start_clkpost_r_reg_1),
        .I4(\cl_tx_state_reg[0]_2 ),
        .I5(\cl_tx_state_reg[2]_2 ),
        .O(s_level_out_d3_reg_1));
  LUT6 #(
    .INIT(64'hBB8BFFFFBB8B0000)) 
    \cl_tx_state[3]_i_8 
       (.I0(start_clkpost_r_reg_2),
        .I1(\cl_tx_state_reg[2]_2 ),
        .I2(\cl_tx_state[3]_i_2_0 ),
        .I3(s_level_out_d3),
        .I4(start_clkpost_r_reg_1),
        .I5(\cl_tx_state[3]_i_2 ),
        .O(\cl_tx_state_reg[0]_0 ));
  MUXF7 \cl_tx_state_reg[1]_i_2 
       (.I0(\cl_tx_state[1]_i_3_n_0 ),
        .I1(\cl_tx_state_reg[1] ),
        .O(\cl_tx_state_reg[3] ),
        .S(start_clkpost_r_reg));
  LUT6 #(
    .INIT(64'h0300030380C080C0)) 
    hs_clk_state_r_i_4
       (.I0(s_level_out_d3),
        .I1(start_clkpost_r_reg_1),
        .I2(start_clkpost_r_reg_0),
        .I3(\cl_tx_state[3]_i_2_0 ),
        .I4(\cl_tx_state_reg[0]_2 ),
        .I5(start_clkpost_r_reg),
        .O(hs_clk_state_r_i_4_n_0));
  MUXF7 hs_clk_state_r_reg_i_3
       (.I0(hs_clk_state_r_i_4_n_0),
        .I1(hs_clk_state_r_reg),
        .O(hs_clk_state_r),
        .S(\cl_tx_state_reg[2]_2 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    reset_timer_r_i_7
       (.I0(start_clkpost_r_reg_2),
        .I1(\cl_tx_state_reg[2]_2 ),
        .I2(s_level_out_d3_reg_0),
        .I3(start_clkpost_r_reg_1),
        .I4(\cl_tx_state[3]_i_2 ),
        .O(\cl_tx_state_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths_negedge_r),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hFBEFFFFF08200000)) 
    start_clkpost_r_i_1
       (.I0(start_clkpost_r_i_2_n_0),
        .I1(start_clkpost_r_reg_0),
        .I2(start_clkpost_r_reg),
        .I3(start_clkpost_r_reg_1),
        .I4(start_clkpost_r_reg_3),
        .I5(start_clkpost_r_reg_4),
        .O(\cl_tx_state_reg[2]_0 ));
  LUT5 #(
    .INIT(32'h2F202F2F)) 
    start_clkpost_r_i_2
       (.I0(start_clkpost_r_reg_2),
        .I1(start_clkpost_r_reg),
        .I2(\cl_tx_state_reg[2]_2 ),
        .I3(s_level_out_d3_reg_0),
        .I4(start_clkpost_r_reg_1),
        .O(start_clkpost_r_i_2_n_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_89
   (out,
    s_level_out_d3_reg_0,
    \cl_tx_state_reg[1] ,
    \cl_tx_state_reg[2] ,
    lp_11_r_reg,
    \cl_tx_state_reg[1]_0 ,
    \cl_tx_state_reg[3] ,
    lp_10_r_reg,
    core_rst,
    cl_txulpsclk,
    core_clk,
    en_lp_10_cnt_reg,
    en_lp_10_cnt_reg_0,
    en_lp_10_cnt_reg_1,
    \cl_tx_state_reg[0] ,
    \cl_tx_state_reg[0]_0 ,
    en_lp_11_cnt_reg,
    cl_stopstate_reg_i_3,
    tx_cl_lp_cn_r_reg,
    tx_cl_lp_cp_r_reg_i_4,
    tx_cl_lp_cp_r_i_8_0,
    en_lp_10_cnt_reg_2,
    en_lp_10_cnt_reg_3,
    en_lp_11_cnt_reg_0,
    en_lp_11_cnt_reg_1,
    en_lp_11_cnt_reg_2,
    en_lp_11_cnt_reg_3);
  output out;
  output s_level_out_d3_reg_0;
  output \cl_tx_state_reg[1] ;
  output \cl_tx_state_reg[2] ;
  output lp_11_r_reg;
  output \cl_tx_state_reg[1]_0 ;
  output \cl_tx_state_reg[3] ;
  output lp_10_r_reg;
  input core_rst;
  input cl_txulpsclk;
  input core_clk;
  input en_lp_10_cnt_reg;
  input en_lp_10_cnt_reg_0;
  input en_lp_10_cnt_reg_1;
  input \cl_tx_state_reg[0] ;
  input \cl_tx_state_reg[0]_0 ;
  input en_lp_11_cnt_reg;
  input cl_stopstate_reg_i_3;
  input tx_cl_lp_cn_r_reg;
  input tx_cl_lp_cp_r_reg_i_4;
  input tx_cl_lp_cp_r_i_8_0;
  input en_lp_10_cnt_reg_2;
  input en_lp_10_cnt_reg_3;
  input en_lp_11_cnt_reg_0;
  input en_lp_11_cnt_reg_1;
  input en_lp_11_cnt_reg_2;
  input en_lp_11_cnt_reg_3;

  wire cl_stopstate_i_10_n_0;
  wire cl_stopstate_reg_i_3;
  wire \cl_tx_state_reg[0] ;
  wire \cl_tx_state_reg[0]_0 ;
  wire \cl_tx_state_reg[1] ;
  wire \cl_tx_state_reg[1]_0 ;
  wire \cl_tx_state_reg[2] ;
  wire \cl_tx_state_reg[3] ;
  wire cl_txulpsclk;
  wire core_clk;
  wire core_rst;
  wire en_lp_10_cnt_reg;
  wire en_lp_10_cnt_reg_0;
  wire en_lp_10_cnt_reg_1;
  wire en_lp_10_cnt_reg_2;
  wire en_lp_10_cnt_reg_3;
  wire en_lp_11_cnt_i_3_n_0;
  wire en_lp_11_cnt_i_5_n_0;
  wire en_lp_11_cnt_reg;
  wire en_lp_11_cnt_reg_0;
  wire en_lp_11_cnt_reg_1;
  wire en_lp_11_cnt_reg_2;
  wire en_lp_11_cnt_reg_3;
  wire lp_10_r_reg;
  wire lp_11_r_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_cl_lp_cn_r_reg;
  wire tx_cl_lp_cp_r_i_8_0;
  wire tx_cl_lp_cp_r_i_9_n_0;
  wire tx_cl_lp_cp_r_reg_i_4;

  assign out = s_level_out_d3;
  LUT2 #(
    .INIT(4'h1)) 
    cl_stopstate_i_10
       (.I0(en_lp_10_cnt_reg),
        .I1(s_level_out_d3),
        .O(cl_stopstate_i_10_n_0));
  LUT6 #(
    .INIT(64'hCF0000A0C00000A0)) 
    cl_stopstate_i_7
       (.I0(cl_stopstate_i_10_n_0),
        .I1(cl_stopstate_reg_i_3),
        .I2(en_lp_10_cnt_reg_0),
        .I3(en_lp_10_cnt_reg_1),
        .I4(\cl_tx_state_reg[0] ),
        .I5(en_lp_11_cnt_reg),
        .O(lp_11_r_reg));
  LUT6 #(
    .INIT(64'h0050FFC00050FFCF)) 
    \cl_tx_state[0]_i_3 
       (.I0(s_level_out_d3),
        .I1(en_lp_10_cnt_reg),
        .I2(en_lp_10_cnt_reg_0),
        .I3(en_lp_10_cnt_reg_1),
        .I4(\cl_tx_state_reg[0] ),
        .I5(\cl_tx_state_reg[0]_0 ),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'h8C88FFFF8C880000)) 
    en_lp_10_cnt_i_1
       (.I0(en_lp_10_cnt_reg_1),
        .I1(s_level_out_d3),
        .I2(en_lp_10_cnt_reg),
        .I3(en_lp_10_cnt_reg_0),
        .I4(en_lp_10_cnt_reg_2),
        .I5(en_lp_10_cnt_reg_3),
        .O(\cl_tx_state_reg[1]_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    en_lp_10_cnt_i_4
       (.I0(en_lp_10_cnt_reg),
        .I1(s_level_out_d3),
        .O(lp_10_r_reg));
  LUT5 #(
    .INIT(32'hBABF8A80)) 
    en_lp_11_cnt_i_1
       (.I0(en_lp_11_cnt_reg_0),
        .I1(en_lp_11_cnt_i_3_n_0),
        .I2(en_lp_11_cnt_reg_1),
        .I3(en_lp_11_cnt_reg_2),
        .I4(en_lp_11_cnt_reg_3),
        .O(\cl_tx_state_reg[3] ));
  LUT5 #(
    .INIT(32'hBA8A8A8A)) 
    en_lp_11_cnt_i_3
       (.I0(en_lp_11_cnt_i_5_n_0),
        .I1(en_lp_10_cnt_reg_0),
        .I2(en_lp_10_cnt_reg_1),
        .I3(\cl_tx_state_reg[0] ),
        .I4(en_lp_11_cnt_reg),
        .O(en_lp_11_cnt_i_3_n_0));
  LUT6 #(
    .INIT(64'hFF22220200222202)) 
    en_lp_11_cnt_i_5
       (.I0(en_lp_10_cnt_reg_0),
        .I1(s_level_out_d3),
        .I2(en_lp_10_cnt_reg),
        .I3(\cl_tx_state_reg[0] ),
        .I4(en_lp_10_cnt_reg_1),
        .I5(cl_stopstate_reg_i_3),
        .O(en_lp_11_cnt_i_5_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txulpsclk),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hABFBFFFFABFB0000)) 
    tx_cl_lp_cn_r_i_2
       (.I0(en_lp_10_cnt_reg_1),
        .I1(en_lp_10_cnt_reg),
        .I2(\cl_tx_state_reg[0] ),
        .I3(s_level_out_d3),
        .I4(en_lp_10_cnt_reg_0),
        .I5(tx_cl_lp_cn_r_reg),
        .O(\cl_tx_state_reg[1] ));
  LUT6 #(
    .INIT(64'hBA8ABABABA8A8A8A)) 
    tx_cl_lp_cp_r_i_8
       (.I0(tx_cl_lp_cp_r_i_9_n_0),
        .I1(en_lp_10_cnt_reg_0),
        .I2(en_lp_10_cnt_reg_1),
        .I3(en_lp_11_cnt_reg),
        .I4(\cl_tx_state_reg[0] ),
        .I5(tx_cl_lp_cp_r_reg_i_4),
        .O(\cl_tx_state_reg[2] ));
  LUT6 #(
    .INIT(64'h00220022AAA222A2)) 
    tx_cl_lp_cp_r_i_9
       (.I0(en_lp_10_cnt_reg_0),
        .I1(s_level_out_d3),
        .I2(en_lp_10_cnt_reg),
        .I3(\cl_tx_state_reg[0] ),
        .I4(tx_cl_lp_cp_r_i_8_0),
        .I5(en_lp_10_cnt_reg_1),
        .O(tx_cl_lp_cp_r_i_9_n_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_9
   (out,
    tx_div4_clk);
  output out;
  input tx_div4_clk;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_90
   (out,
    reset_timer_r,
    cl_tx_state,
    \cl_tx_state_reg[1] ,
    s_level_out_d3_reg_0,
    \cl_tx_state_reg[3] ,
    \cl_tx_state_reg[2] ,
    \cl_tx_state_reg[0] ,
    core_rst,
    cl_txulpsexit,
    core_clk,
    reset_timer_r_reg,
    \cl_tx_state_reg[3]_0 ,
    reset_timer_r_reg_0,
    \cl_tx_state_reg[2]_0 ,
    reset_timer_r_reg_1,
    \cl_tx_state_reg[3]_1 ,
    \cl_tx_state_reg[3]_2 ,
    cl_ulpsactivenot_reg,
    \cl_tx_state_reg[0]_0 ,
    cl_ulpsactivenot_reg_0,
    \cl_tx_state[3]_i_2_0 ,
    tx_cl_lp_cp_r_reg,
    tx_cl_lp_cp_r_reg_0,
    cl_ulpsactivenot_reg_1,
    cl_ulpsactivenot,
    \cl_tx_state_reg[3]_3 ,
    \cl_tx_state_reg[3]_4 ,
    \cl_tx_state_reg[0]_1 ,
    \cl_tx_state_reg[2]_1 ,
    \cl_tx_state_reg[2]_2 ,
    \cl_tx_state_reg[0]_2 ,
    \cl_tx_state_reg[0]_3 );
  output out;
  output reset_timer_r;
  output cl_tx_state;
  output \cl_tx_state_reg[1] ;
  output s_level_out_d3_reg_0;
  output \cl_tx_state_reg[3] ;
  output \cl_tx_state_reg[2] ;
  output \cl_tx_state_reg[0] ;
  input core_rst;
  input cl_txulpsexit;
  input core_clk;
  input reset_timer_r_reg;
  input \cl_tx_state_reg[3]_0 ;
  input reset_timer_r_reg_0;
  input \cl_tx_state_reg[2]_0 ;
  input reset_timer_r_reg_1;
  input \cl_tx_state_reg[3]_1 ;
  input \cl_tx_state_reg[3]_2 ;
  input cl_ulpsactivenot_reg;
  input \cl_tx_state_reg[0]_0 ;
  input cl_ulpsactivenot_reg_0;
  input \cl_tx_state[3]_i_2_0 ;
  input tx_cl_lp_cp_r_reg;
  input tx_cl_lp_cp_r_reg_0;
  input cl_ulpsactivenot_reg_1;
  input cl_ulpsactivenot;
  input \cl_tx_state_reg[3]_3 ;
  input \cl_tx_state_reg[3]_4 ;
  input \cl_tx_state_reg[0]_1 ;
  input \cl_tx_state_reg[2]_1 ;
  input \cl_tx_state_reg[2]_2 ;
  input \cl_tx_state_reg[0]_2 ;
  input \cl_tx_state_reg[0]_3 ;

  wire cl_tx_state;
  wire \cl_tx_state[3]_i_2_0 ;
  wire \cl_tx_state[3]_i_6_n_0 ;
  wire \cl_tx_state_reg[0] ;
  wire \cl_tx_state_reg[0]_0 ;
  wire \cl_tx_state_reg[0]_1 ;
  wire \cl_tx_state_reg[0]_2 ;
  wire \cl_tx_state_reg[0]_3 ;
  wire \cl_tx_state_reg[1] ;
  wire \cl_tx_state_reg[2] ;
  wire \cl_tx_state_reg[2]_0 ;
  wire \cl_tx_state_reg[2]_1 ;
  wire \cl_tx_state_reg[2]_2 ;
  wire \cl_tx_state_reg[3] ;
  wire \cl_tx_state_reg[3]_0 ;
  wire \cl_tx_state_reg[3]_1 ;
  wire \cl_tx_state_reg[3]_2 ;
  wire \cl_tx_state_reg[3]_3 ;
  wire \cl_tx_state_reg[3]_4 ;
  wire cl_txulpsexit;
  wire cl_ulpsactivenot;
  wire cl_ulpsactivenot_i_4_n_0;
  wire cl_ulpsactivenot_reg;
  wire cl_ulpsactivenot_reg_0;
  wire cl_ulpsactivenot_reg_1;
  wire core_clk;
  wire core_rst;
  wire reset_timer_r;
  wire reset_timer_r_i_6_n_0;
  wire reset_timer_r_reg;
  wire reset_timer_r_reg_0;
  wire reset_timer_r_reg_1;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_cl_lp_cp_r_i_5_n_0;
  wire tx_cl_lp_cp_r_reg;
  wire tx_cl_lp_cp_r_reg_0;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \cl_tx_state[0]_i_1 
       (.I0(\cl_tx_state_reg[0]_0 ),
        .I1(cl_tx_state),
        .I2(\cl_tx_state_reg[0]_2 ),
        .I3(\cl_tx_state_reg[3]_0 ),
        .I4(\cl_tx_state_reg[0]_3 ),
        .I5(\cl_tx_state_reg[0]_1 ),
        .O(\cl_tx_state_reg[0] ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \cl_tx_state[2]_i_1 
       (.I0(\cl_tx_state_reg[2]_0 ),
        .I1(cl_tx_state),
        .I2(\cl_tx_state_reg[2]_1 ),
        .I3(\cl_tx_state_reg[3]_0 ),
        .I4(\cl_tx_state_reg[2]_2 ),
        .I5(\cl_tx_state_reg[0]_1 ),
        .O(\cl_tx_state_reg[2] ));
  LUT5 #(
    .INIT(32'h0000EA62)) 
    \cl_tx_state[3]_i_1 
       (.I0(\cl_tx_state_reg[3]_0 ),
        .I1(cl_tx_state),
        .I2(\cl_tx_state_reg[3]_3 ),
        .I3(\cl_tx_state_reg[3]_4 ),
        .I4(\cl_tx_state_reg[0]_1 ),
        .O(\cl_tx_state_reg[3] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \cl_tx_state[3]_i_2 
       (.I0(\cl_tx_state[3]_i_6_n_0 ),
        .I1(reset_timer_r_reg),
        .I2(\cl_tx_state_reg[3]_0 ),
        .I3(\cl_tx_state_reg[3]_1 ),
        .I4(\cl_tx_state_reg[2]_0 ),
        .I5(\cl_tx_state_reg[3]_2 ),
        .O(cl_tx_state));
  LUT6 #(
    .INIT(64'hB833B800BBFFBBFF)) 
    \cl_tx_state[3]_i_6 
       (.I0(\cl_tx_state[3]_i_2_0 ),
        .I1(tx_cl_lp_cp_r_reg),
        .I2(s_level_out_d3),
        .I3(\cl_tx_state_reg[0]_0 ),
        .I4(cl_ulpsactivenot_reg_0),
        .I5(cl_ulpsactivenot_reg),
        .O(\cl_tx_state[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h8BFFFFFF8B000000)) 
    cl_ulpsactivenot_i_2
       (.I0(s_level_out_d3),
        .I1(\cl_tx_state_reg[0]_0 ),
        .I2(\cl_tx_state_reg[3]_0 ),
        .I3(cl_ulpsactivenot_reg_1),
        .I4(cl_ulpsactivenot_i_4_n_0),
        .I5(cl_ulpsactivenot),
        .O(s_level_out_d3_reg_0));
  LUT5 #(
    .INIT(32'h8F800F0F)) 
    cl_ulpsactivenot_i_4
       (.I0(s_level_out_d3),
        .I1(cl_ulpsactivenot_reg),
        .I2(\cl_tx_state_reg[0]_0 ),
        .I3(cl_ulpsactivenot_reg_0),
        .I4(\cl_tx_state_reg[2]_0 ),
        .O(cl_ulpsactivenot_i_4_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    reset_timer_r_i_4
       (.I0(reset_timer_r_i_6_n_0),
        .I1(reset_timer_r_reg),
        .I2(\cl_tx_state_reg[3]_0 ),
        .I3(reset_timer_r_reg_0),
        .I4(\cl_tx_state_reg[2]_0 ),
        .I5(reset_timer_r_reg_1),
        .O(reset_timer_r));
  LUT5 #(
    .INIT(32'h40405A5F)) 
    reset_timer_r_i_6
       (.I0(tx_cl_lp_cp_r_reg),
        .I1(s_level_out_d3),
        .I2(\cl_tx_state_reg[0]_0 ),
        .I3(cl_ulpsactivenot_reg_0),
        .I4(cl_ulpsactivenot_reg),
        .O(reset_timer_r_i_6_n_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txulpsexit),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hFBABFFFFFBAB0000)) 
    tx_cl_lp_cp_r_i_2
       (.I0(tx_cl_lp_cp_r_reg),
        .I1(cl_ulpsactivenot_reg_0),
        .I2(\cl_tx_state_reg[0]_0 ),
        .I3(tx_cl_lp_cp_r_i_5_n_0),
        .I4(\cl_tx_state_reg[2]_0 ),
        .I5(tx_cl_lp_cp_r_reg_0),
        .O(\cl_tx_state_reg[1] ));
  LUT2 #(
    .INIT(4'hB)) 
    tx_cl_lp_cp_r_i_5
       (.I0(s_level_out_d3),
        .I1(cl_ulpsactivenot_reg),
        .O(tx_cl_lp_cp_r_i_5_n_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_91
   (cl_txrequesths_0,
    s_level_out_d1_cdc_to_reg_0,
    oserdes_clkdiv_in,
    cl_txrequesths,
    cl_txrequesths_r,
    out,
    cl_txrequesths_negedge_r);
  output cl_txrequesths_0;
  input s_level_out_d1_cdc_to_reg_0;
  input oserdes_clkdiv_in;
  input cl_txrequesths;
  input cl_txrequesths_r;
  input out;
  input cl_txrequesths_negedge_r;

  wire cl_txrequesths;
  wire cl_txrequesths_0;
  wire cl_txrequesths_negedge_r;
  wire cl_txrequesths_r;
  wire oserdes_clkdiv_in;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT5 #(
    .INIT(32'h44F44444)) 
    cl_txrequesths_negedge_r_i_1
       (.I0(cl_txrequesths),
        .I1(cl_txrequesths_r),
        .I2(s_level_out_d3),
        .I3(out),
        .I4(cl_txrequesths_negedge_r),
        .O(cl_txrequesths_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_92
   (out,
    init_done_byteclk_pos_r0,
    s_level_out_d1_cdc_to_reg_0,
    oserdes_clkdiv_in,
    init_done_byteclk_r);
  output out;
  output init_done_byteclk_pos_r0;
  input s_level_out_d1_cdc_to_reg_0;
  input oserdes_clkdiv_in;
  input init_done_byteclk_r;

  wire init_done_byteclk_pos_r0;
  wire init_done_byteclk_r;
  wire oserdes_clkdiv_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT2 #(
    .INIT(4'h2)) 
    init_done_byteclk_pos_r_i_1
       (.I0(s_level_out_d3),
        .I1(init_done_byteclk_r),
        .O(init_done_byteclk_pos_r0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_93
   (out,
    s_level_out_d3_reg_0,
    s_level_out_d1_cdc_to_reg_0,
    oserdes_clkdiv_in,
    CO,
    time_out_post_reg);
  output out;
  output s_level_out_d3_reg_0;
  input s_level_out_d1_cdc_to_reg_0;
  input oserdes_clkdiv_in;
  input [0:0]CO;
  input time_out_post_reg;

  wire [0:0]CO;
  wire oserdes_clkdiv_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire time_out_post_reg;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hC8)) 
    time_out_post_i_1
       (.I0(CO),
        .I1(s_level_out_d3),
        .I2(time_out_post_reg),
        .O(s_level_out_d3_reg_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_94
   (out,
    xmit_clk_r_reg,
    xmit_clk_r0,
    prepare_zero_cnt,
    s_level_out_d1_cdc_to_reg_0,
    oserdes_clkdiv_in,
    xmit_clk_r,
    cl_txrequesths_r2,
    CO,
    \prepare_zero_cnt_reg[31] ,
    \prepare_zero_cnt_reg[31]_0 ,
    init_done_byteclk_pos_r,
    start_clkzero_byteclk_sync_r);
  output out;
  output xmit_clk_r_reg;
  output xmit_clk_r0;
  output prepare_zero_cnt;
  input s_level_out_d1_cdc_to_reg_0;
  input oserdes_clkdiv_in;
  input xmit_clk_r;
  input cl_txrequesths_r2;
  input [0:0]CO;
  input \prepare_zero_cnt_reg[31] ;
  input \prepare_zero_cnt_reg[31]_0 ;
  input init_done_byteclk_pos_r;
  input start_clkzero_byteclk_sync_r;

  wire [0:0]CO;
  wire cl_txrequesths_r2;
  wire init_done_byteclk_pos_r;
  wire oserdes_clkdiv_in;
  wire prepare_zero_cnt;
  wire \prepare_zero_cnt_reg[31] ;
  wire \prepare_zero_cnt_reg[31]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire start_clkzero_byteclk_sync_r;
  wire xmit_clk_r;
  wire xmit_clk_r0;
  wire xmit_clk_r_reg;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT5 #(
    .INIT(32'hFEFEFFFE)) 
    \prepare_zero_cnt[0]_i_1 
       (.I0(\prepare_zero_cnt_reg[31] ),
        .I1(\prepare_zero_cnt_reg[31]_0 ),
        .I2(init_done_byteclk_pos_r),
        .I3(s_level_out_d3),
        .I4(start_clkzero_byteclk_sync_r),
        .O(xmit_clk_r0));
  LUT3 #(
    .INIT(8'h08)) 
    \prepare_zero_cnt[0]_i_2 
       (.I0(cl_txrequesths_r2),
        .I1(s_level_out_d3),
        .I2(CO),
        .O(prepare_zero_cnt));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0000EAAA)) 
    xmit_clk_r_i_1
       (.I0(xmit_clk_r),
        .I1(cl_txrequesths_r2),
        .I2(s_level_out_d3),
        .I3(CO),
        .I4(xmit_clk_r0),
        .O(xmit_clk_r_reg));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_95
   (out,
    time_out_trail_reg,
    clear_0,
    s_level_out_d3_reg_0,
    time_out_hsexit_reg,
    trail_count_reg_0_sp_1,
    core_rst,
    time_out_post_r2,
    core_clk,
    time_out_trail_reg_0,
    CO,
    \trail_count_reg[9] ,
    \trail_count_reg[9]_0 ,
    \trail_count_reg[9]_1 ,
    \trail_count_reg[9]_2 ,
    start_clkpost_r_reg,
    start_clkpost_r_reg_0,
    start_clkpost_r_reg_1,
    \cl_tx_state[3]_i_2 ,
    \cl_tx_state[3]_i_2_0 ,
    trail_count_reg);
  output out;
  output time_out_trail_reg;
  output clear_0;
  output s_level_out_d3_reg_0;
  output time_out_hsexit_reg;
  output trail_count_reg_0_sp_1;
  input core_rst;
  input time_out_post_r2;
  input core_clk;
  input time_out_trail_reg_0;
  input [0:0]CO;
  input \trail_count_reg[9] ;
  input \trail_count_reg[9]_0 ;
  input \trail_count_reg[9]_1 ;
  input \trail_count_reg[9]_2 ;
  input start_clkpost_r_reg;
  input start_clkpost_r_reg_0;
  input start_clkpost_r_reg_1;
  input \cl_tx_state[3]_i_2 ;
  input \cl_tx_state[3]_i_2_0 ;
  input [0:0]trail_count_reg;

  wire [0:0]CO;
  wire \cl_tx_state[3]_i_2 ;
  wire \cl_tx_state[3]_i_2_0 ;
  wire clear_0;
  wire core_clk;
  wire core_rst;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire start_clkpost_r_reg;
  wire start_clkpost_r_reg_0;
  wire start_clkpost_r_reg_1;
  wire time_out_hsexit_reg;
  wire time_out_post_r2;
  wire time_out_trail1;
  wire time_out_trail_reg;
  wire time_out_trail_reg_0;
  wire [0:0]trail_count_reg;
  wire \trail_count_reg[9] ;
  wire \trail_count_reg[9]_0 ;
  wire \trail_count_reg[9]_1 ;
  wire \trail_count_reg[9]_2 ;
  wire trail_count_reg_0_sn_1;

  assign out = s_level_out_d3;
  assign trail_count_reg_0_sp_1 = trail_count_reg_0_sn_1;
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \cl_tx_state[3]_i_7 
       (.I0(\cl_tx_state[3]_i_2 ),
        .I1(time_out_trail_reg_0),
        .I2(\trail_count_reg[9] ),
        .I3(s_level_out_d3),
        .I4(\trail_count_reg[9]_2 ),
        .I5(\cl_tx_state[3]_i_2_0 ),
        .O(time_out_hsexit_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(time_out_post_r2),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hAFA0C0C0AFA0CFCF)) 
    start_clkpost_r_i_3
       (.I0(start_clkpost_r_reg),
        .I1(s_level_out_d3),
        .I2(\trail_count_reg[9]_2 ),
        .I3(start_clkpost_r_reg_0),
        .I4(\trail_count_reg[9] ),
        .I5(start_clkpost_r_reg_1),
        .O(s_level_out_d3_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    time_out_trail_i_1
       (.I0(time_out_trail_reg_0),
        .I1(CO),
        .I2(time_out_trail1),
        .O(time_out_trail_reg));
  LUT5 #(
    .INIT(32'hFFFF1000)) 
    time_out_trail_i_2
       (.I0(\trail_count_reg[9]_2 ),
        .I1(\trail_count_reg[9]_1 ),
        .I2(\trail_count_reg[9]_0 ),
        .I3(\trail_count_reg[9] ),
        .I4(s_level_out_d3),
        .O(time_out_trail1));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'h09)) 
    \trail_count[0]_i_1 
       (.I0(trail_count_reg),
        .I1(CO),
        .I2(clear_0),
        .O(trail_count_reg_0_sn_1));
  LUT5 #(
    .INIT(32'h55555515)) 
    \trail_count[9]_i_1 
       (.I0(s_level_out_d3),
        .I1(\trail_count_reg[9] ),
        .I2(\trail_count_reg[9]_0 ),
        .I3(\trail_count_reg[9]_1 ),
        .I4(\trail_count_reg[9]_2 ),
        .O(clear_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell_96
   (out,
    s_level_out_d3_reg_0,
    \cl_tx_state_reg[2] ,
    core_rst,
    s_level_out_d1_cdc_to_reg_0,
    core_clk,
    time_out_zero,
    \cl_tx_state[3]_i_8 ,
    \cl_tx_state[3]_i_8_0 ,
    cl_txclkactivehs_reg,
    cl_txclkactivehs_reg_0);
  output out;
  output s_level_out_d3_reg_0;
  output \cl_tx_state_reg[2] ;
  input core_rst;
  input s_level_out_d1_cdc_to_reg_0;
  input core_clk;
  input time_out_zero;
  input \cl_tx_state[3]_i_8 ;
  input \cl_tx_state[3]_i_8_0 ;
  input cl_txclkactivehs_reg;
  input cl_txclkactivehs_reg_0;

  wire \cl_tx_state[3]_i_8 ;
  wire \cl_tx_state[3]_i_8_0 ;
  wire \cl_tx_state_reg[2] ;
  wire cl_txclkactivehs_reg;
  wire cl_txclkactivehs_reg_0;
  wire core_clk;
  wire core_rst;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire time_out_zero;

  assign out = s_level_out_d3;
  LUT5 #(
    .INIT(32'h8F80FFFF)) 
    \cl_tx_state[3]_i_13 
       (.I0(s_level_out_d3),
        .I1(time_out_zero),
        .I2(\cl_tx_state[3]_i_8 ),
        .I3(\cl_tx_state[3]_i_8_0 ),
        .I4(cl_txclkactivehs_reg),
        .O(s_level_out_d3_reg_0));
  LUT4 #(
    .INIT(16'h8000)) 
    cl_txclkactivehs_i_2
       (.I0(cl_txclkactivehs_reg_0),
        .I1(s_level_out_d3),
        .I2(time_out_zero),
        .I3(cl_txclkactivehs_reg),
        .O(\cl_tx_state_reg[2] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized0
   (out,
    clear,
    system_rst_byteclk_in,
    oserdes_clkdiv_in,
    \post_count_reg[0] );
  output out;
  output clear;
  input system_rst_byteclk_in;
  input oserdes_clkdiv_in;
  input \post_count_reg[0] ;

  wire clear;
  wire oserdes_clkdiv_in;
  wire p_level_in_int;
  wire \post_count_reg[0] ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  assign p_level_in_int = system_rst_byteclk_in;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT2 #(
    .INIT(4'hB)) 
    \post_count[0]_i_1 
       (.I0(s_level_out_d3),
        .I1(\post_count_reg[0] ),
        .O(clear));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized0_0
   (out,
    s_level_out_d3_reg_0,
    system_rst_byteclk_in,
    tx_div4_clk,
    init_done);
  output out;
  output s_level_out_d3_reg_0;
  input system_rst_byteclk_in;
  input tx_div4_clk;
  input init_done;

  wire init_done;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  assign p_level_in_int = system_rst_byteclk_in;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT2 #(
    .INIT(4'hB)) 
    \pkt_cnt[0]_i_1__2 
       (.I0(s_level_out_d3),
        .I1(init_done),
        .O(s_level_out_d3_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized0_1
   (out,
    s_level_out_d3_reg_0,
    s_level_out_d3_reg_1,
    s_level_out_d3_reg_2,
    s_level_out_d3_reg_3,
    system_rst_escclk_in,
    dl0_txclkesc,
    esc_ctrl_all_sm_reg,
    esc_ctrl_all_sm_reg_0,
    esc_ctrl_all_sm_reg_1,
    esc_ctrl_all_sm_reg_2);
  output out;
  output s_level_out_d3_reg_0;
  output s_level_out_d3_reg_1;
  output s_level_out_d3_reg_2;
  output s_level_out_d3_reg_3;
  input system_rst_escclk_in;
  input dl0_txclkesc;
  input esc_ctrl_all_sm_reg;
  input esc_ctrl_all_sm_reg_0;
  input esc_ctrl_all_sm_reg_1;
  input esc_ctrl_all_sm_reg_2;

  wire dl0_txclkesc;
  wire esc_ctrl_all_sm_reg;
  wire esc_ctrl_all_sm_reg_0;
  wire esc_ctrl_all_sm_reg_1;
  wire esc_ctrl_all_sm_reg_2;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  wire s_level_out_d3_reg_2;
  wire s_level_out_d3_reg_3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  assign p_level_in_int = system_rst_escclk_in;
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_dl_tx_state[3]_i_1 
       (.I0(s_level_out_d3),
        .I1(esc_ctrl_all_sm_reg),
        .O(s_level_out_d3_reg_0));
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_dl_tx_state[3]_i_1__0 
       (.I0(s_level_out_d3),
        .I1(esc_ctrl_all_sm_reg_0),
        .O(s_level_out_d3_reg_1));
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_dl_tx_state[3]_i_1__1 
       (.I0(s_level_out_d3),
        .I1(esc_ctrl_all_sm_reg_1),
        .O(s_level_out_d3_reg_2));
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_dl_tx_state[3]_i_1__2 
       (.I0(s_level_out_d3),
        .I1(esc_ctrl_all_sm_reg_2),
        .O(s_level_out_d3_reg_3));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized0_2
   (out,
    system_rst_phybyteclk_in,
    tx_div4_clk);
  output out;
  input system_rst_phybyteclk_in;
  input tx_div4_clk;

  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  assign p_level_in_int = system_rst_phybyteclk_in;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized0_6
   (out,
    cl_init_done_coreclk_i,
    dl0_txclkesc);
  output out;
  input cl_init_done_coreclk_i;
  input dl0_txclkesc;

  wire dl0_txclkesc;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  assign p_level_in_int = cl_init_done_coreclk_i;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1
   (tx_div4_clk);
  input tx_div4_clk;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_12
   (out,
    s_level_out_d1_cdc_to_reg_0,
    core_clk);
  output out;
  input s_level_out_d1_cdc_to_reg_0;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_17
   (\dl_tx_sm_state_reg[2] ,
    dl_tx_sm_state125_out,
    \dl_tx_sm_state_reg[0] ,
    core_rst,
    dl3_enable,
    core_clk,
    tx_dl_lp_dp_reg,
    tx_dl_lp_dp_reg_0,
    tx_dl_lp_dp_reg_1,
    tx_dl_lp_dp_reg_2,
    tx_dl_lp_dp_hs_i,
    en_cal_hs_datapath_reg,
    en_cal_hs_datapath_reg_0,
    en_cal_hs_datapath_reg_1,
    en_cal_hs_datapath_i,
    cl_init_done_coreclk_i,
    out,
    tx_dl_lp_dp_reg_3);
  output \dl_tx_sm_state_reg[2] ;
  output dl_tx_sm_state125_out;
  output \dl_tx_sm_state_reg[0] ;
  input core_rst;
  input dl3_enable;
  input core_clk;
  input tx_dl_lp_dp_reg;
  input tx_dl_lp_dp_reg_0;
  input tx_dl_lp_dp_reg_1;
  input tx_dl_lp_dp_reg_2;
  input tx_dl_lp_dp_hs_i;
  input en_cal_hs_datapath_reg;
  input en_cal_hs_datapath_reg_0;
  input en_cal_hs_datapath_reg_1;
  input en_cal_hs_datapath_i;
  input cl_init_done_coreclk_i;
  input out;
  input tx_dl_lp_dp_reg_3;

  wire cl_init_done_coreclk_i;
  wire core_clk;
  wire core_rst;
  wire dl3_enable;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state_reg[0] ;
  wire \dl_tx_sm_state_reg[2] ;
  wire en_cal_hs_datapath_i;
  wire en_cal_hs_datapath_reg;
  wire en_cal_hs_datapath_reg_0;
  wire en_cal_hs_datapath_reg_1;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_reg;
  wire tx_dl_lp_dp_reg_0;
  wire tx_dl_lp_dp_reg_1;
  wire tx_dl_lp_dp_reg_2;
  wire tx_dl_lp_dp_reg_3;

  LUT4 #(
    .INIT(16'hAAA2)) 
    \dl_tx_sm_state[2]_i_4__2 
       (.I0(cl_init_done_coreclk_i),
        .I1(s_level_out_d2),
        .I2(out),
        .I3(tx_dl_lp_dp_reg_3),
        .O(dl_tx_sm_state125_out));
  LUT5 #(
    .INIT(32'h01FF0100)) 
    en_cal_hs_datapath_i_1__2
       (.I0(en_cal_hs_datapath_reg),
        .I1(dl_tx_sm_state125_out),
        .I2(en_cal_hs_datapath_reg_0),
        .I3(en_cal_hs_datapath_reg_1),
        .I4(en_cal_hs_datapath_i),
        .O(\dl_tx_sm_state_reg[0] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl3_enable),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hFFAEFFFFFFAE0000)) 
    tx_dl_lp_dp_i_1__5
       (.I0(dl_tx_sm_state125_out),
        .I1(tx_dl_lp_dp_reg),
        .I2(tx_dl_lp_dp_reg_0),
        .I3(tx_dl_lp_dp_reg_1),
        .I4(tx_dl_lp_dp_reg_2),
        .I5(tx_dl_lp_dp_hs_i),
        .O(\dl_tx_sm_state_reg[2] ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_24
   (tx_div4_clk);
  input tx_div4_clk;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_29
   (out,
    s_level_out_d1_cdc_to_reg_0,
    core_clk);
  output out;
  input s_level_out_d1_cdc_to_reg_0;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_37
   (\dl_tx_sm_state_reg[2] ,
    dl_tx_sm_state125_out,
    \dl_tx_sm_state_reg[0] ,
    core_rst,
    dl2_enable,
    core_clk,
    tx_dl_lp_dp_reg,
    tx_dl_lp_dp_reg_0,
    tx_dl_lp_dp_reg_1,
    tx_dl_lp_dp_reg_2,
    tx_dl_lp_dp_hs_i,
    en_cal_hs_datapath_reg,
    en_cal_hs_datapath_reg_0,
    en_cal_hs_datapath_reg_1,
    en_cal_hs_datapath_i,
    cl_init_done_coreclk_i,
    out,
    tx_dl_lp_dp_reg_3);
  output \dl_tx_sm_state_reg[2] ;
  output dl_tx_sm_state125_out;
  output \dl_tx_sm_state_reg[0] ;
  input core_rst;
  input dl2_enable;
  input core_clk;
  input tx_dl_lp_dp_reg;
  input tx_dl_lp_dp_reg_0;
  input tx_dl_lp_dp_reg_1;
  input tx_dl_lp_dp_reg_2;
  input tx_dl_lp_dp_hs_i;
  input en_cal_hs_datapath_reg;
  input en_cal_hs_datapath_reg_0;
  input en_cal_hs_datapath_reg_1;
  input en_cal_hs_datapath_i;
  input cl_init_done_coreclk_i;
  input out;
  input tx_dl_lp_dp_reg_3;

  wire cl_init_done_coreclk_i;
  wire core_clk;
  wire core_rst;
  wire dl2_enable;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state_reg[0] ;
  wire \dl_tx_sm_state_reg[2] ;
  wire en_cal_hs_datapath_i;
  wire en_cal_hs_datapath_reg;
  wire en_cal_hs_datapath_reg_0;
  wire en_cal_hs_datapath_reg_1;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_reg;
  wire tx_dl_lp_dp_reg_0;
  wire tx_dl_lp_dp_reg_1;
  wire tx_dl_lp_dp_reg_2;
  wire tx_dl_lp_dp_reg_3;

  LUT4 #(
    .INIT(16'hAAA2)) 
    \dl_tx_sm_state[2]_i_4__1 
       (.I0(cl_init_done_coreclk_i),
        .I1(s_level_out_d2),
        .I2(out),
        .I3(tx_dl_lp_dp_reg_3),
        .O(dl_tx_sm_state125_out));
  LUT5 #(
    .INIT(32'h01FF0100)) 
    en_cal_hs_datapath_i_1__1
       (.I0(en_cal_hs_datapath_reg),
        .I1(dl_tx_sm_state125_out),
        .I2(en_cal_hs_datapath_reg_0),
        .I3(en_cal_hs_datapath_reg_1),
        .I4(en_cal_hs_datapath_i),
        .O(\dl_tx_sm_state_reg[0] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl2_enable),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hFFAEFFFFFFAE0000)) 
    tx_dl_lp_dp_i_1__3
       (.I0(dl_tx_sm_state125_out),
        .I1(tx_dl_lp_dp_reg),
        .I2(tx_dl_lp_dp_reg_0),
        .I3(tx_dl_lp_dp_reg_1),
        .I4(tx_dl_lp_dp_reg_2),
        .I5(tx_dl_lp_dp_hs_i),
        .O(\dl_tx_sm_state_reg[2] ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_44
   (tx_div4_clk);
  input tx_div4_clk;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_49
   (out,
    s_level_out_d1_cdc_to_reg_0,
    core_clk);
  output out;
  input s_level_out_d1_cdc_to_reg_0;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_57
   (\dl_tx_sm_state_reg[2] ,
    dl_tx_sm_state125_out,
    \dl_tx_sm_state_reg[0] ,
    core_rst,
    dl1_enable,
    core_clk,
    tx_dl_lp_dp_reg,
    tx_dl_lp_dp_reg_0,
    tx_dl_lp_dp_reg_1,
    tx_dl_lp_dp_reg_2,
    tx_dl_lp_dp_hs_i,
    en_cal_hs_datapath_reg,
    en_cal_hs_datapath_reg_0,
    en_cal_hs_datapath_reg_1,
    en_cal_hs_datapath_i,
    cl_init_done_coreclk_i,
    out,
    tx_dl_lp_dp_reg_3);
  output \dl_tx_sm_state_reg[2] ;
  output dl_tx_sm_state125_out;
  output \dl_tx_sm_state_reg[0] ;
  input core_rst;
  input dl1_enable;
  input core_clk;
  input tx_dl_lp_dp_reg;
  input tx_dl_lp_dp_reg_0;
  input tx_dl_lp_dp_reg_1;
  input tx_dl_lp_dp_reg_2;
  input tx_dl_lp_dp_hs_i;
  input en_cal_hs_datapath_reg;
  input en_cal_hs_datapath_reg_0;
  input en_cal_hs_datapath_reg_1;
  input en_cal_hs_datapath_i;
  input cl_init_done_coreclk_i;
  input out;
  input tx_dl_lp_dp_reg_3;

  wire cl_init_done_coreclk_i;
  wire core_clk;
  wire core_rst;
  wire dl1_enable;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state_reg[0] ;
  wire \dl_tx_sm_state_reg[2] ;
  wire en_cal_hs_datapath_i;
  wire en_cal_hs_datapath_reg;
  wire en_cal_hs_datapath_reg_0;
  wire en_cal_hs_datapath_reg_1;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_reg;
  wire tx_dl_lp_dp_reg_0;
  wire tx_dl_lp_dp_reg_1;
  wire tx_dl_lp_dp_reg_2;
  wire tx_dl_lp_dp_reg_3;

  LUT4 #(
    .INIT(16'hAAA2)) 
    \dl_tx_sm_state[2]_i_4__0 
       (.I0(cl_init_done_coreclk_i),
        .I1(s_level_out_d2),
        .I2(out),
        .I3(tx_dl_lp_dp_reg_3),
        .O(dl_tx_sm_state125_out));
  LUT5 #(
    .INIT(32'h01FF0100)) 
    en_cal_hs_datapath_i_1__0
       (.I0(en_cal_hs_datapath_reg),
        .I1(dl_tx_sm_state125_out),
        .I2(en_cal_hs_datapath_reg_0),
        .I3(en_cal_hs_datapath_reg_1),
        .I4(en_cal_hs_datapath_i),
        .O(\dl_tx_sm_state_reg[0] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl1_enable),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hFFAEFFFFFFAE0000)) 
    tx_dl_lp_dp_i_1__1
       (.I0(dl_tx_sm_state125_out),
        .I1(tx_dl_lp_dp_reg),
        .I2(tx_dl_lp_dp_reg_0),
        .I3(tx_dl_lp_dp_reg_1),
        .I4(tx_dl_lp_dp_reg_2),
        .I5(tx_dl_lp_dp_hs_i),
        .O(\dl_tx_sm_state_reg[2] ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_64
   (tx_div4_clk);
  input tx_div4_clk;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_69
   (out,
    s_level_out_d1_cdc_to_reg_0,
    core_clk);
  output out;
  input s_level_out_d1_cdc_to_reg_0;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_77
   (\dl_tx_sm_state_reg[2] ,
    dl_tx_sm_state125_out,
    \dl_tx_sm_state_reg[0] ,
    core_rst,
    dl0_enable,
    core_clk,
    tx_dl_lp_dp_reg,
    tx_dl_lp_dp_reg_0,
    tx_dl_lp_dp_reg_1,
    tx_dl_lp_dp_reg_2,
    tx_dl_lp_dp_hs_i,
    en_cal_hs_datapath_reg,
    en_cal_hs_datapath_reg_0,
    en_cal_hs_datapath_reg_1,
    en_cal_hs_datapath_i,
    cl_init_done_coreclk_i,
    out,
    tx_dl_lp_dp_reg_3);
  output \dl_tx_sm_state_reg[2] ;
  output dl_tx_sm_state125_out;
  output \dl_tx_sm_state_reg[0] ;
  input core_rst;
  input dl0_enable;
  input core_clk;
  input tx_dl_lp_dp_reg;
  input tx_dl_lp_dp_reg_0;
  input tx_dl_lp_dp_reg_1;
  input tx_dl_lp_dp_reg_2;
  input tx_dl_lp_dp_hs_i;
  input en_cal_hs_datapath_reg;
  input en_cal_hs_datapath_reg_0;
  input en_cal_hs_datapath_reg_1;
  input en_cal_hs_datapath_i;
  input cl_init_done_coreclk_i;
  input out;
  input tx_dl_lp_dp_reg_3;

  wire cl_init_done_coreclk_i;
  wire core_clk;
  wire core_rst;
  wire dl0_enable;
  wire dl_tx_sm_state125_out;
  wire \dl_tx_sm_state_reg[0] ;
  wire \dl_tx_sm_state_reg[2] ;
  wire en_cal_hs_datapath_i;
  wire en_cal_hs_datapath_reg;
  wire en_cal_hs_datapath_reg_0;
  wire en_cal_hs_datapath_reg_1;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_reg;
  wire tx_dl_lp_dp_reg_0;
  wire tx_dl_lp_dp_reg_1;
  wire tx_dl_lp_dp_reg_2;
  wire tx_dl_lp_dp_reg_3;

  LUT4 #(
    .INIT(16'hAAA2)) 
    \dl_tx_sm_state[2]_i_4 
       (.I0(cl_init_done_coreclk_i),
        .I1(s_level_out_d2),
        .I2(out),
        .I3(tx_dl_lp_dp_reg_3),
        .O(dl_tx_sm_state125_out));
  LUT5 #(
    .INIT(32'h01FF0100)) 
    en_cal_hs_datapath_i_1
       (.I0(en_cal_hs_datapath_reg),
        .I1(dl_tx_sm_state125_out),
        .I2(en_cal_hs_datapath_reg_0),
        .I3(en_cal_hs_datapath_reg_1),
        .I4(en_cal_hs_datapath_i),
        .O(\dl_tx_sm_state_reg[0] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl0_enable),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hFFAEFFFFFFAE0000)) 
    tx_dl_lp_dp_i_1
       (.I0(dl_tx_sm_state125_out),
        .I1(tx_dl_lp_dp_reg),
        .I2(tx_dl_lp_dp_reg_0),
        .I3(tx_dl_lp_dp_reg_1),
        .I4(tx_dl_lp_dp_reg_2),
        .I5(tx_dl_lp_dp_hs_i),
        .O(\dl_tx_sm_state_reg[2] ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized1_84
   (out,
    \cl_tx_state_reg[1] ,
    cl_stopstate_reg,
    core_rst,
    cl_enable,
    core_clk,
    cl_stopstate_reg_0,
    cl_stopstate_reg_1,
    cl_stopstate_reg_2,
    \cl_tx_state_reg[1]_0 ,
    cl_tx_state,
    \cl_tx_state_reg[1]_1 ,
    cl_stopstate,
    cl_stopstate_reg_3,
    cl_stopstate_reg_4);
  output out;
  output \cl_tx_state_reg[1] ;
  output cl_stopstate_reg;
  input core_rst;
  input cl_enable;
  input core_clk;
  input cl_stopstate_reg_0;
  input cl_stopstate_reg_1;
  input [0:0]cl_stopstate_reg_2;
  input \cl_tx_state_reg[1]_0 ;
  input cl_tx_state;
  input \cl_tx_state_reg[1]_1 ;
  input cl_stopstate;
  input cl_stopstate_reg_3;
  input cl_stopstate_reg_4;

  wire cl_enable;
  wire cl_stopstate;
  wire cl_stopstate_i_2_n_0;
  wire cl_stopstate_reg;
  wire cl_stopstate_reg_0;
  wire cl_stopstate_reg_1;
  wire [0:0]cl_stopstate_reg_2;
  wire cl_stopstate_reg_3;
  wire cl_stopstate_reg_4;
  wire cl_tx_state;
  wire cl_tx_state1;
  wire \cl_tx_state_reg[1] ;
  wire \cl_tx_state_reg[1]_0 ;
  wire \cl_tx_state_reg[1]_1 ;
  wire core_clk;
  wire core_rst;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  LUT5 #(
    .INIT(32'h0000FECE)) 
    cl_stopstate_i_1
       (.I0(cl_stopstate),
        .I1(cl_stopstate_i_2_n_0),
        .I2(cl_stopstate_reg_3),
        .I3(cl_stopstate_reg_4),
        .I4(cl_tx_state1),
        .O(cl_stopstate_reg));
  LUT3 #(
    .INIT(8'hD0)) 
    cl_stopstate_i_2
       (.I0(s_level_out_d2),
        .I1(cl_stopstate_reg_0),
        .I2(cl_stopstate_reg_1),
        .O(cl_stopstate_i_2_n_0));
  LUT5 #(
    .INIT(32'hBBBBFFBF)) 
    cl_stopstate_i_5
       (.I0(core_rst),
        .I1(cl_stopstate_reg_2),
        .I2(s_level_out_d2),
        .I3(cl_stopstate_reg_0),
        .I4(cl_stopstate_reg_1),
        .O(cl_tx_state1));
  LUT5 #(
    .INIT(32'h0000FECE)) 
    \cl_tx_state[1]_i_1 
       (.I0(\cl_tx_state_reg[1]_0 ),
        .I1(cl_stopstate_i_2_n_0),
        .I2(cl_tx_state),
        .I3(\cl_tx_state_reg[1]_1 ),
        .I4(cl_tx_state1),
        .O(\cl_tx_state_reg[1] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_enable),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized2
   (\s_level_out_bus_d3_reg[0]_0 ,
    \s_level_out_bus_d3_reg[1]_0 ,
    \s_level_out_bus_d3_reg[2]_0 ,
    \s_level_out_bus_d3_reg[3]_0 ,
    \s_level_out_bus_d3_reg[4]_0 ,
    \s_level_out_bus_d3_reg[5]_0 ,
    \s_level_out_bus_d3_reg[6]_0 ,
    \s_level_out_bus_d3_reg[7]_0 ,
    \s_level_out_bus_d3_reg[8]_0 ,
    \s_level_out_bus_d3_reg[9]_0 ,
    \s_level_out_bus_d3_reg[10]_0 ,
    \s_level_out_bus_d3_reg[11]_0 ,
    \s_level_out_bus_d3_reg[12]_0 ,
    \s_level_out_bus_d3_reg[13]_0 ,
    \s_level_out_bus_d3_reg[14]_0 ,
    \s_level_out_bus_d3_reg[15]_0 ,
    Q,
    \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 ,
    SR,
    pkt_cnt,
    s_axi_aclk);
  output \s_level_out_bus_d3_reg[0]_0 ;
  output \s_level_out_bus_d3_reg[1]_0 ;
  output \s_level_out_bus_d3_reg[2]_0 ;
  output \s_level_out_bus_d3_reg[3]_0 ;
  output \s_level_out_bus_d3_reg[4]_0 ;
  output \s_level_out_bus_d3_reg[5]_0 ;
  output \s_level_out_bus_d3_reg[6]_0 ;
  output \s_level_out_bus_d3_reg[7]_0 ;
  output \s_level_out_bus_d3_reg[8]_0 ;
  output \s_level_out_bus_d3_reg[9]_0 ;
  output \s_level_out_bus_d3_reg[10]_0 ;
  output \s_level_out_bus_d3_reg[11]_0 ;
  output \s_level_out_bus_d3_reg[12]_0 ;
  output \s_level_out_bus_d3_reg[13]_0 ;
  output \s_level_out_bus_d3_reg[14]_0 ;
  output \s_level_out_bus_d3_reg[15]_0 ;
  input [1:0]Q;
  input [15:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 ;
  input [15:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 ;
  input [0:0]SR;
  input [15:0]pkt_cnt;
  input s_axi_aclk;

  wire [1:0]Q;
  wire [0:0]SR;
  wire [15:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 ;
  wire [15:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 ;
  wire [15:0]pkt_cnt;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  wire \s_level_out_bus_d3_reg[0]_0 ;
  wire \s_level_out_bus_d3_reg[10]_0 ;
  wire \s_level_out_bus_d3_reg[11]_0 ;
  wire \s_level_out_bus_d3_reg[12]_0 ;
  wire \s_level_out_bus_d3_reg[13]_0 ;
  wire \s_level_out_bus_d3_reg[14]_0 ;
  wire \s_level_out_bus_d3_reg[15]_0 ;
  wire \s_level_out_bus_d3_reg[1]_0 ;
  wire \s_level_out_bus_d3_reg[2]_0 ;
  wire \s_level_out_bus_d3_reg[3]_0 ;
  wire \s_level_out_bus_d3_reg[4]_0 ;
  wire \s_level_out_bus_d3_reg[5]_0 ;
  wire \s_level_out_bus_d3_reg[6]_0 ;
  wire \s_level_out_bus_d3_reg[7]_0 ;
  wire \s_level_out_bus_d3_reg[8]_0 ;
  wire \s_level_out_bus_d3_reg[9]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT5 #(
    .INIT(32'hB833B800)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_7 
       (.I0(s_level_out_bus_d3[0]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 [0]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [0]),
        .O(\s_level_out_bus_d3_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hB833B800)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_7 
       (.I0(s_level_out_bus_d3[1]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 [1]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [1]),
        .O(\s_level_out_bus_d3_reg[1]_0 ));
  LUT5 #(
    .INIT(32'hB833B800)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_7 
       (.I0(s_level_out_bus_d3[2]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 [2]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [2]),
        .O(\s_level_out_bus_d3_reg[2]_0 ));
  LUT5 #(
    .INIT(32'hB833B800)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_7 
       (.I0(s_level_out_bus_d3[3]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 [3]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [3]),
        .O(\s_level_out_bus_d3_reg[3]_0 ));
  LUT5 #(
    .INIT(32'hB833B800)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_7 
       (.I0(s_level_out_bus_d3[4]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 [4]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [4]),
        .O(\s_level_out_bus_d3_reg[4]_0 ));
  LUT5 #(
    .INIT(32'hB833B800)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_7 
       (.I0(s_level_out_bus_d3[5]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 [5]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [5]),
        .O(\s_level_out_bus_d3_reg[5]_0 ));
  LUT5 #(
    .INIT(32'hB833B800)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_7 
       (.I0(s_level_out_bus_d3[6]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 [6]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [6]),
        .O(\s_level_out_bus_d3_reg[6]_0 ));
  LUT5 #(
    .INIT(32'hB833B800)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_7 
       (.I0(s_level_out_bus_d3[7]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 [7]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [7]),
        .O(\s_level_out_bus_d3_reg[7]_0 ));
  LUT5 #(
    .INIT(32'hB833B800)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_7 
       (.I0(s_level_out_bus_d3[8]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 [8]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [8]),
        .O(\s_level_out_bus_d3_reg[8]_0 ));
  LUT5 #(
    .INIT(32'hB833B800)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_7 
       (.I0(s_level_out_bus_d3[9]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 [9]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [9]),
        .O(\s_level_out_bus_d3_reg[9]_0 ));
  LUT5 #(
    .INIT(32'hB833B800)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_7 
       (.I0(s_level_out_bus_d3[10]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 [10]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [10]),
        .O(\s_level_out_bus_d3_reg[10]_0 ));
  LUT5 #(
    .INIT(32'hB833B800)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_7 
       (.I0(s_level_out_bus_d3[11]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 [11]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [11]),
        .O(\s_level_out_bus_d3_reg[11]_0 ));
  LUT5 #(
    .INIT(32'hB833B800)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_7 
       (.I0(s_level_out_bus_d3[12]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 [12]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [12]),
        .O(\s_level_out_bus_d3_reg[12]_0 ));
  LUT5 #(
    .INIT(32'hB833B800)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_7 
       (.I0(s_level_out_bus_d3[13]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 [13]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [13]),
        .O(\s_level_out_bus_d3_reg[13]_0 ));
  LUT5 #(
    .INIT(32'hB833B800)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_7 
       (.I0(s_level_out_bus_d3[14]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 [14]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [14]),
        .O(\s_level_out_bus_d3_reg[14]_0 ));
  LUT5 #(
    .INIT(32'hB833B800)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_11 
       (.I0(s_level_out_bus_d3[15]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 [15]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [15]),
        .O(\s_level_out_bus_d3_reg[15]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized2_103
   (D,
    SR,
    \s_level_out_bus_d1_cdc_to_reg[15]_0 ,
    s_axi_aclk);
  output [15:0]D;
  input [0:0]SR;
  input [15:0]\s_level_out_bus_d1_cdc_to_reg[15]_0 ;
  input s_axi_aclk;

  wire [0:0]SR;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  wire [15:0]\s_level_out_bus_d1_cdc_to_reg[15]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign D[15:0] = s_level_out_bus_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized2_104
   (D,
    SR,
    \s_level_out_bus_d1_cdc_to_reg[15]_0 ,
    s_axi_aclk);
  output [15:0]D;
  input [0:0]SR;
  input [15:0]\s_level_out_bus_d1_cdc_to_reg[15]_0 ;
  input s_axi_aclk;

  wire [0:0]SR;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  wire [15:0]\s_level_out_bus_d1_cdc_to_reg[15]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign D[15:0] = s_level_out_bus_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized2_105
   (\rd_addr_reg[5] ,
    \rd_addr_reg[5]_0 ,
    \rd_addr_reg[5]_1 ,
    \rd_addr_reg[5]_2 ,
    \rd_addr_reg[5]_3 ,
    \rd_addr_reg[5]_4 ,
    \rd_addr_reg[5]_5 ,
    \rd_addr_reg[5]_6 ,
    \rd_addr_reg[5]_7 ,
    \rd_addr_reg[5]_8 ,
    \rd_addr_reg[5]_9 ,
    \rd_addr_reg[5]_10 ,
    \rd_addr_reg[5]_11 ,
    \rd_addr_reg[5]_12 ,
    \rd_addr_reg[5]_13 ,
    \rd_addr_reg[5]_14 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ,
    Q,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 ,
    D,
    \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 ,
    SR,
    \s_level_out_bus_d1_cdc_to_reg[15]_0 ,
    s_axi_aclk);
  output \rd_addr_reg[5] ;
  output \rd_addr_reg[5]_0 ;
  output \rd_addr_reg[5]_1 ;
  output \rd_addr_reg[5]_2 ;
  output \rd_addr_reg[5]_3 ;
  output \rd_addr_reg[5]_4 ;
  output \rd_addr_reg[5]_5 ;
  output \rd_addr_reg[5]_6 ;
  output \rd_addr_reg[5]_7 ;
  output \rd_addr_reg[5]_8 ;
  output \rd_addr_reg[5]_9 ;
  output \rd_addr_reg[5]_10 ;
  output \rd_addr_reg[5]_11 ;
  output \rd_addr_reg[5]_12 ;
  output \rd_addr_reg[5]_13 ;
  output \rd_addr_reg[5]_14 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ;
  input [3:0]Q;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ;
  input [15:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 ;
  input [15:0]D;
  input [15:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17]_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18]_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19]_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20]_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21]_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22]_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23]_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24]_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25]_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26]_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27]_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28]_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29]_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30]_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 ;
  input [0:0]SR;
  input [15:0]\s_level_out_bus_d1_cdc_to_reg[15]_0 ;
  input s_axi_aclk;

  wire [15:0]D;
  wire [3:0]Q;
  wire [0:0]SR;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_10_n_0 ;
  wire [15:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 ;
  wire [15:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 ;
  wire \rd_addr_reg[5] ;
  wire \rd_addr_reg[5]_0 ;
  wire \rd_addr_reg[5]_1 ;
  wire \rd_addr_reg[5]_10 ;
  wire \rd_addr_reg[5]_11 ;
  wire \rd_addr_reg[5]_12 ;
  wire \rd_addr_reg[5]_13 ;
  wire \rd_addr_reg[5]_14 ;
  wire \rd_addr_reg[5]_2 ;
  wire \rd_addr_reg[5]_3 ;
  wire \rd_addr_reg[5]_4 ;
  wire \rd_addr_reg[5]_5 ;
  wire \rd_addr_reg[5]_6 ;
  wire \rd_addr_reg[5]_7 ;
  wire \rd_addr_reg[5]_8 ;
  wire \rd_addr_reg[5]_9 ;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  wire [15:0]\s_level_out_bus_d1_cdc_to_reg[15]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_6_n_0 ),
        .I2(Q[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_0 ),
        .I4(Q[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ),
        .O(\rd_addr_reg[5] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [0]),
        .I1(s_level_out_bus_d3[0]),
        .I2(Q[1]),
        .I3(D[0]),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 [0]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17] ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_6_n_0 ),
        .I2(Q[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17]_0 ),
        .I4(Q[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17]_1 ),
        .O(\rd_addr_reg[5]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [1]),
        .I1(s_level_out_bus_d3[1]),
        .I2(Q[1]),
        .I3(D[1]),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 [1]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18] ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_6_n_0 ),
        .I2(Q[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18]_0 ),
        .I4(Q[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18]_1 ),
        .O(\rd_addr_reg[5]_1 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [2]),
        .I1(s_level_out_bus_d3[2]),
        .I2(Q[1]),
        .I3(D[2]),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 [2]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19] ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_6_n_0 ),
        .I2(Q[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19]_0 ),
        .I4(Q[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19]_1 ),
        .O(\rd_addr_reg[5]_2 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [3]),
        .I1(s_level_out_bus_d3[3]),
        .I2(Q[1]),
        .I3(D[3]),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 [3]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20] ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_6_n_0 ),
        .I2(Q[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20]_0 ),
        .I4(Q[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20]_1 ),
        .O(\rd_addr_reg[5]_3 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [4]),
        .I1(s_level_out_bus_d3[4]),
        .I2(Q[1]),
        .I3(D[4]),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 [4]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21] ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_6_n_0 ),
        .I2(Q[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21]_0 ),
        .I4(Q[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21]_1 ),
        .O(\rd_addr_reg[5]_4 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [5]),
        .I1(s_level_out_bus_d3[5]),
        .I2(Q[1]),
        .I3(D[5]),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 [5]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22] ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_6_n_0 ),
        .I2(Q[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22]_0 ),
        .I4(Q[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22]_1 ),
        .O(\rd_addr_reg[5]_5 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [6]),
        .I1(s_level_out_bus_d3[6]),
        .I2(Q[1]),
        .I3(D[6]),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 [6]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23] ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_6_n_0 ),
        .I2(Q[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23]_0 ),
        .I4(Q[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23]_1 ),
        .O(\rd_addr_reg[5]_6 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [7]),
        .I1(s_level_out_bus_d3[7]),
        .I2(Q[1]),
        .I3(D[7]),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 [7]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24] ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_6_n_0 ),
        .I2(Q[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24]_0 ),
        .I4(Q[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24]_1 ),
        .O(\rd_addr_reg[5]_7 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [8]),
        .I1(s_level_out_bus_d3[8]),
        .I2(Q[1]),
        .I3(D[8]),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 [8]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25] ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_6_n_0 ),
        .I2(Q[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25]_0 ),
        .I4(Q[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25]_1 ),
        .O(\rd_addr_reg[5]_8 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [9]),
        .I1(s_level_out_bus_d3[9]),
        .I2(Q[1]),
        .I3(D[9]),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 [9]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26] ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_6_n_0 ),
        .I2(Q[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26]_0 ),
        .I4(Q[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26]_1 ),
        .O(\rd_addr_reg[5]_9 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [10]),
        .I1(s_level_out_bus_d3[10]),
        .I2(Q[1]),
        .I3(D[10]),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 [10]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27] ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_6_n_0 ),
        .I2(Q[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27]_0 ),
        .I4(Q[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27]_1 ),
        .O(\rd_addr_reg[5]_10 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [11]),
        .I1(s_level_out_bus_d3[11]),
        .I2(Q[1]),
        .I3(D[11]),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 [11]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28] ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_6_n_0 ),
        .I2(Q[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28]_0 ),
        .I4(Q[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28]_1 ),
        .O(\rd_addr_reg[5]_11 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [12]),
        .I1(s_level_out_bus_d3[12]),
        .I2(Q[1]),
        .I3(D[12]),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 [12]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29] ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_6_n_0 ),
        .I2(Q[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29]_0 ),
        .I4(Q[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29]_1 ),
        .O(\rd_addr_reg[5]_12 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [13]),
        .I1(s_level_out_bus_d3[13]),
        .I2(Q[1]),
        .I3(D[13]),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 [13]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30] ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_6_n_0 ),
        .I2(Q[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30]_0 ),
        .I4(Q[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30]_1 ),
        .O(\rd_addr_reg[5]_13 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [14]),
        .I1(s_level_out_bus_d3[14]),
        .I2(Q[1]),
        .I3(D[14]),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 [14]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_10 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_0 [15]),
        .I1(s_level_out_bus_d3[15]),
        .I2(Q[1]),
        .I3(D[15]),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8_1 [15]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_8 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_10_n_0 ),
        .I2(Q[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_0 ),
        .I4(Q[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 ),
        .O(\rd_addr_reg[5]_14 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized2_106
   (D,
    rd_req,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_2 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_0 ,
    Q,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 ,
    SR,
    s_axi_aclk);
  output [15:0]D;
  input rd_req;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_2 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_0 ;
  input [15:0]Q;
  input [1:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 ;
  input [15:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 ;
  input [15:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 ;
  input [0:0]SR;
  input s_axi_aclk;

  wire [15:0]D;
  wire [15:0]Q;
  wire [0:0]SR;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_4_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_2 ;
  wire [1:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_0 ;
  wire [15:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 ;
  wire [15:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 ;
  wire rd_req;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_0 ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_2 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_2 
       (.I0(s_level_out_bus_d3[0]),
        .I1(Q[0]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 [0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 [0]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17] ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[17]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_2 
       (.I0(s_level_out_bus_d3[1]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 [1]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 [1]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18] ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[18]_0 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_2 
       (.I0(s_level_out_bus_d3[2]),
        .I1(Q[2]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 [2]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 [2]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19] ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[19]_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_2 
       (.I0(s_level_out_bus_d3[3]),
        .I1(Q[3]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 [3]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 [3]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20] ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[20]_0 ),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_2 
       (.I0(s_level_out_bus_d3[4]),
        .I1(Q[4]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 [4]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 [4]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21] ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[21]_0 ),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_2 
       (.I0(s_level_out_bus_d3[5]),
        .I1(Q[5]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 [5]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 [5]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22] ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[22]_0 ),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_2 
       (.I0(s_level_out_bus_d3[6]),
        .I1(Q[6]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 [6]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 [6]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23] ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[23]_0 ),
        .O(D[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_2 
       (.I0(s_level_out_bus_d3[7]),
        .I1(Q[7]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 [7]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 [7]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24] ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[24]_0 ),
        .O(D[8]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_2 
       (.I0(s_level_out_bus_d3[8]),
        .I1(Q[8]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 [8]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 [8]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25] ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[25]_0 ),
        .O(D[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_2 
       (.I0(s_level_out_bus_d3[9]),
        .I1(Q[9]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 [9]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 [9]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26] ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[26]_0 ),
        .O(D[10]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_2 
       (.I0(s_level_out_bus_d3[10]),
        .I1(Q[10]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 [10]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 [10]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27] ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[27]_0 ),
        .O(D[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_2 
       (.I0(s_level_out_bus_d3[11]),
        .I1(Q[11]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 [11]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 [11]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28] ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[28]_0 ),
        .O(D[12]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_2 
       (.I0(s_level_out_bus_d3[12]),
        .I1(Q[12]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 [12]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 [12]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29] ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[29]_0 ),
        .O(D[13]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_2 
       (.I0(s_level_out_bus_d3[13]),
        .I1(Q[13]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 [13]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 [13]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30] ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[30]_0 ),
        .O(D[14]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_2 
       (.I0(s_level_out_bus_d3[14]),
        .I1(Q[14]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 [14]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 [14]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_2 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_4_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_1 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_0 ),
        .O(D[15]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_4 
       (.I0(s_level_out_bus_d3[15]),
        .I1(Q[15]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_1 [15]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[16]_3 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31]_2 [15]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized2_107
   (D,
    SR,
    s_axi_aclk);
  output [15:0]D;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign D[15:0] = s_level_out_bus_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized2_108
   (D,
    SR,
    s_axi_aclk);
  output [15:0]D;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign D[15:0] = s_level_out_bus_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized2_109
   (\s_level_out_bus_d3_reg[0]_0 ,
    \s_level_out_bus_d3_reg[1]_0 ,
    \s_level_out_bus_d3_reg[2]_0 ,
    \s_level_out_bus_d3_reg[3]_0 ,
    \s_level_out_bus_d3_reg[4]_0 ,
    \s_level_out_bus_d3_reg[5]_0 ,
    \s_level_out_bus_d3_reg[6]_0 ,
    \s_level_out_bus_d3_reg[7]_0 ,
    \s_level_out_bus_d3_reg[8]_0 ,
    \s_level_out_bus_d3_reg[9]_0 ,
    \s_level_out_bus_d3_reg[10]_0 ,
    \s_level_out_bus_d3_reg[11]_0 ,
    \s_level_out_bus_d3_reg[12]_0 ,
    \s_level_out_bus_d3_reg[13]_0 ,
    \s_level_out_bus_d3_reg[14]_0 ,
    \s_level_out_bus_d3_reg[15]_0 ,
    Q,
    D,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] ,
    SR,
    s_axi_aclk);
  output \s_level_out_bus_d3_reg[0]_0 ;
  output \s_level_out_bus_d3_reg[1]_0 ;
  output \s_level_out_bus_d3_reg[2]_0 ;
  output \s_level_out_bus_d3_reg[3]_0 ;
  output \s_level_out_bus_d3_reg[4]_0 ;
  output \s_level_out_bus_d3_reg[5]_0 ;
  output \s_level_out_bus_d3_reg[6]_0 ;
  output \s_level_out_bus_d3_reg[7]_0 ;
  output \s_level_out_bus_d3_reg[8]_0 ;
  output \s_level_out_bus_d3_reg[9]_0 ;
  output \s_level_out_bus_d3_reg[10]_0 ;
  output \s_level_out_bus_d3_reg[11]_0 ;
  output \s_level_out_bus_d3_reg[12]_0 ;
  output \s_level_out_bus_d3_reg[13]_0 ;
  output \s_level_out_bus_d3_reg[14]_0 ;
  output \s_level_out_bus_d3_reg[15]_0 ;
  input [1:0]Q;
  input [15:0]D;
  input [15:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] ;
  input [0:0]SR;
  input s_axi_aclk;

  wire [15:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire [15:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] ;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  wire \s_level_out_bus_d3_reg[0]_0 ;
  wire \s_level_out_bus_d3_reg[10]_0 ;
  wire \s_level_out_bus_d3_reg[11]_0 ;
  wire \s_level_out_bus_d3_reg[12]_0 ;
  wire \s_level_out_bus_d3_reg[13]_0 ;
  wire \s_level_out_bus_d3_reg[14]_0 ;
  wire \s_level_out_bus_d3_reg[15]_0 ;
  wire \s_level_out_bus_d3_reg[1]_0 ;
  wire \s_level_out_bus_d3_reg[2]_0 ;
  wire \s_level_out_bus_d3_reg[3]_0 ;
  wire \s_level_out_bus_d3_reg[4]_0 ;
  wire \s_level_out_bus_d3_reg[5]_0 ;
  wire \s_level_out_bus_d3_reg[6]_0 ;
  wire \s_level_out_bus_d3_reg[7]_0 ;
  wire \s_level_out_bus_d3_reg[8]_0 ;
  wire \s_level_out_bus_d3_reg[9]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[16]_i_3 
       (.I0(s_level_out_bus_d3[0]),
        .I1(Q[1]),
        .I2(D[0]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] [0]),
        .O(\s_level_out_bus_d3_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[17]_i_3 
       (.I0(s_level_out_bus_d3[1]),
        .I1(Q[1]),
        .I2(D[1]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] [1]),
        .O(\s_level_out_bus_d3_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[18]_i_3 
       (.I0(s_level_out_bus_d3[2]),
        .I1(Q[1]),
        .I2(D[2]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] [2]),
        .O(\s_level_out_bus_d3_reg[2]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[19]_i_3 
       (.I0(s_level_out_bus_d3[3]),
        .I1(Q[1]),
        .I2(D[3]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] [3]),
        .O(\s_level_out_bus_d3_reg[3]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[20]_i_3 
       (.I0(s_level_out_bus_d3[4]),
        .I1(Q[1]),
        .I2(D[4]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] [4]),
        .O(\s_level_out_bus_d3_reg[4]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[21]_i_3 
       (.I0(s_level_out_bus_d3[5]),
        .I1(Q[1]),
        .I2(D[5]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] [5]),
        .O(\s_level_out_bus_d3_reg[5]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[22]_i_3 
       (.I0(s_level_out_bus_d3[6]),
        .I1(Q[1]),
        .I2(D[6]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] [6]),
        .O(\s_level_out_bus_d3_reg[6]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[23]_i_3 
       (.I0(s_level_out_bus_d3[7]),
        .I1(Q[1]),
        .I2(D[7]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] [7]),
        .O(\s_level_out_bus_d3_reg[7]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[24]_i_3 
       (.I0(s_level_out_bus_d3[8]),
        .I1(Q[1]),
        .I2(D[8]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] [8]),
        .O(\s_level_out_bus_d3_reg[8]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[25]_i_3 
       (.I0(s_level_out_bus_d3[9]),
        .I1(Q[1]),
        .I2(D[9]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] [9]),
        .O(\s_level_out_bus_d3_reg[9]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[26]_i_3 
       (.I0(s_level_out_bus_d3[10]),
        .I1(Q[1]),
        .I2(D[10]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] [10]),
        .O(\s_level_out_bus_d3_reg[10]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[27]_i_3 
       (.I0(s_level_out_bus_d3[11]),
        .I1(Q[1]),
        .I2(D[11]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] [11]),
        .O(\s_level_out_bus_d3_reg[11]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[28]_i_3 
       (.I0(s_level_out_bus_d3[12]),
        .I1(Q[1]),
        .I2(D[12]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] [12]),
        .O(\s_level_out_bus_d3_reg[12]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[29]_i_3 
       (.I0(s_level_out_bus_d3[13]),
        .I1(Q[1]),
        .I2(D[13]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] [13]),
        .O(\s_level_out_bus_d3_reg[13]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[30]_i_3 
       (.I0(s_level_out_bus_d3[14]),
        .I1(Q[1]),
        .I2(D[14]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] [14]),
        .O(\s_level_out_bus_d3_reg[14]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_6 
       (.I0(s_level_out_bus_d3[15]),
        .I1(Q[1]),
        .I2(D[15]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[31] [15]),
        .O(\s_level_out_bus_d3_reg[15]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized3
   (D,
    SR,
    dl_status_reg,
    s_axi_aclk);
  output [7:0]D;
  input [0:0]SR;
  input [3:0]dl_status_reg;
  input s_axi_aclk;

  wire [0:0]SR;
  wire [3:0]dl_status_reg;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [7:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [7:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [7:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [7:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [7:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [7:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign D[7:0] = s_level_out_bus_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_status_reg[3]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_status_reg[2]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_status_reg[1]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_status_reg[0]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized4
   (D,
    rd_req,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_2 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_3 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_4 ,
    Q,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_5 ,
    dl0_hs_abort_r_axi,
    \gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_2 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_3 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_2 ,
    SR,
    \s_level_out_bus_d1_cdc_to_reg[8]_0 ,
    s_axi_aclk);
  output [1:0]D;
  input rd_req;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_2 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_3 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_4 ;
  input [3:0]Q;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_5 ;
  input dl0_hs_abort_r_axi;
  input [1:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_0 ;
  input [1:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_1 ;
  input [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6] ;
  input [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_0 ;
  input [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_1 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_2 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_3 ;
  input [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_2 ;
  input [0:0]SR;
  input [4:0]\s_level_out_bus_d1_cdc_to_reg[8]_0 ;
  input s_axi_aclk;

  wire [1:0]D;
  wire [3:0]Q;
  wire [0:0]SR;
  wire dl0_hs_abort_r_axi;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_4_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_7_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_3_n_0 ;
  wire [1:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_0 ;
  wire [1:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_1 ;
  wire [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_2 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_7_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_2 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_3 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_4 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_5 ;
  wire [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6] ;
  wire [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_0 ;
  wire [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_2 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_3 ;
  wire rd_req;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d1_cdc_to;
  wire [4:0]\s_level_out_bus_d1_cdc_to_reg[8]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4] ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_0 ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_1 ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_2 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_4_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_3 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_4 ),
        .I2(Q[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_7_n_0 ),
        .I4(Q[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_5 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_7 
       (.I0(dl0_hs_abort_r_axi),
        .I1(s_level_out_bus_d3[0]),
        .I2(Q[1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_0 [0]),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_1 [0]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[4]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_0 ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_3_n_0 ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[4]_2 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_2 
       (.I0(s_level_out_bus_d3[4]),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6] ),
        .I2(Q[1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_0 ),
        .I4(Q[0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_1 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_3 
       (.I0(s_level_out_bus_d3[1]),
        .I1(Q[1]),
        .I2(s_level_out_bus_d3[2]),
        .I3(Q[0]),
        .I4(s_level_out_bus_d3[3]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_2 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_6_n_0 ),
        .I2(Q[3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_7_n_0 ),
        .I4(Q[2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[6]_3 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_2 ),
        .I1(s_level_out_bus_d3[5]),
        .I2(Q[1]),
        .I3(s_level_out_bus_d3[6]),
        .I4(Q[0]),
        .I5(s_level_out_bus_d3[7]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hB833B800)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_7 
       (.I0(s_level_out_bus_d3[8]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_0 [1]),
        .I3(Q[0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_4_1 [1]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[6]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[8]_0 [0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[8]_0 [1]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[8]_0 [2]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[8]_0 [3]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[8]_0 [4]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized4_118
   (D,
    rd_req,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_0 ,
    Q,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_2 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_3 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_4 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_5 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_2 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_3 ,
    SR,
    \s_level_out_bus_d1_cdc_to_reg[8]_0 ,
    s_axi_aclk);
  output [0:0]D;
  input rd_req;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_0 ;
  input [0:0]Q;
  input [3:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_1 ;
  input [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_2 ;
  input [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_3 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_4 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_5 ;
  input [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_0 ;
  input [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_1 ;
  input [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_2 ;
  input [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_3 ;
  input [0:0]SR;
  input [4:0]\s_level_out_bus_d1_cdc_to_reg[8]_0 ;
  input s_axi_aclk;

  wire [0:0]D;
  wire [0:0]Q;
  wire [0:0]SR;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_3_n_0 ;
  wire [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_0 ;
  wire [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_1 ;
  wire [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_2 ;
  wire [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_3 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_6_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_7_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_0 ;
  wire [3:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_1 ;
  wire [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_2 ;
  wire [0:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_3 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_4 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_5 ;
  wire rd_req;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d1_cdc_to;
  wire [4:0]\s_level_out_bus_d1_cdc_to_reg[8]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_3_n_0 ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_0 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_n_0 ),
        .O(D));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_2 
       (.I0(s_level_out_bus_d3[4]),
        .I1(Q),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_1 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_2 ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_1 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_3 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_3 
       (.I0(s_level_out_bus_d3[1]),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_1 [1]),
        .I2(s_level_out_bus_d3[2]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_1 [0]),
        .I4(s_level_out_bus_d3[3]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_4 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_6_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_1 [3]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_7_n_0 ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_1 [2]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_5 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_3 ),
        .I1(s_level_out_bus_d3[5]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_1 [1]),
        .I3(s_level_out_bus_d3[6]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_1 [0]),
        .I5(s_level_out_bus_d3[7]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_7 
       (.I0(s_level_out_bus_d3[8]),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_1 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_1 ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[2]_1 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_4_2 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[2]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[8]_0 [0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[8]_0 [1]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[8]_0 [2]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[8]_0 [3]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[8]_0 [4]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized5
   (D,
    SR,
    rd_req_reg,
    s_axi_aresetn,
    rd_req,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_0 ,
    Q,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1] ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_4_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_4_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_5_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_5_1 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_6_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_4_0 ,
    \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_4_1 ,
    \s_level_out_bus_d1_cdc_to_reg[17]_0 ,
    s_axi_aclk);
  output [0:0]D;
  output [0:0]SR;
  output [1:0]rd_req_reg;
  input s_axi_aresetn;
  input rd_req;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0] ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_0 ;
  input [1:0]Q;
  input [3:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 ;
  input [1:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1] ;
  input [1:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_4_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_4_1 ;
  input [1:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_5_0 ;
  input [1:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_5_1 ;
  input [1:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_6_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_4_0 ;
  input \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_4_1 ;
  input [9:0]\s_level_out_bus_d1_cdc_to_reg[17]_0 ;
  input s_axi_aclk;

  wire [1:0]Q;
  wire [0:0]SR;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_3_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_9_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_2_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_3_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_8_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_9_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0] ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_0 ;
  wire [3:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_4_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_4_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_4_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_5_n_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_6_n_0 ;
  wire [1:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1] ;
  wire [1:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_4_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_4_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_4_n_0 ;
  wire [1:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_5_0 ;
  wire [1:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_5_1 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_5_n_0 ;
  wire [1:0]\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_6_0 ;
  wire \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_6_n_0 ;
  wire rd_req;
  wire [1:0]rd_req_reg;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [17:0]s_level_out_bus_d1_cdc_to;
  wire [9:0]\s_level_out_bus_d1_cdc_to_reg[17]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [17:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [17:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [17:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [17:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [17:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign D[0] = s_level_out_bus_d3[1];
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_3_n_0 ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_0 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_4_n_0 ),
        .O(rd_req_reg[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_2 
       (.I0(s_level_out_bus_d3[8]),
        .I1(Q[0]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1] [0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_0 [0]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_3 
       (.I0(s_level_out_bus_d3[2]),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [1]),
        .I2(s_level_out_bus_d3[4]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [0]),
        .I4(s_level_out_bus_d3[6]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_8 
       (.I0(s_level_out_bus_d3[16]),
        .I1(s_level_out_bus_d3[0]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_5_0 [0]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_5_1 [0]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_9 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_6_0 [0]),
        .I1(s_level_out_bus_d3[10]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [1]),
        .I3(s_level_out_bus_d3[12]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [0]),
        .I5(s_level_out_bus_d3[14]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0A8080000A808)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_2_n_0 ),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0] ),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_3_n_0 ),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_0 ),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_4_n_0 ),
        .O(rd_req_reg[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_2 
       (.I0(s_level_out_bus_d3[9]),
        .I1(Q[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1] [1]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_0 [1]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_3 
       (.I0(s_level_out_bus_d3[3]),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [1]),
        .I2(s_level_out_bus_d3[5]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [0]),
        .I4(s_level_out_bus_d3[7]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_8 
       (.I0(s_level_out_bus_d3[17]),
        .I1(s_level_out_bus_d3[1]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [1]),
        .I3(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_5_0 [1]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [0]),
        .I5(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_5_1 [1]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_9 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_6_0 [1]),
        .I1(s_level_out_bus_d3[11]),
        .I2(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [1]),
        .I3(s_level_out_bus_d3[13]),
        .I4(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [0]),
        .I5(s_level_out_bus_d3[15]),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_regs.gen_timeout_debug_regs.axi_rdata[31]_i_3 
       (.I0(s_axi_aresetn),
        .O(SR));
  MUXF8 \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_5_n_0 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_6_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_4_n_0 ),
        .S(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [3]));
  MUXF7 \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_5 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_4_0 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_8_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_5_n_0 ),
        .S(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [2]));
  MUXF7 \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[0]_i_9_n_0 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_4_1 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_i_6_n_0 ),
        .S(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [2]));
  MUXF8 \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_4 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_5_n_0 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_6_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_4_n_0 ),
        .S(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [3]));
  MUXF7 \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_5 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_4_0 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_8_n_0 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_5_n_0 ),
        .S(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [2]));
  MUXF7 \gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_6 
       (.I0(\gen_regs.gen_timeout_debug_regs.axi_rdata[1]_i_9_n_0 ),
        .I1(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_4_1 ),
        .O(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[1]_i_6_n_0 ),
        .S(\gen_regs.gen_timeout_debug_regs.axi_rdata_reg[0]_1 [2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[17]_0 [0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[17]_0 [2]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[17]_0 [3]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[17]_0 [4]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[17]_0 [5]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[17]_0 [6]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[17]_0 [7]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[17]_0 [8]),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[17]_0 [9]),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[17]_0 [1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized6
   (out,
    \s_level_out_bus_d3_reg[1]_0 ,
    core_rst,
    tx_cl_lp_cn_r_reg,
    tx_cl_lp_cn_r_reg_0,
    data0,
    core_clk,
    p_4_in);
  output [1:0]out;
  output \s_level_out_bus_d3_reg[1]_0 ;
  input core_rst;
  input tx_cl_lp_cn_r_reg;
  input tx_cl_lp_cn_r_reg_0;
  input [0:0]data0;
  input core_clk;
  input [0:0]p_4_in;

  wire core_clk;
  wire core_rst;
  wire [0:0]data0;
  wire [0:0]p_4_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  wire \s_level_out_bus_d3_reg[1]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_cl_lp_cn_r_reg;
  wire tx_cl_lp_cn_r_reg_0;

  assign out[1:0] = s_level_out_bus_d3;
  LUT4 #(
    .INIT(16'hFDFF)) 
    cl_ulpsactivenot_i_1
       (.I0(s_level_out_bus_d3[1]),
        .I1(core_rst),
        .I2(tx_cl_lp_cn_r_reg),
        .I3(tx_cl_lp_cn_r_reg_0),
        .O(\s_level_out_bus_d3_reg[1]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_4_in),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(data0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized7
   (D,
    Q,
    core_clk);
  output [11:0]D;
  input [31:0]Q;
  input core_clk;

  wire [31:0]Q;
  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign D[11:0] = s_level_out_bus_d3[19:8];
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[16]),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[17]),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[18]),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[19]),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[20]),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[21]),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[22]),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[23]),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[24]),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[25]),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[26]),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[27]),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[28]),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[29]),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[30]),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[31]),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8
   (Q,
    oserdes_clkdiv_in);
  input [31:0]Q;
  input oserdes_clkdiv_in;

  wire [31:0]Q;
  wire oserdes_clkdiv_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[16]),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[17]),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[18]),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[19]),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[20]),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[21]),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[22]),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[23]),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[24]),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[25]),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[26]),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[27]),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[28]),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[29]),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[30]),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[31]),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_100
   (\s_level_out_bus_d2_reg[0]_0 ,
    Q,
    core_clk);
  input \s_level_out_bus_d2_reg[0]_0 ;
  input [31:0]Q;
  input core_clk;

  wire [31:0]Q;
  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  wire \s_level_out_bus_d2_reg[0]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[16]),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[17]),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[18]),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[19]),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[20]),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[21]),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[22]),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[23]),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[24]),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[25]),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[26]),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[27]),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[28]),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[29]),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[30]),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[31]),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_101
   (Q,
    oserdes_clkdiv_in);
  input [31:0]Q;
  input oserdes_clkdiv_in;

  wire [31:0]Q;
  wire oserdes_clkdiv_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[16]),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[17]),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[18]),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[19]),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[20]),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[21]),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[22]),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[23]),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[24]),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[25]),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[26]),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[27]),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[28]),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[29]),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[30]),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[31]),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_102
   (\s_level_out_bus_d2_reg[0]_0 ,
    Q,
    core_clk);
  input \s_level_out_bus_d2_reg[0]_0 ;
  input [31:0]Q;
  input core_clk;

  wire [31:0]Q;
  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  wire \s_level_out_bus_d2_reg[0]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[16]),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[17]),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[18]),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[19]),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[20]),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[21]),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[22]),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[23]),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[24]),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[25]),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[26]),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[27]),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[28]),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[29]),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[30]),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[31]),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_110
   (Q,
    dl0_txclkesc);
  input [31:0]Q;
  input dl0_txclkesc;

  wire [31:0]Q;
  wire dl0_txclkesc;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[16]),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[17]),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[18]),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[19]),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[20]),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[21]),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[22]),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[23]),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[24]),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[25]),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[26]),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[27]),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[28]),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[29]),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[30]),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[31]),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(Q[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(1'b1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(1'b1));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_112
   (\s_level_out_bus_d2_reg[0]_0 ,
    Q,
    core_clk);
  input \s_level_out_bus_d2_reg[0]_0 ;
  input [31:0]Q;
  input core_clk;

  wire [31:0]Q;
  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  wire \s_level_out_bus_d2_reg[0]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[16]),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[17]),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[18]),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[19]),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[20]),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[21]),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[22]),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[23]),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[24]),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[25]),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[26]),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[27]),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[28]),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[29]),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[30]),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[31]),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(\s_level_out_bus_d2_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_113
   (\s_level_out_bus_d3_reg[0]_0 ,
    Q,
    core_clk);
  input \s_level_out_bus_d3_reg[0]_0 ;
  input [31:0]Q;
  input core_clk;

  wire [31:0]Q;
  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  wire \s_level_out_bus_d3_reg[0]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[16]),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[17]),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[18]),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[19]),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[20]),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[21]),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[22]),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[23]),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[24]),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[25]),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[26]),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[27]),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[28]),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[29]),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[30]),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[31]),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_114
   (Q,
    tx_div4_clk);
  input [31:0]Q;
  input tx_div4_clk;

  wire [31:0]Q;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[16]),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[17]),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[18]),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[19]),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[20]),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[21]),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[22]),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[23]),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[24]),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[25]),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[26]),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[27]),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[28]),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[29]),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[30]),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[31]),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_115
   (Q,
    tx_div4_clk);
  input [31:0]Q;
  input tx_div4_clk;

  wire [31:0]Q;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[16]),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[17]),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[18]),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[19]),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[20]),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[21]),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[22]),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[23]),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[24]),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[25]),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[26]),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[27]),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[28]),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[29]),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[30]),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[31]),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_116
   (Q,
    tx_div4_clk);
  input [31:0]Q;
  input tx_div4_clk;

  wire [31:0]Q;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[16]),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[17]),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[18]),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[19]),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[20]),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[21]),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[22]),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[23]),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[24]),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[25]),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[26]),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[27]),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[28]),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[29]),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[30]),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[31]),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_97
   (Q,
    oserdes_clkdiv_in);
  input [31:0]Q;
  input oserdes_clkdiv_in;

  wire [31:0]Q;
  wire oserdes_clkdiv_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[16]),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[17]),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[18]),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[19]),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[20]),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[21]),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[22]),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[23]),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[24]),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[25]),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[26]),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[27]),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[28]),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[29]),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[30]),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[31]),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_98
   (Q,
    oserdes_clkdiv_in);
  input [31:0]Q;
  input oserdes_clkdiv_in;

  wire [31:0]Q;
  wire oserdes_clkdiv_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[16]),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[17]),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[18]),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[19]),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[20]),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[21]),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[22]),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[23]),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[24]),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[25]),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[26]),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[27]),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[28]),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[29]),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[30]),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[31]),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(Q[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized8_99
   (\s_level_out_bus_d3_reg[0]_0 ,
    Q,
    core_clk);
  input \s_level_out_bus_d3_reg[0]_0 ;
  input [31:0]Q;
  input core_clk;

  wire [31:0]Q;
  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  wire \s_level_out_bus_d3_reg[0]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[16]),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[17]),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[18]),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[19]),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[20]),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[21]),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[22]),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[23]),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[24]),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[25]),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[26]),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[27]),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[28]),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[29]),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[30]),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[31]),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(\s_level_out_bus_d3_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_5_tx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_5_tx_sync_cell__parameterized9
   (s_level_out_d2_reg_0,
    in0,
    core_clk,
    dl_hs_exit_done_i);
  output s_level_out_d2_reg_0;
  input in0;
  input core_clk;
  input [3:0]dl_hs_exit_done_i;

  wire core_clk;
  wire [3:0]dl_hs_exit_done_i;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  wire s_level_out_d2_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = in0;
  LUT5 #(
    .INIT(32'h15555555)) 
    \dl_tx_sm_state[2]_i_14 
       (.I0(s_level_out_d2),
        .I1(dl_hs_exit_done_i[2]),
        .I2(dl_hs_exit_done_i[3]),
        .I3(dl_hs_exit_done_i[0]),
        .I4(dl_hs_exit_done_i[1]),
        .O(s_level_out_d2_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
